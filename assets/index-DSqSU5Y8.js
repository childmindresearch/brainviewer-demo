(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();const xr=!1;var vr=Array.isArray,Ic=Array.prototype.indexOf,Pc=Array.from,pe=Object.defineProperty,v6=Object.getOwnPropertyDescriptor,Lc=Object.getOwnPropertyDescriptors,Dc=Object.prototype,Uc=Array.prototype,yr=Object.getPrototypeOf,ti=Object.isExtensible;function Oc(i){return i()}function me(i){for(var t=0;t<i.length;t++)i[t]()}function Nc(){var i,t,e=new Promise((n,s)=>{i=n,t=s});return{promise:e,resolve:i,reject:t}}const v0=2,He=4,br=8,t7=16,Y2=32,F5=64,Mr=128,A0=256,M8=512,a0=1024,F0=2048,q2=4096,E3=8192,e7=16384,Ge=32768,Fc=65536,ei=1<<17,Bc=1<<18,b9=1<<19,Sr=1<<20,ge=1<<21,Er=1<<22,S8=1<<23,x3=Symbol("$state"),Tr=new class extends Error{name="StaleReactionError";message="The reaction that called `getAbortSignal()` was re-run or destroyed"};function zc(i){throw new Error("https://svelte.dev/e/lifecycle_outside_component")}function kc(i){throw new Error("https://svelte.dev/e/effect_in_teardown")}function Vc(){throw new Error("https://svelte.dev/e/effect_in_unowned_derived")}function Hc(i){throw new Error("https://svelte.dev/e/effect_orphan")}function Gc(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function Wc(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function Xc(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function Yc(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}const qc=2,Z4=Symbol();function wr(i){return i===this.v}function Zc(i,t){return i!=i?t==t:i!==t||i!==null&&typeof i=="object"||typeof i=="function"}function $c(i){return!Zc(i,this.v)}let n7=!1,Jc=!1;function Kc(){n7=!0}let D4=null;function ni(i){D4=i}function Ar(i,t=!1,e){D4={p:D4,c:null,e:null,s:i,x:null,l:n7&&!t?{s:null,u:null,$:[]}:null}}function Cr(i){var t=D4,e=t.e;if(e!==null){t.e=null;for(var n of e)Vr(n)}return D4=t.p,{}}function M9(){return!n7||D4!==null&&D4.l===null}const Qc=new WeakMap;function jc(i){var t=m4;if(t===null)return o4.f|=S8,i;if((t.f&Ge)===0){if((t.f&Mr)===0)throw!t.parent&&i instanceof Error&&Ir(i),i;t.b.error(i)}else Rr(i,t)}function Rr(i,t){for(;t!==null;){if((t.f&Mr)!==0)try{t.b.error(i);return}catch(e){i=e}t=t.parent}throw i instanceof Error&&Ir(i),i}function Ir(i){const t=Qc.get(i);t&&(pe(i,"message",{value:t.message}),pe(i,"stack",{value:t.stack}))}let E8=[];function tl(){var i=E8;E8=[],me(i)}function el(i){E8.length===0&&queueMicrotask(tl),E8.push(i)}function nl(i){var t=v0|F0,e=o4!==null&&(o4.f&v0)!==0?o4:null;return m4===null||e!==null&&(e.f&A0)!==0?t|=A0:m4.f|=b9,{ctx:D4,deps:null,effects:null,equals:wr,f:t,fn:i,reactions:null,rv:0,v:Z4,wv:0,parent:e??m4,ac:null}}function Pr(i){var t=i.effects;if(t!==null){i.effects=null;for(var e=0;e<t.length;e+=1)I5(t[e])}}function il(i){for(var t=i.parent;t!==null;){if((t.f&v0)===0)return t;t=t.parent}return null}function We(i){var t,e=m4;w3(il(i));try{Pr(i),t=$r(i)}finally{w3(e)}return t}function Lr(i){var t=We(i);if(i.equals(t)||(i.v=t,i.wv=qr()),!k3){var e=(z2||(i.f&A0)!==0)&&i.deps!==null?q2:a0;C0(i,e)}}const dt=new Set;let S0=null,ii=new Set,T8=[];function Dr(){const i=T8.shift();T8.length>0&&queueMicrotask(Dr),i()}let C6=[],Xe=null,_e=!1;class T3{current=new Map;#c=new Map;#s=new Set;#t=0;#l=null;#h=!1;#n=[];#r=[];#i=[];#e=[];#a=[];#u=[];#f=[];skipped_effects=new Set;process(t){C6=[];for(const s of t)this.#p(s);if(this.#n.length===0&&this.#t===0){this.#d();var e=this.#i,n=this.#e;this.#i=[],this.#e=[],this.#a=[],S0=null,si(e),si(n),S0===null?S0=this:dt.delete(this),this.#l?.resolve()}else this.#o(this.#i),this.#o(this.#e),this.#o(this.#a);for(const s of this.#n)y3(s);for(const s of this.#r)y3(s);this.#n=[],this.#r=[]}#p(t){t.f^=a0;for(var e=t.first;e!==null;){var n=e.f,s=(n&(Y2|F5))!==0,r=s&&(n&a0)!==0,a=r||(n&E3)!==0||this.skipped_effects.has(e);if(!a&&e.fn!==null){if(s)e.f^=a0;else if((n&He)!==0)this.#e.push(e);else if((n&a0)===0)if((n&Er)!==0){var o=e.b?.is_pending()?this.#r:this.#n;o.push(e)}else S9(e)&&((e.f&t7)!==0&&this.#a.push(e),y3(e));var c=e.first;if(c!==null){e=c;continue}}var l=e.parent;for(e=e.next;e===null&&l!==null;)e=l.next,l=l.parent}}#o(t){for(const e of t)((e.f&F0)!==0?this.#u:this.#f).push(e),C0(e,a0);t.length=0}capture(t,e){this.#c.has(t)||this.#c.set(t,e),this.current.set(t,t.v)}activate(){S0=this}deactivate(){S0=null;for(const t of ii)if(ii.delete(t),t(),S0!==null)break}neuter(){this.#h=!0}flush(){C6.length>0?sl():this.#d(),S0===this&&(this.#t===0&&dt.delete(this),this.deactivate())}#d(){if(!this.#h)for(const t of this.#s)t();this.#s.clear()}increment(){this.#t+=1}decrement(){if(this.#t-=1,this.#t===0){for(const t of this.#u)C0(t,F0),R6(t);for(const t of this.#f)C0(t,q2),R6(t);this.#i=[],this.#e=[],this.flush()}else this.deactivate()}add_callback(t){this.#s.add(t)}settled(){return(this.#l??=Nc()).promise}static ensure(){if(S0===null){const t=S0=new T3;dt.add(S0),T3.enqueue(()=>{S0===t&&t.flush()})}return S0}static enqueue(t){T8.length===0&&queueMicrotask(Dr),T8.unshift(t)}}function sl(){var i=v3;_e=!0;try{var t=0;for(ai(!0);C6.length>0;){var e=T3.ensure();if(t++>1e3){var n,s;rl()}e.process(C6),H2.clear()}}finally{_e=!1,ai(i),Xe=null}}function rl(){try{Gc()}catch(i){Rr(i,Xe)}}let x5=null;function si(i){var t=i.length;if(t!==0){for(var e=0;e<t;){var n=i[e++];if((n.f&(e7|E3))===0&&S9(n)&&(x5=[],y3(n),n.deps===null&&n.first===null&&n.nodes_start===null&&(n.teardown===null&&n.ac===null?Wr(n):n.fn=null),x5?.length>0)){H2.clear();for(const s of x5)y3(s);x5=[]}}x5=null}}function R6(i){for(var t=Xe=i;t.parent!==null;){t=t.parent;var e=t.f;if(_e&&t===m4&&(e&t7)!==0)return;if((e&(F5|Y2))!==0){if((e&a0)===0)return;t.f^=a0}}C6.push(t)}const H2=new Map;function Ur(i,t){var e={f:0,v:i,reactions:null,equals:wr,rv:0,wv:0};return e}function T2(i,t){const e=Ur(i);return Ml(e),e}function al(i,t=!1,e=!0){const n=Ur(i);return t||(n.equals=$c),n7&&e&&D4!==null&&D4.l!==null&&(D4.l.s??=[]).push(n),n}function O2(i,t,e=!1){o4!==null&&(!$0||(o4.f&ei)!==0)&&M9()&&(o4.f&(v0|t7|Er|ei))!==0&&!g2?.includes(i)&&Yc();let n=e?f6(t):t;return ol(i,n)}function ol(i,t){if(!i.equals(t)){var e=i.v;k3?H2.set(i,t):H2.set(i,e),i.v=t;var n=T3.ensure();n.capture(i,e),(i.f&v0)!==0&&((i.f&F0)!==0&&We(i),C0(i,(i.f&A0)===0?a0:q2)),i.wv=qr(),Or(i,F0),M9()&&m4!==null&&(m4.f&a0)!==0&&(m4.f&(Y2|F5))===0&&(T0===null?Sl([i]):T0.push(i))}return t}function pt(i){O2(i,i.v+1)}function Or(i,t){var e=i.reactions;if(e!==null)for(var n=M9(),s=e.length,r=0;r<s;r++){var a=e[r],o=a.f;if(!(!n&&a===m4)){var c=(o&F0)===0;c&&C0(a,t),(o&v0)!==0?Or(a,q2):c&&((o&t7)!==0&&x5!==null&&x5.push(a),R6(a))}}}function f6(i){if(typeof i!="object"||i===null||x3 in i)return i;const t=yr(i);if(t!==Dc&&t!==Uc)return i;var e=new Map,n=vr(i),s=T2(0),r=E5,a=o=>{if(E5===r)return o();var c=o4,l=E5;G2(null),ci(r);var h=o();return G2(c),ci(l),h};return n&&e.set("length",T2(i.length)),new Proxy(i,{defineProperty(o,c,l){(!("value"in l)||l.configurable===!1||l.enumerable===!1||l.writable===!1)&&Wc();var h=e.get(c);return h===void 0?h=a(()=>{var u=T2(l.value);return e.set(c,u),u}):O2(h,l.value,!0),!0},deleteProperty(o,c){var l=e.get(c);if(l===void 0){if(c in o){const h=a(()=>T2(Z4));e.set(c,h),pt(s)}}else O2(l,Z4),pt(s);return!0},get(o,c,l){if(c===x3)return i;var h=e.get(c),u=c in o;if(h===void 0&&(!u||v6(o,c)?.writable)&&(h=a(()=>{var d=f6(u?o[c]:Z4),m=T2(d);return m}),e.set(c,h)),h!==void 0){var f=k2(h);return f===Z4?void 0:f}return Reflect.get(o,c,l)},getOwnPropertyDescriptor(o,c){var l=Reflect.getOwnPropertyDescriptor(o,c);if(l&&"value"in l){var h=e.get(c);h&&(l.value=k2(h))}else if(l===void 0){var u=e.get(c),f=u?.v;if(u!==void 0&&f!==Z4)return{enumerable:!0,configurable:!0,value:f,writable:!0}}return l},has(o,c){if(c===x3)return!0;var l=e.get(c),h=l!==void 0&&l.v!==Z4||Reflect.has(o,c);if(l!==void 0||m4!==null&&(!h||v6(o,c)?.writable)){l===void 0&&(l=a(()=>{var f=h?f6(o[c]):Z4,d=T2(f);return d}),e.set(c,l));var u=k2(l);if(u===Z4)return!1}return h},set(o,c,l,h){var u=e.get(c),f=c in o;if(n&&c==="length")for(var d=l;d<u.v;d+=1){var m=e.get(d+"");m!==void 0?O2(m,Z4):d in o&&(m=a(()=>T2(Z4)),e.set(d+"",m))}if(u===void 0)(!f||v6(o,c)?.writable)&&(u=a(()=>T2(void 0)),O2(u,f6(l)),e.set(c,u));else{f=u.v!==Z4;var _=a(()=>f6(l));O2(u,_)}var g=Reflect.getOwnPropertyDescriptor(o,c);if(g?.set&&g.set.call(h,l),!f){if(n&&typeof c=="string"){var p=e.get("length"),y=Number(c);Number.isInteger(y)&&y>=p.v&&O2(p,y+1)}pt(s)}return!0},ownKeys(o){k2(s);var c=Reflect.ownKeys(o).filter(u=>{var f=e.get(u);return f===void 0||f.v!==Z4});for(var[l,h]of e)h.v!==Z4&&!(l in o)&&c.push(l);return c},setPrototypeOf(){Xc()}})}var ri,Nr,Fr,Br;function cl(){if(ri===void 0){ri=window,Nr=/Firefox/.test(navigator.userAgent);var i=Element.prototype,t=Node.prototype,e=Text.prototype;Fr=v6(t,"firstChild").get,Br=v6(t,"nextSibling").get,ti(i)&&(i.__click=void 0,i.__className=void 0,i.__attributes=null,i.__style=void 0,i.__e=void 0),ti(e)&&(e.__t=void 0)}}function ll(i=""){return document.createTextNode(i)}function hl(i){return Fr.call(i)}function ul(i){return Br.call(i)}function zr(i){var t=o4,e=m4;G2(null),w3(null);try{return i()}finally{G2(t),w3(e)}}function kr(i){m4===null&&o4===null&&Hc(),o4!==null&&(o4.f&A0)!==0&&m4===null&&Vc(),k3&&kc()}function fl(i,t){var e=t.last;e===null?t.last=t.first=i:(e.next=i,i.prev=e,t.last=i)}function z3(i,t,e,n=!0){var s=m4;s!==null&&(s.f&E3)!==0&&(i|=E3);var r={ctx:D4,deps:null,nodes_start:null,nodes_end:null,f:i|F0,first:null,fn:t,last:null,next:null,parent:s,b:s&&s.b,prev:null,teardown:null,transitions:null,wv:0,ac:null};if(e)try{y3(r),r.f|=Ge}catch(c){throw I5(r),c}else t!==null&&R6(r);if(n){var a=r;if(e&&a.deps===null&&a.teardown===null&&a.nodes_start===null&&a.first===a.last&&(a.f&b9)===0&&(a=a.first),a!==null&&(a.parent=s,s!==null&&fl(a,s),o4!==null&&(o4.f&v0)!==0&&(i&F5)===0)){var o=o4;(o.effects??=[]).push(a)}}return r}function xe(i){kr();var t=m4.f,e=!o4&&(t&Y2)!==0&&(t&Ge)===0;if(e){var n=D4;(n.e??=[]).push(i)}else return Vr(i)}function Vr(i){return z3(He|Sr,i,!1)}function dl(i){return kr(),z3(br|Sr,i,!0)}function pl(i){T3.ensure();const t=z3(F5|b9,i,!0);return(e={})=>new Promise(n=>{e.outro?yl(t,()=>{I5(t),n(void 0)}):(I5(t),n(void 0))})}function ml(i){return z3(He,i,!1)}function gl(i,t=0){return z3(br|t,i,!0)}function _l(i,t=!0){return z3(Y2|b9,i,!0,t)}function Hr(i){var t=i.teardown;if(t!==null){const e=k3,n=o4;oi(!0),G2(null);try{t.call(null)}finally{oi(e),G2(n)}}}function Gr(i,t=!1){var e=i.first;for(i.first=i.last=null;e!==null;){const s=e.ac;s!==null&&zr(()=>{s.abort(Tr)});var n=e.next;(e.f&F5)!==0?e.parent=null:I5(e,t),e=n}}function xl(i){for(var t=i.first;t!==null;){var e=t.next;(t.f&Y2)===0&&I5(t),t=e}}function I5(i,t=!0){var e=!1;(t||(i.f&Bc)!==0)&&i.nodes_start!==null&&i.nodes_end!==null&&(vl(i.nodes_start,i.nodes_end),e=!0),Gr(i,t&&!e),w8(i,0),C0(i,e7);var n=i.transitions;if(n!==null)for(const r of n)r.stop();Hr(i);var s=i.parent;s!==null&&s.first!==null&&Wr(i),i.next=i.prev=i.teardown=i.ctx=i.deps=i.fn=i.nodes_start=i.nodes_end=i.ac=null}function vl(i,t){for(;i!==null;){var e=i===t?null:ul(i);i.remove(),i=e}}function Wr(i){var t=i.parent,e=i.prev,n=i.next;e!==null&&(e.next=n),n!==null&&(n.prev=e),t!==null&&(t.first===i&&(t.first=n),t.last===i&&(t.last=e))}function yl(i,t){var e=[];Xr(i,e,!0),bl(e,()=>{I5(i),t&&t()})}function bl(i,t){var e=i.length;if(e>0){var n=()=>--e||t();for(var s of i)s.out(n)}else t()}function Xr(i,t,e){if((i.f&E3)===0){if(i.f^=E3,i.transitions!==null)for(const a of i.transitions)(a.is_global||e)&&t.push(a);for(var n=i.first;n!==null;){var s=n.next,r=(n.f&Fc)!==0||(n.f&Y2)!==0;Xr(n,t,r?e:!1),n=s}}}let v3=!1;function ai(i){v3=i}let k3=!1;function oi(i){k3=i}let o4=null,$0=!1;function G2(i){o4=i}let m4=null;function w3(i){m4=i}let g2=null;function Ml(i){o4!==null&&(g2===null?g2=[i]:g2.push(i))}let J4=null,g0=0,T0=null;function Sl(i){T0=i}let Yr=1,I6=0,E5=I6;function ci(i){E5=i}let z2=!1;function qr(){return++Yr}function S9(i){var t=i.f;if((t&F0)!==0)return!0;if((t&q2)!==0){var e=i.deps,n=(t&A0)!==0;if(e!==null){var s,r,a=(t&M8)!==0,o=n&&m4!==null&&!z2,c=e.length;if((a||o)&&(m4===null||(m4.f&e7)===0)){var l=i,h=l.parent;for(s=0;s<c;s++)r=e[s],(a||!r?.reactions?.includes(l))&&(r.reactions??=[]).push(l);a&&(l.f^=M8),o&&h!==null&&(h.f&A0)===0&&(l.f^=A0)}for(s=0;s<c;s++)if(r=e[s],S9(r)&&Lr(r),r.wv>i.wv)return!0}(!n||m4!==null&&!z2)&&C0(i,a0)}return!1}function Zr(i,t,e=!0){var n=i.reactions;if(n!==null&&!g2?.includes(i))for(var s=0;s<n.length;s++){var r=n[s];(r.f&v0)!==0?Zr(r,t,!1):t===r&&(e?C0(r,F0):(r.f&a0)!==0&&C0(r,q2),R6(r))}}function $r(i){var t=J4,e=g0,n=T0,s=o4,r=z2,a=g2,o=D4,c=$0,l=E5,h=i.f;J4=null,g0=0,T0=null,z2=(h&A0)!==0&&($0||!v3||o4===null),o4=(h&(Y2|F5))===0?i:null,g2=null,ni(i.ctx),$0=!1,E5=++I6,i.ac!==null&&(zr(()=>{i.ac.abort(Tr)}),i.ac=null);try{i.f|=ge;var u=i.fn,f=u(),d=i.deps;if(J4!==null){var m;if(w8(i,g0),d!==null&&g0>0)for(d.length=g0+J4.length,m=0;m<J4.length;m++)d[g0+m]=J4[m];else i.deps=d=J4;if(!z2||(h&v0)!==0&&i.reactions!==null)for(m=g0;m<d.length;m++)(d[m].reactions??=[]).push(i)}else d!==null&&g0<d.length&&(w8(i,g0),d.length=g0);if(M9()&&T0!==null&&!$0&&d!==null&&(i.f&(v0|q2|F0))===0)for(m=0;m<T0.length;m++)Zr(T0[m],i);return s!==null&&s!==i&&(I6++,T0!==null&&(n===null?n=T0:n.push(...T0))),(i.f&S8)!==0&&(i.f^=S8),f}catch(_){return jc(_)}finally{i.f^=ge,J4=t,g0=e,T0=n,o4=s,z2=r,g2=a,ni(o),$0=c,E5=l}}function El(i,t){let e=t.reactions;if(e!==null){var n=Ic.call(e,i);if(n!==-1){var s=e.length-1;s===0?e=t.reactions=null:(e[n]=e[s],e.pop())}}e===null&&(t.f&v0)!==0&&(J4===null||!J4.includes(t))&&(C0(t,q2),(t.f&(A0|M8))===0&&(t.f^=M8),Pr(t),w8(t,0))}function w8(i,t){var e=i.deps;if(e!==null)for(var n=t;n<e.length;n++)El(i,e[n])}function y3(i){var t=i.f;if((t&e7)===0){C0(i,a0);var e=m4,n=v3;m4=i,v3=!0;try{(t&t7)!==0?xl(i):Gr(i),Hr(i);var s=$r(i);i.teardown=typeof s=="function"?s:null,i.wv=Yr;var r;xr&&Jc&&(i.f&F0)!==0&&i.deps}finally{v3=n,m4=e}}}function k2(i){var t=i.f,e=(t&v0)!==0;if(o4!==null&&!$0){var n=m4!==null&&(m4.f&e7)!==0;if(!n&&!g2?.includes(i)){var s=o4.deps;if((o4.f&ge)!==0)i.rv<I6&&(i.rv=I6,J4===null&&s!==null&&s[g0]===i?g0++:J4===null?J4=[i]:(!z2||!J4.includes(i))&&J4.push(i));else{(o4.deps??=[]).push(i);var r=i.reactions;r===null?i.reactions=[o4]:r.includes(o4)||r.push(o4)}}}else if(e&&i.deps===null&&i.effects===null){var a=i,o=a.parent;o!==null&&(o.f&A0)===0&&(a.f^=A0)}if(k3){if(H2.has(i))return H2.get(i);if(e){a=i;var c=a.v;return((a.f&a0)===0&&a.reactions!==null||Jr(a))&&(c=We(a)),H2.set(a,c),c}}else e&&(a=i,S9(a)&&Lr(a));if((i.f&S8)!==0)throw i.v;return i.v}function Jr(i){if(i.v===Z4)return!0;if(i.deps===null)return!1;for(const t of i.deps)if(H2.has(t)||(t.f&v0)!==0&&Jr(t))return!0;return!1}function Ye(i){var t=$0;try{return $0=!0,i()}finally{$0=t}}const Tl=-7169;function C0(i,t){i.f=i.f&Tl|t}function wl(i){if(!(typeof i!="object"||!i||i instanceof EventTarget)){if(x3 in i)ve(i);else if(!Array.isArray(i))for(let t in i){const e=i[t];typeof e=="object"&&e&&x3 in e&&ve(e)}}}function ve(i,t=new Set){if(typeof i=="object"&&i!==null&&!(i instanceof EventTarget)&&!t.has(i)){t.add(i),i instanceof Date&&i.getTime();for(let n in i)try{ve(i[n],t)}catch{}const e=yr(i);if(e!==Object.prototype&&e!==Array.prototype&&e!==Map.prototype&&e!==Set.prototype&&e!==Date.prototype){const n=Lc(e);for(let s in n){const r=n[s].get;if(r)try{r.call(i)}catch{}}}}}const Al=["touchstart","touchmove"];function Cl(i){return Al.includes(i)}const Rl=new Set,li=new Set;let hi=null;function m7(i){var t=this,e=t.ownerDocument,n=i.type,s=i.composedPath?.()||[],r=s[0]||i.target;hi=i;var a=0,o=hi===i&&i.__root;if(o){var c=s.indexOf(o);if(c!==-1&&(t===document||t===window)){i.__root=t;return}var l=s.indexOf(t);if(l===-1)return;c<=l&&(a=c)}if(r=s[a]||i.target,r!==t){pe(i,"currentTarget",{configurable:!0,get(){return r||e}});var h=o4,u=m4;G2(null),w3(null);try{for(var f,d=[];r!==null;){var m=r.assignedSlot||r.parentNode||r.host||null;try{var _=r["__"+n];if(_!=null&&(!r.disabled||i.target===r))if(vr(_)){var[g,...p]=_;g.apply(r,[i,...p])}else _.call(r,i)}catch(y){f?d.push(y):f=y}if(i.cancelBubble||m===t||m===null)break;r=m}if(f){for(let y of d)queueMicrotask(()=>{throw y});throw f}}finally{i.__root=t,delete i.currentTarget,G2(h),w3(u)}}}function Il(i){var t=document.createElement("template");return t.innerHTML=i.replaceAll("<!>","<!---->"),t.content}function Pl(i,t){var e=m4;e.nodes_start===null&&(e.nodes_start=i,e.nodes_end=t)}function Ll(i,t){var e=(t&qc)!==0,n,s=!i.startsWith("<!>");return()=>{n===void 0&&(n=Il(s?i:"<!>"+i),n=hl(n));var r=e||Nr?document.importNode(n,!0):n.cloneNode(!0);return Pl(r,r),r}}function Dl(i,t){i!==null&&i.before(t)}function Ul(i,t){return Ol(i,t)}const H5=new Map;function Ol(i,{target:t,anchor:e,props:n={},events:s,context:r,intro:a=!0}){cl();var o=new Set,c=u=>{for(var f=0;f<u.length;f++){var d=u[f];if(!o.has(d)){o.add(d);var m=Cl(d);t.addEventListener(d,m7,{passive:m});var _=H5.get(d);_===void 0?(document.addEventListener(d,m7,{passive:m}),H5.set(d,1)):H5.set(d,_+1)}}};c(Pc(Rl)),li.add(c);var l=void 0,h=pl(()=>{var u=e??t.appendChild(ll());return _l(()=>{if(r){Ar({});var f=D4;f.c=r}s&&(n.$$events=s),l=i(u,n)||{},r&&Cr()}),()=>{for(var f of o){t.removeEventListener(f,m7);var d=H5.get(f);--d===0?(document.removeEventListener(f,m7),H5.delete(f)):H5.set(f,d)}li.delete(c),u!==e&&u.parentNode?.removeChild(u)}});return Nl.set(l,h),l}let Nl=new WeakMap;function ui(i,t){return i===t||i?.[x3]===t}function Fl(i={},t,e,n){return ml(()=>{var s,r;return gl(()=>{s=r,r=[],Ye(()=>{i!==e(...r)&&(t(i,...r),s&&ui(e(...s),i)&&t(null,...s))})}),()=>{el(()=>{r&&ui(e(...r),i)&&t(null,...r)})}}),i}function Bl(i=!1){const t=D4,e=t.l.u;if(!e)return;let n=()=>wl(t.s);if(i){let s=0,r={};const a=nl(()=>{let o=!1;const c=t.s;for(const l in c)c[l]!==r[l]&&(r[l]=c[l],o=!0);return o&&s++,s});n=()=>k2(a)}e.b.length&&dl(()=>{fi(t,n),me(e.b)}),xe(()=>{const s=Ye(()=>e.m.map(Oc));return()=>{for(const r of s)typeof r=="function"&&r()}}),e.a.length&&xe(()=>{fi(t,n),me(e.a)})}function fi(i,t){if(i.l.s)for(const e of i.l.s)k2(e);t()}function zl(i){D4===null&&zc(),n7&&D4.l!==null?kl(D4).m.push(i):xe(()=>{const t=Ye(i);if(typeof t=="function")return t})}function kl(i){var t=i.l;return t.u??={a:[],b:[],m:[]}}const Vl="5";typeof window<"u"&&((window.__svelte??={}).v??=new Set).add(Vl);Kc();function l4(i){for(var t=i.length/6|0,e=new Array(t),n=0;n<t;)e[n]="#"+i.slice(n*6,++n*6);return e}function E9(i,t,e){i.prototype=t.prototype=e,e.constructor=i}function qe(i,t){var e=Object.create(i.prototype);for(var n in t)e[n]=t[n];return e}function V3(){}var P5=.7,A3=1/P5,b3="\\s*([+-]?\\d+)\\s*",P6="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",j0="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Hl=/^#([0-9a-f]{3,8})$/,Gl=new RegExp(`^rgb\\(${b3},${b3},${b3}\\)$`),Wl=new RegExp(`^rgb\\(${j0},${j0},${j0}\\)$`),Xl=new RegExp(`^rgba\\(${b3},${b3},${b3},${P6}\\)$`),Yl=new RegExp(`^rgba\\(${j0},${j0},${j0},${P6}\\)$`),ql=new RegExp(`^hsl\\(${P6},${j0},${j0}\\)$`),Zl=new RegExp(`^hsla\\(${P6},${j0},${j0},${P6}\\)$`),di={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};E9(V3,L6,{copy(i){return Object.assign(new this.constructor,this,i)},displayable(){return this.rgb().displayable()},hex:pi,formatHex:pi,formatHex8:$l,formatHsl:Jl,formatRgb:mi,toString:mi});function pi(){return this.rgb().formatHex()}function $l(){return this.rgb().formatHex8()}function Jl(){return Qr(this).formatHsl()}function mi(){return this.rgb().formatRgb()}function L6(i){var t,e;return i=(i+"").trim().toLowerCase(),(t=Hl.exec(i))?(e=t[1].length,t=parseInt(t[1],16),e===6?gi(t):e===3?new W4(t>>8&15|t>>4&240,t>>4&15|t&240,(t&15)<<4|t&15,1):e===8?g7(t>>24&255,t>>16&255,t>>8&255,(t&255)/255):e===4?g7(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|t&240,((t&15)<<4|t&15)/255):null):(t=Gl.exec(i))?new W4(t[1],t[2],t[3],1):(t=Wl.exec(i))?new W4(t[1]*255/100,t[2]*255/100,t[3]*255/100,1):(t=Xl.exec(i))?g7(t[1],t[2],t[3],t[4]):(t=Yl.exec(i))?g7(t[1]*255/100,t[2]*255/100,t[3]*255/100,t[4]):(t=ql.exec(i))?vi(t[1],t[2]/100,t[3]/100,1):(t=Zl.exec(i))?vi(t[1],t[2]/100,t[3]/100,t[4]):di.hasOwnProperty(i)?gi(di[i]):i==="transparent"?new W4(NaN,NaN,NaN,0):null}function gi(i){return new W4(i>>16&255,i>>8&255,i&255,1)}function g7(i,t,e,n){return n<=0&&(i=t=e=NaN),new W4(i,t,e,n)}function Kr(i){return i instanceof V3||(i=L6(i)),i?(i=i.rgb(),new W4(i.r,i.g,i.b,i.opacity)):new W4}function D6(i,t,e,n){return arguments.length===1?Kr(i):new W4(i,t,e,n??1)}function W4(i,t,e,n){this.r=+i,this.g=+t,this.b=+e,this.opacity=+n}E9(W4,D6,qe(V3,{brighter(i){return i=i==null?A3:Math.pow(A3,i),new W4(this.r*i,this.g*i,this.b*i,this.opacity)},darker(i){return i=i==null?P5:Math.pow(P5,i),new W4(this.r*i,this.g*i,this.b*i,this.opacity)},rgb(){return this},clamp(){return new W4(T5(this.r),T5(this.g),T5(this.b),A8(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:_i,formatHex:_i,formatHex8:Kl,formatRgb:xi,toString:xi}));function _i(){return`#${y5(this.r)}${y5(this.g)}${y5(this.b)}`}function Kl(){return`#${y5(this.r)}${y5(this.g)}${y5(this.b)}${y5((isNaN(this.opacity)?1:this.opacity)*255)}`}function xi(){const i=A8(this.opacity);return`${i===1?"rgb(":"rgba("}${T5(this.r)}, ${T5(this.g)}, ${T5(this.b)}${i===1?")":`, ${i})`}`}function A8(i){return isNaN(i)?1:Math.max(0,Math.min(1,i))}function T5(i){return Math.max(0,Math.min(255,Math.round(i)||0))}function y5(i){return i=T5(i),(i<16?"0":"")+i.toString(16)}function vi(i,t,e,n){return n<=0?i=t=e=NaN:e<=0||e>=1?i=t=NaN:t<=0&&(i=NaN),new O0(i,t,e,n)}function Qr(i){if(i instanceof O0)return new O0(i.h,i.s,i.l,i.opacity);if(i instanceof V3||(i=L6(i)),!i)return new O0;if(i instanceof O0)return i;i=i.rgb();var t=i.r/255,e=i.g/255,n=i.b/255,s=Math.min(t,e,n),r=Math.max(t,e,n),a=NaN,o=r-s,c=(r+s)/2;return o?(t===r?a=(e-n)/o+(e<n)*6:e===r?a=(n-t)/o+2:a=(t-e)/o+4,o/=c<.5?r+s:2-r-s,a*=60):o=c>0&&c<1?0:a,new O0(a,o,c,i.opacity)}function Ql(i,t,e,n){return arguments.length===1?Qr(i):new O0(i,t,e,n??1)}function O0(i,t,e,n){this.h=+i,this.s=+t,this.l=+e,this.opacity=+n}E9(O0,Ql,qe(V3,{brighter(i){return i=i==null?A3:Math.pow(A3,i),new O0(this.h,this.s,this.l*i,this.opacity)},darker(i){return i=i==null?P5:Math.pow(P5,i),new O0(this.h,this.s,this.l*i,this.opacity)},rgb(){var i=this.h%360+(this.h<0)*360,t=isNaN(i)||isNaN(this.s)?0:this.s,e=this.l,n=e+(e<.5?e:1-e)*t,s=2*e-n;return new W4(mt(i>=240?i-240:i+120,s,n),mt(i,s,n),mt(i<120?i+240:i-120,s,n),this.opacity)},clamp(){return new O0(yi(this.h),_7(this.s),_7(this.l),A8(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const i=A8(this.opacity);return`${i===1?"hsl(":"hsla("}${yi(this.h)}, ${_7(this.s)*100}%, ${_7(this.l)*100}%${i===1?")":`, ${i})`}`}}));function yi(i){return i=(i||0)%360,i<0?i+360:i}function _7(i){return Math.max(0,Math.min(1,i||0))}function mt(i,t,e){return(i<60?t+(e-t)*i/60:i<180?e:i<240?t+(e-t)*(240-i)/60:t)*255}const jl=Math.PI/180,th=180/Math.PI;var jr=-.14861,Ze=1.78277,$e=-.29227,T9=-.90649,U6=1.97294,bi=U6*T9,Mi=U6*Ze,Si=Ze*$e-T9*jr;function eh(i){if(i instanceof w5)return new w5(i.h,i.s,i.l,i.opacity);i instanceof W4||(i=Kr(i));var t=i.r/255,e=i.g/255,n=i.b/255,s=(Si*n+bi*t-Mi*e)/(Si+bi-Mi),r=n-s,a=(U6*(e-s)-$e*r)/T9,o=Math.sqrt(a*a+r*r)/(U6*s*(1-s)),c=o?Math.atan2(a,r)*th-120:NaN;return new w5(c<0?c+360:c,o,s,i.opacity)}function e2(i,t,e,n){return arguments.length===1?eh(i):new w5(i,t,e,n??1)}function w5(i,t,e,n){this.h=+i,this.s=+t,this.l=+e,this.opacity=+n}E9(w5,e2,qe(V3,{brighter(i){return i=i==null?A3:Math.pow(A3,i),new w5(this.h,this.s,this.l*i,this.opacity)},darker(i){return i=i==null?P5:Math.pow(P5,i),new w5(this.h,this.s,this.l*i,this.opacity)},rgb(){var i=isNaN(this.h)?0:(this.h+120)*jl,t=+this.l,e=isNaN(this.s)?0:this.s*t*(1-t),n=Math.cos(i),s=Math.sin(i);return new W4(255*(t+e*(jr*n+Ze*s)),255*(t+e*($e*n+T9*s)),255*(t+e*(U6*n)),this.opacity)}}));function nh(i,t,e,n,s){var r=i*i,a=r*i;return((1-3*i+3*r-a)*t+(4-6*r+3*a)*e+(1+3*i+3*r-3*a)*n+a*s)/6}function ih(i){var t=i.length-1;return function(e){var n=e<=0?e=0:e>=1?(e=1,t-1):Math.floor(e*t),s=i[n],r=i[n+1],a=n>0?i[n-1]:2*s-r,o=n<t-1?i[n+2]:2*r-s;return nh((e-n/t)*t,a,s,r,o)}}const Je=i=>()=>i;function ta(i,t){return function(e){return i+e*t}}function sh(i,t,e){return i=Math.pow(i,e),t=Math.pow(t,e)-i,e=1/e,function(n){return Math.pow(i+n*t,e)}}function rh(i,t){var e=t-i;return e?ta(i,e>180||e<-180?e-360*Math.round(e/360):e):Je(isNaN(i)?t:i)}function ah(i){return(i=+i)==1?M3:function(t,e){return e-t?sh(t,e,i):Je(isNaN(t)?e:t)}}function M3(i,t){var e=t-i;return e?ta(i,e):Je(isNaN(i)?t:i)}const Ei=(function i(t){var e=ah(t);function n(s,r){var a=e((s=D6(s)).r,(r=D6(r)).r),o=e(s.g,r.g),c=e(s.b,r.b),l=M3(s.opacity,r.opacity);return function(h){return s.r=a(h),s.g=o(h),s.b=c(h),s.opacity=l(h),s+""}}return n.gamma=i,n})(1);function oh(i){return function(t){var e=t.length,n=new Array(e),s=new Array(e),r=new Array(e),a,o;for(a=0;a<e;++a)o=D6(t[a]),n[a]=o.r||0,s[a]=o.g||0,r[a]=o.b||0;return n=i(n),s=i(s),r=i(r),o.opacity=1,function(c){return o.r=n(c),o.g=s(c),o.b=r(c),o+""}}}var ch=oh(ih);function N2(i,t){return i=+i,t=+t,function(e){return i*(1-e)+t*e}}var ye=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,gt=new RegExp(ye.source,"g");function lh(i){return function(){return i}}function hh(i){return function(t){return i(t)+""}}function uh(i,t){var e=ye.lastIndex=gt.lastIndex=0,n,s,r,a=-1,o=[],c=[];for(i=i+"",t=t+"";(n=ye.exec(i))&&(s=gt.exec(t));)(r=s.index)>e&&(r=t.slice(e,r),o[a]?o[a]+=r:o[++a]=r),(n=n[0])===(s=s[0])?o[a]?o[a]+=s:o[++a]=s:(o[++a]=null,c.push({i:a,x:N2(n,s)})),e=gt.lastIndex;return e<t.length&&(r=t.slice(e),o[a]?o[a]+=r:o[++a]=r),o.length<2?c[0]?hh(c[0].x):lh(t):(t=c.length,function(l){for(var h=0,u;h<t;++h)o[(u=c[h]).i]=u.x(l);return o.join("")})}var Ti=180/Math.PI,be={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function ea(i,t,e,n,s,r){var a,o,c;return(a=Math.sqrt(i*i+t*t))&&(i/=a,t/=a),(c=i*e+t*n)&&(e-=i*c,n-=t*c),(o=Math.sqrt(e*e+n*n))&&(e/=o,n/=o,c/=o),i*n<t*e&&(i=-i,t=-t,c=-c,a=-a),{translateX:s,translateY:r,rotate:Math.atan2(t,i)*Ti,skewX:Math.atan(c)*Ti,scaleX:a,scaleY:o}}var x7;function fh(i){const t=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(i+"");return t.isIdentity?be:ea(t.a,t.b,t.c,t.d,t.e,t.f)}function dh(i){return i==null||(x7||(x7=document.createElementNS("http://www.w3.org/2000/svg","g")),x7.setAttribute("transform",i),!(i=x7.transform.baseVal.consolidate()))?be:(i=i.matrix,ea(i.a,i.b,i.c,i.d,i.e,i.f))}function na(i,t,e,n){function s(l){return l.length?l.pop()+" ":""}function r(l,h,u,f,d,m){if(l!==u||h!==f){var _=d.push("translate(",null,t,null,e);m.push({i:_-4,x:N2(l,u)},{i:_-2,x:N2(h,f)})}else(u||f)&&d.push("translate("+u+t+f+e)}function a(l,h,u,f){l!==h?(l-h>180?h+=360:h-l>180&&(l+=360),f.push({i:u.push(s(u)+"rotate(",null,n)-2,x:N2(l,h)})):h&&u.push(s(u)+"rotate("+h+n)}function o(l,h,u,f){l!==h?f.push({i:u.push(s(u)+"skewX(",null,n)-2,x:N2(l,h)}):h&&u.push(s(u)+"skewX("+h+n)}function c(l,h,u,f,d,m){if(l!==u||h!==f){var _=d.push(s(d)+"scale(",null,",",null,")");m.push({i:_-4,x:N2(l,u)},{i:_-2,x:N2(h,f)})}else(u!==1||f!==1)&&d.push(s(d)+"scale("+u+","+f+")")}return function(l,h){var u=[],f=[];return l=i(l),h=i(h),r(l.translateX,l.translateY,h.translateX,h.translateY,u,f),a(l.rotate,h.rotate,u,f),o(l.skewX,h.skewX,u,f),c(l.scaleX,l.scaleY,h.scaleX,h.scaleY,u,f),l=h=null,function(d){for(var m=-1,_=f.length,g;++m<_;)u[(g=f[m]).i]=g.x(d);return u.join("")}}}var ph=na(fh,"px, ","px)","deg)"),mh=na(dh,", ",")",")");function ia(i){return(function t(e){e=+e;function n(s,r){var a=i((s=e2(s)).h,(r=e2(r)).h),o=M3(s.s,r.s),c=M3(s.l,r.l),l=M3(s.opacity,r.opacity);return function(h){return s.h=a(h),s.s=o(h),s.l=c(Math.pow(h,e)),s.opacity=l(h),s+""}}return n.gamma=t,n})(1)}ia(rh);var Ke=ia(M3);const _4=i=>ch(i[i.length-1]);var gh=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(l4);const _h=_4(gh);var xh=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(l4);const vh=_4(xh);var yh=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(l4);const bh=_4(yh);var Mh=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(l4);const Sh=_4(Mh);var Eh=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(l4);const Th=_4(Eh);var wh=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(l4);const Ah=_4(wh);var Ch=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(l4);const Rh=_4(Ch);var Ih=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(l4);const Ph=_4(Ih);var Lh=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(l4);const Dh=_4(Lh);var Uh=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(l4);const Oh=_4(Uh);var Nh=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(l4);const Fh=_4(Nh);var Bh=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(l4);const zh=_4(Bh);var kh=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(l4);const Vh=_4(kh);var Hh=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(l4);const Gh=_4(Hh);var Wh=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(l4);const Xh=_4(Wh);var Yh=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(l4);const qh=_4(Yh);var Zh=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(l4);const $h=_4(Zh);var Jh=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(l4);const Kh=_4(Jh);var Qh=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(l4);const jh=_4(Qh);var tu=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(l4);const eu=_4(tu);var nu=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(l4);const iu=_4(nu);var su=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(l4);const ru=_4(su);var au=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(l4);const ou=_4(au);var cu=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(l4);const lu=_4(cu);var hu=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(l4);const uu=_4(hu);var fu=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(l4);const du=_4(fu);var pu=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(l4);const mu=_4(pu);function gu(i){return i=Math.max(0,Math.min(1,i)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-i*(35.34-i*(2381.73-i*(6402.7-i*(7024.72-i*2710.57)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+i*(170.73+i*(52.82-i*(131.46-i*(176.58-i*67.37)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+i*(442.36-i*(2482.43-i*(6167.24-i*(6614.94-i*2475.67)))))))+")"}const _u=Ke(e2(300,.5,0),e2(-240,.5,1));var xu=Ke(e2(-100,.75,.35),e2(80,1.5,.8)),vu=Ke(e2(260,.75,.35),e2(80,1.5,.8)),v7=e2();function yu(i){(i<0||i>1)&&(i-=Math.floor(i));var t=Math.abs(i-.5);return v7.h=360*i-100,v7.s=1.5-1.5*t,v7.l=.8-.9*t,v7+""}var y7=D6(),bu=Math.PI/3,Mu=Math.PI*2/3;function Su(i){var t;return i=(.5-i)*Math.PI,y7.r=255*(t=Math.sin(i))*t,y7.g=255*(t=Math.sin(i+bu))*t,y7.b=255*(t=Math.sin(i+Mu))*t,y7+""}function Eu(i){return i=Math.max(0,Math.min(1,i)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+i*(1172.33-i*(10793.56-i*(33300.12-i*(38394.49-i*14825.05)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+i*(557.33+i*(1225.33-i*(3574.96-i*(1073.77+i*707.56)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+i*(3211.1-i*(15327.97-i*(27814-i*(22569.18-i*6838.66)))))))+")"}function w9(i){var t=i.length;return function(e){return i[Math.max(0,Math.min(t-1,Math.floor(e*t)))]}}const Tu=w9(l4("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));var wu=w9(l4("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Au=w9(l4("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),Cu=w9(l4("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const A9="180",Ru={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Iu={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},sa=0,Me=1,ra=2,Pu=3,Lu=0,Qe=1,aa=2,Z0=3,y2=0,j4=1,J0=2,_2=0,A5=1,Se=2,Ee=3,Te=4,oa=5,B2=100,ca=101,la=102,ha=103,ua=104,fa=200,da=201,pa=202,ma=203,C8=204,R8=205,ga=206,_a=207,xa=208,va=209,ya=210,ba=211,Ma=212,Sa=213,Ea=214,I8=0,P8=1,L8=2,L5=3,D8=4,U8=5,O8=6,N8=7,i7=0,Ta=1,wa=2,x2=0,Aa=1,Ca=2,Ra=3,Ia=4,Pa=5,La=6,Da=7,we="attached",Ua="detached",C9=300,b2=301,W2=302,O6=303,N6=304,H3=306,F6=1e3,w0=1001,B6=1002,B4=1003,je=1004,Du=1004,p3=1005,Uu=1005,L4=1006,y6=1007,Ou=1007,K0=1008,Nu=1008,B0=1009,tn=1010,en=1011,C3=1012,R9=1013,M2=1014,c0=1015,G3=1016,I9=1017,P9=1018,R3=1020,nn=35902,sn=35899,rn=1021,an=1022,Q4=1023,I3=1026,P3=1027,L9=1028,s7=1029,on=1030,D9=1031,Fu=1032,U9=1033,b6=33776,M6=33777,S6=33778,E6=33779,F8=35840,B8=35841,z8=35842,k8=35843,V8=36196,H8=37492,G8=37496,W8=37808,X8=37809,Y8=37810,q8=37811,Z8=37812,$8=37813,J8=37814,K8=37815,Q8=37816,j8=37817,t9=37818,e9=37819,n9=37820,i9=37821,s9=36492,r9=36494,a9=36495,o9=36283,c9=36284,l9=36285,h9=36286,Oa=2200,Na=2201,Fa=2202,z6=2300,u9=2301,g8=2302,b5=2400,M5=2401,k6=2402,O9=2500,cn=2501,Bu=0,zu=1,ku=2,Ba=3200,za=3201,Vu=3202,Hu=3203,Z2=0,ka=1,p2="",r0="srgb",D5="srgb-linear",V6="linear",d4="srgb",Gu=0,g5=7680,Wu=7681,Xu=7682,Yu=7683,qu=34055,Zu=34056,$u=5386,Ju=512,Ku=513,Qu=514,ju=515,tf=516,ef=517,nf=518,Ae=519,Va=512,Ha=513,Ga=514,ln=515,Wa=516,Xa=517,Ya=518,qa=519,H6=35044,sf=35048,rf=35040,af=35045,of=35049,cf=35041,lf=35046,hf=35050,uf=35042,ff="100",Ce="300 es",_0=2e3,L3=2001,df={COMPUTE:"compute",RENDER:"render"},pf={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},mf={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};let i2=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const s=n[t];if(s!==void 0){const r=s.indexOf(e);r!==-1&&s.splice(r,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const s=n.slice(0);for(let r=0,a=s.length;r<a;r++)s[r].call(this,t);t.target=null}}};const V4=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let wi=1234567;const C5=Math.PI/180,D3=180/Math.PI;function x0(){const i=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(V4[i&255]+V4[i>>8&255]+V4[i>>16&255]+V4[i>>24&255]+"-"+V4[t&255]+V4[t>>8&255]+"-"+V4[t>>16&15|64]+V4[t>>24&255]+"-"+V4[e&63|128]+V4[e>>8&255]+"-"+V4[e>>16&255]+V4[e>>24&255]+V4[n&255]+V4[n>>8&255]+V4[n>>16&255]+V4[n>>24&255]).toLowerCase()}function N1(i,t,e){return Math.max(t,Math.min(e,i))}function hn(i,t){return(i%t+t)%t}function gf(i,t,e,n,s){return n+(i-t)*(s-n)/(e-t)}function _f(i,t,e){return i!==t?(e-i)/(t-i):0}function T6(i,t,e){return(1-e)*i+e*t}function xf(i,t,e,n){return T6(i,t,1-Math.exp(-e*n))}function vf(i,t=1){return t-Math.abs(hn(i,t*2)-t)}function yf(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*(3-2*i))}function bf(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*i*(i*(i*6-15)+10))}function Mf(i,t){return i+Math.floor(Math.random()*(t-i+1))}function Sf(i,t){return i+Math.random()*(t-i)}function Ef(i){return i*(.5-Math.random())}function Tf(i){i!==void 0&&(wi=i);let t=wi+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function wf(i){return i*C5}function Af(i){return i*D3}function Cf(i){return(i&i-1)===0&&i!==0}function Rf(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function If(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function Pf(i,t,e,n,s){const r=Math.cos,a=Math.sin,o=r(e/2),c=a(e/2),l=r((t+n)/2),h=a((t+n)/2),u=r((t-n)/2),f=a((t-n)/2),d=r((n-t)/2),m=a((n-t)/2);switch(s){case"XYX":i.set(o*h,c*u,c*f,o*l);break;case"YZY":i.set(c*f,o*h,c*u,o*l);break;case"ZXZ":i.set(c*u,c*f,o*h,o*l);break;case"XZX":i.set(o*h,c*m,c*d,o*l);break;case"YXY":i.set(c*d,o*h,c*m,o*l);break;case"ZYZ":i.set(c*m,c*d,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function K4(i,t){switch(t.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function q1(i,t){switch(t.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const Lf={DEG2RAD:C5,RAD2DEG:D3,generateUUID:x0,clamp:N1,euclideanModulo:hn,mapLinear:gf,inverseLerp:_f,lerp:T6,damp:xf,pingpong:vf,smoothstep:yf,smootherstep:bf,randInt:Mf,randFloat:Sf,randFloatSpread:Ef,seededRandom:Tf,degToRad:wf,radToDeg:Af,isPowerOfTwo:Cf,ceilPowerOfTwo:Rf,floorPowerOfTwo:If,setQuaternionFromProperEuler:Pf,normalize:q1,denormalize:K4};class K{constructor(t=0,e=0){K.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6],this.y=s[1]*e+s[4]*n+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=N1(this.x,t.x,e.x),this.y=N1(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=N1(this.x,t,e),this.y=N1(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(N1(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(N1(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),s=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*s+t.x,this.y=r*s+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class l0{constructor(t=0,e=0,n=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=s}static slerpFlat(t,e,n,s,r,a,o){let c=n[s+0],l=n[s+1],h=n[s+2],u=n[s+3];const f=r[a+0],d=r[a+1],m=r[a+2],_=r[a+3];if(o===0){t[e+0]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u;return}if(o===1){t[e+0]=f,t[e+1]=d,t[e+2]=m,t[e+3]=_;return}if(u!==_||c!==f||l!==d||h!==m){let g=1-o;const p=c*f+l*d+h*m+u*_,y=p>=0?1:-1,v=1-p*p;if(v>Number.EPSILON){const T=Math.sqrt(v),E=Math.atan2(T,p*y);g=Math.sin(g*E)/T,o=Math.sin(o*E)/T}const x=o*y;if(c=c*g+f*x,l=l*g+d*x,h=h*g+m*x,u=u*g+_*x,g===1-o){const T=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=T,l*=T,h*=T,u*=T}}t[e]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,s,r,a){const o=n[s],c=n[s+1],l=n[s+2],h=n[s+3],u=r[a],f=r[a+1],d=r[a+2],m=r[a+3];return t[e]=o*m+h*u+c*d-l*f,t[e+1]=c*m+h*f+l*u-o*d,t[e+2]=l*m+h*d+o*f-c*u,t[e+3]=h*m-o*u-c*f-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,s){return this._x=t,this._y=e,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,s=t._y,r=t._z,a=t._order,o=Math.cos,c=Math.sin,l=o(n/2),h=o(s/2),u=o(r/2),f=c(n/2),d=c(s/2),m=c(r/2);switch(a){case"XYZ":this._x=f*h*u+l*d*m,this._y=l*d*u-f*h*m,this._z=l*h*m+f*d*u,this._w=l*h*u-f*d*m;break;case"YXZ":this._x=f*h*u+l*d*m,this._y=l*d*u-f*h*m,this._z=l*h*m-f*d*u,this._w=l*h*u+f*d*m;break;case"ZXY":this._x=f*h*u-l*d*m,this._y=l*d*u+f*h*m,this._z=l*h*m+f*d*u,this._w=l*h*u-f*d*m;break;case"ZYX":this._x=f*h*u-l*d*m,this._y=l*d*u+f*h*m,this._z=l*h*m-f*d*u,this._w=l*h*u+f*d*m;break;case"YZX":this._x=f*h*u+l*d*m,this._y=l*d*u+f*h*m,this._z=l*h*m-f*d*u,this._w=l*h*u-f*d*m;break;case"XZY":this._x=f*h*u-l*d*m,this._y=l*d*u-f*h*m,this._z=l*h*m+f*d*u,this._w=l*h*u+f*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,s=Math.sin(n);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],s=e[4],r=e[8],a=e[1],o=e[5],c=e[9],l=e[2],h=e[6],u=e[10],f=n+o+u;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(h-c)*d,this._y=(r-l)*d,this._z=(a-s)*d}else if(n>o&&n>u){const d=2*Math.sqrt(1+n-o-u);this._w=(h-c)/d,this._x=.25*d,this._y=(s+a)/d,this._z=(r+l)/d}else if(o>u){const d=2*Math.sqrt(1+o-n-u);this._w=(r-l)/d,this._x=(s+a)/d,this._y=.25*d,this._z=(c+h)/d}else{const d=2*Math.sqrt(1+u-n-o);this._w=(a-s)/d,this._x=(r+l)/d,this._y=(c+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(N1(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const s=Math.min(1,e/n);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,s=t._y,r=t._z,a=t._w,o=e._x,c=e._y,l=e._z,h=e._w;return this._x=n*h+a*o+s*l-r*c,this._y=s*h+a*c+r*o-n*l,this._z=r*h+a*l+n*c-s*o,this._w=a*h-n*o-s*c-r*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,s=this._y,r=this._z,a=this._w;let o=a*t._w+n*t._x+s*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=n,this._y=s,this._z=r,this;const c=1-o*o;if(c<=Number.EPSILON){const d=1-e;return this._w=d*a+e*this._w,this._x=d*n+e*this._x,this._y=d*s+e*this._y,this._z=d*r+e*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,o),u=Math.sin((1-e)*h)/l,f=Math.sin(e*h)/l;return this._w=a*u+this._w*f,this._x=n*u+this._x*f,this._y=s*u+this._y*f,this._z=r*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),s=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(s*Math.sin(t),s*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class C{constructor(t=0,e=0,n=0){C.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Ai.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ai.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*s,this.y=r[1]*e+r[4]*n+r[7]*s,this.z=r[2]*e+r[5]*n+r[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*s+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*s+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*s+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,s=this.z,r=t.x,a=t.y,o=t.z,c=t.w,l=2*(a*s-o*n),h=2*(o*e-r*s),u=2*(r*n-a*e);return this.x=e+c*l+a*u-o*h,this.y=n+c*h+o*l-r*u,this.z=s+c*u+r*h-a*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*s,this.y=r[1]*e+r[5]*n+r[9]*s,this.z=r[2]*e+r[6]*n+r[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=N1(this.x,t.x,e.x),this.y=N1(this.y,t.y,e.y),this.z=N1(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=N1(this.x,t,e),this.y=N1(this.y,t,e),this.z=N1(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(N1(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,s=t.y,r=t.z,a=e.x,o=e.y,c=e.z;return this.x=s*c-r*o,this.y=r*a-n*c,this.z=n*o-s*a,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return _t.copy(this).projectOnVector(t),this.sub(_t)}reflect(t){return this.sub(_t.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(N1(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,s=this.z-t.z;return e*e+n*n+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const s=Math.sin(e)*t;return this.x=s*Math.sin(n),this.y=Math.cos(e)*t,this.z=s*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const _t=new C,Ai=new l0;class W1{constructor(t,e,n,s,r,a,o,c,l){W1.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,s,r,a,o,c,l)}set(t,e,n,s,r,a,o,c,l){const h=this.elements;return h[0]=t,h[1]=s,h[2]=o,h[3]=e,h[4]=r,h[5]=c,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,a=n[0],o=n[3],c=n[6],l=n[1],h=n[4],u=n[7],f=n[2],d=n[5],m=n[8],_=s[0],g=s[3],p=s[6],y=s[1],v=s[4],x=s[7],T=s[2],E=s[5],A=s[8];return r[0]=a*_+o*y+c*T,r[3]=a*g+o*v+c*E,r[6]=a*p+o*x+c*A,r[1]=l*_+h*y+u*T,r[4]=l*g+h*v+u*E,r[7]=l*p+h*x+u*A,r[2]=f*_+d*y+m*T,r[5]=f*g+d*v+m*E,r[8]=f*p+d*x+m*A,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],a=t[4],o=t[5],c=t[6],l=t[7],h=t[8];return e*a*h-e*o*l-n*r*h+n*o*c+s*r*l-s*a*c}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],a=t[4],o=t[5],c=t[6],l=t[7],h=t[8],u=h*a-o*l,f=o*c-h*r,d=l*r-a*c,m=e*u+n*f+s*d;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/m;return t[0]=u*_,t[1]=(s*l-h*n)*_,t[2]=(o*n-s*a)*_,t[3]=f*_,t[4]=(h*e-s*c)*_,t[5]=(s*r-o*e)*_,t[6]=d*_,t[7]=(n*c-l*e)*_,t[8]=(a*e-n*r)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,s,r,a,o){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*a+l*o)+a+t,-s*l,s*c,-s*(-l*a+c*o)+o+e,0,0,1),this}scale(t,e){return this.premultiply(xt.makeScale(t,e)),this}rotate(t){return this.premultiply(xt.makeRotation(-t)),this}translate(t,e){return this.premultiply(xt.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<9;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const xt=new W1;function Za(i){for(let t=i.length-1;t>=0;--t)if(i[t]>=65535)return!0;return!1}const Df={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function m3(i,t){return new Df[i](t)}function G6(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function $a(){const i=G6("canvas");return i.style.display="block",i}const Ci={};function W6(i){i in Ci||(Ci[i]=!0,console.warn(i))}function Uf(i,t,e){return new Promise(function(n,s){function r(){switch(i.clientWaitSync(t,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:s();break;case i.TIMEOUT_EXPIRED:setTimeout(r,e);break;default:n()}}setTimeout(r,e)})}const Ri=new W1().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Ii=new W1().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Of(){const i={enabled:!0,workingColorSpace:D5,spaces:{},convert:function(s,r,a){return this.enabled===!1||r===a||!r||!a||(this.spaces[r].transfer===d4&&(s.r=v2(s.r),s.g=v2(s.g),s.b=v2(s.b)),this.spaces[r].primaries!==this.spaces[a].primaries&&(s.applyMatrix3(this.spaces[r].toXYZ),s.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===d4&&(s.r=S3(s.r),s.g=S3(s.g),s.b=S3(s.b))),s},workingToColorSpace:function(s,r){return this.convert(s,this.workingColorSpace,r)},colorSpaceToWorking:function(s,r){return this.convert(s,r,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===p2?V6:this.spaces[s].transfer},getToneMappingMode:function(s){return this.spaces[s].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(s,r=this.workingColorSpace){return s.fromArray(this.spaces[r].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,r,a){return s.copy(this.spaces[r].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(s,r){return W6("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),i.workingToColorSpace(s,r)},toWorkingColorSpace:function(s,r){return W6("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),i.colorSpaceToWorking(s,r)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return i.define({[D5]:{primaries:t,whitePoint:n,transfer:V6,toXYZ:Ri,fromXYZ:Ii,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:r0},outputColorSpaceConfig:{drawingBufferColorSpace:r0}},[r0]:{primaries:t,whitePoint:n,transfer:d4,toXYZ:Ri,fromXYZ:Ii,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:r0}}}),i}const t4=Of();function v2(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function S3(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let G5;class Ja{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{G5===void 0&&(G5=G6("canvas")),G5.width=t.width,G5.height=t.height;const s=G5.getContext("2d");t instanceof ImageData?s.putImageData(t,0,0):s.drawImage(t,0,0,t.width,t.height),n=G5}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=G6("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const s=n.getImageData(0,0,t.width,t.height),r=s.data;for(let a=0;a<r.length;a++)r[a]=v2(r[a]/255)*255;return n.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(v2(e[n]/255)*255):e[n]=v2(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Nf=0;class V2{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Nf++}),this.uuid=x0(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight,0):e instanceof VideoFrame?t.set(e.displayHeight,e.displayWidth,0):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let a=0,o=s.length;a<o;a++)s[a].isDataTexture?r.push(vt(s[a].image)):r.push(vt(s[a]))}else r=vt(s);n.url=r}return e||(t.images[this.uuid]=n),n}}function vt(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?Ja.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ff=0;const yt=new C;class C4 extends i2{constructor(t=C4.DEFAULT_IMAGE,e=C4.DEFAULT_MAPPING,n=w0,s=w0,r=L4,a=K0,o=Q4,c=B0,l=C4.DEFAULT_ANISOTROPY,h=p2){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ff++}),this.uuid=x0(),this.name="",this.source=new V2(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new K(0,0),this.repeat=new K(1,1),this.center=new K(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new W1,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(yt).x}get height(){return this.source.getSize(yt).y}get depth(){return this.source.getSize(yt).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}s&&n&&s.isVector2&&n.isVector2||s&&n&&s.isVector3&&n.isVector3||s&&n&&s.isMatrix3&&n.isMatrix3?s.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==C9)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case F6:t.x=t.x-Math.floor(t.x);break;case w0:t.x=t.x<0?0:1;break;case B6:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case F6:t.y=t.y-Math.floor(t.y);break;case w0:t.y=t.y<0?0:1;break;case B6:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}C4.DEFAULT_IMAGE=null;C4.DEFAULT_MAPPING=C9;C4.DEFAULT_ANISOTROPY=1;class i4{constructor(t=0,e=0,n=0,s=1){i4.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,s){return this.x=t,this.y=e,this.z=n,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*s+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*s+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*s+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*s+a[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,s,r;const c=t.elements,l=c[0],h=c[4],u=c[8],f=c[1],d=c[5],m=c[9],_=c[2],g=c[6],p=c[10];if(Math.abs(h-f)<.01&&Math.abs(u-_)<.01&&Math.abs(m-g)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+_)<.1&&Math.abs(m+g)<.1&&Math.abs(l+d+p-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(l+1)/2,x=(d+1)/2,T=(p+1)/2,E=(h+f)/4,A=(u+_)/4,I=(m+g)/4;return v>x&&v>T?v<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(v),s=E/n,r=A/n):x>T?x<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(x),n=E/s,r=I/s):T<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(T),n=A/r,s=I/r),this.set(n,s,r,e),this}let y=Math.sqrt((g-m)*(g-m)+(u-_)*(u-_)+(f-h)*(f-h));return Math.abs(y)<.001&&(y=1),this.x=(g-m)/y,this.y=(u-_)/y,this.z=(f-h)/y,this.w=Math.acos((l+d+p-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=N1(this.x,t.x,e.x),this.y=N1(this.y,t.y,e.y),this.z=N1(this.z,t.z,e.z),this.w=N1(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=N1(this.x,t,e),this.y=N1(this.y,t,e),this.z=N1(this.z,t,e),this.w=N1(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(N1(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class un extends i2{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:L4,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new i4(0,0,t,e),this.scissorTest=!1,this.viewport=new i4(0,0,t,e);const s={width:t,height:e,depth:n.depth},r=new C4(s);this.textures=[];const a=n.count;for(let o=0;o<a;o++)this.textures[o]=r.clone(),this.textures[o].isRenderTargetTexture=!0,this.textures[o].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:L4,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=t,this.textures[s].image.height=e,this.textures[s].image.depth=n,this.textures[s].isArrayTexture=this.textures[s].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const s=Object.assign({},t.textures[e].image);this.textures[e].source=new V2(s)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class n2 extends un{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class N9 extends C4{constructor(t=null,e=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=B4,this.minFilter=B4,this.wrapR=w0,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Bf extends n2{constructor(t=1,e=1,n=1,s={}){super(t,e,s),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new N9(null,t,e,n),this._setTextureOptions(s),this.texture.isRenderTargetTexture=!0}}class F9 extends C4{constructor(t=null,e=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=B4,this.minFilter=B4,this.wrapR=w0,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class zf extends n2{constructor(t=1,e=1,n=1,s={}){super(t,e,s),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new F9(null,t,e,n),this._setTextureOptions(s),this.texture.isRenderTargetTexture=!0}}class z4{constructor(t=new C(1/0,1/0,1/0),e=new C(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(I0.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(I0.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=I0.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const r=n.getAttribute("position");if(e===!0&&r!==void 0&&t.isInstancedMesh!==!0)for(let a=0,o=r.count;a<o;a++)t.isMesh===!0?t.getVertexPosition(a,I0):I0.fromBufferAttribute(r,a),I0.applyMatrix4(t.matrixWorld),this.expandByPoint(I0);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),b7.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),b7.copy(n.boundingBox)),b7.applyMatrix4(t.matrixWorld),this.union(b7)}const s=t.children;for(let r=0,a=s.length;r<a;r++)this.expandByObject(s[r],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,I0),I0.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter($3),M7.subVectors(this.max,$3),W5.subVectors(t.a,$3),X5.subVectors(t.b,$3),Y5.subVectors(t.c,$3),w2.subVectors(X5,W5),A2.subVectors(Y5,X5),t5.subVectors(W5,Y5);let e=[0,-w2.z,w2.y,0,-A2.z,A2.y,0,-t5.z,t5.y,w2.z,0,-w2.x,A2.z,0,-A2.x,t5.z,0,-t5.x,-w2.y,w2.x,0,-A2.y,A2.x,0,-t5.y,t5.x,0];return!bt(e,W5,X5,Y5,M7)||(e=[1,0,0,0,1,0,0,0,1],!bt(e,W5,X5,Y5,M7))?!1:(S7.crossVectors(w2,A2),e=[S7.x,S7.y,S7.z],bt(e,W5,X5,Y5,M7))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,I0).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(I0).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(o2[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),o2[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),o2[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),o2[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),o2[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),o2[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),o2[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),o2[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(o2),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const o2=[new C,new C,new C,new C,new C,new C,new C,new C],I0=new C,b7=new z4,W5=new C,X5=new C,Y5=new C,w2=new C,A2=new C,t5=new C,$3=new C,M7=new C,S7=new C,e5=new C;function bt(i,t,e,n,s){for(let r=0,a=i.length-3;r<=a;r+=3){e5.fromArray(i,r);const o=s.x*Math.abs(e5.x)+s.y*Math.abs(e5.y)+s.z*Math.abs(e5.z),c=t.dot(e5),l=e.dot(e5),h=n.dot(e5);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>o)return!1}return!0}const kf=new z4,J3=new C,Mt=new C;class k4{constructor(t=new C,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):kf.setFromPoints(t).getCenter(n);let s=0;for(let r=0,a=t.length;r<a;r++)s=Math.max(s,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;J3.subVectors(t,this.center);const e=J3.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),s=(n-this.radius)*.5;this.center.addScaledVector(J3,s/n),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Mt.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(J3.copy(t.center).add(Mt)),this.expandByPoint(J3.copy(t.center).sub(Mt))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const c2=new C,St=new C,E7=new C,C2=new C,Et=new C,T7=new C,Tt=new C;class W3{constructor(t=new C,e=new C(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,c2)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=c2.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(c2.copy(this.origin).addScaledVector(this.direction,e),c2.distanceToSquared(t))}distanceSqToSegment(t,e,n,s){St.copy(t).add(e).multiplyScalar(.5),E7.copy(e).sub(t).normalize(),C2.copy(this.origin).sub(St);const r=t.distanceTo(e)*.5,a=-this.direction.dot(E7),o=C2.dot(this.direction),c=-C2.dot(E7),l=C2.lengthSq(),h=Math.abs(1-a*a);let u,f,d,m;if(h>0)if(u=a*c-o,f=a*o-c,m=r*h,u>=0)if(f>=-m)if(f<=m){const _=1/h;u*=_,f*=_,d=u*(u+a*f+2*o)+f*(a*u+f+2*c)+l}else f=r,u=Math.max(0,-(a*f+o)),d=-u*u+f*(f+2*c)+l;else f=-r,u=Math.max(0,-(a*f+o)),d=-u*u+f*(f+2*c)+l;else f<=-m?(u=Math.max(0,-(-a*r+o)),f=u>0?-r:Math.min(Math.max(-r,-c),r),d=-u*u+f*(f+2*c)+l):f<=m?(u=0,f=Math.min(Math.max(-r,-c),r),d=f*(f+2*c)+l):(u=Math.max(0,-(a*r+o)),f=u>0?r:Math.min(Math.max(-r,-c),r),d=-u*u+f*(f+2*c)+l);else f=a>0?-r:r,u=Math.max(0,-(a*f+o)),d=-u*u+f*(f+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy(St).addScaledVector(E7,f),d}intersectSphere(t,e){c2.subVectors(t.center,this.origin);const n=c2.dot(this.direction),s=c2.dot(c2)-n*n,r=t.radius*t.radius;if(s>r)return null;const a=Math.sqrt(r-s),o=n-a,c=n+a;return c<0?null:o<0?this.at(c,e):this.at(o,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,s,r,a,o,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return l>=0?(n=(t.min.x-f.x)*l,s=(t.max.x-f.x)*l):(n=(t.max.x-f.x)*l,s=(t.min.x-f.x)*l),h>=0?(r=(t.min.y-f.y)*h,a=(t.max.y-f.y)*h):(r=(t.max.y-f.y)*h,a=(t.min.y-f.y)*h),n>a||r>s||((r>n||isNaN(n))&&(n=r),(a<s||isNaN(s))&&(s=a),u>=0?(o=(t.min.z-f.z)*u,c=(t.max.z-f.z)*u):(o=(t.max.z-f.z)*u,c=(t.min.z-f.z)*u),n>c||o>s)||((o>n||n!==n)&&(n=o),(c<s||s!==s)&&(s=c),s<0)?null:this.at(n>=0?n:s,e)}intersectsBox(t){return this.intersectBox(t,c2)!==null}intersectTriangle(t,e,n,s,r){Et.subVectors(e,t),T7.subVectors(n,t),Tt.crossVectors(Et,T7);let a=this.direction.dot(Tt),o;if(a>0){if(s)return null;o=1}else if(a<0)o=-1,a=-a;else return null;C2.subVectors(this.origin,t);const c=o*this.direction.dot(T7.crossVectors(C2,T7));if(c<0)return null;const l=o*this.direction.dot(Et.cross(C2));if(l<0||c+l>a)return null;const h=-o*C2.dot(Tt);return h<0?null:this.at(h/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class B1{constructor(t,e,n,s,r,a,o,c,l,h,u,f,d,m,_,g){B1.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,s,r,a,o,c,l,h,u,f,d,m,_,g)}set(t,e,n,s,r,a,o,c,l,h,u,f,d,m,_,g){const p=this.elements;return p[0]=t,p[4]=e,p[8]=n,p[12]=s,p[1]=r,p[5]=a,p[9]=o,p[13]=c,p[2]=l,p[6]=h,p[10]=u,p[14]=f,p[3]=d,p[7]=m,p[11]=_,p[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new B1().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,s=1/q5.setFromMatrixColumn(t,0).length(),r=1/q5.setFromMatrixColumn(t,1).length(),a=1/q5.setFromMatrixColumn(t,2).length();return e[0]=n[0]*s,e[1]=n[1]*s,e[2]=n[2]*s,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,s=t.y,r=t.z,a=Math.cos(n),o=Math.sin(n),c=Math.cos(s),l=Math.sin(s),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const f=a*h,d=a*u,m=o*h,_=o*u;e[0]=c*h,e[4]=-c*u,e[8]=l,e[1]=d+m*l,e[5]=f-_*l,e[9]=-o*c,e[2]=_-f*l,e[6]=m+d*l,e[10]=a*c}else if(t.order==="YXZ"){const f=c*h,d=c*u,m=l*h,_=l*u;e[0]=f+_*o,e[4]=m*o-d,e[8]=a*l,e[1]=a*u,e[5]=a*h,e[9]=-o,e[2]=d*o-m,e[6]=_+f*o,e[10]=a*c}else if(t.order==="ZXY"){const f=c*h,d=c*u,m=l*h,_=l*u;e[0]=f-_*o,e[4]=-a*u,e[8]=m+d*o,e[1]=d+m*o,e[5]=a*h,e[9]=_-f*o,e[2]=-a*l,e[6]=o,e[10]=a*c}else if(t.order==="ZYX"){const f=a*h,d=a*u,m=o*h,_=o*u;e[0]=c*h,e[4]=m*l-d,e[8]=f*l+_,e[1]=c*u,e[5]=_*l+f,e[9]=d*l-m,e[2]=-l,e[6]=o*c,e[10]=a*c}else if(t.order==="YZX"){const f=a*c,d=a*l,m=o*c,_=o*l;e[0]=c*h,e[4]=_-f*u,e[8]=m*u+d,e[1]=u,e[5]=a*h,e[9]=-o*h,e[2]=-l*h,e[6]=d*u+m,e[10]=f-_*u}else if(t.order==="XZY"){const f=a*c,d=a*l,m=o*c,_=o*l;e[0]=c*h,e[4]=-u,e[8]=l*h,e[1]=f*u+_,e[5]=a*h,e[9]=d*u-m,e[2]=m*u-d,e[6]=o*h,e[10]=_*u+f}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Vf,t,Hf)}lookAt(t,e,n){const s=this.elements;return d0.subVectors(t,e),d0.lengthSq()===0&&(d0.z=1),d0.normalize(),R2.crossVectors(n,d0),R2.lengthSq()===0&&(Math.abs(n.z)===1?d0.x+=1e-4:d0.z+=1e-4,d0.normalize(),R2.crossVectors(n,d0)),R2.normalize(),w7.crossVectors(d0,R2),s[0]=R2.x,s[4]=w7.x,s[8]=d0.x,s[1]=R2.y,s[5]=w7.y,s[9]=d0.y,s[2]=R2.z,s[6]=w7.z,s[10]=d0.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,a=n[0],o=n[4],c=n[8],l=n[12],h=n[1],u=n[5],f=n[9],d=n[13],m=n[2],_=n[6],g=n[10],p=n[14],y=n[3],v=n[7],x=n[11],T=n[15],E=s[0],A=s[4],I=s[8],S=s[12],M=s[1],L=s[5],N=s[9],z=s[13],q=s[2],H=s[6],Y=s[10],t1=s[14],W=s[3],f1=s[7],x1=s[11],S1=s[15];return r[0]=a*E+o*M+c*q+l*W,r[4]=a*A+o*L+c*H+l*f1,r[8]=a*I+o*N+c*Y+l*x1,r[12]=a*S+o*z+c*t1+l*S1,r[1]=h*E+u*M+f*q+d*W,r[5]=h*A+u*L+f*H+d*f1,r[9]=h*I+u*N+f*Y+d*x1,r[13]=h*S+u*z+f*t1+d*S1,r[2]=m*E+_*M+g*q+p*W,r[6]=m*A+_*L+g*H+p*f1,r[10]=m*I+_*N+g*Y+p*x1,r[14]=m*S+_*z+g*t1+p*S1,r[3]=y*E+v*M+x*q+T*W,r[7]=y*A+v*L+x*H+T*f1,r[11]=y*I+v*N+x*Y+T*x1,r[15]=y*S+v*z+x*t1+T*S1,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],s=t[8],r=t[12],a=t[1],o=t[5],c=t[9],l=t[13],h=t[2],u=t[6],f=t[10],d=t[14],m=t[3],_=t[7],g=t[11],p=t[15];return m*(+r*c*u-s*l*u-r*o*f+n*l*f+s*o*d-n*c*d)+_*(+e*c*d-e*l*f+r*a*f-s*a*d+s*l*h-r*c*h)+g*(+e*l*u-e*o*d-r*a*u+n*a*d+r*o*h-n*l*h)+p*(-s*o*h-e*c*u+e*o*f+s*a*u-n*a*f+n*c*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],a=t[4],o=t[5],c=t[6],l=t[7],h=t[8],u=t[9],f=t[10],d=t[11],m=t[12],_=t[13],g=t[14],p=t[15],y=u*g*l-_*f*l+_*c*d-o*g*d-u*c*p+o*f*p,v=m*f*l-h*g*l-m*c*d+a*g*d+h*c*p-a*f*p,x=h*_*l-m*u*l+m*o*d-a*_*d-h*o*p+a*u*p,T=m*u*c-h*_*c-m*o*f+a*_*f+h*o*g-a*u*g,E=e*y+n*v+s*x+r*T;if(E===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/E;return t[0]=y*A,t[1]=(_*f*r-u*g*r-_*s*d+n*g*d+u*s*p-n*f*p)*A,t[2]=(o*g*r-_*c*r+_*s*l-n*g*l-o*s*p+n*c*p)*A,t[3]=(u*c*r-o*f*r-u*s*l+n*f*l+o*s*d-n*c*d)*A,t[4]=v*A,t[5]=(h*g*r-m*f*r+m*s*d-e*g*d-h*s*p+e*f*p)*A,t[6]=(m*c*r-a*g*r-m*s*l+e*g*l+a*s*p-e*c*p)*A,t[7]=(a*f*r-h*c*r+h*s*l-e*f*l-a*s*d+e*c*d)*A,t[8]=x*A,t[9]=(m*u*r-h*_*r-m*n*d+e*_*d+h*n*p-e*u*p)*A,t[10]=(a*_*r-m*o*r+m*n*l-e*_*l-a*n*p+e*o*p)*A,t[11]=(h*o*r-a*u*r-h*n*l+e*u*l+a*n*d-e*o*d)*A,t[12]=T*A,t[13]=(h*_*s-m*u*s+m*n*f-e*_*f-h*n*g+e*u*g)*A,t[14]=(m*o*s-a*_*s-m*n*c+e*_*c+a*n*g-e*o*g)*A,t[15]=(a*u*s-h*o*s+h*n*c-e*u*c-a*n*f+e*o*f)*A,this}scale(t){const e=this.elements,n=t.x,s=t.y,r=t.z;return e[0]*=n,e[4]*=s,e[8]*=r,e[1]*=n,e[5]*=s,e[9]*=r,e[2]*=n,e[6]*=s,e[10]*=r,e[3]*=n,e[7]*=s,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,s))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),s=Math.sin(e),r=1-n,a=t.x,o=t.y,c=t.z,l=r*a,h=r*o;return this.set(l*a+n,l*o-s*c,l*c+s*o,0,l*o+s*c,h*o+n,h*c-s*a,0,l*c-s*o,h*c+s*a,r*c*c+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,s,r,a){return this.set(1,n,r,0,t,1,a,0,e,s,1,0,0,0,0,1),this}compose(t,e,n){const s=this.elements,r=e._x,a=e._y,o=e._z,c=e._w,l=r+r,h=a+a,u=o+o,f=r*l,d=r*h,m=r*u,_=a*h,g=a*u,p=o*u,y=c*l,v=c*h,x=c*u,T=n.x,E=n.y,A=n.z;return s[0]=(1-(_+p))*T,s[1]=(d+x)*T,s[2]=(m-v)*T,s[3]=0,s[4]=(d-x)*E,s[5]=(1-(f+p))*E,s[6]=(g+y)*E,s[7]=0,s[8]=(m+v)*A,s[9]=(g-y)*A,s[10]=(1-(f+_))*A,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,n){const s=this.elements;let r=q5.set(s[0],s[1],s[2]).length();const a=q5.set(s[4],s[5],s[6]).length(),o=q5.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),t.x=s[12],t.y=s[13],t.z=s[14],P0.copy(this);const l=1/r,h=1/a,u=1/o;return P0.elements[0]*=l,P0.elements[1]*=l,P0.elements[2]*=l,P0.elements[4]*=h,P0.elements[5]*=h,P0.elements[6]*=h,P0.elements[8]*=u,P0.elements[9]*=u,P0.elements[10]*=u,e.setFromRotationMatrix(P0),n.x=r,n.y=a,n.z=o,this}makePerspective(t,e,n,s,r,a,o=_0,c=!1){const l=this.elements,h=2*r/(e-t),u=2*r/(n-s),f=(e+t)/(e-t),d=(n+s)/(n-s);let m,_;if(c)m=r/(a-r),_=a*r/(a-r);else if(o===_0)m=-(a+r)/(a-r),_=-2*a*r/(a-r);else if(o===L3)m=-a/(a-r),_=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=h,l[4]=0,l[8]=f,l[12]=0,l[1]=0,l[5]=u,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=m,l[14]=_,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,n,s,r,a,o=_0,c=!1){const l=this.elements,h=2/(e-t),u=2/(n-s),f=-(e+t)/(e-t),d=-(n+s)/(n-s);let m,_;if(c)m=1/(a-r),_=a/(a-r);else if(o===_0)m=-2/(a-r),_=-(a+r)/(a-r);else if(o===L3)m=-1/(a-r),_=-r/(a-r);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=h,l[4]=0,l[8]=0,l[12]=f,l[1]=0,l[5]=u,l[9]=0,l[13]=d,l[2]=0,l[6]=0,l[10]=m,l[14]=_,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<16;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const q5=new C,P0=new B1,Vf=new C(0,0,0),Hf=new C(1,1,1),R2=new C,w7=new C,d0=new C,Pi=new B1,Li=new l0;class y0{constructor(t=0,e=0,n=0,s=y0.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,s=this._order){return this._x=t,this._y=e,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const s=t.elements,r=s[0],a=s[4],o=s[8],c=s[1],l=s[5],h=s[9],u=s[2],f=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(N1(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(f,l),this._z=0);break;case"YXZ":this._x=Math.asin(-N1(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(N1(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-N1(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(N1(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-N1(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Pi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Pi,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Li.setFromEuler(this),this.setFromQuaternion(Li,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}y0.DEFAULT_ORDER="XYZ";class B9{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Gf=0;const Di=new C,Z5=new l0,l2=new B1,A7=new C,K3=new C,Wf=new C,Xf=new l0,Ui=new C(1,0,0),Oi=new C(0,1,0),Ni=new C(0,0,1),Fi={type:"added"},Yf={type:"removed"},$5={type:"childadded",child:null},wt={type:"childremoved",child:null};class s4 extends i2{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Gf++}),this.uuid=x0(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=s4.DEFAULT_UP.clone();const t=new C,e=new y0,n=new l0,s=new C(1,1,1);function r(){n.setFromEuler(e,!1)}function a(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new B1},normalMatrix:{value:new W1}}),this.matrix=new B1,this.matrixWorld=new B1,this.matrixAutoUpdate=s4.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=s4.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new B9,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Z5.setFromAxisAngle(t,e),this.quaternion.multiply(Z5),this}rotateOnWorldAxis(t,e){return Z5.setFromAxisAngle(t,e),this.quaternion.premultiply(Z5),this}rotateX(t){return this.rotateOnAxis(Ui,t)}rotateY(t){return this.rotateOnAxis(Oi,t)}rotateZ(t){return this.rotateOnAxis(Ni,t)}translateOnAxis(t,e){return Di.copy(t).applyQuaternion(this.quaternion),this.position.add(Di.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ui,t)}translateY(t){return this.translateOnAxis(Oi,t)}translateZ(t){return this.translateOnAxis(Ni,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(l2.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?A7.copy(t):A7.set(t,e,n);const s=this.parent;this.updateWorldMatrix(!0,!1),K3.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?l2.lookAt(K3,A7,this.up):l2.lookAt(A7,K3,this.up),this.quaternion.setFromRotationMatrix(l2),s&&(l2.extractRotation(s.matrixWorld),Z5.setFromRotationMatrix(l2),this.quaternion.premultiply(Z5.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Fi),$5.child=t,this.dispatchEvent($5),$5.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Yf),wt.child=t,this.dispatchEvent(wt),wt.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),l2.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),l2.multiply(t.parent.matrixWorld)),t.applyMatrix4(l2),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Fi),$5.child=t,this.dispatchEvent($5),$5.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,s=this.children.length;n<s;n++){const a=this.children[n].getObjectByProperty(t,e);if(a!==void 0)return a}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(K3,t,Wf),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(K3,Xf,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.geometryInfo=this._geometryInfo.map(o=>({...o,boundingBox:o.boundingBox?o.boundingBox.toJSON():void 0,boundingSphere:o.boundingSphere?o.boundingSphere.toJSON():void 0})),s.instanceInfo=this._instanceInfo.map(o=>({...o})),s.availableInstanceIds=this._availableInstanceIds.slice(),s.availableGeometryIds=this._availableGeometryIds.slice(),s.nextIndexStart=this._nextIndexStart,s.nextVertexStart=this._nextVertexStart,s.geometryCount=this._geometryCount,s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.matricesTexture=this._matricesTexture.toJSON(t),s.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(s.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(s.boundingBox=this.boundingBox.toJSON()));function r(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(t)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];r(t.shapes,u)}else r(t.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(r(t.materials,this.material[c]));s.material=o}else s.material=r(t.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];s.animations.push(r(t.animations,c))}}if(e){const o=a(t.geometries),c=a(t.materials),l=a(t.textures),h=a(t.images),u=a(t.shapes),f=a(t.skeletons),d=a(t.animations),m=a(t.nodes);o.length>0&&(n.geometries=o),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),m.length>0&&(n.nodes=m)}return n.object=s,n;function a(o){const c=[];for(const l in o){const h=o[l];delete h.metadata,c.push(h)}return c}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const s=t.children[n];this.add(s.clone())}return this}}s4.DEFAULT_UP=new C(0,1,0);s4.DEFAULT_MATRIX_AUTO_UPDATE=!0;s4.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const L0=new C,h2=new C,At=new C,u2=new C,J5=new C,K5=new C,Bi=new C,Ct=new C,Rt=new C,It=new C,Pt=new i4,Lt=new i4,Dt=new i4;class o0{constructor(t=new C,e=new C,n=new C){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,s){s.subVectors(n,e),L0.subVectors(t,e),s.cross(L0);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(t,e,n,s,r){L0.subVectors(s,e),h2.subVectors(n,e),At.subVectors(t,e);const a=L0.dot(L0),o=L0.dot(h2),c=L0.dot(At),l=h2.dot(h2),h=h2.dot(At),u=a*l-o*o;if(u===0)return r.set(0,0,0),null;const f=1/u,d=(l*c-o*h)*f,m=(a*h-o*c)*f;return r.set(1-d-m,m,d)}static containsPoint(t,e,n,s){return this.getBarycoord(t,e,n,s,u2)===null?!1:u2.x>=0&&u2.y>=0&&u2.x+u2.y<=1}static getInterpolation(t,e,n,s,r,a,o,c){return this.getBarycoord(t,e,n,s,u2)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,u2.x),c.addScaledVector(a,u2.y),c.addScaledVector(o,u2.z),c)}static getInterpolatedAttribute(t,e,n,s,r,a){return Pt.setScalar(0),Lt.setScalar(0),Dt.setScalar(0),Pt.fromBufferAttribute(t,e),Lt.fromBufferAttribute(t,n),Dt.fromBufferAttribute(t,s),a.setScalar(0),a.addScaledVector(Pt,r.x),a.addScaledVector(Lt,r.y),a.addScaledVector(Dt,r.z),a}static isFrontFacing(t,e,n,s){return L0.subVectors(n,e),h2.subVectors(t,e),L0.cross(h2).dot(s)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,s){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,n,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return L0.subVectors(this.c,this.b),h2.subVectors(this.a,this.b),L0.cross(h2).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return o0.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return o0.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,s,r){return o0.getInterpolation(t,this.a,this.b,this.c,e,n,s,r)}containsPoint(t){return o0.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return o0.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,s=this.b,r=this.c;let a,o;J5.subVectors(s,n),K5.subVectors(r,n),Ct.subVectors(t,n);const c=J5.dot(Ct),l=K5.dot(Ct);if(c<=0&&l<=0)return e.copy(n);Rt.subVectors(t,s);const h=J5.dot(Rt),u=K5.dot(Rt);if(h>=0&&u<=h)return e.copy(s);const f=c*u-h*l;if(f<=0&&c>=0&&h<=0)return a=c/(c-h),e.copy(n).addScaledVector(J5,a);It.subVectors(t,r);const d=J5.dot(It),m=K5.dot(It);if(m>=0&&d<=m)return e.copy(r);const _=d*l-c*m;if(_<=0&&l>=0&&m<=0)return o=l/(l-m),e.copy(n).addScaledVector(K5,o);const g=h*m-d*u;if(g<=0&&u-h>=0&&d-m>=0)return Bi.subVectors(r,s),o=(u-h)/(u-h+(d-m)),e.copy(s).addScaledVector(Bi,o);const p=1/(g+_+f);return a=_*p,o=f*p,e.copy(n).addScaledVector(J5,a).addScaledVector(K5,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Ka={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},I2={h:0,s:0,l:0},C7={h:0,s:0,l:0};function Ut(i,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?i+(t-i)*6*e:e<1/2?t:e<2/3?i+(t-i)*6*(2/3-e):i}class v1{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=r0){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,t4.colorSpaceToWorking(this,e),this}setRGB(t,e,n,s=t4.workingColorSpace){return this.r=t,this.g=e,this.b=n,t4.colorSpaceToWorking(this,s),this}setHSL(t,e,n,s=t4.workingColorSpace){if(t=hn(t,1),e=N1(e,0,1),n=N1(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,a=2*n-r;this.r=Ut(a,r,t+1/3),this.g=Ut(a,r,t),this.b=Ut(a,r,t-1/3)}return t4.colorSpaceToWorking(this,s),this}setStyle(t,e=r0){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const a=s[1],o=s[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=s[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(a===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=r0){const n=Ka[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=v2(t.r),this.g=v2(t.g),this.b=v2(t.b),this}copyLinearToSRGB(t){return this.r=S3(t.r),this.g=S3(t.g),this.b=S3(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=r0){return t4.workingToColorSpace(H4.copy(this),t),Math.round(N1(H4.r*255,0,255))*65536+Math.round(N1(H4.g*255,0,255))*256+Math.round(N1(H4.b*255,0,255))}getHexString(t=r0){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=t4.workingColorSpace){t4.workingToColorSpace(H4.copy(this),e);const n=H4.r,s=H4.g,r=H4.b,a=Math.max(n,s,r),o=Math.min(n,s,r);let c,l;const h=(o+a)/2;if(o===a)c=0,l=0;else{const u=a-o;switch(l=h<=.5?u/(a+o):u/(2-a-o),a){case n:c=(s-r)/u+(s<r?6:0);break;case s:c=(r-n)/u+2;break;case r:c=(n-s)/u+4;break}c/=6}return t.h=c,t.s=l,t.l=h,t}getRGB(t,e=t4.workingColorSpace){return t4.workingToColorSpace(H4.copy(this),e),t.r=H4.r,t.g=H4.g,t.b=H4.b,t}getStyle(t=r0){t4.workingToColorSpace(H4.copy(this),t);const e=H4.r,n=H4.g,s=H4.b;return t!==r0?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(t,e,n){return this.getHSL(I2),this.setHSL(I2.h+t,I2.s+e,I2.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(I2),t.getHSL(C7);const n=T6(I2.h,C7.h,e),s=T6(I2.s,C7.s,e),r=T6(I2.l,C7.l,e);return this.setHSL(n,s,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,s=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*s,this.g=r[1]*e+r[4]*n+r[7]*s,this.b=r[2]*e+r[5]*n+r[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const H4=new v1;v1.NAMES=Ka;let qf=0;class X4 extends i2{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:qf++}),this.uuid=x0(),this.name="",this.type="Material",this.blending=A5,this.side=y2,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=C8,this.blendDst=R8,this.blendEquation=B2,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new v1(0,0,0),this.blendAlpha=0,this.depthFunc=L5,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ae,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=g5,this.stencilZFail=g5,this.stencilZPass=g5,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(t).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(t).uuid),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==A5&&(n.blending=this.blending),this.side!==y2&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==C8&&(n.blendSrc=this.blendSrc),this.blendDst!==R8&&(n.blendDst=this.blendDst),this.blendEquation!==B2&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==L5&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Ae&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==g5&&(n.stencilFail=this.stencilFail),this.stencilZFail!==g5&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==g5&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const a=[];for(const o in r){const c=r[o];delete c.metadata,a.push(c)}return a}if(e){const r=s(t.textures),a=s(t.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const s=e.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class $2 extends X4{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new v1(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new y0,this.combine=i7,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const m2=Zf();function Zf(){const i=new ArrayBuffer(4),t=new Float32Array(i),e=new Uint32Array(i),n=new Uint32Array(512),s=new Uint32Array(512);for(let c=0;c<256;++c){const l=c-127;l<-27?(n[c]=0,n[c|256]=32768,s[c]=24,s[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,s[c]=-l-1,s[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,s[c]=13,s[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,s[c]=24,s[c|256]=24):(n[c]=31744,n[c|256]=64512,s[c]=13,s[c|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,h=0;for(;(l&8388608)===0;)l<<=1,h-=8388608;l&=-8388609,h+=947912704,r[c]=l|h}for(let c=1024;c<2048;++c)r[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)a[c]=c<<23;a[31]=1199570944,a[32]=2147483648;for(let c=33;c<63;++c)a[c]=2147483648+(c-32<<23);a[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(o[c]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:s,mantissaTable:r,exponentTable:a,offsetTable:o}}function s0(i){Math.abs(i)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),i=N1(i,-65504,65504),m2.floatView[0]=i;const t=m2.uint32View[0],e=t>>23&511;return m2.baseTable[e]+((t&8388607)>>m2.shiftTable[e])}function d6(i){const t=i>>10;return m2.uint32View[0]=m2.mantissaTable[m2.offsetTable[t]+(i&1023)]+m2.exponentTable[t],m2.floatView[0]}class $f{static toHalfFloat(t){return s0(t)}static fromHalfFloat(t){return d6(t)}}const P4=new C,R7=new K;let Jf=0;class c4{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Jf++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=H6,this.updateRanges=[],this.gpuType=c0,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[t+s]=e.array[n+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)R7.fromBufferAttribute(this,e),R7.applyMatrix3(t),this.setXY(e,R7.x,R7.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)P4.fromBufferAttribute(this,e),P4.applyMatrix3(t),this.setXYZ(e,P4.x,P4.y,P4.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)P4.fromBufferAttribute(this,e),P4.applyMatrix4(t),this.setXYZ(e,P4.x,P4.y,P4.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)P4.fromBufferAttribute(this,e),P4.applyNormalMatrix(t),this.setXYZ(e,P4.x,P4.y,P4.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)P4.fromBufferAttribute(this,e),P4.transformDirection(t),this.setXYZ(e,P4.x,P4.y,P4.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=K4(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=q1(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=K4(e,this.array)),e}setX(t,e){return this.normalized&&(e=q1(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=K4(e,this.array)),e}setY(t,e){return this.normalized&&(e=q1(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=K4(e,this.array)),e}setZ(t,e){return this.normalized&&(e=q1(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=K4(e,this.array)),e}setW(t,e){return this.normalized&&(e=q1(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=q1(e,this.array),n=q1(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,s){return t*=this.itemSize,this.normalized&&(e=q1(e,this.array),n=q1(n,this.array),s=q1(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this}setXYZW(t,e,n,s,r){return t*=this.itemSize,this.normalized&&(e=q1(e,this.array),n=q1(n,this.array),s=q1(s,this.array),r=q1(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==H6&&(t.usage=this.usage),t}}class Kf extends c4{constructor(t,e,n){super(new Int8Array(t),e,n)}}class Qf extends c4{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class jf extends c4{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class td extends c4{constructor(t,e,n){super(new Int16Array(t),e,n)}}class fn extends c4{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class ed extends c4{constructor(t,e,n){super(new Int32Array(t),e,n)}}class dn extends c4{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class nd extends c4{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=d6(this.array[t*this.itemSize]);return this.normalized&&(e=K4(e,this.array)),e}setX(t,e){return this.normalized&&(e=q1(e,this.array)),this.array[t*this.itemSize]=s0(e),this}getY(t){let e=d6(this.array[t*this.itemSize+1]);return this.normalized&&(e=K4(e,this.array)),e}setY(t,e){return this.normalized&&(e=q1(e,this.array)),this.array[t*this.itemSize+1]=s0(e),this}getZ(t){let e=d6(this.array[t*this.itemSize+2]);return this.normalized&&(e=K4(e,this.array)),e}setZ(t,e){return this.normalized&&(e=q1(e,this.array)),this.array[t*this.itemSize+2]=s0(e),this}getW(t){let e=d6(this.array[t*this.itemSize+3]);return this.normalized&&(e=K4(e,this.array)),e}setW(t,e){return this.normalized&&(e=q1(e,this.array)),this.array[t*this.itemSize+3]=s0(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=q1(e,this.array),n=q1(n,this.array)),this.array[t+0]=s0(e),this.array[t+1]=s0(n),this}setXYZ(t,e,n,s){return t*=this.itemSize,this.normalized&&(e=q1(e,this.array),n=q1(n,this.array),s=q1(s,this.array)),this.array[t+0]=s0(e),this.array[t+1]=s0(n),this.array[t+2]=s0(s),this}setXYZW(t,e,n,s,r){return t*=this.itemSize,this.normalized&&(e=q1(e,this.array),n=q1(n,this.array),s=q1(s,this.array),r=q1(r,this.array)),this.array[t+0]=s0(e),this.array[t+1]=s0(n),this.array[t+2]=s0(s),this.array[t+3]=s0(r),this}}class M1 extends c4{constructor(t,e,n){super(new Float32Array(t),e,n)}}let id=0;const E0=new B1,Ot=new s4,Q5=new C,p0=new z4,Q3=new z4,N4=new C;class X1 extends i2{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:id++}),this.uuid=x0(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Za(t)?dn:fn)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new W1().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return E0.makeRotationFromQuaternion(t),this.applyMatrix4(E0),this}rotateX(t){return E0.makeRotationX(t),this.applyMatrix4(E0),this}rotateY(t){return E0.makeRotationY(t),this.applyMatrix4(E0),this}rotateZ(t){return E0.makeRotationZ(t),this.applyMatrix4(E0),this}translate(t,e,n){return E0.makeTranslation(t,e,n),this.applyMatrix4(E0),this}scale(t,e,n){return E0.makeScale(t,e,n),this.applyMatrix4(E0),this}lookAt(t){return Ot.lookAt(t),Ot.updateMatrix(),this.applyMatrix4(Ot.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Q5).negate(),this.translate(Q5.x,Q5.y,Q5.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let s=0,r=t.length;s<r;s++){const a=t[s];n.push(a.x,a.y,a.z||0)}this.setAttribute("position",new M1(n,3))}else{const n=Math.min(t.length,e.count);for(let s=0;s<n;s++){const r=t[s];e.setXYZ(s,r.x,r.y,r.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new z4);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new C(-1/0,-1/0,-1/0),new C(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,s=e.length;n<s;n++){const r=e[n];p0.setFromBufferAttribute(r),this.morphTargetsRelative?(N4.addVectors(this.boundingBox.min,p0.min),this.boundingBox.expandByPoint(N4),N4.addVectors(this.boundingBox.max,p0.max),this.boundingBox.expandByPoint(N4)):(this.boundingBox.expandByPoint(p0.min),this.boundingBox.expandByPoint(p0.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new k4);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new C,1/0);return}if(t){const n=this.boundingSphere.center;if(p0.setFromBufferAttribute(t),e)for(let r=0,a=e.length;r<a;r++){const o=e[r];Q3.setFromBufferAttribute(o),this.morphTargetsRelative?(N4.addVectors(p0.min,Q3.min),p0.expandByPoint(N4),N4.addVectors(p0.max,Q3.max),p0.expandByPoint(N4)):(p0.expandByPoint(Q3.min),p0.expandByPoint(Q3.max))}p0.getCenter(n);let s=0;for(let r=0,a=t.count;r<a;r++)N4.fromBufferAttribute(t,r),s=Math.max(s,n.distanceToSquared(N4));if(e)for(let r=0,a=e.length;r<a;r++){const o=e[r],c=this.morphTargetsRelative;for(let l=0,h=o.count;l<h;l++)N4.fromBufferAttribute(o,l),c&&(Q5.fromBufferAttribute(t,l),N4.add(Q5)),s=Math.max(s,n.distanceToSquared(N4))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,s=e.normal,r=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new c4(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),o=[],c=[];for(let I=0;I<n.count;I++)o[I]=new C,c[I]=new C;const l=new C,h=new C,u=new C,f=new K,d=new K,m=new K,_=new C,g=new C;function p(I,S,M){l.fromBufferAttribute(n,I),h.fromBufferAttribute(n,S),u.fromBufferAttribute(n,M),f.fromBufferAttribute(r,I),d.fromBufferAttribute(r,S),m.fromBufferAttribute(r,M),h.sub(l),u.sub(l),d.sub(f),m.sub(f);const L=1/(d.x*m.y-m.x*d.y);isFinite(L)&&(_.copy(h).multiplyScalar(m.y).addScaledVector(u,-d.y).multiplyScalar(L),g.copy(u).multiplyScalar(d.x).addScaledVector(h,-m.x).multiplyScalar(L),o[I].add(_),o[S].add(_),o[M].add(_),c[I].add(g),c[S].add(g),c[M].add(g))}let y=this.groups;y.length===0&&(y=[{start:0,count:t.count}]);for(let I=0,S=y.length;I<S;++I){const M=y[I],L=M.start,N=M.count;for(let z=L,q=L+N;z<q;z+=3)p(t.getX(z+0),t.getX(z+1),t.getX(z+2))}const v=new C,x=new C,T=new C,E=new C;function A(I){T.fromBufferAttribute(s,I),E.copy(T);const S=o[I];v.copy(S),v.sub(T.multiplyScalar(T.dot(S))).normalize(),x.crossVectors(E,S);const L=x.dot(c[I])<0?-1:1;a.setXYZW(I,v.x,v.y,v.z,L)}for(let I=0,S=y.length;I<S;++I){const M=y[I],L=M.start,N=M.count;for(let z=L,q=L+N;z<q;z+=3)A(t.getX(z+0)),A(t.getX(z+1)),A(t.getX(z+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new c4(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const s=new C,r=new C,a=new C,o=new C,c=new C,l=new C,h=new C,u=new C;if(t)for(let f=0,d=t.count;f<d;f+=3){const m=t.getX(f+0),_=t.getX(f+1),g=t.getX(f+2);s.fromBufferAttribute(e,m),r.fromBufferAttribute(e,_),a.fromBufferAttribute(e,g),h.subVectors(a,r),u.subVectors(s,r),h.cross(u),o.fromBufferAttribute(n,m),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),o.add(h),c.add(h),l.add(h),n.setXYZ(m,o.x,o.y,o.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let f=0,d=e.count;f<d;f+=3)s.fromBufferAttribute(e,f+0),r.fromBufferAttribute(e,f+1),a.fromBufferAttribute(e,f+2),h.subVectors(a,r),u.subVectors(s,r),h.cross(u),n.setXYZ(f+0,h.x,h.y,h.z),n.setXYZ(f+1,h.x,h.y,h.z),n.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)N4.fromBufferAttribute(t,e),N4.normalize(),t.setXYZ(e,N4.x,N4.y,N4.z)}toNonIndexed(){function t(o,c){const l=o.array,h=o.itemSize,u=o.normalized,f=new l.constructor(c.length*h);let d=0,m=0;for(let _=0,g=c.length;_<g;_++){o.isInterleavedBufferAttribute?d=c[_]*o.data.stride+o.offset:d=c[_]*h;for(let p=0;p<h;p++)f[m++]=l[d++]}return new c4(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new X1,n=this.index.array,s=this.attributes;for(const o in s){const c=s[o],l=t(c,n);e.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const c=[],l=r[o];for(let h=0,u=l.length;h<u;h++){const f=l[h],d=t(f,n);c.push(d)}e.morphAttributes[o]=c}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const l=a[o];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(t[l]=c[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const c in n){const l=n[c];t.data.attributes[c]=l.toJSON(t.data)}const s={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,f=l.length;u<f;u++){const d=l[u];h.push(d.toJSON(t.data))}h.length>0&&(s[c]=h,r=!0)}r&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere=o.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const s=t.attributes;for(const l in s){const h=s[l];this.setAttribute(l,h.clone(e))}const r=t.morphAttributes;for(const l in r){const h=[],u=r[l];for(let f=0,d=u.length;f<d;f++)h.push(u[f].clone(e));this.morphAttributes[l]=h}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let l=0,h=a.length;l<h;l++){const u=a[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=t.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const zi=new B1,n5=new W3,I7=new k4,ki=new C,P7=new C,L7=new C,D7=new C,Nt=new C,U7=new C,Vi=new C,O7=new C;class I4 extends s4{constructor(t=new X1,e=new $2){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(t,e){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;e.fromBufferAttribute(s,t);const o=this.morphTargetInfluences;if(r&&o){U7.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=o[c],u=r[c];h!==0&&(Nt.fromBufferAttribute(u,t),a?U7.addScaledVector(Nt,h):U7.addScaledVector(Nt.sub(e),h))}e.add(U7)}return e}raycast(t,e){const n=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),I7.copy(n.boundingSphere),I7.applyMatrix4(r),n5.copy(t.ray).recast(t.near),!(I7.containsPoint(n5.origin)===!1&&(n5.intersectSphere(I7,ki)===null||n5.origin.distanceToSquared(ki)>(t.far-t.near)**2))&&(zi.copy(r).invert(),n5.copy(t.ray).applyMatrix4(zi),!(n.boundingBox!==null&&n5.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,n5)))}_computeIntersections(t,e,n){let s;const r=this.geometry,a=this.material,o=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,f=r.groups,d=r.drawRange;if(o!==null)if(Array.isArray(a))for(let m=0,_=f.length;m<_;m++){const g=f[m],p=a[g.materialIndex],y=Math.max(g.start,d.start),v=Math.min(o.count,Math.min(g.start+g.count,d.start+d.count));for(let x=y,T=v;x<T;x+=3){const E=o.getX(x),A=o.getX(x+1),I=o.getX(x+2);s=N7(this,p,t,n,l,h,u,E,A,I),s&&(s.faceIndex=Math.floor(x/3),s.face.materialIndex=g.materialIndex,e.push(s))}}else{const m=Math.max(0,d.start),_=Math.min(o.count,d.start+d.count);for(let g=m,p=_;g<p;g+=3){const y=o.getX(g),v=o.getX(g+1),x=o.getX(g+2);s=N7(this,a,t,n,l,h,u,y,v,x),s&&(s.faceIndex=Math.floor(g/3),e.push(s))}}else if(c!==void 0)if(Array.isArray(a))for(let m=0,_=f.length;m<_;m++){const g=f[m],p=a[g.materialIndex],y=Math.max(g.start,d.start),v=Math.min(c.count,Math.min(g.start+g.count,d.start+d.count));for(let x=y,T=v;x<T;x+=3){const E=x,A=x+1,I=x+2;s=N7(this,p,t,n,l,h,u,E,A,I),s&&(s.faceIndex=Math.floor(x/3),s.face.materialIndex=g.materialIndex,e.push(s))}}else{const m=Math.max(0,d.start),_=Math.min(c.count,d.start+d.count);for(let g=m,p=_;g<p;g+=3){const y=g,v=g+1,x=g+2;s=N7(this,a,t,n,l,h,u,y,v,x),s&&(s.faceIndex=Math.floor(g/3),e.push(s))}}}}function sd(i,t,e,n,s,r,a,o){let c;if(t.side===j4?c=n.intersectTriangle(a,r,s,!0,o):c=n.intersectTriangle(s,r,a,t.side===y2,o),c===null)return null;O7.copy(o),O7.applyMatrix4(i.matrixWorld);const l=e.ray.origin.distanceTo(O7);return l<e.near||l>e.far?null:{distance:l,point:O7.clone(),object:i}}function N7(i,t,e,n,s,r,a,o,c,l){i.getVertexPosition(o,P7),i.getVertexPosition(c,L7),i.getVertexPosition(l,D7);const h=sd(i,t,e,n,P7,L7,D7,Vi);if(h){const u=new C;o0.getBarycoord(Vi,P7,L7,D7,u),s&&(h.uv=o0.getInterpolatedAttribute(s,o,c,l,u,new K)),r&&(h.uv1=o0.getInterpolatedAttribute(r,o,c,l,u,new K)),a&&(h.normal=o0.getInterpolatedAttribute(a,o,c,l,u,new C),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const f={a:o,b:c,c:l,normal:new C,materialIndex:0};o0.getNormal(P7,L7,D7,f.normal),h.face=f,h.barycoord=u}return h}class B5 extends X1{constructor(t=1,e=1,n=1,s=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:s,heightSegments:r,depthSegments:a};const o=this;s=Math.floor(s),r=Math.floor(r),a=Math.floor(a);const c=[],l=[],h=[],u=[];let f=0,d=0;m("z","y","x",-1,-1,n,e,t,a,r,0),m("z","y","x",1,-1,n,e,-t,a,r,1),m("x","z","y",1,1,t,n,e,s,a,2),m("x","z","y",1,-1,t,n,-e,s,a,3),m("x","y","z",1,-1,t,e,n,s,r,4),m("x","y","z",-1,-1,t,e,-n,s,r,5),this.setIndex(c),this.setAttribute("position",new M1(l,3)),this.setAttribute("normal",new M1(h,3)),this.setAttribute("uv",new M1(u,2));function m(_,g,p,y,v,x,T,E,A,I,S){const M=x/A,L=T/I,N=x/2,z=T/2,q=E/2,H=A+1,Y=I+1;let t1=0,W=0;const f1=new C;for(let x1=0;x1<Y;x1++){const S1=x1*L-z;for(let Y1=0;Y1<H;Y1++){const j1=Y1*M-N;f1[_]=j1*y,f1[g]=S1*v,f1[p]=q,l.push(f1.x,f1.y,f1.z),f1[_]=0,f1[g]=0,f1[p]=E>0?1:-1,h.push(f1.x,f1.y,f1.z),u.push(Y1/A),u.push(1-x1/I),t1+=1}}for(let x1=0;x1<I;x1++)for(let S1=0;S1<A;S1++){const Y1=f+S1+H*x1,j1=f+S1+H*(x1+1),f4=f+(S1+1)+H*(x1+1),e4=f+(S1+1)+H*x1;c.push(Y1,j1,e4),c.push(j1,f4,e4),W+=6}o.addGroup(d,W,S),d+=W,f+=t1}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new B5(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function U3(i){const t={};for(const e in i){t[e]={};for(const n in i[e]){const s=i[e][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=s.clone():Array.isArray(s)?t[e][n]=s.slice():t[e][n]=s}}return t}function $4(i){const t={};for(let e=0;e<i.length;e++){const n=U3(i[e]);for(const s in n)t[s]=n[s]}return t}function rd(i){const t=[];for(let e=0;e<i.length;e++)t.push(i[e].clone());return t}function Qa(i){const t=i.getRenderTarget();return t===null?i.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:t4.workingColorSpace}const ja={clone:U3,merge:$4};var ad=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,od=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class z0 extends X4{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ad,this.fragmentShader=od,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=U3(t.uniforms),this.uniformsGroups=rd(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?e.uniforms[s]={type:"t",value:a.toJSON(t).uuid}:a&&a.isColor?e.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?e.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?e.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?e.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?e.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?e.uniforms[s]={type:"m4",value:a.toArray()}:e.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class z9 extends s4{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new B1,this.projectionMatrix=new B1,this.projectionMatrixInverse=new B1,this.coordinateSystem=_0,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const P2=new C,Hi=new K,Gi=new K;class F4 extends z9{constructor(t=50,e=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=D3*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(C5*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return D3*2*Math.atan(Math.tan(C5*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){P2.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(P2.x,P2.y).multiplyScalar(-t/P2.z),P2.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(P2.x,P2.y).multiplyScalar(-t/P2.z)}getViewSize(t,e){return this.getViewBounds(t,Hi,Gi),e.subVectors(Gi,Hi)}setViewOffset(t,e,n,s,r,a){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(C5*.5*this.fov)/this.zoom,n=2*e,s=this.aspect*n,r=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,l=a.fullHeight;r+=a.offsetX*s/c,e-=a.offsetY*n/l,s*=a.width/c,n*=a.height/l}const o=this.filmOffset;o!==0&&(r+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,e,e-n,t,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const j5=-90,t3=1;class to extends s4{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new F4(j5,t3,t,e);s.layers=this.layers,this.add(s);const r=new F4(j5,t3,t,e);r.layers=this.layers,this.add(r);const a=new F4(j5,t3,t,e);a.layers=this.layers,this.add(a);const o=new F4(j5,t3,t,e);o.layers=this.layers,this.add(o);const c=new F4(j5,t3,t,e);c.layers=this.layers,this.add(c);const l=new F4(j5,t3,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,s,r,a,o,c]=e;for(const l of e)this.remove(l);if(t===_0)n.up.set(0,1,0),n.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(t===L3)n.up.set(0,-1,0),n.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const l of e)this.add(l),l.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:s}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,c,l,h]=this.children,u=t.getRenderTarget(),f=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),m=t.xr.enabled;t.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,s),t.render(e,r),t.setRenderTarget(n,1,s),t.render(e,a),t.setRenderTarget(n,2,s),t.render(e,o),t.setRenderTarget(n,3,s),t.render(e,c),t.setRenderTarget(n,4,s),t.render(e,l),n.texture.generateMipmaps=_,t.setRenderTarget(n,5,s),t.render(e,h),t.setRenderTarget(u,f,d),t.xr.enabled=m,n.texture.needsPMREMUpdate=!0}}class r7 extends C4{constructor(t=[],e=b2,n,s,r,a,o,c,l,h){super(t,e,n,s,r,a,o,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class eo extends n2{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},s=[n,n,n,n,n,n];this.texture=new r7(s),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new B5(5,5,5),r=new z0({name:"CubemapFromEquirect",uniforms:U3(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:j4,blending:_2});r.uniforms.tEquirect.value=e;const a=new I4(s,r),o=e.minFilter;return e.minFilter===K0&&(e.minFilter=L4),new to(1,10,this).update(t,a),e.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(t,e=!0,n=!0,s=!0){const r=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,s);t.setRenderTarget(r)}}class g3 extends s4{constructor(){super(),this.isGroup=!0,this.type="Group"}}const cd={type:"move"};class _8{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new g3,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new g3,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new C,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new C),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new g3,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new C,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new C),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let s=null,r=null,a=null;const o=this._targetRay,c=this._grip,l=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(l&&t.hand){a=!0;for(const _ of t.hand.values()){const g=e.getJointPose(_,n),p=this._getHandJoint(l,_);g!==null&&(p.matrix.fromArray(g.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=g.radius),p.visible=g!==null}const h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],f=h.position.distanceTo(u.position),d=.02,m=.005;l.inputState.pinching&&f>d+m?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&f<=d-m&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else c!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));o!==null&&(s=e.getPose(t.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(cd)))}return o!==null&&(o.visible=s!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=a!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new g3;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class k9{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new v1(t),this.density=e}clone(){return new k9(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class V9{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new v1(t),this.near=e,this.far=n}clone(){return new V9(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class pn extends s4{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new y0,this.environmentIntensity=1,this.environmentRotation=new y0,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class H9{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=H6,this.updateRanges=[],this.version=0,this.uuid=x0()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let s=0,r=this.stride;s<r;s++)this.array[t+s]=e.array[n+s];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=x0()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=x0()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const q4=new C;class U5{constructor(t,e,n,s=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=s}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)q4.fromBufferAttribute(this,e),q4.applyMatrix4(t),this.setXYZ(e,q4.x,q4.y,q4.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)q4.fromBufferAttribute(this,e),q4.applyNormalMatrix(t),this.setXYZ(e,q4.x,q4.y,q4.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)q4.fromBufferAttribute(this,e),q4.transformDirection(t),this.setXYZ(e,q4.x,q4.y,q4.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=K4(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=q1(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=q1(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=q1(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=q1(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=q1(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=K4(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=K4(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=K4(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=K4(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=q1(e,this.array),n=q1(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=q1(e,this.array),n=q1(n,this.array),s=q1(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=s,this}setXYZW(t,e,n,s,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=q1(e,this.array),n=q1(n,this.array),s=q1(s,this.array),r=q1(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=s,this.data.array[t+3]=r,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[s+r])}return new c4(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new U5(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[s+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class mn extends X4{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new v1(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let e3;const j3=new C,n3=new C,i3=new C,s3=new K,t6=new K,no=new B1,F7=new C,e6=new C,B7=new C,Wi=new K,Ft=new K,Xi=new K;class io extends s4{constructor(t=new mn){if(super(),this.isSprite=!0,this.type="Sprite",e3===void 0){e3=new X1;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new H9(e,5);e3.setIndex([0,1,2,0,2,3]),e3.setAttribute("position",new U5(n,3,0,!1)),e3.setAttribute("uv",new U5(n,2,3,!1))}this.geometry=e3,this.material=t,this.center=new K(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),n3.setFromMatrixScale(this.matrixWorld),no.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),i3.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&n3.multiplyScalar(-i3.z);const n=this.material.rotation;let s,r;n!==0&&(r=Math.cos(n),s=Math.sin(n));const a=this.center;z7(F7.set(-.5,-.5,0),i3,a,n3,s,r),z7(e6.set(.5,-.5,0),i3,a,n3,s,r),z7(B7.set(.5,.5,0),i3,a,n3,s,r),Wi.set(0,0),Ft.set(1,0),Xi.set(1,1);let o=t.ray.intersectTriangle(F7,e6,B7,!1,j3);if(o===null&&(z7(e6.set(-.5,.5,0),i3,a,n3,s,r),Ft.set(0,1),o=t.ray.intersectTriangle(F7,B7,e6,!1,j3),o===null))return;const c=t.ray.origin.distanceTo(j3);c<t.near||c>t.far||e.push({distance:c,point:j3.clone(),uv:o0.getInterpolation(j3,F7,e6,B7,Wi,Ft,Xi,new K),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function z7(i,t,e,n,s,r){s3.subVectors(i,e).addScalar(.5).multiply(n),s!==void 0?(t6.x=r*s3.x-s*s3.y,t6.y=s*s3.x+r*s3.y):t6.copy(s3),i.copy(t),i.x+=t6.x,i.y+=t6.y,i.applyMatrix4(no)}const k7=new C,Yi=new C;class so extends s4{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,s=e.length;n<s;n++){const r=e[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const s=this.levels;let r;for(r=0;r<s.length&&!(e<s[r].distance);r++);return s.splice(r,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const s=e.splice(n,1);return this.remove(s[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,s;for(n=1,s=e.length;n<s;n++){let r=e[n].distance;if(e[n].object.visible&&(r-=r*e[n].hysteresis),t<r)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){k7.setFromMatrixPosition(this.matrixWorld);const s=t.ray.origin.distanceTo(k7);this.getObjectForDistance(s).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){k7.setFromMatrixPosition(t.matrixWorld),Yi.setFromMatrixPosition(this.matrixWorld);const n=k7.distanceTo(Yi)/t.zoom;e[0].object.visible=!0;let s,r;for(s=1,r=e.length;s<r;s++){let a=e[s].distance;if(e[s].object.visible&&(a-=a*e[s].hysteresis),n>=a)e[s-1].object.visible=!1,e[s].object.visible=!0;else break}for(this._currentLevel=s-1;s<r;s++)e[s].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let s=0,r=n.length;s<r;s++){const a=n[s];e.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return e}}const qi=new C,Zi=new i4,$i=new i4,ld=new C,Ji=new B1,V7=new C,Bt=new k4,Ki=new B1,zt=new W3;class ro extends I4{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=we,this.bindMatrix=new B1,this.bindMatrixInverse=new B1,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new z4),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,V7),this.boundingBox.expandByPoint(V7)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new k4),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,V7),this.boundingSphere.expandByPoint(V7)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,s=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Bt.copy(this.boundingSphere),Bt.applyMatrix4(s),t.ray.intersectsSphere(Bt)!==!1&&(Ki.copy(s).invert(),zt.copy(t.ray).applyMatrix4(Ki),!(this.boundingBox!==null&&zt.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,zt)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new i4,e=this.geometry.attributes.skinWeight;for(let n=0,s=e.count;n<s;n++){t.fromBufferAttribute(e,n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===we?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Ua?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,s=this.geometry;Zi.fromBufferAttribute(s.attributes.skinIndex,t),$i.fromBufferAttribute(s.attributes.skinWeight,t),qi.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const a=$i.getComponent(r);if(a!==0){const o=Zi.getComponent(r);Ji.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),e.addScaledVector(ld.copy(qi).applyMatrix4(Ji),a)}}return e.applyMatrix4(this.bindMatrixInverse)}}class gn extends s4{constructor(){super(),this.isBone=!0,this.type="Bone"}}class t2 extends C4{constructor(t=null,e=1,n=1,s,r,a,o,c,l=B4,h=B4,u,f){super(null,a,o,c,l,h,s,r,u,f),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Qi=new B1,hd=new B1;class G9{constructor(t=[],e=[]){this.uuid=x0(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,s=this.bones.length;n<s;n++)this.boneInverses.push(new B1)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new B1;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,s=this.boneTexture;for(let r=0,a=t.length;r<a;r++){const o=t[r]?t[r].matrixWorld:hd;Qi.multiplyMatrices(o,e[r]),Qi.toArray(n,r*16)}s!==null&&(s.needsUpdate=!0)}clone(){return new G9(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new t2(e,t,t,Q4,c0);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const s=this.bones[e];if(s.name===t)return s}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,s=t.bones.length;n<s;n++){const r=t.bones[n];let a=e[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new gn),this.bones.push(a),this.boneInverses.push(new B1().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let s=0,r=e.length;s<r;s++){const a=e[s];t.bones.push(a.uuid);const o=n[s];t.boneInverses.push(o.toArray())}return t}}class O3 extends c4{constructor(t,e,n,s=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=s}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const r3=new B1,ji=new B1,H7=[],ts=new z4,ud=new B1,n6=new I4,i6=new k4;class ao extends I4{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new O3(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let s=0;s<n;s++)this.setMatrixAt(s,ud)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new z4),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,r3),ts.copy(t.boundingBox).applyMatrix4(r3),this.boundingBox.union(ts)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new k4),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,r3),i6.copy(t.boundingSphere).applyMatrix4(r3),this.boundingSphere.union(i6)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,s=this.morphTexture.source.data.data,r=n.length+1,a=t*r+1;for(let o=0;o<n.length;o++)n[o]=s[a+o]}raycast(t,e){const n=this.matrixWorld,s=this.count;if(n6.geometry=this.geometry,n6.material=this.material,n6.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),i6.copy(this.boundingSphere),i6.applyMatrix4(n),t.ray.intersectsSphere(i6)!==!1))for(let r=0;r<s;r++){this.getMatrixAt(r,r3),ji.multiplyMatrices(n,r3),n6.matrixWorld=ji,n6.raycast(t,H7);for(let a=0,o=H7.length;a<o;a++){const c=H7[a];c.instanceId=r,c.object=this,e.push(c)}H7.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new O3(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,s=n.length+1;this.morphTexture===null&&(this.morphTexture=new t2(new Float32Array(s*this.count),s,this.count,L9,c0));const r=this.morphTexture.source.data.data;let a=0;for(let l=0;l<n.length;l++)a+=n[l];const o=this.geometry.morphTargetsRelative?1:1-a,c=s*t;r[c]=o,r.set(n,c+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const kt=new C,fd=new C,dd=new W1;class F2{constructor(t=new C(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,s){return this.normal.set(t,e,n),this.constant=s,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const s=kt.subVectors(n,e).cross(fd.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(s,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(kt),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||dd.getNormalMatrix(t),s=this.coplanarPoint(kt).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const i5=new k4,pd=new K(.5,.5),G7=new C;class X3{constructor(t=new F2,e=new F2,n=new F2,s=new F2,r=new F2,a=new F2){this.planes=[t,e,n,s,r,a]}set(t,e,n,s,r,a){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(s),o[4].copy(r),o[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=_0,n=!1){const s=this.planes,r=t.elements,a=r[0],o=r[1],c=r[2],l=r[3],h=r[4],u=r[5],f=r[6],d=r[7],m=r[8],_=r[9],g=r[10],p=r[11],y=r[12],v=r[13],x=r[14],T=r[15];if(s[0].setComponents(l-a,d-h,p-m,T-y).normalize(),s[1].setComponents(l+a,d+h,p+m,T+y).normalize(),s[2].setComponents(l+o,d+u,p+_,T+v).normalize(),s[3].setComponents(l-o,d-u,p-_,T-v).normalize(),n)s[4].setComponents(c,f,g,x).normalize(),s[5].setComponents(l-c,d-f,p-g,T-x).normalize();else if(s[4].setComponents(l-c,d-f,p-g,T-x).normalize(),e===_0)s[5].setComponents(l+c,d+f,p+g,T+x).normalize();else if(e===L3)s[5].setComponents(c,f,g,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),i5.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),i5.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(i5)}intersectsSprite(t){i5.center.set(0,0,0);const e=pd.distanceTo(t.center);return i5.radius=.7071067811865476+e,i5.applyMatrix4(t.matrixWorld),this.intersectsSphere(i5)}intersectsSphere(t){const e=this.planes,n=t.center,s=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const s=e[n];if(G7.x=s.normal.x>0?t.max.x:t.min.x,G7.y=s.normal.y>0?t.max.y:t.min.y,G7.z=s.normal.z>0?t.max.z:t.min.z,s.distanceToPoint(G7)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const W0=new B1,X0=new X3;class W9{constructor(){this.coordinateSystem=_0}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(W0.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),X0.setFromProjectionMatrix(W0,s.coordinateSystem,s.reversedDepth),X0.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(W0.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),X0.setFromProjectionMatrix(W0,s.coordinateSystem,s.reversedDepth),X0.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(W0.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),X0.setFromProjectionMatrix(W0,s.coordinateSystem,s.reversedDepth),X0.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(W0.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),X0.setFromProjectionMatrix(W0,s.coordinateSystem,s.reversedDepth),X0.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(W0.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),X0.setFromProjectionMatrix(W0,s.coordinateSystem,s.reversedDepth),X0.containsPoint(t))return!0}return!1}clone(){return new W9}}function Vt(i,t){return i-t}function md(i,t){return i.z-t.z}function gd(i,t){return t.z-i.z}class _d{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,s){const r=this.pool,a=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const o=r[this.index];a.push(o),this.index++,o.start=t,o.count=e,o.z=n,o.index=s}reset(){this.list.length=0,this.index=0}}const n0=new B1,xd=new v1(1,1,1),es=new X3,vd=new W9,W7=new z4,s5=new k4,s6=new C,ns=new C,yd=new C,Ht=new _d,G4=new I4,X7=[];function bd(i,t,e=0){const n=t.itemSize;if(i.isInterleavedBufferAttribute||i.array.constructor!==t.array.constructor){const s=i.count;for(let r=0;r<s;r++)for(let a=0;a<n;a++)t.setComponent(r+e,a,i.getComponent(r,a))}else t.array.set(i.array,e*n);t.needsUpdate=!0}function r5(i,t){if(i.constructor!==t.constructor){const e=Math.min(i.length,t.length);for(let n=0;n<e;n++)t[n]=i[n]}else{const e=Math.min(i.length,t.length);t.set(new i.constructor(i.buffer,0,e))}}class oo extends I4{constructor(t,e,n=e*2,s){super(new X1,s),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new t2(e,t,t,Q4,c0);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new t2(e,t,t,s7,M2);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new t2(e,t,t,Q4,c0);n.colorSpace=t4.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in t.attributes){const a=t.getAttribute(r),{array:o,itemSize:c,normalized:l}=a,h=new o.constructor(n*c),u=new c4(h,c,l);e.setAttribute(r,u)}if(t.getIndex()!==null){const r=n>65535?new Uint32Array(s):new Uint16Array(s);e.setIndex(new c4(r,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const s=t.getAttribute(n),r=e.getAttribute(n);if(s.itemSize!==r.itemSize||s.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new z4);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,s=e.length;n<s;n++){if(e[n].active===!1)continue;const r=e[n].geometryIndex;this.getMatrixAt(n,n0),this.getBoundingBoxAt(r,W7).applyMatrix4(n0),t.union(W7)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new k4);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,s=e.length;n<s;n++){if(e[n].active===!1)continue;const r=e[n].geometryIndex;this.getMatrixAt(n,n0),this.getBoundingSphereAt(r,s5).applyMatrix4(n0),t.union(s5)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let s=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Vt),s=this._availableInstanceIds.shift(),this._instanceInfo[s]=n):(s=this._instanceInfo.length,this._instanceInfo.push(n));const r=this._matricesTexture;n0.identity().toArray(r.image.data,s*16),r.needsUpdate=!0;const a=this._colorsTexture;return a&&(xd.toArray(a.image.data,s*4),a.needsUpdate=!0),this._visibilityChanged=!0,s}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const s={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;s.vertexStart=this._nextVertexStart,s.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const a=t.getIndex();if(a!==null&&(s.indexStart=this._nextIndexStart,s.reservedIndexCount=n===-1?a.count:n),s.indexStart!==-1&&s.indexStart+s.reservedIndexCount>this._maxIndexCount||s.vertexStart+s.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let c;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Vt),c=this._availableGeometryIds.shift(),r[c]=s):(c=this._geometryCount,this._geometryCount++,r.push(s)),this.setGeometryAt(c,t),this._nextIndexStart=s.indexStart+s.reservedIndexCount,this._nextVertexStart=s.vertexStart+s.reservedVertexCount,c}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,s=n.getIndex()!==null,r=n.getIndex(),a=e.getIndex(),o=this._geometryInfo[t];if(s&&a.count>o.reservedIndexCount||e.attributes.position.count>o.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const c=o.vertexStart,l=o.reservedVertexCount;o.vertexCount=e.getAttribute("position").count;for(const h in n.attributes){const u=e.getAttribute(h),f=n.getAttribute(h);bd(u,f,c);const d=u.itemSize;for(let m=u.count,_=l;m<_;m++){const g=c+m;for(let p=0;p<d;p++)f.setComponent(g,p,0)}f.needsUpdate=!0,f.addUpdateRange(c*d,l*d)}if(s){const h=o.indexStart,u=o.reservedIndexCount;o.indexCount=e.getIndex().count;for(let f=0;f<a.count;f++)r.setX(h+f,c+a.getX(f));for(let f=a.count,d=u;f<d;f++)r.setX(h+f,c);r.needsUpdate=!0,r.addUpdateRange(h,o.reservedIndexCount)}return o.start=s?o.indexStart:o.vertexStart,o.count=s?o.indexCount:o.vertexCount,o.boundingBox=null,e.boundingBox!==null&&(o.boundingBox=e.boundingBox.clone()),o.boundingSphere=null,e.boundingSphere!==null&&(o.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let s=0,r=n.length;s<r;s++)n[s].active&&n[s].geometryIndex===t&&this.deleteInstance(s);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,s=n.map((a,o)=>o).sort((a,o)=>n[a].vertexStart-n[o].vertexStart),r=this.geometry;for(let a=0,o=n.length;a<o;a++){const c=s[a],l=n[c];if(l.active!==!1){if(r.index!==null){if(l.indexStart!==e){const{indexStart:h,vertexStart:u,reservedIndexCount:f}=l,d=r.index,m=d.array,_=t-u;for(let g=h;g<h+f;g++)m[g]=m[g]+_;d.array.copyWithin(e,h,h+f),d.addUpdateRange(e,f),l.indexStart=e}e+=l.reservedIndexCount}if(l.vertexStart!==t){const{vertexStart:h,reservedVertexCount:u}=l,f=r.attributes;for(const d in f){const m=f[d],{array:_,itemSize:g}=m;_.copyWithin(t*g,h*g,(h+u)*g),m.addUpdateRange(t*g,u*g)}l.vertexStart=t}t+=l.reservedVertexCount,l.start=r.index?l.indexStart:l.vertexStart,this._nextIndexStart=r.index?l.indexStart+l.reservedIndexCount:0,this._nextVertexStart=l.vertexStart+l.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,s=this._geometryInfo[t];if(s.boundingBox===null){const r=new z4,a=n.index,o=n.attributes.position;for(let c=s.start,l=s.start+s.count;c<l;c++){let h=c;a&&(h=a.getX(h)),r.expandByPoint(s6.fromBufferAttribute(o,h))}s.boundingBox=r}return e.copy(s.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,s=this._geometryInfo[t];if(s.boundingSphere===null){const r=new k4;this.getBoundingBoxAt(t,W7),W7.getCenter(r.center);const a=n.index,o=n.attributes.position;let c=0;for(let l=s.start,h=s.start+s.count;l<h;l++){let u=l;a&&(u=a.getX(u)),s6.fromBufferAttribute(o,u),c=Math.max(c,r.center.distanceToSquared(s6))}r.radius=Math.sqrt(c),s.boundingSphere=r}return e.copy(s.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,s=this._matricesTexture.image.data;return e.toArray(s,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(Vt);e[e.length-1]===n.length-1;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const s=new Int32Array(t),r=new Int32Array(t);r5(this._multiDrawCounts,s),r5(this._multiDrawStarts,r),this._multiDrawCounts=s,this._multiDrawStarts=r,this._maxInstanceCount=t;const a=this._indirectTexture,o=this._matricesTexture,c=this._colorsTexture;a.dispose(),this._initIndirectTexture(),r5(a.image.data,this._indirectTexture.image.data),o.dispose(),this._initMatricesTexture(),r5(o.image.data,this._matricesTexture.image.data),c&&(c.dispose(),this._initColorsTexture(),r5(c.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(o=>o.active);if(Math.max(...n.map(o=>o.vertexStart+o.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(c=>c.indexStart+c.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new X1,this._initializeGeometry(r));const a=this.geometry;r.index&&r5(r.index.array,a.index.array);for(const o in r.attributes)r5(r.attributes[o].array,a.attributes[o].array)}raycast(t,e){const n=this._instanceInfo,s=this._geometryInfo,r=this.matrixWorld,a=this.geometry;G4.material=this.material,G4.geometry.index=a.index,G4.geometry.attributes=a.attributes,G4.geometry.boundingBox===null&&(G4.geometry.boundingBox=new z4),G4.geometry.boundingSphere===null&&(G4.geometry.boundingSphere=new k4);for(let o=0,c=n.length;o<c;o++){if(!n[o].visible||!n[o].active)continue;const l=n[o].geometryIndex,h=s[l];G4.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(o,G4.matrixWorld).premultiply(r),this.getBoundingBoxAt(l,G4.geometry.boundingBox),this.getBoundingSphereAt(l,G4.geometry.boundingSphere),G4.raycast(t,X7);for(let u=0,f=X7.length;u<f;u++){const d=X7[u];d.object=this,d.batchId=o,e.push(d)}X7.length=0}G4.material=null,G4.geometry.index=null,G4.geometry.attributes={},G4.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,s,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=s.getIndex(),o=a===null?1:a.array.BYTES_PER_ELEMENT,c=this._instanceInfo,l=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,f=this.perObjectFrustumCulled,d=this._indirectTexture,m=d.image.data,_=n.isArrayCamera?vd:es;f&&!n.isArrayCamera&&(n0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),es.setFromProjectionMatrix(n0,n.coordinateSystem,n.reversedDepth));let g=0;if(this.sortObjects){n0.copy(this.matrixWorld).invert(),s6.setFromMatrixPosition(n.matrixWorld).applyMatrix4(n0),ns.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(n0);for(let v=0,x=c.length;v<x;v++)if(c[v].visible&&c[v].active){const T=c[v].geometryIndex;this.getMatrixAt(v,n0),this.getBoundingSphereAt(T,s5).applyMatrix4(n0);let E=!1;if(f&&(E=!_.intersectsSphere(s5,n)),!E){const A=u[T],I=yd.subVectors(s5.center,s6).dot(ns);Ht.push(A.start,A.count,I,v)}}const p=Ht.list,y=this.customSort;y===null?p.sort(r.transparent?gd:md):y.call(this,p,n);for(let v=0,x=p.length;v<x;v++){const T=p[v];l[g]=T.start*o,h[g]=T.count,m[g]=T.index,g++}Ht.reset()}else for(let p=0,y=c.length;p<y;p++)if(c[p].visible&&c[p].active){const v=c[p].geometryIndex;let x=!1;if(f&&(this.getMatrixAt(p,n0),this.getBoundingSphereAt(v,s5).applyMatrix4(n0),x=!_.intersectsSphere(s5,n)),!x){const T=u[v];l[g]=T.start*o,h[g]=T.count,m[g]=p,g++}}d.needsUpdate=!0,this._multiDrawCount=g,this._visibilityChanged=!1}onBeforeShadow(t,e,n,s,r,a){this.onBeforeRender(t,null,s,r,a)}}class t0 extends X4{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new v1(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const f9=new C,d9=new C,is=new B1,r6=new W3,Y7=new k4,Gt=new C,ss=new C;class X2 extends s4{constructor(t=new X1,e=new t0){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let s=1,r=e.count;s<r;s++)f9.fromBufferAttribute(e,s-1),d9.fromBufferAttribute(e,s),n[s]=n[s-1],n[s]+=f9.distanceTo(d9);t.setAttribute("lineDistance",new M1(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,s=this.matrixWorld,r=t.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Y7.copy(n.boundingSphere),Y7.applyMatrix4(s),Y7.radius+=r,t.ray.intersectsSphere(Y7)===!1)return;is.copy(s).invert(),r6.copy(t.ray).applyMatrix4(is);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=this.isLineSegments?2:1,h=n.index,f=n.attributes.position;if(h!==null){const d=Math.max(0,a.start),m=Math.min(h.count,a.start+a.count);for(let _=d,g=m-1;_<g;_+=l){const p=h.getX(_),y=h.getX(_+1),v=q7(this,t,r6,c,p,y,_);v&&e.push(v)}if(this.isLineLoop){const _=h.getX(m-1),g=h.getX(d),p=q7(this,t,r6,c,_,g,m-1);p&&e.push(p)}}else{const d=Math.max(0,a.start),m=Math.min(f.count,a.start+a.count);for(let _=d,g=m-1;_<g;_+=l){const p=q7(this,t,r6,c,_,_+1,_);p&&e.push(p)}if(this.isLineLoop){const _=q7(this,t,r6,c,m-1,d,m-1);_&&e.push(_)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function q7(i,t,e,n,s,r,a){const o=i.geometry.attributes.position;if(f9.fromBufferAttribute(o,s),d9.fromBufferAttribute(o,r),e.distanceSqToSegment(f9,d9,Gt,ss)>n)return;Gt.applyMatrix4(i.matrixWorld);const l=t.ray.origin.distanceTo(Gt);if(!(l<t.near||l>t.far))return{distance:l,point:ss.clone().applyMatrix4(i.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:i}}const rs=new C,as=new C;class s2 extends X2{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let s=0,r=e.count;s<r;s+=2)rs.fromBufferAttribute(e,s),as.fromBufferAttribute(e,s+1),n[s]=s===0?0:n[s-1],n[s+1]=n[s]+rs.distanceTo(as);t.setAttribute("lineDistance",new M1(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class co extends X2{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class _n extends X4{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new v1(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const os=new B1,Re=new W3,Z7=new k4,$7=new C;class lo extends s4{constructor(t=new X1,e=new _n){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,s=this.matrixWorld,r=t.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Z7.copy(n.boundingSphere),Z7.applyMatrix4(s),Z7.radius+=r,t.ray.intersectsSphere(Z7)===!1)return;os.copy(s).invert(),Re.copy(t.ray).applyMatrix4(os);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=n.index,u=n.attributes.position;if(l!==null){const f=Math.max(0,a.start),d=Math.min(l.count,a.start+a.count);for(let m=f,_=d;m<_;m++){const g=l.getX(m);$7.fromBufferAttribute(u,g),cs($7,g,c,s,t,e,this)}}else{const f=Math.max(0,a.start),d=Math.min(u.count,a.start+a.count);for(let m=f,_=d;m<_;m++)$7.fromBufferAttribute(u,m),cs($7,m,c,s,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function cs(i,t,e,n,s,r,a){const o=Re.distanceSqToPoint(i);if(o<e){const c=new C;Re.closestPointToPoint(i,c),c.applyMatrix4(n);const l=s.ray.origin.distanceTo(c);if(l<s.near||l>s.far)return;r.push({distance:l,distanceToRay:Math.sqrt(o),point:c,index:t,face:null,faceIndex:null,barycoord:null,object:a})}}class ho extends C4{constructor(t,e,n,s,r=L4,a=L4,o,c,l){super(t,e,n,s,r,a,o,c,l),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const h=this;function u(){h.needsUpdate=!0,h._requestVideoFrameCallbackId=t.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in t&&(this._requestVideoFrameCallbackId=t.requestVideoFrameCallback(u))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class Md extends ho{constructor(t,e,n,s,r,a,o,c){super({},t,e,n,s,r,a,o,c),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class Sd extends C4{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=B4,this.minFilter=B4,this.generateMipmaps=!1,this.needsUpdate=!0}}class X9 extends C4{constructor(t,e,n,s,r,a,o,c,l,h,u,f){super(null,a,o,c,l,h,s,r,u,f),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class Ed extends X9{constructor(t,e,n,s,r,a){super(t,e,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=s,this.wrapR=w0,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Td extends X9{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,b2),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class wd extends C4{constructor(t,e,n,s,r,a,o,c,l){super(t,e,n,s,r,a,o,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class xn extends C4{constructor(t,e,n=M2,s,r,a,o=B4,c=B4,l,h=I3,u=1){if(h!==I3&&h!==P3)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const f={width:t,height:e,depth:u};super(f,s,r,a,o,c,h,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new V2(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class vn extends C4{constructor(t=null){super(),this.sourceTexture=t,this.isExternalTexture=!0}copy(t){return super.copy(t),this.sourceTexture=t.sourceTexture,this}}class Y9 extends X1{constructor(t=1,e=1,n=4,s=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:s,heightSegments:r},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),s=Math.max(3,Math.floor(s)),r=Math.max(1,Math.floor(r));const a=[],o=[],c=[],l=[],h=e/2,u=Math.PI/2*t,f=e,d=2*u+f,m=n*2+r,_=s+1,g=new C,p=new C;for(let y=0;y<=m;y++){let v=0,x=0,T=0,E=0;if(y<=n){const S=y/n,M=S*Math.PI/2;x=-h-t*Math.cos(M),T=t*Math.sin(M),E=-t*Math.cos(M),v=S*u}else if(y<=n+r){const S=(y-n)/r;x=-h+S*e,T=t,E=0,v=u+S*f}else{const S=(y-n-r)/n,M=S*Math.PI/2;x=h+t*Math.sin(M),T=t*Math.cos(M),E=t*Math.sin(M),v=u+f+S*u}const A=Math.max(0,Math.min(1,v/d));let I=0;y===0?I=.5/s:y===m&&(I=-.5/s);for(let S=0;S<=s;S++){const M=S/s,L=M*Math.PI*2,N=Math.sin(L),z=Math.cos(L);p.x=-T*z,p.y=x,p.z=T*N,o.push(p.x,p.y,p.z),g.set(-T*z,E,T*N),g.normalize(),c.push(g.x,g.y,g.z),l.push(M+I,A)}if(y>0){const S=(y-1)*_;for(let M=0;M<s;M++){const L=S+M,N=S+M+1,z=y*_+M,q=y*_+M+1;a.push(L,N,z),a.push(N,q,z)}}}this.setIndex(a),this.setAttribute("position",new M1(o,3)),this.setAttribute("normal",new M1(c,3)),this.setAttribute("uv",new M1(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Y9(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class q9 extends X1{constructor(t=1,e=32,n=0,s=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:s},e=Math.max(3,e);const r=[],a=[],o=[],c=[],l=new C,h=new K;a.push(0,0,0),o.push(0,0,1),c.push(.5,.5);for(let u=0,f=3;u<=e;u++,f+=3){const d=n+u/e*s;l.x=t*Math.cos(d),l.y=t*Math.sin(d),a.push(l.x,l.y,l.z),o.push(0,0,1),h.x=(a[f]/t+1)/2,h.y=(a[f+1]/t+1)/2,c.push(h.x,h.y)}for(let u=1;u<=e;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new M1(a,3)),this.setAttribute("normal",new M1(o,3)),this.setAttribute("uv",new M1(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new q9(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class a7 extends X1{constructor(t=1,e=1,n=1,s=32,r=1,a=!1,o=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:s,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:c};const l=this;s=Math.floor(s),r=Math.floor(r);const h=[],u=[],f=[],d=[];let m=0;const _=[],g=n/2;let p=0;y(),a===!1&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new M1(u,3)),this.setAttribute("normal",new M1(f,3)),this.setAttribute("uv",new M1(d,2));function y(){const x=new C,T=new C;let E=0;const A=(e-t)/n;for(let I=0;I<=r;I++){const S=[],M=I/r,L=M*(e-t)+t;for(let N=0;N<=s;N++){const z=N/s,q=z*c+o,H=Math.sin(q),Y=Math.cos(q);T.x=L*H,T.y=-M*n+g,T.z=L*Y,u.push(T.x,T.y,T.z),x.set(H,A,Y).normalize(),f.push(x.x,x.y,x.z),d.push(z,1-M),S.push(m++)}_.push(S)}for(let I=0;I<s;I++)for(let S=0;S<r;S++){const M=_[S][I],L=_[S+1][I],N=_[S+1][I+1],z=_[S][I+1];(t>0||S!==0)&&(h.push(M,L,z),E+=3),(e>0||S!==r-1)&&(h.push(L,N,z),E+=3)}l.addGroup(p,E,0),p+=E}function v(x){const T=m,E=new K,A=new C;let I=0;const S=x===!0?t:e,M=x===!0?1:-1;for(let N=1;N<=s;N++)u.push(0,g*M,0),f.push(0,M,0),d.push(.5,.5),m++;const L=m;for(let N=0;N<=s;N++){const q=N/s*c+o,H=Math.cos(q),Y=Math.sin(q);A.x=S*Y,A.y=g*M,A.z=S*H,u.push(A.x,A.y,A.z),f.push(0,M,0),E.x=H*.5+.5,E.y=Y*.5*M+.5,d.push(E.x,E.y),m++}for(let N=0;N<s;N++){const z=T+N,q=L+N;x===!0?h.push(q,q+1,z):h.push(q+1,q,z),I+=3}l.addGroup(p,I,x===!0?1:2),p+=I}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new a7(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class o7 extends a7{constructor(t=1,e=1,n=32,s=1,r=!1,a=0,o=Math.PI*2){super(0,t,e,n,s,r,a,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:s,openEnded:r,thetaStart:a,thetaLength:o}}static fromJSON(t){return new o7(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class J2 extends X1{constructor(t=[],e=[],n=1,s=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:s};const r=[],a=[];o(s),l(n),h(),this.setAttribute("position",new M1(r,3)),this.setAttribute("normal",new M1(r.slice(),3)),this.setAttribute("uv",new M1(a,2)),s===0?this.computeVertexNormals():this.normalizeNormals();function o(y){const v=new C,x=new C,T=new C;for(let E=0;E<e.length;E+=3)d(e[E+0],v),d(e[E+1],x),d(e[E+2],T),c(v,x,T,y)}function c(y,v,x,T){const E=T+1,A=[];for(let I=0;I<=E;I++){A[I]=[];const S=y.clone().lerp(x,I/E),M=v.clone().lerp(x,I/E),L=E-I;for(let N=0;N<=L;N++)N===0&&I===E?A[I][N]=S:A[I][N]=S.clone().lerp(M,N/L)}for(let I=0;I<E;I++)for(let S=0;S<2*(E-I)-1;S++){const M=Math.floor(S/2);S%2===0?(f(A[I][M+1]),f(A[I+1][M]),f(A[I][M])):(f(A[I][M+1]),f(A[I+1][M+1]),f(A[I+1][M]))}}function l(y){const v=new C;for(let x=0;x<r.length;x+=3)v.x=r[x+0],v.y=r[x+1],v.z=r[x+2],v.normalize().multiplyScalar(y),r[x+0]=v.x,r[x+1]=v.y,r[x+2]=v.z}function h(){const y=new C;for(let v=0;v<r.length;v+=3){y.x=r[v+0],y.y=r[v+1],y.z=r[v+2];const x=g(y)/2/Math.PI+.5,T=p(y)/Math.PI+.5;a.push(x,1-T)}m(),u()}function u(){for(let y=0;y<a.length;y+=6){const v=a[y+0],x=a[y+2],T=a[y+4],E=Math.max(v,x,T),A=Math.min(v,x,T);E>.9&&A<.1&&(v<.2&&(a[y+0]+=1),x<.2&&(a[y+2]+=1),T<.2&&(a[y+4]+=1))}}function f(y){r.push(y.x,y.y,y.z)}function d(y,v){const x=y*3;v.x=t[x+0],v.y=t[x+1],v.z=t[x+2]}function m(){const y=new C,v=new C,x=new C,T=new C,E=new K,A=new K,I=new K;for(let S=0,M=0;S<r.length;S+=9,M+=6){y.set(r[S+0],r[S+1],r[S+2]),v.set(r[S+3],r[S+4],r[S+5]),x.set(r[S+6],r[S+7],r[S+8]),E.set(a[M+0],a[M+1]),A.set(a[M+2],a[M+3]),I.set(a[M+4],a[M+5]),T.copy(y).add(v).add(x).divideScalar(3);const L=g(T);_(E,M+0,y,L),_(A,M+2,v,L),_(I,M+4,x,L)}}function _(y,v,x,T){T<0&&y.x===1&&(a[v]=y.x-1),x.x===0&&x.z===0&&(a[v]=T/2/Math.PI+.5)}function g(y){return Math.atan2(y.z,-y.x)}function p(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new J2(t.vertices,t.indices,t.radius,t.details)}}class Z9 extends J2{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,s=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-s,-n,0,-s,n,0,s,-n,0,s,n,-s,-n,0,-s,n,0,s,-n,0,s,n,0,-n,0,-s,n,0,-s,-n,0,s,n,0,s],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Z9(t.radius,t.detail)}}const J7=new C,K7=new C,Wt=new C,Q7=new o0;class uo extends X1{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const s=Math.pow(10,4),r=Math.cos(C5*e),a=t.getIndex(),o=t.getAttribute("position"),c=a?a.count:o.count,l=[0,0,0],h=["a","b","c"],u=new Array(3),f={},d=[];for(let m=0;m<c;m+=3){a?(l[0]=a.getX(m),l[1]=a.getX(m+1),l[2]=a.getX(m+2)):(l[0]=m,l[1]=m+1,l[2]=m+2);const{a:_,b:g,c:p}=Q7;if(_.fromBufferAttribute(o,l[0]),g.fromBufferAttribute(o,l[1]),p.fromBufferAttribute(o,l[2]),Q7.getNormal(Wt),u[0]=`${Math.round(_.x*s)},${Math.round(_.y*s)},${Math.round(_.z*s)}`,u[1]=`${Math.round(g.x*s)},${Math.round(g.y*s)},${Math.round(g.z*s)}`,u[2]=`${Math.round(p.x*s)},${Math.round(p.y*s)},${Math.round(p.z*s)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let y=0;y<3;y++){const v=(y+1)%3,x=u[y],T=u[v],E=Q7[h[y]],A=Q7[h[v]],I=`${x}_${T}`,S=`${T}_${x}`;S in f&&f[S]?(Wt.dot(f[S].normal)<=r&&(d.push(E.x,E.y,E.z),d.push(A.x,A.y,A.z)),f[S]=null):I in f||(f[I]={index0:l[y],index1:l[v],normal:Wt.clone()})}}for(const m in f)if(f[m]){const{index0:_,index1:g}=f[m];J7.fromBufferAttribute(o,_),K7.fromBufferAttribute(o,g),d.push(J7.x,J7.y,J7.z),d.push(K7.x,K7.y,K7.z)}this.setAttribute("position",new M1(d,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class V0{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,s=this.getPoint(0),r=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),r+=n.distanceTo(s),e.push(r),s=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let s=0;const r=n.length;let a;e?a=e:a=t*n[r-1];let o=0,c=r-1,l;for(;o<=c;)if(s=Math.floor(o+(c-o)/2),l=n[s]-a,l<0)o=s+1;else if(l>0)c=s-1;else{c=s;break}if(s=c,n[s]===a)return s/(r-1);const h=n[s],f=n[s+1]-h,d=(a-h)/f;return(s+d)/(r-1)}getTangent(t,e){let s=t-1e-4,r=t+1e-4;s<0&&(s=0),r>1&&(r=1);const a=this.getPoint(s),o=this.getPoint(r),c=e||(a.isVector2?new K:new C);return c.copy(o).sub(a).normalize(),c}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new C,s=[],r=[],a=[],o=new C,c=new B1;for(let d=0;d<=t;d++){const m=d/t;s[d]=this.getTangentAt(m,new C)}r[0]=new C,a[0]=new C;let l=Number.MAX_VALUE;const h=Math.abs(s[0].x),u=Math.abs(s[0].y),f=Math.abs(s[0].z);h<=l&&(l=h,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),f<=l&&n.set(0,0,1),o.crossVectors(s[0],n).normalize(),r[0].crossVectors(s[0],o),a[0].crossVectors(s[0],r[0]);for(let d=1;d<=t;d++){if(r[d]=r[d-1].clone(),a[d]=a[d-1].clone(),o.crossVectors(s[d-1],s[d]),o.length()>Number.EPSILON){o.normalize();const m=Math.acos(N1(s[d-1].dot(s[d]),-1,1));r[d].applyMatrix4(c.makeRotationAxis(o,m))}a[d].crossVectors(s[d],r[d])}if(e===!0){let d=Math.acos(N1(r[0].dot(r[t]),-1,1));d/=t,s[0].dot(o.crossVectors(r[0],r[t]))>0&&(d=-d);for(let m=1;m<=t;m++)r[m].applyMatrix4(c.makeRotationAxis(s[m],d*m)),a[m].crossVectors(s[m],r[m])}return{tangents:s,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class $9 extends V0{constructor(t=0,e=0,n=1,s=1,r=0,a=Math.PI*2,o=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=s,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=c}getPoint(t,e=new K){const n=e,s=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=s;for(;r>s;)r-=s;r<Number.EPSILON&&(a?r=0:r=s),this.aClockwise===!0&&!a&&(r===s?r=-s:r=r-s);const o=this.aStartAngle+t*r;let c=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),f=c-this.aX,d=l-this.aY;c=f*h-d*u+this.aX,l=f*u+d*h+this.aY}return n.set(c,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class fo extends $9{constructor(t,e,n,s,r,a){super(t,e,n,n,s,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function yn(){let i=0,t=0,e=0,n=0;function s(r,a,o,c){i=r,t=o,e=-3*r+3*a-2*o-c,n=2*r-2*a+o+c}return{initCatmullRom:function(r,a,o,c,l){s(a,o,l*(o-r),l*(c-a))},initNonuniformCatmullRom:function(r,a,o,c,l,h,u){let f=(a-r)/l-(o-r)/(l+h)+(o-a)/h,d=(o-a)/h-(c-a)/(h+u)+(c-o)/u;f*=h,d*=h,s(a,o,f,d)},calc:function(r){const a=r*r,o=a*r;return i+t*r+e*a+n*o}}}const j7=new C,Xt=new yn,Yt=new yn,qt=new yn;class po extends V0{constructor(t=[],e=!1,n="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=s}getPoint(t,e=new C){const n=e,s=this.points,r=s.length,a=(r-(this.closed?0:1))*t;let o=Math.floor(a),c=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:c===0&&o===r-1&&(o=r-2,c=1);let l,h;this.closed||o>0?l=s[(o-1)%r]:(j7.subVectors(s[0],s[1]).add(s[0]),l=j7);const u=s[o%r],f=s[(o+1)%r];if(this.closed||o+2<r?h=s[(o+2)%r]:(j7.subVectors(s[r-1],s[r-2]).add(s[r-1]),h=j7),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let m=Math.pow(l.distanceToSquared(u),d),_=Math.pow(u.distanceToSquared(f),d),g=Math.pow(f.distanceToSquared(h),d);_<1e-4&&(_=1),m<1e-4&&(m=_),g<1e-4&&(g=_),Xt.initNonuniformCatmullRom(l.x,u.x,f.x,h.x,m,_,g),Yt.initNonuniformCatmullRom(l.y,u.y,f.y,h.y,m,_,g),qt.initNonuniformCatmullRom(l.z,u.z,f.z,h.z,m,_,g)}else this.curveType==="catmullrom"&&(Xt.initCatmullRom(l.x,u.x,f.x,h.x,this.tension),Yt.initCatmullRom(l.y,u.y,f.y,h.y,this.tension),qt.initCatmullRom(l.z,u.z,f.z,h.z,this.tension));return n.set(Xt.calc(c),Yt.calc(c),qt.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(s.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const s=this.points[e];t.points.push(s.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(new C().fromArray(s))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function ls(i,t,e,n,s){const r=(n-t)*.5,a=(s-e)*.5,o=i*i,c=i*o;return(2*e-2*n+r+a)*c+(-3*e+3*n-2*r-a)*o+r*i+e}function Ad(i,t){const e=1-i;return e*e*t}function Cd(i,t){return 2*(1-i)*i*t}function Rd(i,t){return i*i*t}function w6(i,t,e,n){return Ad(i,t)+Cd(i,e)+Rd(i,n)}function Id(i,t){const e=1-i;return e*e*e*t}function Pd(i,t){const e=1-i;return 3*e*e*i*t}function Ld(i,t){return 3*(1-i)*i*i*t}function Dd(i,t){return i*i*i*t}function A6(i,t,e,n,s){return Id(i,t)+Pd(i,e)+Ld(i,n)+Dd(i,s)}class bn extends V0{constructor(t=new K,e=new K,n=new K,s=new K){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=s}getPoint(t,e=new K){const n=e,s=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(A6(t,s.x,r.x,a.x,o.x),A6(t,s.y,r.y,a.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class mo extends V0{constructor(t=new C,e=new C,n=new C,s=new C){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=s}getPoint(t,e=new C){const n=e,s=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(A6(t,s.x,r.x,a.x,o.x),A6(t,s.y,r.y,a.y,o.y),A6(t,s.z,r.z,a.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Mn extends V0{constructor(t=new K,e=new K){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new K){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new K){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class go extends V0{constructor(t=new C,e=new C){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new C){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new C){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Sn extends V0{constructor(t=new K,e=new K,n=new K){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new K){const n=e,s=this.v0,r=this.v1,a=this.v2;return n.set(w6(t,s.x,r.x,a.x),w6(t,s.y,r.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class En extends V0{constructor(t=new C,e=new C,n=new C){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new C){const n=e,s=this.v0,r=this.v1,a=this.v2;return n.set(w6(t,s.x,r.x,a.x),w6(t,s.y,r.y,a.y),w6(t,s.z,r.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Tn extends V0{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new K){const n=e,s=this.points,r=(s.length-1)*t,a=Math.floor(r),o=r-a,c=s[a===0?a:a-1],l=s[a],h=s[a>s.length-2?s.length-1:a+1],u=s[a>s.length-3?s.length-1:a+2];return n.set(ls(o,c.x,l.x,h.x,u.x),ls(o,c.y,l.y,h.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const s=this.points[e];t.points.push(s.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(new K().fromArray(s))}return this}}var p9=Object.freeze({__proto__:null,ArcCurve:fo,CatmullRomCurve3:po,CubicBezierCurve:bn,CubicBezierCurve3:mo,EllipseCurve:$9,LineCurve:Mn,LineCurve3:go,QuadraticBezierCurve:Sn,QuadraticBezierCurve3:En,SplineCurve:Tn});class _o extends V0{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new p9[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),s=this.getCurveLengths();let r=0;for(;r<s.length;){if(s[r]>=n){const a=s[r]-n,o=this.curves[r],c=o.getLength(),l=c===0?0:1-a/c;return o.getPointAt(l,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,s=this.curves.length;n<s;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let s=0,r=this.curves;s<r.length;s++){const a=r[s],o=a.isEllipseCurve?t*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?t*a.points.length:t,c=a.getPoints(o);for(let l=0;l<c.length;l++){const h=c[l];n&&n.equals(h)||(e.push(h),n=h)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const s=t.curves[e];this.curves.push(s.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const s=this.curves[e];t.curves.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const s=t.curves[e];this.curves.push(new p9[s.type]().fromJSON(s))}return this}}class m9 extends _o{constructor(t){super(),this.type="Path",this.currentPoint=new K,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Mn(this.currentPoint.clone(),new K(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,s){const r=new Sn(this.currentPoint.clone(),new K(t,e),new K(n,s));return this.curves.push(r),this.currentPoint.set(n,s),this}bezierCurveTo(t,e,n,s,r,a){const o=new bn(this.currentPoint.clone(),new K(t,e),new K(n,s),new K(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Tn(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,s,r,a){const o=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(t+o,e+c,n,s,r,a),this}absarc(t,e,n,s,r,a){return this.absellipse(t,e,n,n,s,r,a),this}ellipse(t,e,n,s,r,a,o,c){const l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+l,e+h,n,s,r,a,o,c),this}absellipse(t,e,n,s,r,a,o,c){const l=new $9(t,e,n,s,r,a,o,c);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class R5 extends m9{constructor(t){super(t),this.uuid=x0(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,s=this.holes.length;n<s;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const s=t.holes[e];this.holes.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const s=this.holes[e];t.holes.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const s=t.holes[e];this.holes.push(new m9().fromJSON(s))}return this}}function Ud(i,t,e=2){const n=t&&t.length,s=n?t[0]*e:i.length;let r=xo(i,0,s,e,!0);const a=[];if(!r||r.next===r.prev)return a;let o,c,l;if(n&&(r=zd(i,t,r,e)),i.length>80*e){o=1/0,c=1/0;let h=-1/0,u=-1/0;for(let f=e;f<s;f+=e){const d=i[f],m=i[f+1];d<o&&(o=d),m<c&&(c=m),d>h&&(h=d),m>u&&(u=m)}l=Math.max(h-o,u-c),l=l!==0?32767/l:0}return X6(r,a,e,o,c,l,0),a}function xo(i,t,e,n,s){let r;if(s===Jd(i,t,e,n)>0)for(let a=t;a<e;a+=n)r=hs(a/n|0,i[a],i[a+1],r);else for(let a=e-n;a>=t;a-=n)r=hs(a/n|0,i[a],i[a+1],r);return r&&N3(r,r.next)&&(q6(r),r=r.next),r}function O5(i,t){if(!i)return i;t||(t=i);let e=i,n;do if(n=!1,!e.steiner&&(N3(e,e.next)||T4(e.prev,e,e.next)===0)){if(q6(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function X6(i,t,e,n,s,r,a){if(!i)return;!a&&r&&Wd(i,n,s,r);let o=i;for(;i.prev!==i.next;){const c=i.prev,l=i.next;if(r?Nd(i,n,s,r):Od(i)){t.push(c.i,i.i,l.i),q6(i),i=l.next,o=l.next;continue}if(i=l,i===o){a?a===1?(i=Fd(O5(i),t),X6(i,t,e,n,s,r,2)):a===2&&Bd(i,t,e,n,s,r):X6(O5(i),t,e,n,s,r,1);break}}}function Od(i){const t=i.prev,e=i,n=i.next;if(T4(t,e,n)>=0)return!1;const s=t.x,r=e.x,a=n.x,o=t.y,c=e.y,l=n.y,h=Math.min(s,r,a),u=Math.min(o,c,l),f=Math.max(s,r,a),d=Math.max(o,c,l);let m=n.next;for(;m!==t;){if(m.x>=h&&m.x<=f&&m.y>=u&&m.y<=d&&p6(s,o,r,c,a,l,m.x,m.y)&&T4(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function Nd(i,t,e,n){const s=i.prev,r=i,a=i.next;if(T4(s,r,a)>=0)return!1;const o=s.x,c=r.x,l=a.x,h=s.y,u=r.y,f=a.y,d=Math.min(o,c,l),m=Math.min(h,u,f),_=Math.max(o,c,l),g=Math.max(h,u,f),p=Ie(d,m,t,e,n),y=Ie(_,g,t,e,n);let v=i.prevZ,x=i.nextZ;for(;v&&v.z>=p&&x&&x.z<=y;){if(v.x>=d&&v.x<=_&&v.y>=m&&v.y<=g&&v!==s&&v!==a&&p6(o,h,c,u,l,f,v.x,v.y)&&T4(v.prev,v,v.next)>=0||(v=v.prevZ,x.x>=d&&x.x<=_&&x.y>=m&&x.y<=g&&x!==s&&x!==a&&p6(o,h,c,u,l,f,x.x,x.y)&&T4(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;v&&v.z>=p;){if(v.x>=d&&v.x<=_&&v.y>=m&&v.y<=g&&v!==s&&v!==a&&p6(o,h,c,u,l,f,v.x,v.y)&&T4(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;x&&x.z<=y;){if(x.x>=d&&x.x<=_&&x.y>=m&&x.y<=g&&x!==s&&x!==a&&p6(o,h,c,u,l,f,x.x,x.y)&&T4(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function Fd(i,t){let e=i;do{const n=e.prev,s=e.next.next;!N3(n,s)&&yo(n,e,e.next,s)&&Y6(n,s)&&Y6(s,n)&&(t.push(n.i,e.i,s.i),q6(e),q6(e.next),e=i=s),e=e.next}while(e!==i);return O5(e)}function Bd(i,t,e,n,s,r){let a=i;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&qd(a,o)){let c=bo(a,o);a=O5(a,a.next),c=O5(c,c.next),X6(a,t,e,n,s,r,0),X6(c,t,e,n,s,r,0);return}o=o.next}a=a.next}while(a!==i)}function zd(i,t,e,n){const s=[];for(let r=0,a=t.length;r<a;r++){const o=t[r]*n,c=r<a-1?t[r+1]*n:i.length,l=xo(i,o,c,n,!1);l===l.next&&(l.steiner=!0),s.push(Yd(l))}s.sort(kd);for(let r=0;r<s.length;r++)e=Vd(s[r],e);return e}function kd(i,t){let e=i.x-t.x;if(e===0&&(e=i.y-t.y,e===0)){const n=(i.next.y-i.y)/(i.next.x-i.x),s=(t.next.y-t.y)/(t.next.x-t.x);e=n-s}return e}function Vd(i,t){const e=Hd(i,t);if(!e)return t;const n=bo(e,i);return O5(n,n.next),O5(e,e.next)}function Hd(i,t){let e=t;const n=i.x,s=i.y;let r=-1/0,a;if(N3(i,e))return e;do{if(N3(i,e.next))return e.next;if(s<=e.y&&s>=e.next.y&&e.next.y!==e.y){const u=e.x+(s-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(u<=n&&u>r&&(r=u,a=e.x<e.next.x?e:e.next,u===n))return a}e=e.next}while(e!==t);if(!a)return null;const o=a,c=a.x,l=a.y;let h=1/0;e=a;do{if(n>=e.x&&e.x>=c&&n!==e.x&&vo(s<l?n:r,s,c,l,s<l?r:n,s,e.x,e.y)){const u=Math.abs(s-e.y)/(n-e.x);Y6(e,i)&&(u<h||u===h&&(e.x>a.x||e.x===a.x&&Gd(a,e)))&&(a=e,h=u)}e=e.next}while(e!==o);return a}function Gd(i,t){return T4(i.prev,i,t.prev)<0&&T4(t.next,i,i.next)<0}function Wd(i,t,e,n){let s=i;do s.z===0&&(s.z=Ie(s.x,s.y,t,e,n)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==i);s.prevZ.nextZ=null,s.prevZ=null,Xd(s)}function Xd(i){let t,e=1;do{let n=i,s;i=null;let r=null;for(t=0;n;){t++;let a=n,o=0;for(let l=0;l<e&&(o++,a=a.nextZ,!!a);l++);let c=e;for(;o>0||c>0&&a;)o!==0&&(c===0||!a||n.z<=a.z)?(s=n,n=n.nextZ,o--):(s=a,a=a.nextZ,c--),r?r.nextZ=s:i=s,s.prevZ=r,r=s;n=a}r.nextZ=null,e*=2}while(t>1);return i}function Ie(i,t,e,n,s){return i=(i-e)*s|0,t=(t-n)*s|0,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,i|t<<1}function Yd(i){let t=i,e=i;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==i);return e}function vo(i,t,e,n,s,r,a,o){return(s-a)*(t-o)>=(i-a)*(r-o)&&(i-a)*(n-o)>=(e-a)*(t-o)&&(e-a)*(r-o)>=(s-a)*(n-o)}function p6(i,t,e,n,s,r,a,o){return!(i===a&&t===o)&&vo(i,t,e,n,s,r,a,o)}function qd(i,t){return i.next.i!==t.i&&i.prev.i!==t.i&&!Zd(i,t)&&(Y6(i,t)&&Y6(t,i)&&$d(i,t)&&(T4(i.prev,i,t.prev)||T4(i,t.prev,t))||N3(i,t)&&T4(i.prev,i,i.next)>0&&T4(t.prev,t,t.next)>0)}function T4(i,t,e){return(t.y-i.y)*(e.x-t.x)-(t.x-i.x)*(e.y-t.y)}function N3(i,t){return i.x===t.x&&i.y===t.y}function yo(i,t,e,n){const s=e8(T4(i,t,e)),r=e8(T4(i,t,n)),a=e8(T4(e,n,i)),o=e8(T4(e,n,t));return!!(s!==r&&a!==o||s===0&&t8(i,e,t)||r===0&&t8(i,n,t)||a===0&&t8(e,i,n)||o===0&&t8(e,t,n))}function t8(i,t,e){return t.x<=Math.max(i.x,e.x)&&t.x>=Math.min(i.x,e.x)&&t.y<=Math.max(i.y,e.y)&&t.y>=Math.min(i.y,e.y)}function e8(i){return i>0?1:i<0?-1:0}function Zd(i,t){let e=i;do{if(e.i!==i.i&&e.next.i!==i.i&&e.i!==t.i&&e.next.i!==t.i&&yo(e,e.next,i,t))return!0;e=e.next}while(e!==i);return!1}function Y6(i,t){return T4(i.prev,i,i.next)<0?T4(i,t,i.next)>=0&&T4(i,i.prev,t)>=0:T4(i,t,i.prev)<0||T4(i,i.next,t)<0}function $d(i,t){let e=i,n=!1;const s=(i.x+t.x)/2,r=(i.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&s<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==i);return n}function bo(i,t){const e=Pe(i.i,i.x,i.y),n=Pe(t.i,t.x,t.y),s=i.next,r=t.prev;return i.next=t,t.prev=i,e.next=s,s.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function hs(i,t,e,n){const s=Pe(i,t,e);return n?(s.next=n.next,s.prev=n,n.next.prev=s,n.next=s):(s.prev=s,s.next=s),s}function q6(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function Pe(i,t,e){return{i,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function Jd(i,t,e,n){let s=0;for(let r=t,a=e-n;r<e;r+=n)s+=(i[a]-i[r])*(i[r+1]+i[a+1]),a=r;return s}class Kd{static triangulate(t,e,n=2){return Ud(t,e,n)}}class N0{static area(t){const e=t.length;let n=0;for(let s=e-1,r=0;r<e;s=r++)n+=t[s].x*t[r].y-t[r].x*t[s].y;return n*.5}static isClockWise(t){return N0.area(t)<0}static triangulateShape(t,e){const n=[],s=[],r=[];us(t),fs(n,t);let a=t.length;e.forEach(us);for(let c=0;c<e.length;c++)s.push(a),a+=e[c].length,fs(n,e[c]);const o=Kd.triangulate(n,s);for(let c=0;c<o.length;c+=3)r.push(o.slice(c,c+3));return r}}function us(i){const t=i.length;t>2&&i[t-1].equals(i[0])&&i.pop()}function fs(i,t){for(let e=0;e<t.length;e++)i.push(t[e].x),i.push(t[e].y)}class J9 extends X1{constructor(t=new R5([new K(.5,.5),new K(-.5,.5),new K(-.5,-.5),new K(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,s=[],r=[];for(let o=0,c=t.length;o<c;o++){const l=t[o];a(l)}this.setAttribute("position",new M1(s,3)),this.setAttribute("uv",new M1(r,2)),this.computeVertexNormals();function a(o){const c=[],l=e.curveSegments!==void 0?e.curveSegments:12,h=e.steps!==void 0?e.steps:1,u=e.depth!==void 0?e.depth:1;let f=e.bevelEnabled!==void 0?e.bevelEnabled:!0,d=e.bevelThickness!==void 0?e.bevelThickness:.2,m=e.bevelSize!==void 0?e.bevelSize:d-.1,_=e.bevelOffset!==void 0?e.bevelOffset:0,g=e.bevelSegments!==void 0?e.bevelSegments:3;const p=e.extrudePath,y=e.UVGenerator!==void 0?e.UVGenerator:Qd;let v,x=!1,T,E,A,I;p&&(v=p.getSpacedPoints(h),x=!0,f=!1,T=p.computeFrenetFrames(h,!1),E=new C,A=new C,I=new C),f||(g=0,d=0,m=0,_=0);const S=o.extractPoints(l);let M=S.shape;const L=S.holes;if(!N0.isClockWise(M)){M=M.reverse();for(let n1=0,Q=L.length;n1<Q;n1++){const J=L[n1];N0.isClockWise(J)&&(L[n1]=J.reverse())}}function z(n1){const J=10000000000000001e-36;let $=n1[0];for(let h1=1;h1<=n1.length;h1++){const s1=h1%n1.length,u1=n1[s1],H1=u1.x-$.x,V1=u1.y-$.y,R=H1*H1+V1*V1,b=Math.max(Math.abs(u1.x),Math.abs(u1.y),Math.abs($.x),Math.abs($.y)),F=J*b*b;if(R<=F){n1.splice(s1,1),h1--;continue}$=u1}}z(M),L.forEach(z);const q=L.length,H=M;for(let n1=0;n1<q;n1++){const Q=L[n1];M=M.concat(Q)}function Y(n1,Q,J){return Q||console.error("THREE.ExtrudeGeometry: vec does not exist"),n1.clone().addScaledVector(Q,J)}const t1=M.length;function W(n1,Q,J){let $,h1,s1;const u1=n1.x-Q.x,H1=n1.y-Q.y,V1=J.x-n1.x,R=J.y-n1.y,b=u1*u1+H1*H1,F=u1*R-H1*V1;if(Math.abs(F)>Number.EPSILON){const G=Math.sqrt(b),e1=Math.sqrt(V1*V1+R*R),X=Q.x-H1/G,I1=Q.y+u1/G,l1=J.x-R/e1,A1=J.y+V1/e1,C1=((l1-X)*R-(A1-I1)*V1)/(u1*R-H1*V1);$=X+u1*C1-n1.x,h1=I1+H1*C1-n1.y;const r1=$*$+h1*h1;if(r1<=2)return new K($,h1);s1=Math.sqrt(r1/2)}else{let G=!1;u1>Number.EPSILON?V1>Number.EPSILON&&(G=!0):u1<-Number.EPSILON?V1<-Number.EPSILON&&(G=!0):Math.sign(H1)===Math.sign(R)&&(G=!0),G?($=-H1,h1=u1,s1=Math.sqrt(b)):($=u1,h1=H1,s1=Math.sqrt(b/2))}return new K($/s1,h1/s1)}const f1=[];for(let n1=0,Q=H.length,J=Q-1,$=n1+1;n1<Q;n1++,J++,$++)J===Q&&(J=0),$===Q&&($=0),f1[n1]=W(H[n1],H[J],H[$]);const x1=[];let S1,Y1=f1.concat();for(let n1=0,Q=q;n1<Q;n1++){const J=L[n1];S1=[];for(let $=0,h1=J.length,s1=h1-1,u1=$+1;$<h1;$++,s1++,u1++)s1===h1&&(s1=0),u1===h1&&(u1=0),S1[$]=W(J[$],J[s1],J[u1]);x1.push(S1),Y1=Y1.concat(S1)}let j1;if(g===0)j1=N0.triangulateShape(H,L);else{const n1=[],Q=[];for(let J=0;J<g;J++){const $=J/g,h1=d*Math.cos($*Math.PI/2),s1=m*Math.sin($*Math.PI/2)+_;for(let u1=0,H1=H.length;u1<H1;u1++){const V1=Y(H[u1],f1[u1],s1);L1(V1.x,V1.y,-h1),$===0&&n1.push(V1)}for(let u1=0,H1=q;u1<H1;u1++){const V1=L[u1];S1=x1[u1];const R=[];for(let b=0,F=V1.length;b<F;b++){const G=Y(V1[b],S1[b],s1);L1(G.x,G.y,-h1),$===0&&R.push(G)}$===0&&Q.push(R)}}j1=N0.triangulateShape(n1,Q)}const f4=j1.length,e4=m+_;for(let n1=0;n1<t1;n1++){const Q=f?Y(M[n1],Y1[n1],e4):M[n1];x?(A.copy(T.normals[0]).multiplyScalar(Q.x),E.copy(T.binormals[0]).multiplyScalar(Q.y),I.copy(v[0]).add(A).add(E),L1(I.x,I.y,I.z)):L1(Q.x,Q.y,0)}for(let n1=1;n1<=h;n1++)for(let Q=0;Q<t1;Q++){const J=f?Y(M[Q],Y1[Q],e4):M[Q];x?(A.copy(T.normals[n1]).multiplyScalar(J.x),E.copy(T.binormals[n1]).multiplyScalar(J.y),I.copy(v[n1]).add(A).add(E),L1(I.x,I.y,I.z)):L1(J.x,J.y,u/h*n1)}for(let n1=g-1;n1>=0;n1--){const Q=n1/g,J=d*Math.cos(Q*Math.PI/2),$=m*Math.sin(Q*Math.PI/2)+_;for(let h1=0,s1=H.length;h1<s1;h1++){const u1=Y(H[h1],f1[h1],$);L1(u1.x,u1.y,u+J)}for(let h1=0,s1=L.length;h1<s1;h1++){const u1=L[h1];S1=x1[h1];for(let H1=0,V1=u1.length;H1<V1;H1++){const R=Y(u1[H1],S1[H1],$);x?L1(R.x,R.y+v[h-1].y,v[h-1].x+J):L1(R.x,R.y,u+J)}}}Z(),i1();function Z(){const n1=s.length/3;if(f){let Q=0,J=t1*Q;for(let $=0;$<f4;$++){const h1=j1[$];w1(h1[2]+J,h1[1]+J,h1[0]+J)}Q=h+g*2,J=t1*Q;for(let $=0;$<f4;$++){const h1=j1[$];w1(h1[0]+J,h1[1]+J,h1[2]+J)}}else{for(let Q=0;Q<f4;Q++){const J=j1[Q];w1(J[2],J[1],J[0])}for(let Q=0;Q<f4;Q++){const J=j1[Q];w1(J[0]+t1*h,J[1]+t1*h,J[2]+t1*h)}}n.addGroup(n1,s.length/3-n1,0)}function i1(){const n1=s.length/3;let Q=0;b1(H,Q),Q+=H.length;for(let J=0,$=L.length;J<$;J++){const h1=L[J];b1(h1,Q),Q+=h1.length}n.addGroup(n1,s.length/3-n1,1)}function b1(n1,Q){let J=n1.length;for(;--J>=0;){const $=J;let h1=J-1;h1<0&&(h1=n1.length-1);for(let s1=0,u1=h+g*2;s1<u1;s1++){const H1=t1*s1,V1=t1*(s1+1),R=Q+$+H1,b=Q+h1+H1,F=Q+h1+V1,G=Q+$+V1;K1(R,b,F,G)}}}function L1(n1,Q,J){c.push(n1),c.push(Q),c.push(J)}function w1(n1,Q,J){x4(n1),x4(Q),x4(J);const $=s.length/3,h1=y.generateTopUV(n,s,$-3,$-2,$-1);P(h1[0]),P(h1[1]),P(h1[2])}function K1(n1,Q,J,$){x4(n1),x4(Q),x4($),x4(Q),x4(J),x4($);const h1=s.length/3,s1=y.generateSideWallUV(n,s,h1-6,h1-3,h1-2,h1-1);P(s1[0]),P(s1[1]),P(s1[3]),P(s1[1]),P(s1[2]),P(s1[3])}function x4(n1){s.push(c[n1*3+0]),s.push(c[n1*3+1]),s.push(c[n1*3+2])}function P(n1){r.push(n1.x),r.push(n1.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return jd(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,a=t.shapes.length;r<a;r++){const o=e[t.shapes[r]];n.push(o)}const s=t.options.extrudePath;return s!==void 0&&(t.options.extrudePath=new p9[s.type]().fromJSON(s)),new J9(n,t.options)}}const Qd={generateTopUV:function(i,t,e,n,s){const r=t[e*3],a=t[e*3+1],o=t[n*3],c=t[n*3+1],l=t[s*3],h=t[s*3+1];return[new K(r,a),new K(o,c),new K(l,h)]},generateSideWallUV:function(i,t,e,n,s,r){const a=t[e*3],o=t[e*3+1],c=t[e*3+2],l=t[n*3],h=t[n*3+1],u=t[n*3+2],f=t[s*3],d=t[s*3+1],m=t[s*3+2],_=t[r*3],g=t[r*3+1],p=t[r*3+2];return Math.abs(o-h)<Math.abs(a-l)?[new K(a,1-c),new K(l,1-u),new K(f,1-m),new K(_,1-p)]:[new K(o,1-c),new K(h,1-u),new K(d,1-m),new K(g,1-p)]}};function jd(i,t,e){if(e.shapes=[],Array.isArray(i))for(let n=0,s=i.length;n<s;n++){const r=i[n];e.shapes.push(r.uuid)}else e.shapes.push(i.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class K9 extends J2{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,s=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(s,r,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new K9(t.radius,t.detail)}}class Q9 extends X1{constructor(t=[new K(0,-.5),new K(.5,0),new K(0,.5)],e=12,n=0,s=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:s},e=Math.floor(e),s=N1(s,0,Math.PI*2);const r=[],a=[],o=[],c=[],l=[],h=1/e,u=new C,f=new K,d=new C,m=new C,_=new C;let g=0,p=0;for(let y=0;y<=t.length-1;y++)switch(y){case 0:g=t[y+1].x-t[y].x,p=t[y+1].y-t[y].y,d.x=p*1,d.y=-g,d.z=p*0,_.copy(d),d.normalize(),c.push(d.x,d.y,d.z);break;case t.length-1:c.push(_.x,_.y,_.z);break;default:g=t[y+1].x-t[y].x,p=t[y+1].y-t[y].y,d.x=p*1,d.y=-g,d.z=p*0,m.copy(d),d.x+=_.x,d.y+=_.y,d.z+=_.z,d.normalize(),c.push(d.x,d.y,d.z),_.copy(m)}for(let y=0;y<=e;y++){const v=n+y*h*s,x=Math.sin(v),T=Math.cos(v);for(let E=0;E<=t.length-1;E++){u.x=t[E].x*x,u.y=t[E].y,u.z=t[E].x*T,a.push(u.x,u.y,u.z),f.x=y/e,f.y=E/(t.length-1),o.push(f.x,f.y);const A=c[3*E+0]*x,I=c[3*E+1],S=c[3*E+0]*T;l.push(A,I,S)}}for(let y=0;y<e;y++)for(let v=0;v<t.length-1;v++){const x=v+y*t.length,T=x,E=x+t.length,A=x+t.length+1,I=x+1;r.push(T,E,I),r.push(A,I,E)}this.setIndex(r),this.setAttribute("position",new M1(a,3)),this.setAttribute("uv",new M1(o,2)),this.setAttribute("normal",new M1(l,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Q9(t.points,t.segments,t.phiStart,t.phiLength)}}class c7 extends J2{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],s=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,s,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new c7(t.radius,t.detail)}}class Y3 extends X1{constructor(t=1,e=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:s};const r=t/2,a=e/2,o=Math.floor(n),c=Math.floor(s),l=o+1,h=c+1,u=t/o,f=e/c,d=[],m=[],_=[],g=[];for(let p=0;p<h;p++){const y=p*f-a;for(let v=0;v<l;v++){const x=v*u-r;m.push(x,-y,0),_.push(0,0,1),g.push(v/o),g.push(1-p/c)}}for(let p=0;p<c;p++)for(let y=0;y<o;y++){const v=y+l*p,x=y+l*(p+1),T=y+1+l*(p+1),E=y+1+l*p;d.push(v,x,E),d.push(x,T,E)}this.setIndex(d),this.setAttribute("position",new M1(m,3)),this.setAttribute("normal",new M1(_,3)),this.setAttribute("uv",new M1(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Y3(t.width,t.height,t.widthSegments,t.heightSegments)}}class j9 extends X1{constructor(t=.5,e=1,n=32,s=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:s,thetaStart:r,thetaLength:a},n=Math.max(3,n),s=Math.max(1,s);const o=[],c=[],l=[],h=[];let u=t;const f=(e-t)/s,d=new C,m=new K;for(let _=0;_<=s;_++){for(let g=0;g<=n;g++){const p=r+g/n*a;d.x=u*Math.cos(p),d.y=u*Math.sin(p),c.push(d.x,d.y,d.z),l.push(0,0,1),m.x=(d.x/e+1)/2,m.y=(d.y/e+1)/2,h.push(m.x,m.y)}u+=f}for(let _=0;_<s;_++){const g=_*(n+1);for(let p=0;p<n;p++){const y=p+g,v=y,x=y+n+1,T=y+n+2,E=y+1;o.push(v,x,E),o.push(x,T,E)}}this.setIndex(o),this.setAttribute("position",new M1(c,3)),this.setAttribute("normal",new M1(l,3)),this.setAttribute("uv",new M1(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new j9(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class tt extends X1{constructor(t=new R5([new K(0,.5),new K(-.5,-.5),new K(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],s=[],r=[],a=[];let o=0,c=0;if(Array.isArray(t)===!1)l(t);else for(let h=0;h<t.length;h++)l(t[h]),this.addGroup(o,c,h),o+=c,c=0;this.setIndex(n),this.setAttribute("position",new M1(s,3)),this.setAttribute("normal",new M1(r,3)),this.setAttribute("uv",new M1(a,2));function l(h){const u=s.length/3,f=h.extractPoints(e);let d=f.shape;const m=f.holes;N0.isClockWise(d)===!1&&(d=d.reverse());for(let g=0,p=m.length;g<p;g++){const y=m[g];N0.isClockWise(y)===!0&&(m[g]=y.reverse())}const _=N0.triangulateShape(d,m);for(let g=0,p=m.length;g<p;g++){const y=m[g];d=d.concat(y)}for(let g=0,p=d.length;g<p;g++){const y=d[g];s.push(y.x,y.y,0),r.push(0,0,1),a.push(y.x,y.y)}for(let g=0,p=_.length;g<p;g++){const y=_[g],v=y[0]+u,x=y[1]+u,T=y[2]+u;n.push(v,x,T),c+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return tp(e,t)}static fromJSON(t,e){const n=[];for(let s=0,r=t.shapes.length;s<r;s++){const a=e[t.shapes[s]];n.push(a)}return new tt(n,t.curveSegments)}}function tp(i,t){if(t.shapes=[],Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const s=i[e];t.shapes.push(s.uuid)}else t.shapes.push(i.uuid);return t}class l7 extends X1{constructor(t=1,e=32,n=16,s=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:s,phiLength:r,thetaStart:a,thetaLength:o},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const c=Math.min(a+o,Math.PI);let l=0;const h=[],u=new C,f=new C,d=[],m=[],_=[],g=[];for(let p=0;p<=n;p++){const y=[],v=p/n;let x=0;p===0&&a===0?x=.5/e:p===n&&c===Math.PI&&(x=-.5/e);for(let T=0;T<=e;T++){const E=T/e;u.x=-t*Math.cos(s+E*r)*Math.sin(a+v*o),u.y=t*Math.cos(a+v*o),u.z=t*Math.sin(s+E*r)*Math.sin(a+v*o),m.push(u.x,u.y,u.z),f.copy(u).normalize(),_.push(f.x,f.y,f.z),g.push(E+x,1-v),y.push(l++)}h.push(y)}for(let p=0;p<n;p++)for(let y=0;y<e;y++){const v=h[p][y+1],x=h[p][y],T=h[p+1][y],E=h[p+1][y+1];(p!==0||a>0)&&d.push(v,x,E),(p!==n-1||c<Math.PI)&&d.push(x,T,E)}this.setIndex(d),this.setAttribute("position",new M1(m,3)),this.setAttribute("normal",new M1(_,3)),this.setAttribute("uv",new M1(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new l7(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class et extends J2{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],s=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,s,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new et(t.radius,t.detail)}}class nt extends X1{constructor(t=1,e=.4,n=12,s=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:s,arc:r},n=Math.floor(n),s=Math.floor(s);const a=[],o=[],c=[],l=[],h=new C,u=new C,f=new C;for(let d=0;d<=n;d++)for(let m=0;m<=s;m++){const _=m/s*r,g=d/n*Math.PI*2;u.x=(t+e*Math.cos(g))*Math.cos(_),u.y=(t+e*Math.cos(g))*Math.sin(_),u.z=e*Math.sin(g),o.push(u.x,u.y,u.z),h.x=t*Math.cos(_),h.y=t*Math.sin(_),f.subVectors(u,h).normalize(),c.push(f.x,f.y,f.z),l.push(m/s),l.push(d/n)}for(let d=1;d<=n;d++)for(let m=1;m<=s;m++){const _=(s+1)*d+m-1,g=(s+1)*(d-1)+m-1,p=(s+1)*(d-1)+m,y=(s+1)*d+m;a.push(_,g,y),a.push(g,p,y)}this.setIndex(a),this.setAttribute("position",new M1(o,3)),this.setAttribute("normal",new M1(c,3)),this.setAttribute("uv",new M1(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new nt(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class it extends X1{constructor(t=1,e=.4,n=64,s=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:s,p:r,q:a},n=Math.floor(n),s=Math.floor(s);const o=[],c=[],l=[],h=[],u=new C,f=new C,d=new C,m=new C,_=new C,g=new C,p=new C;for(let v=0;v<=n;++v){const x=v/n*r*Math.PI*2;y(x,r,a,t,d),y(x+.01,r,a,t,m),g.subVectors(m,d),p.addVectors(m,d),_.crossVectors(g,p),p.crossVectors(_,g),_.normalize(),p.normalize();for(let T=0;T<=s;++T){const E=T/s*Math.PI*2,A=-e*Math.cos(E),I=e*Math.sin(E);u.x=d.x+(A*p.x+I*_.x),u.y=d.y+(A*p.y+I*_.y),u.z=d.z+(A*p.z+I*_.z),c.push(u.x,u.y,u.z),f.subVectors(u,d).normalize(),l.push(f.x,f.y,f.z),h.push(v/n),h.push(T/s)}}for(let v=1;v<=n;v++)for(let x=1;x<=s;x++){const T=(s+1)*(v-1)+(x-1),E=(s+1)*v+(x-1),A=(s+1)*v+x,I=(s+1)*(v-1)+x;o.push(T,E,I),o.push(E,A,I)}this.setIndex(o),this.setAttribute("position",new M1(c,3)),this.setAttribute("normal",new M1(l,3)),this.setAttribute("uv",new M1(h,2));function y(v,x,T,E,A){const I=Math.cos(v),S=Math.sin(v),M=T/x*v,L=Math.cos(M);A.x=E*(2+L)*.5*I,A.y=E*(2+L)*S*.5,A.z=E*Math.sin(M)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new it(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class st extends X1{constructor(t=new En(new C(-1,-1,0),new C(-1,1,0),new C(1,1,0)),e=64,n=1,s=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:s,closed:r};const a=t.computeFrenetFrames(e,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new C,c=new C,l=new K;let h=new C;const u=[],f=[],d=[],m=[];_(),this.setIndex(m),this.setAttribute("position",new M1(u,3)),this.setAttribute("normal",new M1(f,3)),this.setAttribute("uv",new M1(d,2));function _(){for(let v=0;v<e;v++)g(v);g(r===!1?e:0),y(),p()}function g(v){h=t.getPointAt(v/e,h);const x=a.normals[v],T=a.binormals[v];for(let E=0;E<=s;E++){const A=E/s*Math.PI*2,I=Math.sin(A),S=-Math.cos(A);c.x=S*x.x+I*T.x,c.y=S*x.y+I*T.y,c.z=S*x.z+I*T.z,c.normalize(),f.push(c.x,c.y,c.z),o.x=h.x+n*c.x,o.y=h.y+n*c.y,o.z=h.z+n*c.z,u.push(o.x,o.y,o.z)}}function p(){for(let v=1;v<=e;v++)for(let x=1;x<=s;x++){const T=(s+1)*(v-1)+(x-1),E=(s+1)*v+(x-1),A=(s+1)*v+x,I=(s+1)*(v-1)+x;m.push(T,E,I),m.push(E,A,I)}}function y(){for(let v=0;v<=e;v++)for(let x=0;x<=s;x++)l.x=v/e,l.y=x/s,d.push(l.x,l.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new st(new p9[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Mo extends X1{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,s=new C,r=new C;if(t.index!==null){const a=t.attributes.position,o=t.index;let c=t.groups;c.length===0&&(c=[{start:0,count:o.count,materialIndex:0}]);for(let l=0,h=c.length;l<h;++l){const u=c[l],f=u.start,d=u.count;for(let m=f,_=f+d;m<_;m+=3)for(let g=0;g<3;g++){const p=o.getX(m+g),y=o.getX(m+(g+1)%3);s.fromBufferAttribute(a,p),r.fromBufferAttribute(a,y),ds(s,r,n)===!0&&(e.push(s.x,s.y,s.z),e.push(r.x,r.y,r.z))}}}else{const a=t.attributes.position;for(let o=0,c=a.count/3;o<c;o++)for(let l=0;l<3;l++){const h=3*o+l,u=3*o+(l+1)%3;s.fromBufferAttribute(a,h),r.fromBufferAttribute(a,u),ds(s,r,n)===!0&&(e.push(s.x,s.y,s.z),e.push(r.x,r.y,r.z))}}this.setAttribute("position",new M1(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function ds(i,t,e){const n=`${i.x},${i.y},${i.z}-${t.x},${t.y},${t.z}`,s=`${t.x},${t.y},${t.z}-${i.x},${i.y},${i.z}`;return e.has(n)===!0||e.has(s)===!0?!1:(e.add(n),e.add(s),!0)}var ps=Object.freeze({__proto__:null,BoxGeometry:B5,CapsuleGeometry:Y9,CircleGeometry:q9,ConeGeometry:o7,CylinderGeometry:a7,DodecahedronGeometry:Z9,EdgesGeometry:uo,ExtrudeGeometry:J9,IcosahedronGeometry:K9,LatheGeometry:Q9,OctahedronGeometry:c7,PlaneGeometry:Y3,PolyhedronGeometry:J2,RingGeometry:j9,ShapeGeometry:tt,SphereGeometry:l7,TetrahedronGeometry:et,TorusGeometry:nt,TorusKnotGeometry:it,TubeGeometry:st,WireframeGeometry:Mo});class So extends X4{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new v1(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Eo extends z0{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class wn extends X4{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new v1(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new v1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Z2,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new y0,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class To extends wn{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new K(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return N1(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new v1(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new v1(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new v1(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class wo extends X4{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new v1(16777215),this.specular=new v1(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new v1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Z2,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new y0,this.combine=i7,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Ao extends X4{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new v1(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new v1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Z2,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Co extends X4{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Z2,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class g9 extends X4{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new v1(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new v1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Z2,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new y0,this.combine=i7,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class An extends X4{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Ba,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Cn extends X4{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class Ro extends X4{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new v1(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Z2,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Io extends t0{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function S5(i,t){return!i||i.constructor===t?i:typeof t.BYTES_PER_ELEMENT=="number"?new t(i):Array.prototype.slice.call(i)}function Po(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function Lo(i){function t(s,r){return i[s]-i[r]}const e=i.length,n=new Array(e);for(let s=0;s!==e;++s)n[s]=s;return n.sort(t),n}function Le(i,t,e){const n=i.length,s=new i.constructor(n);for(let r=0,a=0;a!==n;++r){const o=e[r]*t;for(let c=0;c!==t;++c)s[a++]=i[o+c]}return s}function Rn(i,t,e,n){let s=1,r=i[0];for(;r!==void 0&&r[n]===void 0;)r=i[s++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(t.push(r.time),e.push(...a)),r=i[s++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(t.push(r.time),a.toArray(e,e.length)),r=i[s++];while(r!==void 0);else do a=r[n],a!==void 0&&(t.push(r.time),e.push(a)),r=i[s++];while(r!==void 0)}function ep(i,t,e,n,s=30){const r=i.clone();r.name=t;const a=[];for(let c=0;c<r.tracks.length;++c){const l=r.tracks[c],h=l.getValueSize(),u=[],f=[];for(let d=0;d<l.times.length;++d){const m=l.times[d]*s;if(!(m<e||m>=n)){u.push(l.times[d]);for(let _=0;_<h;++_)f.push(l.values[d*h+_])}}u.length!==0&&(l.times=S5(u,l.times.constructor),l.values=S5(f,l.values.constructor),a.push(l))}r.tracks=a;let o=1/0;for(let c=0;c<r.tracks.length;++c)o>r.tracks[c].times[0]&&(o=r.tracks[c].times[0]);for(let c=0;c<r.tracks.length;++c)r.tracks[c].shift(-1*o);return r.resetDuration(),r}function np(i,t=0,e=i,n=30){n<=0&&(n=30);const s=e.tracks.length,r=t/n;for(let a=0;a<s;++a){const o=e.tracks[a],c=o.ValueTypeName;if(c==="bool"||c==="string")continue;const l=i.tracks.find(function(p){return p.name===o.name&&p.ValueTypeName===c});if(l===void 0)continue;let h=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let f=0;const d=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const m=o.times.length-1;let _;if(r<=o.times[0]){const p=h,y=u-h;_=o.values.slice(p,y)}else if(r>=o.times[m]){const p=m*u+h,y=p+u-h;_=o.values.slice(p,y)}else{const p=o.createInterpolant(),y=h,v=u-h;p.evaluate(r),_=p.resultBuffer.slice(y,v)}c==="quaternion"&&new l0().fromArray(_).normalize().conjugate().toArray(_);const g=l.times.length;for(let p=0;p<g;++p){const y=p*d+f;if(c==="quaternion")l0.multiplyQuaternionsFlat(l.values,y,_,0,l.values,y);else{const v=d-f*2;for(let x=0;x<v;++x)l.values[y+x]-=_[x]}}}return i.blendMode=cn,i}class ip{static convertArray(t,e){return S5(t,e)}static isTypedArray(t){return Po(t)}static getKeyframeOrder(t){return Lo(t)}static sortedArray(t,e,n){return Le(t,e,n)}static flattenJSON(t,e,n,s){Rn(t,e,n,s)}static subclip(t,e,n,s,r=30){return ep(t,e,n,s,r)}static makeClipAdditive(t,e=0,n=t,s=30){return np(t,e,n,s)}}class h7{constructor(t,e,n,s){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=s!==void 0?s:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,s=e[n],r=e[n-1];t:{e:{let a;n:{i:if(!(t<s)){for(let o=n+2;;){if(s===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=s,s=e[++n],t<s)break e}a=e.length;break n}if(!(t>=r)){const o=e[1];t<o&&(n=2,r=o);for(let c=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===c)break;if(s=r,r=e[--n-1],t>=r)break e}a=n,n=0;break n}break t}for(;n<a;){const o=n+a>>>1;t<e[o]?a=o:n=o+1}if(s=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(s===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,s)}return this.interpolate_(n,r,t,s)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,s=this.valueSize,r=t*s;for(let a=0;a!==s;++a)e[a]=n[r+a];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Do extends h7{constructor(t,e,n,s){super(t,e,n,s),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:b5,endingEnd:b5}}intervalChanged_(t,e,n){const s=this.parameterPositions;let r=t-2,a=t+1,o=s[r],c=s[a];if(o===void 0)switch(this.getSettings_().endingStart){case M5:r=t,o=2*e-n;break;case k6:r=s.length-2,o=e+s[r]-s[r+1];break;default:r=t,o=n}if(c===void 0)switch(this.getSettings_().endingEnd){case M5:a=t,c=2*n-e;break;case k6:a=1,c=n+s[1]-s[0];break;default:a=t-1,c=e}const l=(n-e)*.5,h=this.valueSize;this._weightPrev=l/(e-o),this._weightNext=l/(c-n),this._offsetPrev=r*h,this._offsetNext=a*h}interpolate_(t,e,n,s){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=t*o,l=c-o,h=this._offsetPrev,u=this._offsetNext,f=this._weightPrev,d=this._weightNext,m=(n-e)/(s-e),_=m*m,g=_*m,p=-f*g+2*f*_-f*m,y=(1+f)*g+(-1.5-2*f)*_+(-.5+f)*m+1,v=(-1-d)*g+(1.5+d)*_+.5*m,x=d*g-d*_;for(let T=0;T!==o;++T)r[T]=p*a[h+T]+y*a[l+T]+v*a[c+T]+x*a[u+T];return r}}class In extends h7{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t,e,n,s){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=t*o,l=c-o,h=(n-e)/(s-e),u=1-h;for(let f=0;f!==o;++f)r[f]=a[l+f]*u+a[c+f]*h;return r}}class Uo extends h7{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t){return this.copySampleValue_(t-1)}}class R0{constructor(t,e,n,s){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=S5(e,this.TimeBufferType),this.values=S5(n,this.ValueBufferType),this.setInterpolation(s||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:S5(t.times,Array),values:S5(t.values,Array)};const s=t.getInterpolation();s!==t.DefaultInterpolation&&(n.interpolation=s)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Uo(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new In(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Do(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case z6:e=this.InterpolantFactoryMethodDiscrete;break;case u9:e=this.InterpolantFactoryMethodLinear;break;case g8:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return z6;case this.InterpolantFactoryMethodLinear:return u9;case this.InterpolantFactoryMethodSmooth:return g8}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,s=e.length;n!==s;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,s=e.length;n!==s;++n)e[n]*=t}return this}trim(t,e){const n=this.times,s=n.length;let r=0,a=s-1;for(;r!==s&&n[r]<t;)++r;for(;a!==-1&&n[a]>e;)--a;if(++a,r!==0||a!==s){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=n.slice(r,a),this.values=this.values.slice(r*o,a*o)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,s=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let o=0;o!==r;o++){const c=n[o];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,c),t=!1;break}if(a!==null&&a>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,c,a),t=!1;break}a=c}if(s!==void 0&&Po(s))for(let o=0,c=s.length;o!==c;++o){const l=s[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),s=this.getInterpolation()===g8,r=t.length-1;let a=1;for(let o=1;o<r;++o){let c=!1;const l=t[o],h=t[o+1];if(l!==h&&(o!==1||l!==t[0]))if(s)c=!0;else{const u=o*n,f=u-n,d=u+n;for(let m=0;m!==n;++m){const _=e[u+m];if(_!==e[f+m]||_!==e[d+m]){c=!0;break}}}if(c){if(o!==a){t[a]=t[o];const u=o*n,f=a*n;for(let d=0;d!==n;++d)e[f+d]=e[u+d]}++a}}if(r>0){t[a]=t[r];for(let o=r*n,c=a*n,l=0;l!==n;++l)e[c+l]=e[o+l];++a}return a!==t.length?(this.times=t.slice(0,a),this.values=e.slice(0,a*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,s=new n(this.name,t,e);return s.createInterpolant=this.createInterpolant,s}}R0.prototype.ValueTypeName="";R0.prototype.TimeBufferType=Float32Array;R0.prototype.ValueBufferType=Float32Array;R0.prototype.DefaultInterpolation=u9;class z5 extends R0{constructor(t,e,n){super(t,e,n)}}z5.prototype.ValueTypeName="bool";z5.prototype.ValueBufferType=Array;z5.prototype.DefaultInterpolation=z6;z5.prototype.InterpolantFactoryMethodLinear=void 0;z5.prototype.InterpolantFactoryMethodSmooth=void 0;class Pn extends R0{constructor(t,e,n,s){super(t,e,n,s)}}Pn.prototype.ValueTypeName="color";class Z6 extends R0{constructor(t,e,n,s){super(t,e,n,s)}}Z6.prototype.ValueTypeName="number";class Oo extends h7{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t,e,n,s){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=(n-e)/(s-e);let l=t*o;for(let h=l+o;l!==h;l+=4)l0.slerpFlat(r,0,a,l-o,a,l,c);return r}}class u7 extends R0{constructor(t,e,n,s){super(t,e,n,s)}InterpolantFactoryMethodLinear(t){return new Oo(this.times,this.values,this.getValueSize(),t)}}u7.prototype.ValueTypeName="quaternion";u7.prototype.InterpolantFactoryMethodSmooth=void 0;class k5 extends R0{constructor(t,e,n){super(t,e,n)}}k5.prototype.ValueTypeName="string";k5.prototype.ValueBufferType=Array;k5.prototype.DefaultInterpolation=z6;k5.prototype.InterpolantFactoryMethodLinear=void 0;k5.prototype.InterpolantFactoryMethodSmooth=void 0;class $6 extends R0{constructor(t,e,n,s){super(t,e,n,s)}}$6.prototype.ValueTypeName="vector";class J6{constructor(t="",e=-1,n=[],s=O9){this.name=t,this.tracks=n,this.duration=e,this.blendMode=s,this.uuid=x0(),this.userData={},this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,s=1/(t.fps||1);for(let a=0,o=n.length;a!==o;++a)e.push(rp(n[a]).scale(s));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r.userData=JSON.parse(t.userData||"{}"),r}static toJSON(t){const e=[],n=t.tracks,s={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode,userData:JSON.stringify(t.userData)};for(let r=0,a=n.length;r!==a;++r)e.push(R0.toJSON(n[r]));return s}static CreateFromMorphTargetSequence(t,e,n,s){const r=e.length,a=[];for(let o=0;o<r;o++){let c=[],l=[];c.push((o+r-1)%r,o,(o+1)%r),l.push(0,1,0);const h=Lo(c);c=Le(c,1,h),l=Le(l,1,h),!s&&c[0]===0&&(c.push(r),l.push(l[0])),a.push(new Z6(".morphTargetInfluences["+e[o].name+"]",c,l).scale(1/n))}return new this(t,-1,a)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const s=t;n=s.geometry&&s.geometry.animations||s.animations}for(let s=0;s<n.length;s++)if(n[s].name===e)return n[s];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const s={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,c=t.length;o<c;o++){const l=t[o],h=l.name.match(r);if(h&&h.length>1){const u=h[1];let f=s[u];f||(s[u]=f=[]),f.push(l)}}const a=[];for(const o in s)a.push(this.CreateFromMorphTargetSequence(o,s[o],e,n));return a}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,f,d,m,_){if(d.length!==0){const g=[],p=[];Rn(d,g,p,m),g.length!==0&&_.push(new u(f,g,p))}},s=[],r=t.name||"default",a=t.fps||30,o=t.blendMode;let c=t.length||-1;const l=t.hierarchy||[];for(let u=0;u<l.length;u++){const f=l[u].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let m;for(m=0;m<f.length;m++)if(f[m].morphTargets)for(let _=0;_<f[m].morphTargets.length;_++)d[f[m].morphTargets[_]]=-1;for(const _ in d){const g=[],p=[];for(let y=0;y!==f[m].morphTargets.length;++y){const v=f[m];g.push(v.time),p.push(v.morphTarget===_?1:0)}s.push(new Z6(".morphTargetInfluence["+_+"]",g,p))}c=d.length*a}else{const d=".bones["+e[u].name+"]";n($6,d+".position",f,"pos",s),n(u7,d+".quaternion",f,"rot",s),n($6,d+".scale",f,"scl",s)}}return s.length===0?null:new this(r,c,s,o)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,s=t.length;n!==s;++n){const r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let n=0;n<this.tracks.length;n++)t.push(this.tracks[n].clone());const e=new this.constructor(this.name,this.duration,t,this.blendMode);return e.userData=JSON.parse(JSON.stringify(this.userData)),e}toJSON(){return this.constructor.toJSON(this)}}function sp(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Z6;case"vector":case"vector2":case"vector3":case"vector4":return $6;case"color":return Pn;case"quaternion":return u7;case"bool":case"boolean":return z5;case"string":return k5}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function rp(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=sp(i.type);if(i.times===void 0){const e=[],n=[];Rn(i.keys,e,n,"value"),i.times=e,i.values=n}return t.parse!==void 0?t.parse(i):new t(i.name,i.times,i.values,i.interpolation)}const Q0={enabled:!1,files:{},add:function(i,t){this.enabled!==!1&&(this.files[i]=t)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class Ln{constructor(t,e,n){const s=this;let r=!1,a=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.abortController=new AbortController,this.itemStart=function(h){o++,r===!1&&s.onStart!==void 0&&s.onStart(h,a,o),r=!0},this.itemEnd=function(h){a++,s.onProgress!==void 0&&s.onProgress(h,a,o),a===o&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(h){s.onError!==void 0&&s.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,u){return l.push(h,u),this},this.removeHandler=function(h){const u=l.indexOf(h);return u!==-1&&l.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=l.length;u<f;u+=2){const d=l[u],m=l[u+1];if(d.global&&(d.lastIndex=0),d.test(h))return m}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const No=new Ln;class h0{constructor(t){this.manager=t!==void 0?t:No,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(s,r){n.load(t,s,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}abort(){return this}}h0.DEFAULT_MATERIAL_NAME="__DEFAULT";const f2={};class ap extends Error{constructor(t,e){super(t),this.response=e}}class S2 extends h0{constructor(t){super(t),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(t,e,n,s){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=Q0.get(`file:${t}`);if(r!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(r),this.manager.itemEnd(t)},0),r;if(f2[t]!==void 0){f2[t].push({onLoad:e,onProgress:n,onError:s});return}f2[t]=[],f2[t].push({onLoad:e,onProgress:n,onError:s});const a=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),o=this.mimeType,c=this.responseType;fetch(a).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const h=f2[t],u=l.body.getReader(),f=l.headers.get("X-File-Size")||l.headers.get("Content-Length"),d=f?parseInt(f):0,m=d!==0;let _=0;const g=new ReadableStream({start(p){y();function y(){u.read().then(({done:v,value:x})=>{if(v)p.close();else{_+=x.byteLength;const T=new ProgressEvent("progress",{lengthComputable:m,loaded:_,total:d});for(let E=0,A=h.length;E<A;E++){const I=h[E];I.onProgress&&I.onProgress(T)}p.enqueue(x),y()}},v=>{p.error(v)})}}});return new Response(g)}else throw new ap(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return l.json();default:if(o==="")return l.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),f=u&&u[1]?u[1].toLowerCase():void 0,d=new TextDecoder(f);return l.arrayBuffer().then(m=>d.decode(m))}}}).then(l=>{Q0.add(`file:${t}`,l);const h=f2[t];delete f2[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onLoad&&d.onLoad(l)}}).catch(l=>{const h=f2[t];if(h===void 0)throw this.manager.itemError(t),l;delete f2[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class op extends h0{constructor(t){super(t)}load(t,e,n,s){const r=this,a=new S2(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(c){s?s(c):console.error(c),r.manager.itemError(t)}},n,s)}parse(t){const e=[];for(let n=0;n<t.length;n++){const s=J6.parse(t[n]);e.push(s)}return e}}class cp extends h0{constructor(t){super(t)}load(t,e,n,s){const r=this,a=[],o=new X9,c=new S2(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(r.withCredentials);let l=0;function h(u){c.load(t[u],function(f){const d=r.parse(f,!0);a[u]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},l+=1,l===6&&(d.mipmapCount===1&&(o.minFilter=L4),o.image=a,o.format=d.format,o.needsUpdate=!0,e&&e(o))},n,s)}if(Array.isArray(t))for(let u=0,f=t.length;u<f;++u)h(u);else c.load(t,function(u){const f=r.parse(u,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let m=0;m<d;m++){a[m]={mipmaps:[]};for(let _=0;_<f.mipmapCount;_++)a[m].mipmaps.push(f.mipmaps[m*f.mipmapCount+_]),a[m].format=f.format,a[m].width=f.width,a[m].height=f.height}o.image=a}else o.image.width=f.width,o.image.height=f.height,o.mipmaps=f.mipmaps;f.mipmapCount===1&&(o.minFilter=L4),o.format=f.format,o.needsUpdate=!0,e&&e(o)},n,s);return o}}const a3=new WeakMap;class K6 extends h0{constructor(t){super(t)}load(t,e,n,s){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=Q0.get(`image:${t}`);if(a!==void 0){if(a.complete===!0)r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0);else{let u=a3.get(a);u===void 0&&(u=[],a3.set(a,u)),u.push({onLoad:e,onError:s})}return a}const o=G6("img");function c(){h(),e&&e(this);const u=a3.get(this)||[];for(let f=0;f<u.length;f++){const d=u[f];d.onLoad&&d.onLoad(this)}a3.delete(this),r.manager.itemEnd(t)}function l(u){h(),s&&s(u),Q0.remove(`image:${t}`);const f=a3.get(this)||[];for(let d=0;d<f.length;d++){const m=f[d];m.onError&&m.onError(u)}a3.delete(this),r.manager.itemError(t),r.manager.itemEnd(t)}function h(){o.removeEventListener("load",c,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",l,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),Q0.add(`image:${t}`,o),r.manager.itemStart(t),o.src=t,o}}class lp extends h0{constructor(t){super(t)}load(t,e,n,s){const r=new r7;r.colorSpace=r0;const a=new K6(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function c(l){a.load(t[l],function(h){r.images[l]=h,o++,o===6&&(r.needsUpdate=!0,e&&e(r))},void 0,s)}for(let l=0;l<t.length;++l)c(l);return r}}class hp extends h0{constructor(t){super(t)}load(t,e,n,s){const r=this,a=new t2,o=new S2(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(t,function(c){let l;try{l=r.parse(c)}catch(h){if(s!==void 0)s(h);else{console.error(h);return}}l.image!==void 0?a.image=l.image:l.data!==void 0&&(a.image.width=l.width,a.image.height=l.height,a.image.data=l.data),a.wrapS=l.wrapS!==void 0?l.wrapS:w0,a.wrapT=l.wrapT!==void 0?l.wrapT:w0,a.magFilter=l.magFilter!==void 0?l.magFilter:L4,a.minFilter=l.minFilter!==void 0?l.minFilter:L4,a.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.colorSpace!==void 0&&(a.colorSpace=l.colorSpace),l.flipY!==void 0&&(a.flipY=l.flipY),l.format!==void 0&&(a.format=l.format),l.type!==void 0&&(a.type=l.type),l.mipmaps!==void 0&&(a.mipmaps=l.mipmaps,a.minFilter=K0),l.mipmapCount===1&&(a.minFilter=L4),l.generateMipmaps!==void 0&&(a.generateMipmaps=l.generateMipmaps),a.needsUpdate=!0,e&&e(a,l)},n,s),a}}class up extends h0{constructor(t){super(t)}load(t,e,n,s){const r=new C4,a=new K6(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(o){r.image=o,r.needsUpdate=!0,e!==void 0&&e(r)},n,s),r}}class K2 extends s4{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new v1(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class Fo extends K2{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(s4.DEFAULT_UP),this.updateMatrix(),this.groundColor=new v1(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Zt=new B1,ms=new C,gs=new C;class Dn{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new K(512,512),this.mapType=B0,this.map=null,this.mapPass=null,this.matrix=new B1,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new X3,this._frameExtents=new K(1,1),this._viewportCount=1,this._viewports=[new i4(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;ms.setFromMatrixPosition(t.matrixWorld),e.position.copy(ms),gs.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(gs),e.updateMatrixWorld(),Zt.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Zt,e.coordinateSystem,e.reversedDepth),e.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Zt)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class fp extends Dn{constructor(){super(new F4(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=D3*2*t.angle*this.focus,s=this.mapSize.width/this.mapSize.height*this.aspect,r=t.distance||e.far;(n!==e.fov||s!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=s,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Bo extends K2{constructor(t,e,n=0,s=Math.PI/3,r=0,a=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(s4.DEFAULT_UP),this.updateMatrix(),this.target=new s4,this.distance=n,this.angle=s,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new fp}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const _s=new B1,a6=new C,$t=new C;class dp extends Dn{constructor(){super(new F4(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new K(4,2),this._viewportCount=6,this._viewports=[new i4(2,1,1,1),new i4(0,1,1,1),new i4(3,1,1,1),new i4(1,1,1,1),new i4(3,0,1,1),new i4(1,0,1,1)],this._cubeDirections=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],this._cubeUps=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,s=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),a6.setFromMatrixPosition(t.matrixWorld),n.position.copy(a6),$t.copy(n.position),$t.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt($t),n.updateMatrixWorld(),s.makeTranslation(-a6.x,-a6.y,-a6.z),_s.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_s,n.coordinateSystem,n.reversedDepth)}}class zo extends K2{constructor(t,e,n=0,s=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=s,this.shadow=new dp}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class rt extends z9{constructor(t=-1,e=1,n=1,s=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=s,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,s,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-t,a=n+t,o=s+e,c=s-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,o-=h*this.view.offsetY,c=o-h*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,c,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class pp extends Dn{constructor(){super(new rt(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Un extends K2{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(s4.DEFAULT_UP),this.updateMatrix(),this.target=new s4,this.shadow=new pp}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class On extends K2{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class ko extends K2{constructor(t,e,n=10,s=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=s}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Vo{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new C)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,s=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*s),e.addScaledVector(a[2],.488603*r),e.addScaledVector(a[3],.488603*n),e.addScaledVector(a[4],1.092548*(n*s)),e.addScaledVector(a[5],1.092548*(s*r)),e.addScaledVector(a[6],.315392*(3*r*r-1)),e.addScaledVector(a[7],1.092548*(n*r)),e.addScaledVector(a[8],.546274*(n*n-s*s)),e}getIrradianceAt(t,e){const n=t.x,s=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],2*.511664*s),e.addScaledVector(a[2],2*.511664*r),e.addScaledVector(a[3],2*.511664*n),e.addScaledVector(a[4],2*.429043*n*s),e.addScaledVector(a[5],2*.429043*s*r),e.addScaledVector(a[6],.743125*r*r-.247708),e.addScaledVector(a[7],2*.429043*n*r),e.addScaledVector(a[8],.429043*(n*n-s*s)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let s=0;s<9;s++)n[s].fromArray(t,e+s*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let s=0;s<9;s++)n[s].toArray(t,e+s*3);return t}static getBasisAt(t,e){const n=t.x,s=t.y,r=t.z;e[0]=.282095,e[1]=.488603*s,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*s,e[5]=1.092548*s*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-s*s)}}class Ho extends K2{constructor(t=new Vo,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class at extends h0{constructor(t){super(t),this.textures={}}load(t,e,n,s){const r=this,a=new S2(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(c){s?s(c):console.error(c),r.manager.itemError(t)}},n,s)}parse(t){const e=this.textures;function n(r){return e[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),e[r]}const s=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(s.uuid=t.uuid),t.name!==void 0&&(s.name=t.name),t.color!==void 0&&s.color!==void 0&&s.color.setHex(t.color),t.roughness!==void 0&&(s.roughness=t.roughness),t.metalness!==void 0&&(s.metalness=t.metalness),t.sheen!==void 0&&(s.sheen=t.sheen),t.sheenColor!==void 0&&(s.sheenColor=new v1().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(s.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&s.emissive!==void 0&&s.emissive.setHex(t.emissive),t.specular!==void 0&&s.specular!==void 0&&s.specular.setHex(t.specular),t.specularIntensity!==void 0&&(s.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&s.specularColor!==void 0&&s.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(s.shininess=t.shininess),t.clearcoat!==void 0&&(s.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(s.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(s.dispersion=t.dispersion),t.iridescence!==void 0&&(s.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(s.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(s.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(s.transmission=t.transmission),t.thickness!==void 0&&(s.thickness=t.thickness),t.attenuationDistance!==void 0&&(s.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&s.attenuationColor!==void 0&&s.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(s.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(s.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(s.fog=t.fog),t.flatShading!==void 0&&(s.flatShading=t.flatShading),t.blending!==void 0&&(s.blending=t.blending),t.combine!==void 0&&(s.combine=t.combine),t.side!==void 0&&(s.side=t.side),t.shadowSide!==void 0&&(s.shadowSide=t.shadowSide),t.opacity!==void 0&&(s.opacity=t.opacity),t.transparent!==void 0&&(s.transparent=t.transparent),t.alphaTest!==void 0&&(s.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(s.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(s.depthFunc=t.depthFunc),t.depthTest!==void 0&&(s.depthTest=t.depthTest),t.depthWrite!==void 0&&(s.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(s.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(s.blendSrc=t.blendSrc),t.blendDst!==void 0&&(s.blendDst=t.blendDst),t.blendEquation!==void 0&&(s.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(s.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(s.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(s.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&s.blendColor!==void 0&&s.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(s.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(s.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(s.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(s.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(s.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(s.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(s.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(s.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(s.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(s.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(s.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(s.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(s.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(s.rotation=t.rotation),t.linewidth!==void 0&&(s.linewidth=t.linewidth),t.dashSize!==void 0&&(s.dashSize=t.dashSize),t.gapSize!==void 0&&(s.gapSize=t.gapSize),t.scale!==void 0&&(s.scale=t.scale),t.polygonOffset!==void 0&&(s.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(s.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(s.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(s.dithering=t.dithering),t.alphaToCoverage!==void 0&&(s.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(s.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(s.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(s.visible=t.visible),t.toneMapped!==void 0&&(s.toneMapped=t.toneMapped),t.userData!==void 0&&(s.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?s.vertexColors=t.vertexColors>0:s.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const r in t.uniforms){const a=t.uniforms[r];switch(s.uniforms[r]={},a.type){case"t":s.uniforms[r].value=n(a.value);break;case"c":s.uniforms[r].value=new v1().setHex(a.value);break;case"v2":s.uniforms[r].value=new K().fromArray(a.value);break;case"v3":s.uniforms[r].value=new C().fromArray(a.value);break;case"v4":s.uniforms[r].value=new i4().fromArray(a.value);break;case"m3":s.uniforms[r].value=new W1().fromArray(a.value);break;case"m4":s.uniforms[r].value=new B1().fromArray(a.value);break;default:s.uniforms[r].value=a.value}}if(t.defines!==void 0&&(s.defines=t.defines),t.vertexShader!==void 0&&(s.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(s.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(s.glslVersion=t.glslVersion),t.extensions!==void 0)for(const r in t.extensions)s.extensions[r]=t.extensions[r];if(t.lights!==void 0&&(s.lights=t.lights),t.clipping!==void 0&&(s.clipping=t.clipping),t.size!==void 0&&(s.size=t.size),t.sizeAttenuation!==void 0&&(s.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(s.map=n(t.map)),t.matcap!==void 0&&(s.matcap=n(t.matcap)),t.alphaMap!==void 0&&(s.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(s.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(s.bumpScale=t.bumpScale),t.normalMap!==void 0&&(s.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(s.normalMapType=t.normalMapType),t.normalScale!==void 0){let r=t.normalScale;Array.isArray(r)===!1&&(r=[r,r]),s.normalScale=new K().fromArray(r)}return t.displacementMap!==void 0&&(s.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(s.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(s.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(s.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(s.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(s.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(s.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(s.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(s.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(s.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(s.envMap=n(t.envMap)),t.envMapRotation!==void 0&&s.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(s.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(s.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(s.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(s.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(s.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(s.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(s.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(s.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(s.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(s.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(s.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(s.clearcoatNormalScale=new K().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(s.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(s.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(s.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(s.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(s.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(s.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(s.sheenRoughnessMap=n(t.sheenRoughnessMap)),s}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return at.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:So,SpriteMaterial:mn,RawShaderMaterial:Eo,ShaderMaterial:z0,PointsMaterial:_n,MeshPhysicalMaterial:To,MeshStandardMaterial:wn,MeshPhongMaterial:wo,MeshToonMaterial:Ao,MeshNormalMaterial:Co,MeshLambertMaterial:g9,MeshDepthMaterial:An,MeshDistanceMaterial:Cn,MeshBasicMaterial:$2,MeshMatcapMaterial:Ro,LineDashedMaterial:Io,LineBasicMaterial:t0,Material:X4};return new e[t]}}class De{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Go extends X1{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class Wo extends h0{constructor(t){super(t)}load(t,e,n,s){const r=this,a=new S2(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(c){s?s(c):console.error(c),r.manager.itemError(t)}},n,s)}parse(t){const e={},n={};function s(d,m){if(e[m]!==void 0)return e[m];const g=d.interleavedBuffers[m],p=r(d,g.buffer),y=m3(g.type,p),v=new H9(y,g.stride);return v.uuid=g.uuid,e[m]=v,v}function r(d,m){if(n[m]!==void 0)return n[m];const g=d.arrayBuffers[m],p=new Uint32Array(g).buffer;return n[m]=p,p}const a=t.isInstancedBufferGeometry?new Go:new X1,o=t.data.index;if(o!==void 0){const d=m3(o.type,o.array);a.setIndex(new c4(d,1))}const c=t.data.attributes;for(const d in c){const m=c[d];let _;if(m.isInterleavedBufferAttribute){const g=s(t.data,m.data);_=new U5(g,m.itemSize,m.offset,m.normalized)}else{const g=m3(m.type,m.array),p=m.isInstancedBufferAttribute?O3:c4;_=new p(g,m.itemSize,m.normalized)}m.name!==void 0&&(_.name=m.name),m.usage!==void 0&&_.setUsage(m.usage),a.setAttribute(d,_)}const l=t.data.morphAttributes;if(l)for(const d in l){const m=l[d],_=[];for(let g=0,p=m.length;g<p;g++){const y=m[g];let v;if(y.isInterleavedBufferAttribute){const x=s(t.data,y.data);v=new U5(x,y.itemSize,y.offset,y.normalized)}else{const x=m3(y.type,y.array);v=new c4(x,y.itemSize,y.normalized)}y.name!==void 0&&(v.name=y.name),_.push(v)}a.morphAttributes[d]=_}t.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const u=t.data.groups||t.data.drawcalls||t.data.offsets;if(u!==void 0)for(let d=0,m=u.length;d!==m;++d){const _=u[d];a.addGroup(_.start,_.count,_.materialIndex)}const f=t.data.boundingSphere;return f!==void 0&&(a.boundingSphere=new k4().fromJSON(f)),t.name&&(a.name=t.name),t.userData&&(a.userData=t.userData),a}}class mp extends h0{constructor(t){super(t)}load(t,e,n,s){const r=this,a=this.path===""?De.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||a;const o=new S2(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(c){let l=null;try{l=JSON.parse(c)}catch(u){s!==void 0&&s(u),console.error("THREE:ObjectLoader: Can't parse "+t+".",u.message);return}const h=l.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){s!==void 0&&s(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}r.parse(l,e)},n,s)}async loadAsync(t,e){const n=this,s=this.path===""?De.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const r=new S2(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(t,e),o=JSON.parse(a),c=o.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(o)}parse(t,e){const n=this.parseAnimations(t.animations),s=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,s),a=this.parseImages(t.images,function(){e!==void 0&&e(l)}),o=this.parseTextures(t.textures,a),c=this.parseMaterials(t.materials,o),l=this.parseObject(t.object,r,c,o,n),h=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,h),this.bindLightTargets(l),e!==void 0){let u=!1;for(const f in a)if(a[f].data instanceof HTMLImageElement){u=!0;break}u===!1&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),s=this.parseGeometries(t.geometries,n),r=await this.parseImagesAsync(t.images),a=this.parseTextures(t.textures,r),o=this.parseMaterials(t.materials,a),c=this.parseObject(t.object,s,o,a,e),l=this.parseSkeletons(t.skeletons,c);return this.bindSkeletons(c,l),this.bindLightTargets(c),c}parseShapes(t){const e={};if(t!==void 0)for(let n=0,s=t.length;n<s;n++){const r=new R5().fromJSON(t[n]);e[r.uuid]=r}return e}parseSkeletons(t,e){const n={},s={};if(e.traverse(function(r){r.isBone&&(s[r.uuid]=r)}),t!==void 0)for(let r=0,a=t.length;r<a;r++){const o=new G9().fromJSON(t[r],s);n[o.uuid]=o}return n}parseGeometries(t,e){const n={};if(t!==void 0){const s=new Wo;for(let r=0,a=t.length;r<a;r++){let o;const c=t[r];switch(c.type){case"BufferGeometry":case"InstancedBufferGeometry":o=s.parse(c);break;default:c.type in ps?o=ps[c.type].fromJSON(c,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${c.type}"`)}o.uuid=c.uuid,c.name!==void 0&&(o.name=c.name),c.userData!==void 0&&(o.userData=c.userData),n[c.uuid]=o}}return n}parseMaterials(t,e){const n={},s={};if(t!==void 0){const r=new at;r.setTextures(e);for(let a=0,o=t.length;a<o;a++){const c=t[a];n[c.uuid]===void 0&&(n[c.uuid]=r.parse(c)),s[c.uuid]=n[c.uuid]}}return s}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const s=t[n],r=J6.parse(s);e[r.uuid]=r}return e}parseImages(t,e){const n=this,s={};let r;function a(c){return n.manager.itemStart(c),r.load(c,function(){n.manager.itemEnd(c)},void 0,function(){n.manager.itemError(c),n.manager.itemEnd(c)})}function o(c){if(typeof c=="string"){const l=c,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l)?l:n.resourcePath+l;return a(h)}else return c.data?{data:m3(c.type,c.data),width:c.width,height:c.height}:null}if(t!==void 0&&t.length>0){const c=new Ln(e);r=new K6(c),r.setCrossOrigin(this.crossOrigin);for(let l=0,h=t.length;l<h;l++){const u=t[l],f=u.url;if(Array.isArray(f)){const d=[];for(let m=0,_=f.length;m<_;m++){const g=f[m],p=o(g);p!==null&&(p instanceof HTMLImageElement?d.push(p):d.push(new t2(p.data,p.width,p.height)))}s[u.uuid]=new V2(d)}else{const d=o(u.url);s[u.uuid]=new V2(d)}}}return s}async parseImagesAsync(t){const e=this,n={};let s;async function r(a){if(typeof a=="string"){const o=a,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:e.resourcePath+o;return await s.loadAsync(c)}else return a.data?{data:m3(a.type,a.data),width:a.width,height:a.height}:null}if(t!==void 0&&t.length>0){s=new K6(this.manager),s.setCrossOrigin(this.crossOrigin);for(let a=0,o=t.length;a<o;a++){const c=t[a],l=c.url;if(Array.isArray(l)){const h=[];for(let u=0,f=l.length;u<f;u++){const d=l[u],m=await r(d);m!==null&&(m instanceof HTMLImageElement?h.push(m):h.push(new t2(m.data,m.width,m.height)))}n[c.uuid]=new V2(h)}else{const h=await r(c.url);n[c.uuid]=new V2(h)}}}return n}parseTextures(t,e){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}const s={};if(t!==void 0)for(let r=0,a=t.length;r<a;r++){const o=t[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),e[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const c=e[o.image],l=c.data;let h;Array.isArray(l)?(h=new r7,l.length===6&&(h.needsUpdate=!0)):(l&&l.data?h=new t2:h=new C4,l&&(h.needsUpdate=!0)),h.source=c,h.uuid=o.uuid,o.name!==void 0&&(h.name=o.name),o.mapping!==void 0&&(h.mapping=n(o.mapping,gp)),o.channel!==void 0&&(h.channel=o.channel),o.offset!==void 0&&h.offset.fromArray(o.offset),o.repeat!==void 0&&h.repeat.fromArray(o.repeat),o.center!==void 0&&h.center.fromArray(o.center),o.rotation!==void 0&&(h.rotation=o.rotation),o.wrap!==void 0&&(h.wrapS=n(o.wrap[0],xs),h.wrapT=n(o.wrap[1],xs)),o.format!==void 0&&(h.format=o.format),o.internalFormat!==void 0&&(h.internalFormat=o.internalFormat),o.type!==void 0&&(h.type=o.type),o.colorSpace!==void 0&&(h.colorSpace=o.colorSpace),o.minFilter!==void 0&&(h.minFilter=n(o.minFilter,vs)),o.magFilter!==void 0&&(h.magFilter=n(o.magFilter,vs)),o.anisotropy!==void 0&&(h.anisotropy=o.anisotropy),o.flipY!==void 0&&(h.flipY=o.flipY),o.generateMipmaps!==void 0&&(h.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(h.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(h.compareFunction=o.compareFunction),o.userData!==void 0&&(h.userData=o.userData),s[o.uuid]=h}return s}parseObject(t,e,n,s,r){let a;function o(f){return e[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),e[f]}function c(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let m=0,_=f.length;m<_;m++){const g=f[m];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),d.push(n[g])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function l(f){return s[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),s[f]}let h,u;switch(t.type){case"Scene":a=new pn,t.background!==void 0&&(Number.isInteger(t.background)?a.background=new v1(t.background):a.background=l(t.background)),t.environment!==void 0&&(a.environment=l(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?a.fog=new V9(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(a.fog=new k9(t.fog.color,t.fog.density)),t.fog.name!==""&&(a.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(a.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&a.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(a.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&a.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":a=new F4(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(a.focus=t.focus),t.zoom!==void 0&&(a.zoom=t.zoom),t.filmGauge!==void 0&&(a.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(a.filmOffset=t.filmOffset),t.view!==void 0&&(a.view=Object.assign({},t.view));break;case"OrthographicCamera":a=new rt(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(a.zoom=t.zoom),t.view!==void 0&&(a.view=Object.assign({},t.view));break;case"AmbientLight":a=new On(t.color,t.intensity);break;case"DirectionalLight":a=new Un(t.color,t.intensity),a.target=t.target||"";break;case"PointLight":a=new zo(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":a=new ko(t.color,t.intensity,t.width,t.height);break;case"SpotLight":a=new Bo(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),a.target=t.target||"";break;case"HemisphereLight":a=new Fo(t.color,t.groundColor,t.intensity);break;case"LightProbe":a=new Ho().fromJSON(t);break;case"SkinnedMesh":h=o(t.geometry),u=c(t.material),a=new ro(h,u),t.bindMode!==void 0&&(a.bindMode=t.bindMode),t.bindMatrix!==void 0&&a.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(a.skeleton=t.skeleton);break;case"Mesh":h=o(t.geometry),u=c(t.material),a=new I4(h,u);break;case"InstancedMesh":h=o(t.geometry),u=c(t.material);const f=t.count,d=t.instanceMatrix,m=t.instanceColor;a=new ao(h,u,f),a.instanceMatrix=new O3(new Float32Array(d.array),16),m!==void 0&&(a.instanceColor=new O3(new Float32Array(m.array),m.itemSize));break;case"BatchedMesh":h=o(t.geometry),u=c(t.material),a=new oo(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,u),a.geometry=h,a.perObjectFrustumCulled=t.perObjectFrustumCulled,a.sortObjects=t.sortObjects,a._drawRanges=t.drawRanges,a._reservedRanges=t.reservedRanges,a._geometryInfo=t.geometryInfo.map(_=>{let g=null,p=null;return _.boundingBox!==void 0&&(g=new z4().fromJSON(_.boundingBox)),_.boundingSphere!==void 0&&(p=new k4().fromJSON(_.boundingSphere)),{..._,boundingBox:g,boundingSphere:p}}),a._instanceInfo=t.instanceInfo,a._availableInstanceIds=t._availableInstanceIds,a._availableGeometryIds=t._availableGeometryIds,a._nextIndexStart=t.nextIndexStart,a._nextVertexStart=t.nextVertexStart,a._geometryCount=t.geometryCount,a._maxInstanceCount=t.maxInstanceCount,a._maxVertexCount=t.maxVertexCount,a._maxIndexCount=t.maxIndexCount,a._geometryInitialized=t.geometryInitialized,a._matricesTexture=l(t.matricesTexture.uuid),a._indirectTexture=l(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(a._colorsTexture=l(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(a.boundingSphere=new k4().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(a.boundingBox=new z4().fromJSON(t.boundingBox));break;case"LOD":a=new so;break;case"Line":a=new X2(o(t.geometry),c(t.material));break;case"LineLoop":a=new co(o(t.geometry),c(t.material));break;case"LineSegments":a=new s2(o(t.geometry),c(t.material));break;case"PointCloud":case"Points":a=new lo(o(t.geometry),c(t.material));break;case"Sprite":a=new io(c(t.material));break;case"Group":a=new g3;break;case"Bone":a=new gn;break;default:a=new s4}if(a.uuid=t.uuid,t.name!==void 0&&(a.name=t.name),t.matrix!==void 0?(a.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=t.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(t.position!==void 0&&a.position.fromArray(t.position),t.rotation!==void 0&&a.rotation.fromArray(t.rotation),t.quaternion!==void 0&&a.quaternion.fromArray(t.quaternion),t.scale!==void 0&&a.scale.fromArray(t.scale)),t.up!==void 0&&a.up.fromArray(t.up),t.castShadow!==void 0&&(a.castShadow=t.castShadow),t.receiveShadow!==void 0&&(a.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(a.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(a.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(a.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(a.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(a.visible=t.visible),t.frustumCulled!==void 0&&(a.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(a.renderOrder=t.renderOrder),t.userData!==void 0&&(a.userData=t.userData),t.layers!==void 0&&(a.layers.mask=t.layers),t.children!==void 0){const f=t.children;for(let d=0;d<f.length;d++)a.add(this.parseObject(f[d],e,n,s,r))}if(t.animations!==void 0){const f=t.animations;for(let d=0;d<f.length;d++){const m=f[d];a.animations.push(r[m])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(a.autoUpdate=t.autoUpdate);const f=t.levels;for(let d=0;d<f.length;d++){const m=f[d],_=a.getObjectByProperty("uuid",m.object);_!==void 0&&a.addLevel(_,m.distance,m.hysteresis)}}return a}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const s=e[n.skeleton];s===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(s,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,s=t.getObjectByProperty("uuid",n);s!==void 0?e.target=s:e.target=new s4}})}}const gp={UVMapping:C9,CubeReflectionMapping:b2,CubeRefractionMapping:W2,EquirectangularReflectionMapping:O6,EquirectangularRefractionMapping:N6,CubeUVReflectionMapping:H3},xs={RepeatWrapping:F6,ClampToEdgeWrapping:w0,MirroredRepeatWrapping:B6},vs={NearestFilter:B4,NearestMipmapNearestFilter:je,NearestMipmapLinearFilter:p3,LinearFilter:L4,LinearMipmapNearestFilter:y6,LinearMipmapLinearFilter:K0},Jt=new WeakMap;class _p extends h0{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(t){return this.options=t,this}load(t,e,n,s){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=Q0.get(`image-bitmap:${t}`);if(a!==void 0){if(r.manager.itemStart(t),a.then){a.then(l=>{if(Jt.has(a)===!0)s&&s(Jt.get(a)),r.manager.itemError(t),r.manager.itemEnd(t);else return e&&e(l),r.manager.itemEnd(t),l});return}return setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a}const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,o.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const c=fetch(t,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){return Q0.add(`image-bitmap:${t}`,l),e&&e(l),r.manager.itemEnd(t),l}).catch(function(l){s&&s(l),Jt.set(c,l),Q0.remove(`image-bitmap:${t}`),r.manager.itemError(t),r.manager.itemEnd(t)});Q0.add(`image-bitmap:${t}`,c),r.manager.itemStart(t)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let n8,Nn=class{static getContext(){return n8===void 0&&(n8=new(window.AudioContext||window.webkitAudioContext)),n8}static setContext(t){n8=t}};class xp extends h0{constructor(t){super(t)}load(t,e,n,s){const r=this,a=new S2(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(c){try{const l=c.slice(0);Nn.getContext().decodeAudioData(l,function(u){e(u)}).catch(o)}catch(l){o(l)}},n,s);function o(c){s?s(c):console.error(c),r.manager.itemError(t)}}}const ys=new B1,bs=new B1,a5=new B1;class vp{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new F4,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new F4,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,a5.copy(t.projectionMatrix);const s=e.eyeSep/2,r=s*e.near/e.focus,a=e.near*Math.tan(C5*e.fov*.5)/e.zoom;let o,c;bs.elements[12]=-s,ys.elements[12]=s,o=-a*e.aspect+r,c=a*e.aspect+r,a5.elements[0]=2*e.near/(c-o),a5.elements[8]=(c+o)/(c-o),this.cameraL.projectionMatrix.copy(a5),o=-a*e.aspect-r,c=a*e.aspect-r,a5.elements[0]=2*e.near/(c-o),a5.elements[8]=(c+o)/(c-o),this.cameraR.projectionMatrix.copy(a5)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(bs),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(ys)}}class Xo extends F4{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class Fn{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const o5=new C,Kt=new l0,yp=new C,c5=new C,l5=new C;class bp extends s4{constructor(){super(),this.type="AudioListener",this.context=Nn.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Fn}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(o5,Kt,yp),c5.set(0,0,-1).applyQuaternion(Kt),l5.set(0,1,0).applyQuaternion(Kt),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(o5.x,n),e.positionY.linearRampToValueAtTime(o5.y,n),e.positionZ.linearRampToValueAtTime(o5.z,n),e.forwardX.linearRampToValueAtTime(c5.x,n),e.forwardY.linearRampToValueAtTime(c5.y,n),e.forwardZ.linearRampToValueAtTime(c5.z,n),e.upX.linearRampToValueAtTime(l5.x,n),e.upY.linearRampToValueAtTime(l5.y,n),e.upZ.linearRampToValueAtTime(l5.z,n)}else e.setPosition(o5.x,o5.y,o5.z),e.setOrientation(c5.x,c5.y,c5.z,l5.x,l5.y,l5.z)}}class Yo extends s4{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const h5=new C,Ms=new l0,Mp=new C,u5=new C;class Sp extends Yo{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(h5,Ms,Mp),u5.set(0,0,1).applyQuaternion(Ms);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(h5.x,n),e.positionY.linearRampToValueAtTime(h5.y,n),e.positionZ.linearRampToValueAtTime(h5.z,n),e.orientationX.linearRampToValueAtTime(u5.x,n),e.orientationY.linearRampToValueAtTime(u5.y,n),e.orientationZ.linearRampToValueAtTime(u5.z,n)}else e.setPosition(h5.x,h5.y,h5.z),e.setOrientation(u5.x,u5.y,u5.z)}}class Ep{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class qo{constructor(t,e,n){this.binding=t,this.valueSize=n;let s,r,a;switch(e){case"quaternion":s=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":s=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:s=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=s,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,s=this.valueSize,r=t*s+s;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==s;++o)n[r+o]=n[o];a=e}else{a+=e;const o=e/a;this._mixBufferRegion(n,r,0,o,s)}this.cumulativeWeight=a}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,s=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,s,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,s=t*e+e,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const c=e*this._origIndex;this._mixBufferRegion(n,s,c,1-r,e)}a>0&&this._mixBufferRegionAdditive(n,s,this._addIndex*e,1,e);for(let c=e,l=e+e;c!==l;++c)if(n[c]!==n[c+e]){o.setValue(n,s);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,s=n*this._origIndex;t.getValue(e,s);for(let r=n,a=s;r!==a;++r)e[r]=e[s+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,s,r){if(s>=.5)for(let a=0;a!==r;++a)t[e+a]=t[n+a]}_slerp(t,e,n,s){l0.slerpFlat(t,e,t,e,t,n,s)}_slerpAdditive(t,e,n,s,r){const a=this._workIndex*r;l0.multiplyQuaternionsFlat(t,a,t,e,t,n),l0.slerpFlat(t,e,t,e,t,a,s)}_lerp(t,e,n,s,r){const a=1-s;for(let o=0;o!==r;++o){const c=e+o;t[c]=t[c]*a+t[n+o]*s}}_lerpAdditive(t,e,n,s,r){for(let a=0;a!==r;++a){const o=e+a;t[o]=t[o]+t[n+a]*s}}}const Bn="\\[\\]\\.:\\/",Tp=new RegExp("["+Bn+"]","g"),zn="[^"+Bn+"]",wp="[^"+Bn.replace("\\.","")+"]",Ap=/((?:WC+[\/:])*)/.source.replace("WC",zn),Cp=/(WCOD+)?/.source.replace("WCOD",wp),Rp=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",zn),Ip=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",zn),Pp=new RegExp("^"+Ap+Cp+Rp+Ip+"$"),Lp=["material","materials","bones","map"];class Dp{constructor(t,e,n){const s=n||n4.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,s)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,s=this._bindings[n];s!==void 0&&s.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let s=this._targetGroup.nCachedObjects_,r=n.length;s!==r;++s)n[s].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class n4{constructor(t,e,n){this.path=e,this.parsedPath=n||n4.parseTrackName(e),this.node=n4.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new n4.Composite(t,e,n):new n4(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Tp,"")}static parseTrackName(t){const e=Pp.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},s=n.nodeName&&n.nodeName.lastIndexOf(".");if(s!==void 0&&s!==-1){const r=n.nodeName.substring(s+1);Lp.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,s),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===e||o.uuid===e)return o;const c=n(o.children);if(c)return c}return null},s=n(t.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)t[e++]=n[s]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,s=e.propertyName;let r=e.propertyIndex;if(t||(t=n4.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let l=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let h=0;h<t.length;h++)if(t[h].name===l){l=h;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(l!==void 0){if(t[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[l]}}const a=t[s];if(a===void 0){const l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+s+" but it wasn't found.",t);return}let o=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?o=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(r!==void 0){if(s==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[r]!==void 0&&(r=t.morphTargetDictionary[r])}c=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(c=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=s;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}n4.Composite=Dp;n4.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};n4.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};n4.prototype.GetterByBindingType=[n4.prototype._getValue_direct,n4.prototype._getValue_array,n4.prototype._getValue_arrayElement,n4.prototype._getValue_toArray];n4.prototype.SetterByBindingTypeAndVersioning=[[n4.prototype._setValue_direct,n4.prototype._setValue_direct_setNeedsUpdate,n4.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[n4.prototype._setValue_array,n4.prototype._setValue_array_setNeedsUpdate,n4.prototype._setValue_array_setMatrixWorldNeedsUpdate],[n4.prototype._setValue_arrayElement,n4.prototype._setValue_arrayElement_setNeedsUpdate,n4.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[n4.prototype._setValue_fromArray,n4.prototype._setValue_fromArray_setNeedsUpdate,n4.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Up{constructor(){this.isAnimationObjectGroup=!0,this.uuid=x0(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,s=arguments.length;n!==s;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,s=this._parsedPaths,r=this._bindings,a=r.length;let o,c=t.length,l=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const f=arguments[h],d=f.uuid;let m=e[d];if(m===void 0){m=c++,e[d]=m,t.push(f);for(let _=0,g=a;_!==g;++_)r[_].push(new n4(f,n[_],s[_]))}else if(m<l){o=t[m];const _=--l,g=t[_];e[g.uuid]=m,t[m]=g,e[d]=_,t[_]=f;for(let p=0,y=a;p!==y;++p){const v=r[p],x=v[_];let T=v[m];v[m]=x,T===void 0&&(T=new n4(f,n[p],s[p])),v[_]=T}}else t[m]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,s=n.length;let r=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const c=arguments[a],l=c.uuid,h=e[l];if(h!==void 0&&h>=r){const u=r++,f=t[u];e[f.uuid]=h,t[h]=f,e[l]=u,t[u]=c;for(let d=0,m=s;d!==m;++d){const _=n[d],g=_[u],p=_[h];_[h]=g,_[u]=p}}}this.nCachedObjects_=r}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,s=n.length;let r=this.nCachedObjects_,a=t.length;for(let o=0,c=arguments.length;o!==c;++o){const l=arguments[o],h=l.uuid,u=e[h];if(u!==void 0)if(delete e[h],u<r){const f=--r,d=t[f],m=--a,_=t[m];e[d.uuid]=u,t[u]=d,e[_.uuid]=f,t[f]=_,t.pop();for(let g=0,p=s;g!==p;++g){const y=n[g],v=y[f],x=y[m];y[u]=v,y[f]=x,y.pop()}}else{const f=--a,d=t[f];f>0&&(e[d.uuid]=u),t[u]=d,t.pop();for(let m=0,_=s;m!==_;++m){const g=n[m];g[u]=g[f],g.pop()}}}this.nCachedObjects_=r}subscribe_(t,e){const n=this._bindingsIndicesByPath;let s=n[t];const r=this._bindings;if(s!==void 0)return r[s];const a=this._paths,o=this._parsedPaths,c=this._objects,l=c.length,h=this.nCachedObjects_,u=new Array(l);s=r.length,n[t]=s,a.push(t),o.push(e),r.push(u);for(let f=h,d=c.length;f!==d;++f){const m=c[f];u[f]=new n4(m,t,e)}return u}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const s=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,c=a[o],l=t[o];e[l]=n,a[n]=c,a.pop(),r[n]=r[o],r.pop(),s[n]=s[o],s.pop()}}}class Zo{constructor(t,e,n=null,s=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=s;const r=e.tracks,a=r.length,o=new Array(a),c={endingStart:b5,endingEnd:b5};for(let l=0;l!==a;++l){const h=r[l].createInterpolant(null);o[l]=h,h.settings=c}this._interpolantSettings=c,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Na,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const s=this._clip.duration,r=t._clip.duration,a=r/s,o=s/r;t.warp(1,a,e),this.warp(o,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const s=this._mixer,r=s.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=s._lendControlInterpolant(),this._timeScaleInterpolant=o);const c=o.parameterPositions,l=o.sampleValues;return c[0]=r,c[1]=r+n,l[0]=t/a,l[1]=e/a,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,s){if(!this.enabled){this._updateWeight(t);return}const r=this._startTime;if(r!==null){const c=(t-r)*n;c<0||n===0?e=0:(this._startTime=null,e=n*c)}e*=this._updateTimeScale(t);const a=this._updateTime(e),o=this._updateWeight(t);if(o>0){const c=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case cn:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(a),l[h].accumulateAdditive(o);break;case O9:default:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(a),l[h].accumulate(s,o)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const s=n.evaluate(t)[0];e*=s,t>n.parameterPositions[1]&&(this.stopFading(),s===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const s=n.evaluate(t)[0];e*=s,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let s=this.time+t,r=this._loopCount;const a=n===Fa;if(t===0)return r===-1?s:a&&(r&1)===1?e-s:s;if(n===Oa){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(s>=e)s=e;else if(s<0)s=0;else{this.time=s;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=s,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(r===-1&&(t>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),s>=e||s<0){const o=Math.floor(s/e);s-=e*o,r+=Math.abs(o);const c=this.repetitions-r;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,s=t>0?e:0,this.time=s,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(c===1){const l=t<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=s,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=s;if(a&&(r&1)===1)return e-s}return s}_setEndings(t,e,n){const s=this._interpolantSettings;n?(s.endingStart=M5,s.endingEnd=M5):(t?s.endingStart=this.zeroSlopeAtStart?M5:b5:s.endingStart=k6,e?s.endingEnd=this.zeroSlopeAtEnd?M5:b5:s.endingEnd=k6)}_scheduleFading(t,e,n){const s=this._mixer,r=s.time;let a=this._weightInterpolant;a===null&&(a=s._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,c=a.sampleValues;return o[0]=r,c[0]=e,o[1]=r+t,c[1]=n,this}}const Op=new Float32Array(1);class Np extends i2{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,s=t._clip.tracks,r=s.length,a=t._propertyBindings,o=t._interpolants,c=n.uuid,l=this._bindingsByRootAndName;let h=l[c];h===void 0&&(h={},l[c]=h);for(let u=0;u!==r;++u){const f=s[u],d=f.name;let m=h[d];if(m!==void 0)++m.referenceCount,a[u]=m;else{if(m=a[u],m!==void 0){m._cacheIndex===null&&(++m.referenceCount,this._addInactiveBinding(m,c,d));continue}const _=e&&e._propertyBindings[u].binding.parsedPath;m=new qo(n4.create(n,d,_),f.ValueTypeName,f.getValueSize()),++m.referenceCount,this._addInactiveBinding(m,c,d),a[u]=m}o[u].resultBuffer=m.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,s=t._clip.uuid,r=this._actionsByClip[s];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,s,n)}const e=t._propertyBindings;for(let n=0,s=e.length;n!==s;++n){const r=e[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,s=e.length;n!==s;++n){const r=e[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const s=this._actions,r=this._actionsByClip;let a=r[e];if(a===void 0)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{const o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=s.length,s.push(t),a.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],s=t._cacheIndex;n._cacheIndex=s,e[s]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,a=this._actionsByClip,o=a[r],c=o.knownActions,l=c[c.length-1],h=t._byClipCacheIndex;l._byClipCacheIndex=h,c[h]=l,c.pop(),t._byClipCacheIndex=null;const u=o.actionByRoot,f=(t._localRoot||this._root).uuid;delete u[f],c.length===0&&delete a[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,s=e.length;n!==s;++n){const r=e[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,s=this._nActiveActions++,r=e[s];t._cacheIndex=s,e[s]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,s=--this._nActiveActions,r=e[s];t._cacheIndex=s,e[s]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const s=this._bindingsByRootAndName,r=this._bindings;let a=s[e];a===void 0&&(a={},s[e]=a),a[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,s=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[s],c=e[e.length-1],l=t._cacheIndex;c._cacheIndex=l,e[l]=c,e.pop(),delete o[r],Object.keys(o).length===0&&delete a[s]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,s=this._nActiveBindings++,r=e[s];t._cacheIndex=s,e[s]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,s=--this._nActiveBindings,r=e[s];t._cacheIndex=s,e[s]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new In(new Float32Array(2),new Float32Array(2),1,Op),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,s=--this._nActiveControlInterpolants,r=e[s];t.__cacheIndex=s,e[s]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const s=e||this._root,r=s.uuid;let a=typeof t=="string"?J6.findByName(s,t):t;const o=a!==null?a.uuid:t,c=this._actionsByClip[o];let l=null;if(n===void 0&&(a!==null?n=a.blendMode:n=O9),c!==void 0){const u=c.actionByRoot[r];if(u!==void 0&&u.blendMode===n)return u;l=c.knownActions[0],a===null&&(a=l._clip)}if(a===null)return null;const h=new Zo(this,a,e,n);return this._bindAction(h,l),this._addInactiveAction(h,o,r),h}existingAction(t,e){const n=e||this._root,s=n.uuid,r=typeof t=="string"?J6.findByName(n,t):t,a=r?r.uuid:t,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[s]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,s=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1;for(let l=0;l!==n;++l)e[l]._update(s,t,r,a);const o=this._bindings,c=this._nActiveBindings;for(let l=0;l!==c;++l)o[l].apply(a);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,s=this._actionsByClip,r=s[n];if(r!==void 0){const a=r.knownActions;for(let o=0,c=a.length;o!==c;++o){const l=a[o];this._deactivateAction(l);const h=l._cacheIndex,u=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=h,e[h]=u,e.pop(),this._removeInactiveBindingsForAction(l)}delete s[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,c=o[e];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const s=this._bindingsByRootAndName,r=s[e];if(r!==void 0)for(const a in r){const o=r[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Fp extends un{constructor(t=1,e=1,n=1,s={}){super(t,e,s),this.isRenderTarget3D=!0,this.depth=n,this.texture=new F9(null,t,e,n),this._setTextureOptions(s),this.texture.isRenderTargetTexture=!0}}class kn{constructor(t){this.value=t}clone(){return new kn(this.value.clone===void 0?this.value:this.value.clone())}}let Bp=0;class zp extends i2{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Bp++}),this.name="",this.usage=H6,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,s=e.length;n<s;n++){const r=Array.isArray(e[n])?e[n]:[e[n]];for(let a=0;a<r.length;a++)this.uniforms.push(r[a].clone())}return this}clone(){return new this.constructor().copy(this)}}class kp extends H9{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class Vp{constructor(t,e,n,s,r,a=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=s,this.count=r,this.normalized=a,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const Ss=new B1;class $o{constructor(t,e,n=0,s=1/0){this.ray=new W3(t,e),this.near=n,this.far=s,this.camera=null,this.layers=new B9,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return Ss.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Ss),this}intersectObject(t,e=!0,n=[]){return Ue(t,this,n,e),n.sort(Es),n}intersectObjects(t,e=!0,n=[]){for(let s=0,r=t.length;s<r;s++)Ue(t[s],this,n,e);return n.sort(Es),n}}function Es(i,t){return i.distance-t.distance}function Ue(i,t,e,n){let s=!0;if(i.layers.test(t.layers)&&i.raycast(t,e)===!1&&(s=!1),s===!0&&n===!0){const r=i.children;for(let a=0,o=r.length;a<o;a++)Ue(r[a],t,e,!0)}}let Hp=class{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(t){this._document=t,t.hidden!==void 0&&(this._pageVisibilityHandler=Gp.bind(this),t.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){this._pageVisibilityHandler!==null&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(t){return this._timescale=t,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(t){return this._pageVisibilityHandler!==null&&this._document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(t!==void 0?t:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}};function Gp(){this._document.hidden===!1&&this.reset()}class Wp{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=N1(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(N1(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Xp{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class Vn{constructor(t,e,n,s){Vn.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,s)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,s){const r=this.elements;return r[0]=t,r[2]=e,r[1]=n,r[3]=s,this}}const Ts=new K;class Yp{constructor(t=new K(1/0,1/0),e=new K(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ts.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Ts).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const ws=new C,i8=new C,o3=new C,c3=new C,Qt=new C,qp=new C,Zp=new C;class $p{constructor(t=new C,e=new C){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){ws.subVectors(t,this.start),i8.subVectors(this.end,this.start);const n=i8.dot(i8);let r=i8.dot(ws)/n;return e&&(r=N1(r,0,1)),r}closestPointToPoint(t,e,n){const s=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(s).add(this.start)}distanceSqToLine3(t,e=qp,n=Zp){const s=10000000000000001e-32;let r,a;const o=this.start,c=t.start,l=this.end,h=t.end;o3.subVectors(l,o),c3.subVectors(h,c),Qt.subVectors(o,c);const u=o3.dot(o3),f=c3.dot(c3),d=c3.dot(Qt);if(u<=s&&f<=s)return e.copy(o),n.copy(c),e.sub(n),e.dot(e);if(u<=s)r=0,a=d/f,a=N1(a,0,1);else{const m=o3.dot(Qt);if(f<=s)a=0,r=N1(-m/u,0,1);else{const _=o3.dot(c3),g=u*f-_*_;g!==0?r=N1((_*d-m*f)/g,0,1):r=0,a=(_*r+d)/f,a<0?(a=0,r=N1(-m/u,0,1)):a>1&&(a=1,r=N1((_-m)/u,0,1))}}return e.copy(o).add(o3.multiplyScalar(r)),n.copy(c).add(c3.multiplyScalar(a)),e.sub(n),e.dot(e)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const As=new C;class Jp extends s4{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new X1,s=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,c=32;a<c;a++,o++){const l=a/c*Math.PI*2,h=o/c*Math.PI*2;s.push(Math.cos(l),Math.sin(l),1,Math.cos(h),Math.sin(h),1)}n.setAttribute("position",new M1(s,3));const r=new t0({fog:!1,toneMapped:!1});this.cone=new s2(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),As.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(As),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const L2=new C,s8=new B1,jt=new B1;class Kp extends s2{constructor(t){const e=Jo(t),n=new X1,s=[],r=[];for(let l=0;l<e.length;l++){const h=e[l];h.parent&&h.parent.isBone&&(s.push(0,0,0),s.push(0,0,0),r.push(0,0,0),r.push(0,0,0))}n.setAttribute("position",new M1(s,3)),n.setAttribute("color",new M1(r,3));const a=new t0({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,a),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;const o=new v1(255),c=new v1(65280);this.setColors(o,c)}updateMatrixWorld(t){const e=this.bones,n=this.geometry,s=n.getAttribute("position");jt.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<e.length;r++){const o=e[r];o.parent&&o.parent.isBone&&(s8.multiplyMatrices(jt,o.matrixWorld),L2.setFromMatrixPosition(s8),s.setXYZ(a,L2.x,L2.y,L2.z),s8.multiplyMatrices(jt,o.parent.matrixWorld),L2.setFromMatrixPosition(s8),s.setXYZ(a+1,L2.x,L2.y,L2.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}setColors(t,e){const s=this.geometry.getAttribute("color");for(let r=0;r<s.count;r+=2)s.setXYZ(r,t.r,t.g,t.b),s.setXYZ(r+1,e.r,e.g,e.b);return s.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function Jo(i){const t=[];i.isBone===!0&&t.push(i);for(let e=0;e<i.children.length;e++)t.push(...Jo(i.children[e]));return t}class Qp extends I4{constructor(t,e,n){const s=new l7(e,4,2),r=new $2({wireframe:!0,fog:!1,toneMapped:!1});super(s,r),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const jp=new C,Cs=new v1,Rs=new v1;class tm extends s4{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const s=new c7(e);s.rotateY(Math.PI*.5),this.material=new $2({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=s.getAttribute("position"),a=new Float32Array(r.count*3);s.setAttribute("color",new c4(a,3)),this.add(new I4(s,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");Cs.copy(this.light.color),Rs.copy(this.light.groundColor);for(let n=0,s=e.count;n<s;n++){const r=n<s/2?Cs:Rs;e.setXYZ(n,r.r,r.g,r.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(jp.setFromMatrixPosition(this.light.matrixWorld).negate())}}class em extends s2{constructor(t=10,e=10,n=4473924,s=8947848){n=new v1(n),s=new v1(s);const r=e/2,a=t/e,o=t/2,c=[],l=[];for(let f=0,d=0,m=-o;f<=e;f++,m+=a){c.push(-o,0,m,o,0,m),c.push(m,0,-o,m,0,o);const _=f===r?n:s;_.toArray(l,d),d+=3,_.toArray(l,d),d+=3,_.toArray(l,d),d+=3,_.toArray(l,d),d+=3}const h=new X1;h.setAttribute("position",new M1(c,3)),h.setAttribute("color",new M1(l,3));const u=new t0({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class nm extends s2{constructor(t=10,e=16,n=8,s=64,r=4473924,a=8947848){r=new v1(r),a=new v1(a);const o=[],c=[];if(e>1)for(let u=0;u<e;u++){const f=u/e*(Math.PI*2),d=Math.sin(f)*t,m=Math.cos(f)*t;o.push(0,0,0),o.push(d,0,m);const _=u&1?r:a;c.push(_.r,_.g,_.b),c.push(_.r,_.g,_.b)}for(let u=0;u<n;u++){const f=u&1?r:a,d=t-t/n*u;for(let m=0;m<s;m++){let _=m/s*(Math.PI*2),g=Math.sin(_)*d,p=Math.cos(_)*d;o.push(g,0,p),c.push(f.r,f.g,f.b),_=(m+1)/s*(Math.PI*2),g=Math.sin(_)*d,p=Math.cos(_)*d,o.push(g,0,p),c.push(f.r,f.g,f.b)}}const l=new X1;l.setAttribute("position",new M1(o,3)),l.setAttribute("color",new M1(c,3));const h=new t0({vertexColors:!0,toneMapped:!1});super(l,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Is=new C,r8=new C,Ps=new C;class im extends s4{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let s=new X1;s.setAttribute("position",new M1([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new t0({fog:!1,toneMapped:!1});this.lightPlane=new X2(s,r),this.add(this.lightPlane),s=new X1,s.setAttribute("position",new M1([0,0,0,0,0,1],3)),this.targetLine=new X2(s,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Is.setFromMatrixPosition(this.light.matrixWorld),r8.setFromMatrixPosition(this.light.target.matrixWorld),Ps.subVectors(r8,Is),this.lightPlane.lookAt(r8),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(r8),this.targetLine.scale.z=Ps.length()}}const a8=new C,A4=new z9;class sm extends s2{constructor(t){const e=new X1,n=new t0({color:16777215,vertexColors:!0,toneMapped:!1}),s=[],r=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(m,_){c(m),c(_)}function c(m){s.push(0,0,0),r.push(0,0,0),a[m]===void 0&&(a[m]=[]),a[m].push(s.length/3-1)}e.setAttribute("position",new M1(s,3)),e.setAttribute("color",new M1(r,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const l=new v1(16755200),h=new v1(16711680),u=new v1(43775),f=new v1(16777215),d=new v1(3355443);this.setColors(l,h,u,f,d)}setColors(t,e,n,s,r){const o=this.geometry.getAttribute("color");return o.setXYZ(0,t.r,t.g,t.b),o.setXYZ(1,t.r,t.g,t.b),o.setXYZ(2,t.r,t.g,t.b),o.setXYZ(3,t.r,t.g,t.b),o.setXYZ(4,t.r,t.g,t.b),o.setXYZ(5,t.r,t.g,t.b),o.setXYZ(6,t.r,t.g,t.b),o.setXYZ(7,t.r,t.g,t.b),o.setXYZ(8,t.r,t.g,t.b),o.setXYZ(9,t.r,t.g,t.b),o.setXYZ(10,t.r,t.g,t.b),o.setXYZ(11,t.r,t.g,t.b),o.setXYZ(12,t.r,t.g,t.b),o.setXYZ(13,t.r,t.g,t.b),o.setXYZ(14,t.r,t.g,t.b),o.setXYZ(15,t.r,t.g,t.b),o.setXYZ(16,t.r,t.g,t.b),o.setXYZ(17,t.r,t.g,t.b),o.setXYZ(18,t.r,t.g,t.b),o.setXYZ(19,t.r,t.g,t.b),o.setXYZ(20,t.r,t.g,t.b),o.setXYZ(21,t.r,t.g,t.b),o.setXYZ(22,t.r,t.g,t.b),o.setXYZ(23,t.r,t.g,t.b),o.setXYZ(24,e.r,e.g,e.b),o.setXYZ(25,e.r,e.g,e.b),o.setXYZ(26,e.r,e.g,e.b),o.setXYZ(27,e.r,e.g,e.b),o.setXYZ(28,e.r,e.g,e.b),o.setXYZ(29,e.r,e.g,e.b),o.setXYZ(30,e.r,e.g,e.b),o.setXYZ(31,e.r,e.g,e.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,s.r,s.g,s.b),o.setXYZ(39,s.r,s.g,s.b),o.setXYZ(40,r.r,r.g,r.b),o.setXYZ(41,r.r,r.g,r.b),o.setXYZ(42,r.r,r.g,r.b),o.setXYZ(43,r.r,r.g,r.b),o.setXYZ(44,r.r,r.g,r.b),o.setXYZ(45,r.r,r.g,r.b),o.setXYZ(46,r.r,r.g,r.b),o.setXYZ(47,r.r,r.g,r.b),o.setXYZ(48,r.r,r.g,r.b),o.setXYZ(49,r.r,r.g,r.b),o.needsUpdate=!0,this}update(){const t=this.geometry,e=this.pointMap,n=1,s=1;let r,a;if(A4.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),this.camera.reversedDepth===!0)r=1,a=0;else if(this.camera.coordinateSystem===_0)r=-1,a=1;else if(this.camera.coordinateSystem===L3)r=0,a=1;else throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);R4("c",e,t,A4,0,0,r),R4("t",e,t,A4,0,0,a),R4("n1",e,t,A4,-n,-s,r),R4("n2",e,t,A4,n,-s,r),R4("n3",e,t,A4,-n,s,r),R4("n4",e,t,A4,n,s,r),R4("f1",e,t,A4,-n,-s,a),R4("f2",e,t,A4,n,-s,a),R4("f3",e,t,A4,-n,s,a),R4("f4",e,t,A4,n,s,a),R4("u1",e,t,A4,n*.7,s*1.1,r),R4("u2",e,t,A4,-n*.7,s*1.1,r),R4("u3",e,t,A4,0,s*2,r),R4("cf1",e,t,A4,-n,0,a),R4("cf2",e,t,A4,n,0,a),R4("cf3",e,t,A4,0,-s,a),R4("cf4",e,t,A4,0,s,a),R4("cn1",e,t,A4,-n,0,r),R4("cn2",e,t,A4,n,0,r),R4("cn3",e,t,A4,0,-s,r),R4("cn4",e,t,A4,0,s,r),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function R4(i,t,e,n,s,r,a){a8.set(s,r,a).unproject(n);const o=t[i];if(o!==void 0){const c=e.getAttribute("position");for(let l=0,h=o.length;l<h;l++)c.setXYZ(o[l],a8.x,a8.y,a8.z)}}const o8=new z4;class rm extends s2{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),s=new Float32Array(24),r=new X1;r.setIndex(new c4(n,1)),r.setAttribute("position",new c4(s,3)),super(r,new t0({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&o8.setFromObject(this.object),o8.isEmpty())return;const t=o8.min,e=o8.max,n=this.geometry.attributes.position,s=n.array;s[0]=e.x,s[1]=e.y,s[2]=e.z,s[3]=t.x,s[4]=e.y,s[5]=e.z,s[6]=t.x,s[7]=t.y,s[8]=e.z,s[9]=e.x,s[10]=t.y,s[11]=e.z,s[12]=e.x,s[13]=e.y,s[14]=t.z,s[15]=t.x,s[16]=e.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=e.x,s[22]=t.y,s[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class am extends s2{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),s=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new X1;r.setIndex(new c4(n,1)),r.setAttribute("position",new M1(s,3)),super(r,new t0({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class om extends X2{constructor(t,e=1,n=16776960){const s=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new X1;a.setAttribute("position",new M1(r,3)),a.computeBoundingSphere(),super(a,new t0({color:s,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],c=new X1;c.setAttribute("position",new M1(o,3)),c.computeBoundingSphere(),this.add(new I4(c,new $2({color:s,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Ls=new C;let c8,te;class cm extends s4{constructor(t=new C(0,0,1),e=new C(0,0,0),n=1,s=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",c8===void 0&&(c8=new X1,c8.setAttribute("position",new M1([0,0,0,0,1,0],3)),te=new o7(.5,1,5,1),te.translate(0,-.5,0)),this.position.copy(e),this.line=new X2(c8,new t0({color:s,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new I4(te,new $2({color:s,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,a)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Ls.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Ls,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class lm extends s2{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],s=new X1;s.setAttribute("position",new M1(e,3)),s.setAttribute("color",new M1(n,3));const r=new t0({vertexColors:!0,toneMapped:!1});super(s,r),this.type="AxesHelper"}setColors(t,e,n){const s=new v1,r=this.geometry.attributes.color.array;return s.set(t),s.toArray(r,0),s.toArray(r,3),s.set(e),s.toArray(r,6),s.toArray(r,9),s.set(n),s.toArray(r,12),s.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class hm{constructor(){this.type="ShapePath",this.color=new v1,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new m9,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,s){return this.currentPath.quadraticCurveTo(t,e,n,s),this}bezierCurveTo(t,e,n,s,r,a){return this.currentPath.bezierCurveTo(t,e,n,s,r,a),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(p){const y=[];for(let v=0,x=p.length;v<x;v++){const T=p[v],E=new R5;E.curves=T.curves,y.push(E)}return y}function n(p,y){const v=y.length;let x=!1;for(let T=v-1,E=0;E<v;T=E++){let A=y[T],I=y[E],S=I.x-A.x,M=I.y-A.y;if(Math.abs(M)>Number.EPSILON){if(M<0&&(A=y[E],S=-S,I=y[T],M=-M),p.y<A.y||p.y>I.y)continue;if(p.y===A.y){if(p.x===A.x)return!0}else{const L=M*(p.x-A.x)-S*(p.y-A.y);if(L===0)return!0;if(L<0)continue;x=!x}}else{if(p.y!==A.y)continue;if(I.x<=p.x&&p.x<=A.x||A.x<=p.x&&p.x<=I.x)return!0}}return x}const s=N0.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,o,c;const l=[];if(r.length===1)return o=r[0],c=new R5,c.curves=o.curves,l.push(c),l;let h=!s(r[0].getPoints());h=t?!h:h;const u=[],f=[];let d=[],m=0,_;f[m]=void 0,d[m]=[];for(let p=0,y=r.length;p<y;p++)o=r[p],_=o.getPoints(),a=s(_),a=t?!a:a,a?(!h&&f[m]&&m++,f[m]={s:new R5,p:_},f[m].s.curves=o.curves,h&&m++,d[m]=[]):d[m].push({h:o,p:_[0]});if(!f[0])return e(r);if(f.length>1){let p=!1,y=0;for(let v=0,x=f.length;v<x;v++)u[v]=[];for(let v=0,x=f.length;v<x;v++){const T=d[v];for(let E=0;E<T.length;E++){const A=T[E];let I=!0;for(let S=0;S<f.length;S++)n(A.p,f[S].p)&&(v!==S&&y++,I?(I=!1,u[S].push(A)):p=!0);I&&u[v].push(A)}}y>0&&p===!1&&(d=u)}let g;for(let p=0,y=f.length;p<y;p++){c=f[p].s,l.push(c),g=d[p];for(let v=0,x=g.length;v<x;v++)c.holes.push(g[v].h)}return l}}class um extends i2{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function fm(i,t){const e=i.image&&i.image.width?i.image.width/i.image.height:1;return e>t?(i.repeat.x=1,i.repeat.y=e/t,i.offset.x=0,i.offset.y=(1-i.repeat.y)/2):(i.repeat.x=t/e,i.repeat.y=1,i.offset.x=(1-i.repeat.x)/2,i.offset.y=0),i}function dm(i,t){const e=i.image&&i.image.width?i.image.width/i.image.height:1;return e>t?(i.repeat.x=t/e,i.repeat.y=1,i.offset.x=(1-i.repeat.x)/2,i.offset.y=0):(i.repeat.x=1,i.repeat.y=e/t,i.offset.x=0,i.offset.y=(1-i.repeat.y)/2),i}function pm(i){return i.repeat.x=1,i.repeat.y=1,i.offset.x=0,i.offset.y=0,i}function Oe(i,t,e,n){const s=mm(n);switch(e){case rn:return i*t;case L9:return i*t/s.components*s.byteLength;case s7:return i*t/s.components*s.byteLength;case on:return i*t*2/s.components*s.byteLength;case D9:return i*t*2/s.components*s.byteLength;case an:return i*t*3/s.components*s.byteLength;case Q4:return i*t*4/s.components*s.byteLength;case U9:return i*t*4/s.components*s.byteLength;case b6:case M6:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*8;case S6:case E6:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*16;case B8:case k8:return Math.max(i,16)*Math.max(t,8)/4;case F8:case z8:return Math.max(i,8)*Math.max(t,8)/2;case V8:case H8:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*8;case G8:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*16;case W8:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*16;case X8:return Math.floor((i+4)/5)*Math.floor((t+3)/4)*16;case Y8:return Math.floor((i+4)/5)*Math.floor((t+4)/5)*16;case q8:return Math.floor((i+5)/6)*Math.floor((t+4)/5)*16;case Z8:return Math.floor((i+5)/6)*Math.floor((t+5)/6)*16;case $8:return Math.floor((i+7)/8)*Math.floor((t+4)/5)*16;case J8:return Math.floor((i+7)/8)*Math.floor((t+5)/6)*16;case K8:return Math.floor((i+7)/8)*Math.floor((t+7)/8)*16;case Q8:return Math.floor((i+9)/10)*Math.floor((t+4)/5)*16;case j8:return Math.floor((i+9)/10)*Math.floor((t+5)/6)*16;case t9:return Math.floor((i+9)/10)*Math.floor((t+7)/8)*16;case e9:return Math.floor((i+9)/10)*Math.floor((t+9)/10)*16;case n9:return Math.floor((i+11)/12)*Math.floor((t+9)/10)*16;case i9:return Math.floor((i+11)/12)*Math.floor((t+11)/12)*16;case s9:case r9:case a9:return Math.ceil(i/4)*Math.ceil(t/4)*16;case o9:case c9:return Math.ceil(i/4)*Math.ceil(t/4)*8;case l9:case h9:return Math.ceil(i/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function mm(i){switch(i){case B0:case tn:return{byteLength:1,components:1};case C3:case en:case G3:return{byteLength:2,components:1};case I9:case P9:return{byteLength:2,components:4};case M2:case R9:case c0:return{byteLength:4,components:1};case nn:case sn:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}class gm{static contain(t,e){return fm(t,e)}static cover(t,e){return dm(t,e)}static fill(t){return pm(t)}static getByteLength(t,e,n,s){return Oe(t,e,n,s)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:A9}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=A9);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Ko(){let i=null,t=!1,e=null,n=null;function s(r,a){e(r,a),n=i.requestAnimationFrame(s)}return{start:function(){t!==!0&&e!==null&&(n=i.requestAnimationFrame(s),t=!0)},stop:function(){i.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){i=r}}}function _m(i){const t=new WeakMap;function e(o,c){const l=o.array,h=o.usage,u=l.byteLength,f=i.createBuffer();i.bindBuffer(c,f),i.bufferData(c,l,h),o.onUploadCallback();let d;if(l instanceof Float32Array)d=i.FLOAT;else if(typeof Float16Array<"u"&&l instanceof Float16Array)d=i.HALF_FLOAT;else if(l instanceof Uint16Array)o.isFloat16BufferAttribute?d=i.HALF_FLOAT:d=i.UNSIGNED_SHORT;else if(l instanceof Int16Array)d=i.SHORT;else if(l instanceof Uint32Array)d=i.UNSIGNED_INT;else if(l instanceof Int32Array)d=i.INT;else if(l instanceof Int8Array)d=i.BYTE;else if(l instanceof Uint8Array)d=i.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)d=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:f,type:d,bytesPerElement:l.BYTES_PER_ELEMENT,version:o.version,size:u}}function n(o,c,l){const h=c.array,u=c.updateRanges;if(i.bindBuffer(l,o),u.length===0)i.bufferSubData(l,0,h);else{u.sort((d,m)=>d.start-m.start);let f=0;for(let d=1;d<u.length;d++){const m=u[f],_=u[d];_.start<=m.start+m.count+1?m.count=Math.max(m.count,_.start+_.count-m.start):(++f,u[f]=_)}u.length=f+1;for(let d=0,m=u.length;d<m;d++){const _=u[d];i.bufferSubData(l,_.start*h.BYTES_PER_ELEMENT,h,_.start,_.count)}c.clearUpdateRanges()}c.onUploadCallback()}function s(o){return o.isInterleavedBufferAttribute&&(o=o.data),t.get(o)}function r(o){o.isInterleavedBufferAttribute&&(o=o.data);const c=t.get(o);c&&(i.deleteBuffer(c.buffer),t.delete(o))}function a(o,c){if(o.isInterleavedBufferAttribute&&(o=o.data),o.isGLBufferAttribute){const h=t.get(o);(!h||h.version<o.version)&&t.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}const l=t.get(o);if(l===void 0)t.set(o,e(o,c));else if(l.version<o.version){if(l.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(l.buffer,o,c),l.version=o.version}}return{get:s,remove:r,update:a}}var xm=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,vm=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,ym=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,bm=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Mm=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Sm=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Em=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Tm=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,wm=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,Am=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,Cm=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Rm=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Im=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Pm=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Lm=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Dm=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Um=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Om=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Nm=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Fm=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Bm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,zm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,km=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Vm=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Hm=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Gm=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Wm=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Xm=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Ym=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,qm=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Zm="gl_FragColor = linearToOutputTexel( gl_FragColor );",$m=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Jm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Km=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Qm=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,jm=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,tg=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,eg=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,ng=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,ig=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,sg=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,rg=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ag=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,og=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,cg=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,lg=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,hg=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,ug=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,fg=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,dg=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,pg=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,mg=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,gg=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,_g=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,xg=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,vg=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,yg=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,bg=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Mg=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Sg=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Eg=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Tg=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,wg=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Ag=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Cg=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Rg=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Ig=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Pg=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Lg=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Dg=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Ug=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Og=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Ng=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Fg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Bg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,zg=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,kg=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Vg=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Hg=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Gg=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Wg=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Xg=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Yg=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,qg=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Zg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,$g=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Jg=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Kg=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Qg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,jg=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,t_=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,e_=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,n_=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,i_=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,s_=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,r_=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,a_=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,o_=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,c_=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,l_=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,h_=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,u_=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,f_=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,d_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,p_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,m_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,g_=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const __=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,x_=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,v_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,y_=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,b_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,M_=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,S_=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,E_=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,T_=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,w_=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,A_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,C_=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,R_=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,I_=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,P_=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,L_=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,D_=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,U_=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,O_=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,N_=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,F_=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,B_=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,z_=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,k_=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,V_=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,H_=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,G_=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,W_=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,X_=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Y_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,q_=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Z_=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,$_=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,J_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,J1={alphahash_fragment:xm,alphahash_pars_fragment:vm,alphamap_fragment:ym,alphamap_pars_fragment:bm,alphatest_fragment:Mm,alphatest_pars_fragment:Sm,aomap_fragment:Em,aomap_pars_fragment:Tm,batching_pars_vertex:wm,batching_vertex:Am,begin_vertex:Cm,beginnormal_vertex:Rm,bsdfs:Im,iridescence_fragment:Pm,bumpmap_pars_fragment:Lm,clipping_planes_fragment:Dm,clipping_planes_pars_fragment:Um,clipping_planes_pars_vertex:Om,clipping_planes_vertex:Nm,color_fragment:Fm,color_pars_fragment:Bm,color_pars_vertex:zm,color_vertex:km,common:Vm,cube_uv_reflection_fragment:Hm,defaultnormal_vertex:Gm,displacementmap_pars_vertex:Wm,displacementmap_vertex:Xm,emissivemap_fragment:Ym,emissivemap_pars_fragment:qm,colorspace_fragment:Zm,colorspace_pars_fragment:$m,envmap_fragment:Jm,envmap_common_pars_fragment:Km,envmap_pars_fragment:Qm,envmap_pars_vertex:jm,envmap_physical_pars_fragment:hg,envmap_vertex:tg,fog_vertex:eg,fog_pars_vertex:ng,fog_fragment:ig,fog_pars_fragment:sg,gradientmap_pars_fragment:rg,lightmap_pars_fragment:ag,lights_lambert_fragment:og,lights_lambert_pars_fragment:cg,lights_pars_begin:lg,lights_toon_fragment:ug,lights_toon_pars_fragment:fg,lights_phong_fragment:dg,lights_phong_pars_fragment:pg,lights_physical_fragment:mg,lights_physical_pars_fragment:gg,lights_fragment_begin:_g,lights_fragment_maps:xg,lights_fragment_end:vg,logdepthbuf_fragment:yg,logdepthbuf_pars_fragment:bg,logdepthbuf_pars_vertex:Mg,logdepthbuf_vertex:Sg,map_fragment:Eg,map_pars_fragment:Tg,map_particle_fragment:wg,map_particle_pars_fragment:Ag,metalnessmap_fragment:Cg,metalnessmap_pars_fragment:Rg,morphinstance_vertex:Ig,morphcolor_vertex:Pg,morphnormal_vertex:Lg,morphtarget_pars_vertex:Dg,morphtarget_vertex:Ug,normal_fragment_begin:Og,normal_fragment_maps:Ng,normal_pars_fragment:Fg,normal_pars_vertex:Bg,normal_vertex:zg,normalmap_pars_fragment:kg,clearcoat_normal_fragment_begin:Vg,clearcoat_normal_fragment_maps:Hg,clearcoat_pars_fragment:Gg,iridescence_pars_fragment:Wg,opaque_fragment:Xg,packing:Yg,premultiplied_alpha_fragment:qg,project_vertex:Zg,dithering_fragment:$g,dithering_pars_fragment:Jg,roughnessmap_fragment:Kg,roughnessmap_pars_fragment:Qg,shadowmap_pars_fragment:jg,shadowmap_pars_vertex:t_,shadowmap_vertex:e_,shadowmask_pars_fragment:n_,skinbase_vertex:i_,skinning_pars_vertex:s_,skinning_vertex:r_,skinnormal_vertex:a_,specularmap_fragment:o_,specularmap_pars_fragment:c_,tonemapping_fragment:l_,tonemapping_pars_fragment:h_,transmission_fragment:u_,transmission_pars_fragment:f_,uv_pars_fragment:d_,uv_pars_vertex:p_,uv_vertex:m_,worldpos_vertex:g_,background_vert:__,background_frag:x_,backgroundCube_vert:v_,backgroundCube_frag:y_,cube_vert:b_,cube_frag:M_,depth_vert:S_,depth_frag:E_,distanceRGBA_vert:T_,distanceRGBA_frag:w_,equirect_vert:A_,equirect_frag:C_,linedashed_vert:R_,linedashed_frag:I_,meshbasic_vert:P_,meshbasic_frag:L_,meshlambert_vert:D_,meshlambert_frag:U_,meshmatcap_vert:O_,meshmatcap_frag:N_,meshnormal_vert:F_,meshnormal_frag:B_,meshphong_vert:z_,meshphong_frag:k_,meshphysical_vert:V_,meshphysical_frag:H_,meshtoon_vert:G_,meshtoon_frag:W_,points_vert:X_,points_frag:Y_,shadow_vert:q_,shadow_frag:Z_,sprite_vert:$_,sprite_frag:J_},p1={common:{diffuse:{value:new v1(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new W1},alphaMap:{value:null},alphaMapTransform:{value:new W1},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new W1}},envmap:{envMap:{value:null},envMapRotation:{value:new W1},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new W1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new W1}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new W1},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new W1},normalScale:{value:new K(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new W1},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new W1}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new W1}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new W1}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new v1(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new v1(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new W1},alphaTest:{value:0},uvTransform:{value:new W1}},sprite:{diffuse:{value:new v1(16777215)},opacity:{value:1},center:{value:new K(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new W1},alphaMap:{value:null},alphaMapTransform:{value:new W1},alphaTest:{value:0}}},U0={basic:{uniforms:$4([p1.common,p1.specularmap,p1.envmap,p1.aomap,p1.lightmap,p1.fog]),vertexShader:J1.meshbasic_vert,fragmentShader:J1.meshbasic_frag},lambert:{uniforms:$4([p1.common,p1.specularmap,p1.envmap,p1.aomap,p1.lightmap,p1.emissivemap,p1.bumpmap,p1.normalmap,p1.displacementmap,p1.fog,p1.lights,{emissive:{value:new v1(0)}}]),vertexShader:J1.meshlambert_vert,fragmentShader:J1.meshlambert_frag},phong:{uniforms:$4([p1.common,p1.specularmap,p1.envmap,p1.aomap,p1.lightmap,p1.emissivemap,p1.bumpmap,p1.normalmap,p1.displacementmap,p1.fog,p1.lights,{emissive:{value:new v1(0)},specular:{value:new v1(1118481)},shininess:{value:30}}]),vertexShader:J1.meshphong_vert,fragmentShader:J1.meshphong_frag},standard:{uniforms:$4([p1.common,p1.envmap,p1.aomap,p1.lightmap,p1.emissivemap,p1.bumpmap,p1.normalmap,p1.displacementmap,p1.roughnessmap,p1.metalnessmap,p1.fog,p1.lights,{emissive:{value:new v1(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:J1.meshphysical_vert,fragmentShader:J1.meshphysical_frag},toon:{uniforms:$4([p1.common,p1.aomap,p1.lightmap,p1.emissivemap,p1.bumpmap,p1.normalmap,p1.displacementmap,p1.gradientmap,p1.fog,p1.lights,{emissive:{value:new v1(0)}}]),vertexShader:J1.meshtoon_vert,fragmentShader:J1.meshtoon_frag},matcap:{uniforms:$4([p1.common,p1.bumpmap,p1.normalmap,p1.displacementmap,p1.fog,{matcap:{value:null}}]),vertexShader:J1.meshmatcap_vert,fragmentShader:J1.meshmatcap_frag},points:{uniforms:$4([p1.points,p1.fog]),vertexShader:J1.points_vert,fragmentShader:J1.points_frag},dashed:{uniforms:$4([p1.common,p1.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:J1.linedashed_vert,fragmentShader:J1.linedashed_frag},depth:{uniforms:$4([p1.common,p1.displacementmap]),vertexShader:J1.depth_vert,fragmentShader:J1.depth_frag},normal:{uniforms:$4([p1.common,p1.bumpmap,p1.normalmap,p1.displacementmap,{opacity:{value:1}}]),vertexShader:J1.meshnormal_vert,fragmentShader:J1.meshnormal_frag},sprite:{uniforms:$4([p1.sprite,p1.fog]),vertexShader:J1.sprite_vert,fragmentShader:J1.sprite_frag},background:{uniforms:{uvTransform:{value:new W1},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:J1.background_vert,fragmentShader:J1.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new W1}},vertexShader:J1.backgroundCube_vert,fragmentShader:J1.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:J1.cube_vert,fragmentShader:J1.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:J1.equirect_vert,fragmentShader:J1.equirect_frag},distanceRGBA:{uniforms:$4([p1.common,p1.displacementmap,{referencePosition:{value:new C},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:J1.distanceRGBA_vert,fragmentShader:J1.distanceRGBA_frag},shadow:{uniforms:$4([p1.lights,p1.fog,{color:{value:new v1(0)},opacity:{value:1}}]),vertexShader:J1.shadow_vert,fragmentShader:J1.shadow_frag}};U0.physical={uniforms:$4([U0.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new W1},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new W1},clearcoatNormalScale:{value:new K(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new W1},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new W1},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new W1},sheen:{value:0},sheenColor:{value:new v1(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new W1},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new W1},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new W1},transmissionSamplerSize:{value:new K},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new W1},attenuationDistance:{value:0},attenuationColor:{value:new v1(0)},specularColor:{value:new v1(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new W1},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new W1},anisotropyVector:{value:new K},anisotropyMap:{value:null},anisotropyMapTransform:{value:new W1}}]),vertexShader:J1.meshphysical_vert,fragmentShader:J1.meshphysical_frag};const l8={r:0,b:0,g:0},f5=new y0,K_=new B1;function Q_(i,t,e,n,s,r,a){const o=new v1(0);let c=r===!0?0:1,l,h,u=null,f=0,d=null;function m(v){let x=v.isScene===!0?v.background:null;return x&&x.isTexture&&(x=(v.backgroundBlurriness>0?e:t).get(x)),x}function _(v){let x=!1;const T=m(v);T===null?p(o,c):T&&T.isColor&&(p(T,1),x=!0);const E=i.xr.getEnvironmentBlendMode();E==="additive"?n.buffers.color.setClear(0,0,0,1,a):E==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(i.autoClear||x)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function g(v,x){const T=m(x);T&&(T.isCubeTexture||T.mapping===H3)?(h===void 0&&(h=new I4(new B5(1,1,1),new z0({name:"BackgroundCubeMaterial",uniforms:U3(U0.backgroundCube.uniforms),vertexShader:U0.backgroundCube.vertexShader,fragmentShader:U0.backgroundCube.fragmentShader,side:j4,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(E,A,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),f5.copy(x.backgroundRotation),f5.x*=-1,f5.y*=-1,f5.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(f5.y*=-1,f5.z*=-1),h.material.uniforms.envMap.value=T,h.material.uniforms.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(K_.makeRotationFromEuler(f5)),h.material.toneMapped=t4.getTransfer(T.colorSpace)!==d4,(u!==T||f!==T.version||d!==i.toneMapping)&&(h.material.needsUpdate=!0,u=T,f=T.version,d=i.toneMapping),h.layers.enableAll(),v.unshift(h,h.geometry,h.material,0,0,null)):T&&T.isTexture&&(l===void 0&&(l=new I4(new Y3(2,2),new z0({name:"BackgroundMaterial",uniforms:U3(U0.background.uniforms),vertexShader:U0.background.vertexShader,fragmentShader:U0.background.fragmentShader,side:y2,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=T,l.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,l.material.toneMapped=t4.getTransfer(T.colorSpace)!==d4,T.matrixAutoUpdate===!0&&T.updateMatrix(),l.material.uniforms.uvTransform.value.copy(T.matrix),(u!==T||f!==T.version||d!==i.toneMapping)&&(l.material.needsUpdate=!0,u=T,f=T.version,d=i.toneMapping),l.layers.enableAll(),v.unshift(l,l.geometry,l.material,0,0,null))}function p(v,x){v.getRGB(l8,Qa(i)),n.buffers.color.setClear(l8.r,l8.g,l8.b,x,a)}function y(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),l!==void 0&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}return{getClearColor:function(){return o},setClearColor:function(v,x=1){o.set(v),c=x,p(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(v){c=v,p(o,c)},render:_,addToRenderList:g,dispose:y}}function j_(i,t){const e=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},s=f(null);let r=s,a=!1;function o(M,L,N,z,q){let H=!1;const Y=u(z,N,L);r!==Y&&(r=Y,l(r.object)),H=d(M,z,N,q),H&&m(M,z,N,q),q!==null&&t.update(q,i.ELEMENT_ARRAY_BUFFER),(H||a)&&(a=!1,x(M,L,N,z),q!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t.get(q).buffer))}function c(){return i.createVertexArray()}function l(M){return i.bindVertexArray(M)}function h(M){return i.deleteVertexArray(M)}function u(M,L,N){const z=N.wireframe===!0;let q=n[M.id];q===void 0&&(q={},n[M.id]=q);let H=q[L.id];H===void 0&&(H={},q[L.id]=H);let Y=H[z];return Y===void 0&&(Y=f(c()),H[z]=Y),Y}function f(M){const L=[],N=[],z=[];for(let q=0;q<e;q++)L[q]=0,N[q]=0,z[q]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:L,enabledAttributes:N,attributeDivisors:z,object:M,attributes:{},index:null}}function d(M,L,N,z){const q=r.attributes,H=L.attributes;let Y=0;const t1=N.getAttributes();for(const W in t1)if(t1[W].location>=0){const x1=q[W];let S1=H[W];if(S1===void 0&&(W==="instanceMatrix"&&M.instanceMatrix&&(S1=M.instanceMatrix),W==="instanceColor"&&M.instanceColor&&(S1=M.instanceColor)),x1===void 0||x1.attribute!==S1||S1&&x1.data!==S1.data)return!0;Y++}return r.attributesNum!==Y||r.index!==z}function m(M,L,N,z){const q={},H=L.attributes;let Y=0;const t1=N.getAttributes();for(const W in t1)if(t1[W].location>=0){let x1=H[W];x1===void 0&&(W==="instanceMatrix"&&M.instanceMatrix&&(x1=M.instanceMatrix),W==="instanceColor"&&M.instanceColor&&(x1=M.instanceColor));const S1={};S1.attribute=x1,x1&&x1.data&&(S1.data=x1.data),q[W]=S1,Y++}r.attributes=q,r.attributesNum=Y,r.index=z}function _(){const M=r.newAttributes;for(let L=0,N=M.length;L<N;L++)M[L]=0}function g(M){p(M,0)}function p(M,L){const N=r.newAttributes,z=r.enabledAttributes,q=r.attributeDivisors;N[M]=1,z[M]===0&&(i.enableVertexAttribArray(M),z[M]=1),q[M]!==L&&(i.vertexAttribDivisor(M,L),q[M]=L)}function y(){const M=r.newAttributes,L=r.enabledAttributes;for(let N=0,z=L.length;N<z;N++)L[N]!==M[N]&&(i.disableVertexAttribArray(N),L[N]=0)}function v(M,L,N,z,q,H,Y){Y===!0?i.vertexAttribIPointer(M,L,N,q,H):i.vertexAttribPointer(M,L,N,z,q,H)}function x(M,L,N,z){_();const q=z.attributes,H=N.getAttributes(),Y=L.defaultAttributeValues;for(const t1 in H){const W=H[t1];if(W.location>=0){let f1=q[t1];if(f1===void 0&&(t1==="instanceMatrix"&&M.instanceMatrix&&(f1=M.instanceMatrix),t1==="instanceColor"&&M.instanceColor&&(f1=M.instanceColor)),f1!==void 0){const x1=f1.normalized,S1=f1.itemSize,Y1=t.get(f1);if(Y1===void 0)continue;const j1=Y1.buffer,f4=Y1.type,e4=Y1.bytesPerElement,Z=f4===i.INT||f4===i.UNSIGNED_INT||f1.gpuType===R9;if(f1.isInterleavedBufferAttribute){const i1=f1.data,b1=i1.stride,L1=f1.offset;if(i1.isInstancedInterleavedBuffer){for(let w1=0;w1<W.locationSize;w1++)p(W.location+w1,i1.meshPerAttribute);M.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=i1.meshPerAttribute*i1.count)}else for(let w1=0;w1<W.locationSize;w1++)g(W.location+w1);i.bindBuffer(i.ARRAY_BUFFER,j1);for(let w1=0;w1<W.locationSize;w1++)v(W.location+w1,S1/W.locationSize,f4,x1,b1*e4,(L1+S1/W.locationSize*w1)*e4,Z)}else{if(f1.isInstancedBufferAttribute){for(let i1=0;i1<W.locationSize;i1++)p(W.location+i1,f1.meshPerAttribute);M.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=f1.meshPerAttribute*f1.count)}else for(let i1=0;i1<W.locationSize;i1++)g(W.location+i1);i.bindBuffer(i.ARRAY_BUFFER,j1);for(let i1=0;i1<W.locationSize;i1++)v(W.location+i1,S1/W.locationSize,f4,x1,S1*e4,S1/W.locationSize*i1*e4,Z)}}else if(Y!==void 0){const x1=Y[t1];if(x1!==void 0)switch(x1.length){case 2:i.vertexAttrib2fv(W.location,x1);break;case 3:i.vertexAttrib3fv(W.location,x1);break;case 4:i.vertexAttrib4fv(W.location,x1);break;default:i.vertexAttrib1fv(W.location,x1)}}}}y()}function T(){I();for(const M in n){const L=n[M];for(const N in L){const z=L[N];for(const q in z)h(z[q].object),delete z[q];delete L[N]}delete n[M]}}function E(M){if(n[M.id]===void 0)return;const L=n[M.id];for(const N in L){const z=L[N];for(const q in z)h(z[q].object),delete z[q];delete L[N]}delete n[M.id]}function A(M){for(const L in n){const N=n[L];if(N[M.id]===void 0)continue;const z=N[M.id];for(const q in z)h(z[q].object),delete z[q];delete N[M.id]}}function I(){S(),a=!0,r!==s&&(r=s,l(r.object))}function S(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:o,reset:I,resetDefaultState:S,dispose:T,releaseStatesOfGeometry:E,releaseStatesOfProgram:A,initAttributes:_,enableAttribute:g,disableUnusedAttributes:y}}function tx(i,t,e){let n;function s(l){n=l}function r(l,h){i.drawArrays(n,l,h),e.update(h,n,1)}function a(l,h,u){u!==0&&(i.drawArraysInstanced(n,l,h,u),e.update(h,n,u))}function o(l,h,u){if(u===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,l,0,h,0,u);let d=0;for(let m=0;m<u;m++)d+=h[m];e.update(d,n,1)}function c(l,h,u,f){if(u===0)return;const d=t.get("WEBGL_multi_draw");if(d===null)for(let m=0;m<l.length;m++)a(l[m],h[m],f[m]);else{d.multiDrawArraysInstancedWEBGL(n,l,0,h,0,f,0,u);let m=0;for(let _=0;_<u;_++)m+=h[_]*f[_];e.update(m,n,1)}}this.setMode=s,this.render=r,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=c}function ex(i,t,e,n){let s;function r(){if(s!==void 0)return s;if(t.has("EXT_texture_filter_anisotropic")===!0){const A=t.get("EXT_texture_filter_anisotropic");s=i.getParameter(A.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function a(A){return!(A!==Q4&&n.convert(A)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(A){const I=A===G3&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(A!==B0&&n.convert(A)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&A!==c0&&!I)}function c(A){if(A==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";A="mediump"}return A==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=e.precision!==void 0?e.precision:"highp";const h=c(l);h!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",h,"instead."),l=h);const u=e.logarithmicDepthBuffer===!0,f=e.reversedDepthBuffer===!0&&t.has("EXT_clip_control"),d=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),m=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=i.getParameter(i.MAX_TEXTURE_SIZE),g=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),p=i.getParameter(i.MAX_VERTEX_ATTRIBS),y=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),v=i.getParameter(i.MAX_VARYING_VECTORS),x=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),T=m>0,E=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:c,textureFormatReadable:a,textureTypeReadable:o,precision:l,logarithmicDepthBuffer:u,reversedDepthBuffer:f,maxTextures:d,maxVertexTextures:m,maxTextureSize:_,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:y,maxVaryings:v,maxFragmentUniforms:x,vertexTextures:T,maxSamples:E}}function nx(i){const t=this;let e=null,n=0,s=!1,r=!1;const a=new F2,o=new W1,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f){const d=u.length!==0||f||n!==0||s;return s=f,n=u.length,d},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,f){e=h(u,f,0)},this.setState=function(u,f,d){const m=u.clippingPlanes,_=u.clipIntersection,g=u.clipShadows,p=i.get(u);if(!s||m===null||m.length===0||r&&!g)r?h(null):l();else{const y=r?0:n,v=y*4;let x=p.clippingState||null;c.value=x,x=h(m,f,v,d);for(let T=0;T!==v;++T)x[T]=e[T];p.clippingState=x,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=y}};function l(){c.value!==e&&(c.value=e,c.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(u,f,d,m){const _=u!==null?u.length:0;let g=null;if(_!==0){if(g=c.value,m!==!0||g===null){const p=d+_*4,y=f.matrixWorldInverse;o.getNormalMatrix(y),(g===null||g.length<p)&&(g=new Float32Array(p));for(let v=0,x=d;v!==_;++v,x+=4)a.copy(u[v]).applyMatrix4(y,o),a.normal.toArray(g,x),g[x+3]=a.constant}c.value=g,c.needsUpdate=!0}return t.numPlanes=_,t.numIntersection=0,g}}function ix(i){let t=new WeakMap;function e(a,o){return o===O6?a.mapping=b2:o===N6&&(a.mapping=W2),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===O6||o===N6)if(t.has(a)){const c=t.get(a).texture;return e(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const l=new eo(c.height);return l.fromEquirectangularTexture(i,a),t.set(a,l),a.addEventListener("dispose",s),e(l.texture,a.mapping)}else return null}}return a}function s(a){const o=a.target;o.removeEventListener("dispose",s);const c=t.get(o);c!==void 0&&(t.delete(o),c.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}const _3=4,Ds=[.125,.215,.35,.446,.526,.582],v5=20,ee=new rt,Us=new v1;let ne=null,ie=0,se=0,re=!1;const _5=(1+Math.sqrt(5))/2,l3=1/_5,Os=[new C(-_5,l3,0),new C(_5,l3,0),new C(-l3,0,_5),new C(l3,0,_5),new C(0,_5,-l3),new C(0,_5,l3),new C(-1,1,-1),new C(1,1,-1),new C(-1,1,1),new C(1,1,1)],sx=new C;class Ne{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,s=100,r={}){const{size:a=256,position:o=sx}=r;ne=this._renderer.getRenderTarget(),ie=this._renderer.getActiveCubeFace(),se=this._renderer.getActiveMipmapLevel(),re=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(t,n,s,c,o),e>0&&this._blur(c,0,0,e),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Bs(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Fs(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(ne,ie,se),this._renderer.xr.enabled=re,t.scissorTest=!1,h8(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===b2||t.mapping===W2?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),ne=this._renderer.getRenderTarget(),ie=this._renderer.getActiveCubeFace(),se=this._renderer.getActiveMipmapLevel(),re=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:L4,minFilter:L4,generateMipmaps:!1,type:G3,format:Q4,colorSpace:D5,depthBuffer:!1},s=Ns(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ns(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=rx(r)),this._blurMaterial=ax(r,t,e)}return s}_compileMaterial(t){const e=new I4(this._lodPlanes[0],t);this._renderer.compile(e,ee)}_sceneToCubeUV(t,e,n,s,r){const c=new F4(90,1,e,n),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,d=u.toneMapping;u.getClearColor(Us),u.toneMapping=x2,u.autoClear=!1,u.state.buffers.depth.getReversed()&&(u.setRenderTarget(s),u.clearDepth(),u.setRenderTarget(null));const _=new $2({name:"PMREM.Background",side:j4,depthWrite:!1,depthTest:!1}),g=new I4(new B5,_);let p=!1;const y=t.background;y?y.isColor&&(_.color.copy(y),t.background=null,p=!0):(_.color.copy(Us),p=!0);for(let v=0;v<6;v++){const x=v%3;x===0?(c.up.set(0,l[v],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x+h[v],r.y,r.z)):x===1?(c.up.set(0,0,l[v]),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y+h[v],r.z)):(c.up.set(0,l[v],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y,r.z+h[v]));const T=this._cubeSize;h8(s,x*T,v>2?T:0,T,T),u.setRenderTarget(s),p&&u.render(g,c),u.render(t,c)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=d,u.autoClear=f,t.background=y}_textureToCubeUV(t,e){const n=this._renderer,s=t.mapping===b2||t.mapping===W2;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Bs()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Fs());const r=s?this._cubemapMaterial:this._equirectMaterial,a=new I4(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=t;const c=this._cubeSize;h8(e,0,0,3*c,2*c),n.setRenderTarget(e),n.render(a,ee)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const s=this._lodPlanes.length;for(let r=1;r<s;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=Os[(s-r-1)%Os.length];this._blur(t,r-1,r,a,o)}e.autoClear=n}_blur(t,e,n,s,r){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,n,s,"latitudinal",r),this._halfBlur(a,t,n,n,s,"longitudinal",r)}_halfBlur(t,e,n,s,r,a,o){const c=this._renderer,l=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new I4(this._lodPlanes[s],l),f=l.uniforms,d=this._sizeLods[n]-1,m=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*v5-1),_=r/m,g=isFinite(r)?1+Math.floor(h*_):v5;g>v5&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${v5}`);const p=[];let y=0;for(let A=0;A<v5;++A){const I=A/_,S=Math.exp(-I*I/2);p.push(S),A===0?y+=S:A<g&&(y+=2*S)}for(let A=0;A<p.length;A++)p[A]=p[A]/y;f.envMap.value=t.texture,f.samples.value=g,f.weights.value=p,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:v}=this;f.dTheta.value=m,f.mipInt.value=v-n;const x=this._sizeLods[s],T=3*x*(s>v-_3?s-v+_3:0),E=4*(this._cubeSize-x);h8(e,T,E,3*x,2*x),c.setRenderTarget(e),c.render(u,ee)}}function rx(i){const t=[],e=[],n=[];let s=i;const r=i-_3+1+Ds.length;for(let a=0;a<r;a++){const o=Math.pow(2,s);e.push(o);let c=1/o;a>i-_3?c=Ds[a-i+_3-1]:a===0&&(c=0),n.push(c);const l=1/(o-2),h=-l,u=1+l,f=[h,h,u,h,u,u,h,h,u,u,h,u],d=6,m=6,_=3,g=2,p=1,y=new Float32Array(_*m*d),v=new Float32Array(g*m*d),x=new Float32Array(p*m*d);for(let E=0;E<d;E++){const A=E%3*2/3-1,I=E>2?0:-1,S=[A,I,0,A+2/3,I,0,A+2/3,I+1,0,A,I,0,A+2/3,I+1,0,A,I+1,0];y.set(S,_*m*E),v.set(f,g*m*E);const M=[E,E,E,E,E,E];x.set(M,p*m*E)}const T=new X1;T.setAttribute("position",new c4(y,_)),T.setAttribute("uv",new c4(v,g)),T.setAttribute("faceIndex",new c4(x,p)),t.push(T),s>_3&&s--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function Ns(i,t,e){const n=new n2(i,t,e);return n.texture.mapping=H3,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function h8(i,t,e,n,s){i.viewport.set(t,e,n,s),i.scissor.set(t,e,n,s)}function ax(i,t,e){const n=new Float32Array(v5),s=new C(0,1,0);return new z0({name:"SphericalGaussianBlur",defines:{n:v5,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Hn(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:_2,depthTest:!1,depthWrite:!1})}function Fs(){return new z0({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Hn(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:_2,depthTest:!1,depthWrite:!1})}function Bs(){return new z0({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Hn(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:_2,depthTest:!1,depthWrite:!1})}function Hn(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ox(i){let t=new WeakMap,e=null;function n(o){if(o&&o.isTexture){const c=o.mapping,l=c===O6||c===N6,h=c===b2||c===W2;if(l||h){let u=t.get(o);const f=u!==void 0?u.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==f)return e===null&&(e=new Ne(i)),u=l?e.fromEquirectangular(o,u):e.fromCubemap(o,u),u.texture.pmremVersion=o.pmremVersion,t.set(o,u),u.texture;if(u!==void 0)return u.texture;{const d=o.image;return l&&d&&d.height>0||h&&d&&s(d)?(e===null&&(e=new Ne(i)),u=l?e.fromEquirectangular(o):e.fromCubemap(o),u.texture.pmremVersion=o.pmremVersion,t.set(o,u),o.addEventListener("dispose",r),u.texture):null}}}return o}function s(o){let c=0;const l=6;for(let h=0;h<l;h++)o[h]!==void 0&&c++;return c===l}function r(o){const c=o.target;c.removeEventListener("dispose",r);const l=t.get(c);l!==void 0&&(t.delete(c),l.dispose())}function a(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:a}}function cx(i){const t={};function e(n){if(t[n]!==void 0)return t[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return t[n]=s,s}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const s=e(n);return s===null&&W6("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function lx(i,t,e,n){const s={},r=new WeakMap;function a(u){const f=u.target;f.index!==null&&t.remove(f.index);for(const m in f.attributes)t.remove(f.attributes[m]);f.removeEventListener("dispose",a),delete s[f.id];const d=r.get(f);d&&(t.remove(d),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,e.memory.geometries--}function o(u,f){return s[f.id]===!0||(f.addEventListener("dispose",a),s[f.id]=!0,e.memory.geometries++),f}function c(u){const f=u.attributes;for(const d in f)t.update(f[d],i.ARRAY_BUFFER)}function l(u){const f=[],d=u.index,m=u.attributes.position;let _=0;if(d!==null){const y=d.array;_=d.version;for(let v=0,x=y.length;v<x;v+=3){const T=y[v+0],E=y[v+1],A=y[v+2];f.push(T,E,E,A,A,T)}}else if(m!==void 0){const y=m.array;_=m.version;for(let v=0,x=y.length/3-1;v<x;v+=3){const T=v+0,E=v+1,A=v+2;f.push(T,E,E,A,A,T)}}else return;const g=new(Za(f)?dn:fn)(f,1);g.version=_;const p=r.get(u);p&&t.remove(p),r.set(u,g)}function h(u){const f=r.get(u);if(f){const d=u.index;d!==null&&f.version<d.version&&l(u)}else l(u);return r.get(u)}return{get:o,update:c,getWireframeAttribute:h}}function hx(i,t,e){let n;function s(f){n=f}let r,a;function o(f){r=f.type,a=f.bytesPerElement}function c(f,d){i.drawElements(n,d,r,f*a),e.update(d,n,1)}function l(f,d,m){m!==0&&(i.drawElementsInstanced(n,d,r,f*a,m),e.update(d,n,m))}function h(f,d,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,d,0,r,f,0,m);let g=0;for(let p=0;p<m;p++)g+=d[p];e.update(g,n,1)}function u(f,d,m,_){if(m===0)return;const g=t.get("WEBGL_multi_draw");if(g===null)for(let p=0;p<f.length;p++)l(f[p]/a,d[p],_[p]);else{g.multiDrawElementsInstancedWEBGL(n,d,0,r,f,0,_,0,m);let p=0;for(let y=0;y<m;y++)p+=d[y]*_[y];e.update(p,n,1)}}this.setMode=s,this.setIndex=o,this.render=c,this.renderInstances=l,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function ux(i){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(e.calls++,a){case i.TRIANGLES:e.triangles+=o*(r/3);break;case i.LINES:e.lines+=o*(r/2);break;case i.LINE_STRIP:e.lines+=o*(r-1);break;case i.LINE_LOOP:e.lines+=o*r;break;case i.POINTS:e.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:s,update:n}}function fx(i,t,e){const n=new WeakMap,s=new i4;function r(a,o,c){const l=a.morphTargetInfluences,h=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,u=h!==void 0?h.length:0;let f=n.get(o);if(f===void 0||f.count!==u){let M=function(){I.dispose(),n.delete(o),o.removeEventListener("dispose",M)};var d=M;f!==void 0&&f.texture.dispose();const m=o.morphAttributes.position!==void 0,_=o.morphAttributes.normal!==void 0,g=o.morphAttributes.color!==void 0,p=o.morphAttributes.position||[],y=o.morphAttributes.normal||[],v=o.morphAttributes.color||[];let x=0;m===!0&&(x=1),_===!0&&(x=2),g===!0&&(x=3);let T=o.attributes.position.count*x,E=1;T>t.maxTextureSize&&(E=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const A=new Float32Array(T*E*4*u),I=new N9(A,T,E,u);I.type=c0,I.needsUpdate=!0;const S=x*4;for(let L=0;L<u;L++){const N=p[L],z=y[L],q=v[L],H=T*E*4*L;for(let Y=0;Y<N.count;Y++){const t1=Y*S;m===!0&&(s.fromBufferAttribute(N,Y),A[H+t1+0]=s.x,A[H+t1+1]=s.y,A[H+t1+2]=s.z,A[H+t1+3]=0),_===!0&&(s.fromBufferAttribute(z,Y),A[H+t1+4]=s.x,A[H+t1+5]=s.y,A[H+t1+6]=s.z,A[H+t1+7]=0),g===!0&&(s.fromBufferAttribute(q,Y),A[H+t1+8]=s.x,A[H+t1+9]=s.y,A[H+t1+10]=s.z,A[H+t1+11]=q.itemSize===4?s.w:1)}}f={count:u,texture:I,size:new K(T,E)},n.set(o,f),o.addEventListener("dispose",M)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)c.getUniforms().setValue(i,"morphTexture",a.morphTexture,e);else{let m=0;for(let g=0;g<l.length;g++)m+=l[g];const _=o.morphTargetsRelative?1:1-m;c.getUniforms().setValue(i,"morphTargetBaseInfluence",_),c.getUniforms().setValue(i,"morphTargetInfluences",l)}c.getUniforms().setValue(i,"morphTargetsTexture",f.texture,e),c.getUniforms().setValue(i,"morphTargetsTextureSize",f.size)}return{update:r}}function dx(i,t,e,n){let s=new WeakMap;function r(c){const l=n.render.frame,h=c.geometry,u=t.get(c,h);if(s.get(u)!==l&&(t.update(u),s.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),s.get(c)!==l&&(e.update(c.instanceMatrix,i.ARRAY_BUFFER),c.instanceColor!==null&&e.update(c.instanceColor,i.ARRAY_BUFFER),s.set(c,l))),c.isSkinnedMesh){const f=c.skeleton;s.get(f)!==l&&(f.update(),s.set(f,l))}return u}function a(){s=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),e.remove(l.instanceMatrix),l.instanceColor!==null&&e.remove(l.instanceColor)}return{update:r,dispose:a}}const Qo=new C4,zs=new xn(1,1),jo=new N9,tc=new F9,ec=new r7,ks=[],Vs=[],Hs=new Float32Array(16),Gs=new Float32Array(9),Ws=new Float32Array(4);function q3(i,t,e){const n=i[0];if(n<=0||n>0)return i;const s=t*e;let r=ks[s];if(r===void 0&&(r=new Float32Array(s),ks[s]=r),t!==0){n.toArray(r,0);for(let a=1,o=0;a!==t;++a)o+=e,i[a].toArray(r,o)}return r}function U4(i,t){if(i.length!==t.length)return!1;for(let e=0,n=i.length;e<n;e++)if(i[e]!==t[e])return!1;return!0}function O4(i,t){for(let e=0,n=t.length;e<n;e++)i[e]=t[e]}function ot(i,t){let e=Vs[t];e===void 0&&(e=new Int32Array(t),Vs[t]=e);for(let n=0;n!==t;++n)e[n]=i.allocateTextureUnit();return e}function px(i,t){const e=this.cache;e[0]!==t&&(i.uniform1f(this.addr,t),e[0]=t)}function mx(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(U4(e,t))return;i.uniform2fv(this.addr,t),O4(e,t)}}function gx(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(i.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(U4(e,t))return;i.uniform3fv(this.addr,t),O4(e,t)}}function _x(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(U4(e,t))return;i.uniform4fv(this.addr,t),O4(e,t)}}function xx(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(U4(e,t))return;i.uniformMatrix2fv(this.addr,!1,t),O4(e,t)}else{if(U4(e,n))return;Ws.set(n),i.uniformMatrix2fv(this.addr,!1,Ws),O4(e,n)}}function vx(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(U4(e,t))return;i.uniformMatrix3fv(this.addr,!1,t),O4(e,t)}else{if(U4(e,n))return;Gs.set(n),i.uniformMatrix3fv(this.addr,!1,Gs),O4(e,n)}}function yx(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(U4(e,t))return;i.uniformMatrix4fv(this.addr,!1,t),O4(e,t)}else{if(U4(e,n))return;Hs.set(n),i.uniformMatrix4fv(this.addr,!1,Hs),O4(e,n)}}function bx(i,t){const e=this.cache;e[0]!==t&&(i.uniform1i(this.addr,t),e[0]=t)}function Mx(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(U4(e,t))return;i.uniform2iv(this.addr,t),O4(e,t)}}function Sx(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(U4(e,t))return;i.uniform3iv(this.addr,t),O4(e,t)}}function Ex(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(U4(e,t))return;i.uniform4iv(this.addr,t),O4(e,t)}}function Tx(i,t){const e=this.cache;e[0]!==t&&(i.uniform1ui(this.addr,t),e[0]=t)}function wx(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(U4(e,t))return;i.uniform2uiv(this.addr,t),O4(e,t)}}function Ax(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(U4(e,t))return;i.uniform3uiv(this.addr,t),O4(e,t)}}function Cx(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(U4(e,t))return;i.uniform4uiv(this.addr,t),O4(e,t)}}function Rx(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s);let r;this.type===i.SAMPLER_2D_SHADOW?(zs.compareFunction=ln,r=zs):r=Qo,e.setTexture2D(t||r,s)}function Ix(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture3D(t||tc,s)}function Px(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTextureCube(t||ec,s)}function Lx(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture2DArray(t||jo,s)}function Dx(i){switch(i){case 5126:return px;case 35664:return mx;case 35665:return gx;case 35666:return _x;case 35674:return xx;case 35675:return vx;case 35676:return yx;case 5124:case 35670:return bx;case 35667:case 35671:return Mx;case 35668:case 35672:return Sx;case 35669:case 35673:return Ex;case 5125:return Tx;case 36294:return wx;case 36295:return Ax;case 36296:return Cx;case 35678:case 36198:case 36298:case 36306:case 35682:return Rx;case 35679:case 36299:case 36307:return Ix;case 35680:case 36300:case 36308:case 36293:return Px;case 36289:case 36303:case 36311:case 36292:return Lx}}function Ux(i,t){i.uniform1fv(this.addr,t)}function Ox(i,t){const e=q3(t,this.size,2);i.uniform2fv(this.addr,e)}function Nx(i,t){const e=q3(t,this.size,3);i.uniform3fv(this.addr,e)}function Fx(i,t){const e=q3(t,this.size,4);i.uniform4fv(this.addr,e)}function Bx(i,t){const e=q3(t,this.size,4);i.uniformMatrix2fv(this.addr,!1,e)}function zx(i,t){const e=q3(t,this.size,9);i.uniformMatrix3fv(this.addr,!1,e)}function kx(i,t){const e=q3(t,this.size,16);i.uniformMatrix4fv(this.addr,!1,e)}function Vx(i,t){i.uniform1iv(this.addr,t)}function Hx(i,t){i.uniform2iv(this.addr,t)}function Gx(i,t){i.uniform3iv(this.addr,t)}function Wx(i,t){i.uniform4iv(this.addr,t)}function Xx(i,t){i.uniform1uiv(this.addr,t)}function Yx(i,t){i.uniform2uiv(this.addr,t)}function qx(i,t){i.uniform3uiv(this.addr,t)}function Zx(i,t){i.uniform4uiv(this.addr,t)}function $x(i,t,e){const n=this.cache,s=t.length,r=ot(e,s);U4(n,r)||(i.uniform1iv(this.addr,r),O4(n,r));for(let a=0;a!==s;++a)e.setTexture2D(t[a]||Qo,r[a])}function Jx(i,t,e){const n=this.cache,s=t.length,r=ot(e,s);U4(n,r)||(i.uniform1iv(this.addr,r),O4(n,r));for(let a=0;a!==s;++a)e.setTexture3D(t[a]||tc,r[a])}function Kx(i,t,e){const n=this.cache,s=t.length,r=ot(e,s);U4(n,r)||(i.uniform1iv(this.addr,r),O4(n,r));for(let a=0;a!==s;++a)e.setTextureCube(t[a]||ec,r[a])}function Qx(i,t,e){const n=this.cache,s=t.length,r=ot(e,s);U4(n,r)||(i.uniform1iv(this.addr,r),O4(n,r));for(let a=0;a!==s;++a)e.setTexture2DArray(t[a]||jo,r[a])}function jx(i){switch(i){case 5126:return Ux;case 35664:return Ox;case 35665:return Nx;case 35666:return Fx;case 35674:return Bx;case 35675:return zx;case 35676:return kx;case 5124:case 35670:return Vx;case 35667:case 35671:return Hx;case 35668:case 35672:return Gx;case 35669:case 35673:return Wx;case 5125:return Xx;case 36294:return Yx;case 36295:return qx;case 36296:return Zx;case 35678:case 36198:case 36298:case 36306:case 35682:return $x;case 35679:case 36299:case 36307:return Jx;case 35680:case 36300:case 36308:case 36293:return Kx;case 36289:case 36303:case 36311:case 36292:return Qx}}class tv{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=Dx(e.type)}}class ev{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=jx(e.type)}}class nv{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const s=this.seq;for(let r=0,a=s.length;r!==a;++r){const o=s[r];o.setValue(t,e[o.id],n)}}}const ae=/(\w+)(\])?(\[|\.)?/g;function Xs(i,t){i.seq.push(t),i.map[t.id]=t}function iv(i,t,e){const n=i.name,s=n.length;for(ae.lastIndex=0;;){const r=ae.exec(n),a=ae.lastIndex;let o=r[1];const c=r[2]==="]",l=r[3];if(c&&(o=o|0),l===void 0||l==="["&&a+2===s){Xs(e,l===void 0?new tv(o,i,t):new ev(o,i,t));break}else{let u=e.map[o];u===void 0&&(u=new nv(o),Xs(e,u)),e=u}}}class x8{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let s=0;s<n;++s){const r=t.getActiveUniform(e,s),a=t.getUniformLocation(e,r.name);iv(r,a,this)}}setValue(t,e,n,s){const r=this.map[e];r!==void 0&&r.setValue(t,n,s)}setOptional(t,e,n){const s=e[n];s!==void 0&&this.setValue(t,n,s)}static upload(t,e,n,s){for(let r=0,a=e.length;r!==a;++r){const o=e[r],c=n[o.id];c.needsUpdate!==!1&&o.setValue(t,c.value,s)}}static seqWithValue(t,e){const n=[];for(let s=0,r=t.length;s!==r;++s){const a=t[s];a.id in e&&n.push(a)}return n}}function Ys(i,t,e){const n=i.createShader(t);return i.shaderSource(n,e),i.compileShader(n),n}const sv=37297;let rv=0;function av(i,t){const e=i.split(`
`),n=[],s=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let a=s;a<r;a++){const o=a+1;n.push(`${o===t?">":" "} ${o}: ${e[a]}`)}return n.join(`
`)}const qs=new W1;function ov(i){t4._getMatrix(qs,t4.workingColorSpace,i);const t=`mat3( ${qs.elements.map(e=>e.toFixed(4))} )`;switch(t4.getTransfer(i)){case V6:return[t,"LinearTransferOETF"];case d4:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[t,"LinearTransferOETF"]}}function Zs(i,t,e){const n=i.getShaderParameter(t,i.COMPILE_STATUS),r=(i.getShaderInfoLog(t)||"").trim();if(n&&r==="")return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const o=parseInt(a[1]);return e.toUpperCase()+`

`+r+`

`+av(i.getShaderSource(t),o)}else return r}function cv(i,t){const e=ov(t);return[`vec4 ${i}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function lv(i,t){let e;switch(t){case Aa:e="Linear";break;case Ca:e="Reinhard";break;case Ra:e="Cineon";break;case Ia:e="ACESFilmic";break;case La:e="AgX";break;case Da:e="Neutral";break;case Pa:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+i+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const u8=new C;function hv(){t4.getLuminanceCoefficients(u8);const i=u8.x.toFixed(4),t=u8.y.toFixed(4),e=u8.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function uv(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(m6).join(`
`)}function fv(i){const t=[];for(const e in i){const n=i[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function dv(i,t){const e={},n=i.getProgramParameter(t,i.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const r=i.getActiveAttrib(t,s),a=r.name;let o=1;r.type===i.FLOAT_MAT2&&(o=2),r.type===i.FLOAT_MAT3&&(o=3),r.type===i.FLOAT_MAT4&&(o=4),e[a]={type:r.type,location:i.getAttribLocation(t,a),locationSize:o}}return e}function m6(i){return i!==""}function $s(i,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Js(i,t){return i.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const pv=/^[ \t]*#include +<([\w\d./]+)>/gm;function Fe(i){return i.replace(pv,gv)}const mv=new Map;function gv(i,t){let e=J1[t];if(e===void 0){const n=mv.get(t);if(n!==void 0)e=J1[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return Fe(e)}const _v=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ks(i){return i.replace(_v,xv)}function xv(i,t,e,n){let s="";for(let r=parseInt(t);r<parseInt(e);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function Qs(i){let t=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?t+=`
#define HIGH_PRECISION`:i.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function vv(i){let t="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Qe?t="SHADOWMAP_TYPE_PCF":i.shadowMapType===aa?t="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Z0&&(t="SHADOWMAP_TYPE_VSM"),t}function yv(i){let t="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case b2:case W2:t="ENVMAP_TYPE_CUBE";break;case H3:t="ENVMAP_TYPE_CUBE_UV";break}return t}function bv(i){let t="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case W2:t="ENVMAP_MODE_REFRACTION";break}return t}function Mv(i){let t="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case i7:t="ENVMAP_BLENDING_MULTIPLY";break;case Ta:t="ENVMAP_BLENDING_MIX";break;case wa:t="ENVMAP_BLENDING_ADD";break}return t}function Sv(i){const t=i.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:n,maxMip:e}}function Ev(i,t,e,n){const s=i.getContext(),r=e.defines;let a=e.vertexShader,o=e.fragmentShader;const c=vv(e),l=yv(e),h=bv(e),u=Mv(e),f=Sv(e),d=uv(e),m=fv(r),_=s.createProgram();let g,p,y=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(g=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,m].filter(m6).join(`
`),g.length>0&&(g+=`
`),p=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,m].filter(m6).join(`
`),p.length>0&&(p+=`
`)):(g=[Qs(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,m,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",e.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(m6).join(`
`),p=[Qs(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,m,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+l:"",e.envMap?"#define "+h:"",e.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",e.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==x2?"#define TONE_MAPPING":"",e.toneMapping!==x2?J1.tonemapping_pars_fragment:"",e.toneMapping!==x2?lv("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",J1.colorspace_pars_fragment,cv("linearToOutputTexel",e.outputColorSpace),hv(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(m6).join(`
`)),a=Fe(a),a=$s(a,e),a=Js(a,e),o=Fe(o),o=$s(o,e),o=Js(o,e),a=Ks(a),o=Ks(o),e.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,g=[d,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,p=["#define varying in",e.glslVersion===Ce?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Ce?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const v=y+g+a,x=y+p+o,T=Ys(s,s.VERTEX_SHADER,v),E=Ys(s,s.FRAGMENT_SHADER,x);s.attachShader(_,T),s.attachShader(_,E),e.index0AttributeName!==void 0?s.bindAttribLocation(_,0,e.index0AttributeName):e.morphTargets===!0&&s.bindAttribLocation(_,0,"position"),s.linkProgram(_);function A(L){if(i.debug.checkShaderErrors){const N=s.getProgramInfoLog(_)||"",z=s.getShaderInfoLog(T)||"",q=s.getShaderInfoLog(E)||"",H=N.trim(),Y=z.trim(),t1=q.trim();let W=!0,f1=!0;if(s.getProgramParameter(_,s.LINK_STATUS)===!1)if(W=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(s,_,T,E);else{const x1=Zs(s,T,"vertex"),S1=Zs(s,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(_,s.VALIDATE_STATUS)+`

Material Name: `+L.name+`
Material Type: `+L.type+`

Program Info Log: `+H+`
`+x1+`
`+S1)}else H!==""?console.warn("THREE.WebGLProgram: Program Info Log:",H):(Y===""||t1==="")&&(f1=!1);f1&&(L.diagnostics={runnable:W,programLog:H,vertexShader:{log:Y,prefix:g},fragmentShader:{log:t1,prefix:p}})}s.deleteShader(T),s.deleteShader(E),I=new x8(s,_),S=dv(s,_)}let I;this.getUniforms=function(){return I===void 0&&A(this),I};let S;this.getAttributes=function(){return S===void 0&&A(this),S};let M=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return M===!1&&(M=s.getProgramParameter(_,sv)),M},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(_),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=rv++,this.cacheKey=t,this.usedTimes=1,this.program=_,this.vertexShader=T,this.fragmentShader=E,this}let Tv=0;class wv{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,s=this._getShaderStage(e),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(t);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new Av(t),e.set(t,n)),n}}class Av{constructor(t){this.id=Tv++,this.code=t,this.usedTimes=0}}function Cv(i,t,e,n,s,r,a){const o=new B9,c=new wv,l=new Set,h=[],u=s.logarithmicDepthBuffer,f=s.vertexTextures;let d=s.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(S){return l.add(S),S===0?"uv":`uv${S}`}function g(S,M,L,N,z){const q=N.fog,H=z.geometry,Y=S.isMeshStandardMaterial?N.environment:null,t1=(S.isMeshStandardMaterial?e:t).get(S.envMap||Y),W=t1&&t1.mapping===H3?t1.image.height:null,f1=m[S.type];S.precision!==null&&(d=s.getMaxPrecision(S.precision),d!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",d,"instead."));const x1=H.morphAttributes.position||H.morphAttributes.normal||H.morphAttributes.color,S1=x1!==void 0?x1.length:0;let Y1=0;H.morphAttributes.position!==void 0&&(Y1=1),H.morphAttributes.normal!==void 0&&(Y1=2),H.morphAttributes.color!==void 0&&(Y1=3);let j1,f4,e4,Z;if(f1){const h4=U0[f1];j1=h4.vertexShader,f4=h4.fragmentShader}else j1=S.vertexShader,f4=S.fragmentShader,c.update(S),e4=c.getVertexShaderID(S),Z=c.getFragmentShaderID(S);const i1=i.getRenderTarget(),b1=i.state.buffers.depth.getReversed(),L1=z.isInstancedMesh===!0,w1=z.isBatchedMesh===!0,K1=!!S.map,x4=!!S.matcap,P=!!t1,n1=!!S.aoMap,Q=!!S.lightMap,J=!!S.bumpMap,$=!!S.normalMap,h1=!!S.displacementMap,s1=!!S.emissiveMap,u1=!!S.metalnessMap,H1=!!S.roughnessMap,V1=S.anisotropy>0,R=S.clearcoat>0,b=S.dispersion>0,F=S.iridescence>0,G=S.sheen>0,e1=S.transmission>0,X=V1&&!!S.anisotropyMap,I1=R&&!!S.clearcoatMap,l1=R&&!!S.clearcoatNormalMap,A1=R&&!!S.clearcoatRoughnessMap,C1=F&&!!S.iridescenceMap,r1=F&&!!S.iridescenceThicknessMap,_1=G&&!!S.sheenColorMap,F1=G&&!!S.sheenRoughnessMap,P1=!!S.specularMap,m1=!!S.specularColorMap,Z1=!!S.specularIntensityMap,D=e1&&!!S.transmissionMap,c1=e1&&!!S.thicknessMap,d1=!!S.gradientMap,E1=!!S.alphaMap,a1=S.alphaTest>0,j=!!S.alphaHash,R1=!!S.extensions;let G1=x2;S.toneMapped&&(i1===null||i1.isXRRenderTarget===!0)&&(G1=i.toneMapping);const v4={shaderID:f1,shaderType:S.type,shaderName:S.name,vertexShader:j1,fragmentShader:f4,defines:S.defines,customVertexShaderID:e4,customFragmentShaderID:Z,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:d,batching:w1,batchingColor:w1&&z._colorsTexture!==null,instancing:L1,instancingColor:L1&&z.instanceColor!==null,instancingMorph:L1&&z.morphTexture!==null,supportsVertexTextures:f,outputColorSpace:i1===null?i.outputColorSpace:i1.isXRRenderTarget===!0?i1.texture.colorSpace:D5,alphaToCoverage:!!S.alphaToCoverage,map:K1,matcap:x4,envMap:P,envMapMode:P&&t1.mapping,envMapCubeUVHeight:W,aoMap:n1,lightMap:Q,bumpMap:J,normalMap:$,displacementMap:f&&h1,emissiveMap:s1,normalMapObjectSpace:$&&S.normalMapType===ka,normalMapTangentSpace:$&&S.normalMapType===Z2,metalnessMap:u1,roughnessMap:H1,anisotropy:V1,anisotropyMap:X,clearcoat:R,clearcoatMap:I1,clearcoatNormalMap:l1,clearcoatRoughnessMap:A1,dispersion:b,iridescence:F,iridescenceMap:C1,iridescenceThicknessMap:r1,sheen:G,sheenColorMap:_1,sheenRoughnessMap:F1,specularMap:P1,specularColorMap:m1,specularIntensityMap:Z1,transmission:e1,transmissionMap:D,thicknessMap:c1,gradientMap:d1,opaque:S.transparent===!1&&S.blending===A5&&S.alphaToCoverage===!1,alphaMap:E1,alphaTest:a1,alphaHash:j,combine:S.combine,mapUv:K1&&_(S.map.channel),aoMapUv:n1&&_(S.aoMap.channel),lightMapUv:Q&&_(S.lightMap.channel),bumpMapUv:J&&_(S.bumpMap.channel),normalMapUv:$&&_(S.normalMap.channel),displacementMapUv:h1&&_(S.displacementMap.channel),emissiveMapUv:s1&&_(S.emissiveMap.channel),metalnessMapUv:u1&&_(S.metalnessMap.channel),roughnessMapUv:H1&&_(S.roughnessMap.channel),anisotropyMapUv:X&&_(S.anisotropyMap.channel),clearcoatMapUv:I1&&_(S.clearcoatMap.channel),clearcoatNormalMapUv:l1&&_(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:A1&&_(S.clearcoatRoughnessMap.channel),iridescenceMapUv:C1&&_(S.iridescenceMap.channel),iridescenceThicknessMapUv:r1&&_(S.iridescenceThicknessMap.channel),sheenColorMapUv:_1&&_(S.sheenColorMap.channel),sheenRoughnessMapUv:F1&&_(S.sheenRoughnessMap.channel),specularMapUv:P1&&_(S.specularMap.channel),specularColorMapUv:m1&&_(S.specularColorMap.channel),specularIntensityMapUv:Z1&&_(S.specularIntensityMap.channel),transmissionMapUv:D&&_(S.transmissionMap.channel),thicknessMapUv:c1&&_(S.thicknessMap.channel),alphaMapUv:E1&&_(S.alphaMap.channel),vertexTangents:!!H.attributes.tangent&&($||V1),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!H.attributes.color&&H.attributes.color.itemSize===4,pointsUvs:z.isPoints===!0&&!!H.attributes.uv&&(K1||E1),fog:!!q,useFog:S.fog===!0,fogExp2:!!q&&q.isFogExp2,flatShading:S.flatShading===!0&&S.wireframe===!1,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:u,reversedDepthBuffer:b1,skinning:z.isSkinnedMesh===!0,morphTargets:H.morphAttributes.position!==void 0,morphNormals:H.morphAttributes.normal!==void 0,morphColors:H.morphAttributes.color!==void 0,morphTargetsCount:S1,morphTextureStride:Y1,numDirLights:M.directional.length,numPointLights:M.point.length,numSpotLights:M.spot.length,numSpotLightMaps:M.spotLightMap.length,numRectAreaLights:M.rectArea.length,numHemiLights:M.hemi.length,numDirLightShadows:M.directionalShadowMap.length,numPointLightShadows:M.pointShadowMap.length,numSpotLightShadows:M.spotShadowMap.length,numSpotLightShadowsWithMaps:M.numSpotLightShadowsWithMaps,numLightProbes:M.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:S.dithering,shadowMapEnabled:i.shadowMap.enabled&&L.length>0,shadowMapType:i.shadowMap.type,toneMapping:G1,decodeVideoTexture:K1&&S.map.isVideoTexture===!0&&t4.getTransfer(S.map.colorSpace)===d4,decodeVideoTextureEmissive:s1&&S.emissiveMap.isVideoTexture===!0&&t4.getTransfer(S.emissiveMap.colorSpace)===d4,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===J0,flipSided:S.side===j4,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:R1&&S.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(R1&&S.extensions.multiDraw===!0||w1)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return v4.vertexUv1s=l.has(1),v4.vertexUv2s=l.has(2),v4.vertexUv3s=l.has(3),l.clear(),v4}function p(S){const M=[];if(S.shaderID?M.push(S.shaderID):(M.push(S.customVertexShaderID),M.push(S.customFragmentShaderID)),S.defines!==void 0)for(const L in S.defines)M.push(L),M.push(S.defines[L]);return S.isRawShaderMaterial===!1&&(y(M,S),v(M,S),M.push(i.outputColorSpace)),M.push(S.customProgramCacheKey),M.join()}function y(S,M){S.push(M.precision),S.push(M.outputColorSpace),S.push(M.envMapMode),S.push(M.envMapCubeUVHeight),S.push(M.mapUv),S.push(M.alphaMapUv),S.push(M.lightMapUv),S.push(M.aoMapUv),S.push(M.bumpMapUv),S.push(M.normalMapUv),S.push(M.displacementMapUv),S.push(M.emissiveMapUv),S.push(M.metalnessMapUv),S.push(M.roughnessMapUv),S.push(M.anisotropyMapUv),S.push(M.clearcoatMapUv),S.push(M.clearcoatNormalMapUv),S.push(M.clearcoatRoughnessMapUv),S.push(M.iridescenceMapUv),S.push(M.iridescenceThicknessMapUv),S.push(M.sheenColorMapUv),S.push(M.sheenRoughnessMapUv),S.push(M.specularMapUv),S.push(M.specularColorMapUv),S.push(M.specularIntensityMapUv),S.push(M.transmissionMapUv),S.push(M.thicknessMapUv),S.push(M.combine),S.push(M.fogExp2),S.push(M.sizeAttenuation),S.push(M.morphTargetsCount),S.push(M.morphAttributeCount),S.push(M.numDirLights),S.push(M.numPointLights),S.push(M.numSpotLights),S.push(M.numSpotLightMaps),S.push(M.numHemiLights),S.push(M.numRectAreaLights),S.push(M.numDirLightShadows),S.push(M.numPointLightShadows),S.push(M.numSpotLightShadows),S.push(M.numSpotLightShadowsWithMaps),S.push(M.numLightProbes),S.push(M.shadowMapType),S.push(M.toneMapping),S.push(M.numClippingPlanes),S.push(M.numClipIntersection),S.push(M.depthPacking)}function v(S,M){o.disableAll(),M.supportsVertexTextures&&o.enable(0),M.instancing&&o.enable(1),M.instancingColor&&o.enable(2),M.instancingMorph&&o.enable(3),M.matcap&&o.enable(4),M.envMap&&o.enable(5),M.normalMapObjectSpace&&o.enable(6),M.normalMapTangentSpace&&o.enable(7),M.clearcoat&&o.enable(8),M.iridescence&&o.enable(9),M.alphaTest&&o.enable(10),M.vertexColors&&o.enable(11),M.vertexAlphas&&o.enable(12),M.vertexUv1s&&o.enable(13),M.vertexUv2s&&o.enable(14),M.vertexUv3s&&o.enable(15),M.vertexTangents&&o.enable(16),M.anisotropy&&o.enable(17),M.alphaHash&&o.enable(18),M.batching&&o.enable(19),M.dispersion&&o.enable(20),M.batchingColor&&o.enable(21),M.gradientMap&&o.enable(22),S.push(o.mask),o.disableAll(),M.fog&&o.enable(0),M.useFog&&o.enable(1),M.flatShading&&o.enable(2),M.logarithmicDepthBuffer&&o.enable(3),M.reversedDepthBuffer&&o.enable(4),M.skinning&&o.enable(5),M.morphTargets&&o.enable(6),M.morphNormals&&o.enable(7),M.morphColors&&o.enable(8),M.premultipliedAlpha&&o.enable(9),M.shadowMapEnabled&&o.enable(10),M.doubleSided&&o.enable(11),M.flipSided&&o.enable(12),M.useDepthPacking&&o.enable(13),M.dithering&&o.enable(14),M.transmission&&o.enable(15),M.sheen&&o.enable(16),M.opaque&&o.enable(17),M.pointsUvs&&o.enable(18),M.decodeVideoTexture&&o.enable(19),M.decodeVideoTextureEmissive&&o.enable(20),M.alphaToCoverage&&o.enable(21),S.push(o.mask)}function x(S){const M=m[S.type];let L;if(M){const N=U0[M];L=ja.clone(N.uniforms)}else L=S.uniforms;return L}function T(S,M){let L;for(let N=0,z=h.length;N<z;N++){const q=h[N];if(q.cacheKey===M){L=q,++L.usedTimes;break}}return L===void 0&&(L=new Ev(i,M,S,r),h.push(L)),L}function E(S){if(--S.usedTimes===0){const M=h.indexOf(S);h[M]=h[h.length-1],h.pop(),S.destroy()}}function A(S){c.remove(S)}function I(){c.dispose()}return{getParameters:g,getProgramCacheKey:p,getUniforms:x,acquireProgram:T,releaseProgram:E,releaseShaderCache:A,programs:h,dispose:I}}function Rv(){let i=new WeakMap;function t(a){return i.has(a)}function e(a){let o=i.get(a);return o===void 0&&(o={},i.set(a,o)),o}function n(a){i.delete(a)}function s(a,o,c){i.get(a)[o]=c}function r(){i=new WeakMap}return{has:t,get:e,remove:n,update:s,dispose:r}}function Iv(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.material.id!==t.material.id?i.material.id-t.material.id:i.z!==t.z?i.z-t.z:i.id-t.id}function js(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.z!==t.z?t.z-i.z:i.id-t.id}function tr(){const i=[];let t=0;const e=[],n=[],s=[];function r(){t=0,e.length=0,n.length=0,s.length=0}function a(u,f,d,m,_,g){let p=i[t];return p===void 0?(p={id:u.id,object:u,geometry:f,material:d,groupOrder:m,renderOrder:u.renderOrder,z:_,group:g},i[t]=p):(p.id=u.id,p.object=u,p.geometry=f,p.material=d,p.groupOrder=m,p.renderOrder=u.renderOrder,p.z=_,p.group=g),t++,p}function o(u,f,d,m,_,g){const p=a(u,f,d,m,_,g);d.transmission>0?n.push(p):d.transparent===!0?s.push(p):e.push(p)}function c(u,f,d,m,_,g){const p=a(u,f,d,m,_,g);d.transmission>0?n.unshift(p):d.transparent===!0?s.unshift(p):e.unshift(p)}function l(u,f){e.length>1&&e.sort(u||Iv),n.length>1&&n.sort(f||js),s.length>1&&s.sort(f||js)}function h(){for(let u=t,f=i.length;u<f;u++){const d=i[u];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:e,transmissive:n,transparent:s,init:r,push:o,unshift:c,finish:h,sort:l}}function Pv(){let i=new WeakMap;function t(n,s){const r=i.get(n);let a;return r===void 0?(a=new tr,i.set(n,[a])):s>=r.length?(a=new tr,r.push(a)):a=r[s],a}function e(){i=new WeakMap}return{get:t,dispose:e}}function Lv(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new C,color:new v1};break;case"SpotLight":e={position:new C,direction:new C,color:new v1,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new C,color:new v1,distance:0,decay:0};break;case"HemisphereLight":e={direction:new C,skyColor:new v1,groundColor:new v1};break;case"RectAreaLight":e={color:new v1,position:new C,halfWidth:new C,halfHeight:new C};break}return i[t.id]=e,e}}}function Dv(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new K};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new K};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new K,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[t.id]=e,e}}}let Uv=0;function Ov(i,t){return(t.castShadow?2:0)-(i.castShadow?2:0)+(t.map?1:0)-(i.map?1:0)}function Nv(i){const t=new Lv,e=Dv(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new C);const s=new C,r=new B1,a=new B1;function o(l){let h=0,u=0,f=0;for(let S=0;S<9;S++)n.probe[S].set(0,0,0);let d=0,m=0,_=0,g=0,p=0,y=0,v=0,x=0,T=0,E=0,A=0;l.sort(Ov);for(let S=0,M=l.length;S<M;S++){const L=l[S],N=L.color,z=L.intensity,q=L.distance,H=L.shadow&&L.shadow.map?L.shadow.map.texture:null;if(L.isAmbientLight)h+=N.r*z,u+=N.g*z,f+=N.b*z;else if(L.isLightProbe){for(let Y=0;Y<9;Y++)n.probe[Y].addScaledVector(L.sh.coefficients[Y],z);A++}else if(L.isDirectionalLight){const Y=t.get(L);if(Y.color.copy(L.color).multiplyScalar(L.intensity),L.castShadow){const t1=L.shadow,W=e.get(L);W.shadowIntensity=t1.intensity,W.shadowBias=t1.bias,W.shadowNormalBias=t1.normalBias,W.shadowRadius=t1.radius,W.shadowMapSize=t1.mapSize,n.directionalShadow[d]=W,n.directionalShadowMap[d]=H,n.directionalShadowMatrix[d]=L.shadow.matrix,y++}n.directional[d]=Y,d++}else if(L.isSpotLight){const Y=t.get(L);Y.position.setFromMatrixPosition(L.matrixWorld),Y.color.copy(N).multiplyScalar(z),Y.distance=q,Y.coneCos=Math.cos(L.angle),Y.penumbraCos=Math.cos(L.angle*(1-L.penumbra)),Y.decay=L.decay,n.spot[_]=Y;const t1=L.shadow;if(L.map&&(n.spotLightMap[T]=L.map,T++,t1.updateMatrices(L),L.castShadow&&E++),n.spotLightMatrix[_]=t1.matrix,L.castShadow){const W=e.get(L);W.shadowIntensity=t1.intensity,W.shadowBias=t1.bias,W.shadowNormalBias=t1.normalBias,W.shadowRadius=t1.radius,W.shadowMapSize=t1.mapSize,n.spotShadow[_]=W,n.spotShadowMap[_]=H,x++}_++}else if(L.isRectAreaLight){const Y=t.get(L);Y.color.copy(N).multiplyScalar(z),Y.halfWidth.set(L.width*.5,0,0),Y.halfHeight.set(0,L.height*.5,0),n.rectArea[g]=Y,g++}else if(L.isPointLight){const Y=t.get(L);if(Y.color.copy(L.color).multiplyScalar(L.intensity),Y.distance=L.distance,Y.decay=L.decay,L.castShadow){const t1=L.shadow,W=e.get(L);W.shadowIntensity=t1.intensity,W.shadowBias=t1.bias,W.shadowNormalBias=t1.normalBias,W.shadowRadius=t1.radius,W.shadowMapSize=t1.mapSize,W.shadowCameraNear=t1.camera.near,W.shadowCameraFar=t1.camera.far,n.pointShadow[m]=W,n.pointShadowMap[m]=H,n.pointShadowMatrix[m]=L.shadow.matrix,v++}n.point[m]=Y,m++}else if(L.isHemisphereLight){const Y=t.get(L);Y.skyColor.copy(L.color).multiplyScalar(z),Y.groundColor.copy(L.groundColor).multiplyScalar(z),n.hemi[p]=Y,p++}}g>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=p1.LTC_FLOAT_1,n.rectAreaLTC2=p1.LTC_FLOAT_2):(n.rectAreaLTC1=p1.LTC_HALF_1,n.rectAreaLTC2=p1.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=f;const I=n.hash;(I.directionalLength!==d||I.pointLength!==m||I.spotLength!==_||I.rectAreaLength!==g||I.hemiLength!==p||I.numDirectionalShadows!==y||I.numPointShadows!==v||I.numSpotShadows!==x||I.numSpotMaps!==T||I.numLightProbes!==A)&&(n.directional.length=d,n.spot.length=_,n.rectArea.length=g,n.point.length=m,n.hemi.length=p,n.directionalShadow.length=y,n.directionalShadowMap.length=y,n.pointShadow.length=v,n.pointShadowMap.length=v,n.spotShadow.length=x,n.spotShadowMap.length=x,n.directionalShadowMatrix.length=y,n.pointShadowMatrix.length=v,n.spotLightMatrix.length=x+T-E,n.spotLightMap.length=T,n.numSpotLightShadowsWithMaps=E,n.numLightProbes=A,I.directionalLength=d,I.pointLength=m,I.spotLength=_,I.rectAreaLength=g,I.hemiLength=p,I.numDirectionalShadows=y,I.numPointShadows=v,I.numSpotShadows=x,I.numSpotMaps=T,I.numLightProbes=A,n.version=Uv++)}function c(l,h){let u=0,f=0,d=0,m=0,_=0;const g=h.matrixWorldInverse;for(let p=0,y=l.length;p<y;p++){const v=l[p];if(v.isDirectionalLight){const x=n.directional[u];x.direction.setFromMatrixPosition(v.matrixWorld),s.setFromMatrixPosition(v.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(g),u++}else if(v.isSpotLight){const x=n.spot[d];x.position.setFromMatrixPosition(v.matrixWorld),x.position.applyMatrix4(g),x.direction.setFromMatrixPosition(v.matrixWorld),s.setFromMatrixPosition(v.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(g),d++}else if(v.isRectAreaLight){const x=n.rectArea[m];x.position.setFromMatrixPosition(v.matrixWorld),x.position.applyMatrix4(g),a.identity(),r.copy(v.matrixWorld),r.premultiply(g),a.extractRotation(r),x.halfWidth.set(v.width*.5,0,0),x.halfHeight.set(0,v.height*.5,0),x.halfWidth.applyMatrix4(a),x.halfHeight.applyMatrix4(a),m++}else if(v.isPointLight){const x=n.point[f];x.position.setFromMatrixPosition(v.matrixWorld),x.position.applyMatrix4(g),f++}else if(v.isHemisphereLight){const x=n.hemi[_];x.direction.setFromMatrixPosition(v.matrixWorld),x.direction.transformDirection(g),_++}}}return{setup:o,setupView:c,state:n}}function er(i){const t=new Nv(i),e=[],n=[];function s(h){l.camera=h,e.length=0,n.length=0}function r(h){e.push(h)}function a(h){n.push(h)}function o(){t.setup(e)}function c(h){t.setupView(e,h)}const l={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:s,state:l,setupLights:o,setupLightsView:c,pushLight:r,pushShadow:a}}function Fv(i){let t=new WeakMap;function e(s,r=0){const a=t.get(s);let o;return a===void 0?(o=new er(i),t.set(s,[o])):r>=a.length?(o=new er(i),a.push(o)):o=a[r],o}function n(){t=new WeakMap}return{get:e,dispose:n}}const Bv=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,zv=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function kv(i,t,e){let n=new X3;const s=new K,r=new K,a=new i4,o=new An({depthPacking:za}),c=new Cn,l={},h=e.maxTextureSize,u={[y2]:j4,[j4]:y2,[J0]:J0},f=new z0({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new K},radius:{value:4}},vertexShader:Bv,fragmentShader:zv}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const m=new X1;m.setAttribute("position",new c4(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new I4(m,f),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Qe;let p=this.type;this.render=function(E,A,I){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||E.length===0)return;const S=i.getRenderTarget(),M=i.getActiveCubeFace(),L=i.getActiveMipmapLevel(),N=i.state;N.setBlending(_2),N.buffers.depth.getReversed()===!0?N.buffers.color.setClear(0,0,0,0):N.buffers.color.setClear(1,1,1,1),N.buffers.depth.setTest(!0),N.setScissorTest(!1);const z=p!==Z0&&this.type===Z0,q=p===Z0&&this.type!==Z0;for(let H=0,Y=E.length;H<Y;H++){const t1=E[H],W=t1.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",t1,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;s.copy(W.mapSize);const f1=W.getFrameExtents();if(s.multiply(f1),r.copy(W.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(r.x=Math.floor(h/f1.x),s.x=r.x*f1.x,W.mapSize.x=r.x),s.y>h&&(r.y=Math.floor(h/f1.y),s.y=r.y*f1.y,W.mapSize.y=r.y)),W.map===null||z===!0||q===!0){const S1=this.type!==Z0?{minFilter:B4,magFilter:B4}:{};W.map!==null&&W.map.dispose(),W.map=new n2(s.x,s.y,S1),W.map.texture.name=t1.name+".shadowMap",W.camera.updateProjectionMatrix()}i.setRenderTarget(W.map),i.clear();const x1=W.getViewportCount();for(let S1=0;S1<x1;S1++){const Y1=W.getViewport(S1);a.set(r.x*Y1.x,r.y*Y1.y,r.x*Y1.z,r.y*Y1.w),N.viewport(a),W.updateMatrices(t1,S1),n=W.getFrustum(),x(A,I,W.camera,t1,this.type)}W.isPointLightShadow!==!0&&this.type===Z0&&y(W,I),W.needsUpdate=!1}p=this.type,g.needsUpdate=!1,i.setRenderTarget(S,M,L)};function y(E,A){const I=t.update(_);f.defines.VSM_SAMPLES!==E.blurSamples&&(f.defines.VSM_SAMPLES=E.blurSamples,d.defines.VSM_SAMPLES=E.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),E.mapPass===null&&(E.mapPass=new n2(s.x,s.y)),f.uniforms.shadow_pass.value=E.map.texture,f.uniforms.resolution.value=E.mapSize,f.uniforms.radius.value=E.radius,i.setRenderTarget(E.mapPass),i.clear(),i.renderBufferDirect(A,null,I,f,_,null),d.uniforms.shadow_pass.value=E.mapPass.texture,d.uniforms.resolution.value=E.mapSize,d.uniforms.radius.value=E.radius,i.setRenderTarget(E.map),i.clear(),i.renderBufferDirect(A,null,I,d,_,null)}function v(E,A,I,S){let M=null;const L=I.isPointLight===!0?E.customDistanceMaterial:E.customDepthMaterial;if(L!==void 0)M=L;else if(M=I.isPointLight===!0?c:o,i.localClippingEnabled&&A.clipShadows===!0&&Array.isArray(A.clippingPlanes)&&A.clippingPlanes.length!==0||A.displacementMap&&A.displacementScale!==0||A.alphaMap&&A.alphaTest>0||A.map&&A.alphaTest>0||A.alphaToCoverage===!0){const N=M.uuid,z=A.uuid;let q=l[N];q===void 0&&(q={},l[N]=q);let H=q[z];H===void 0&&(H=M.clone(),q[z]=H,A.addEventListener("dispose",T)),M=H}if(M.visible=A.visible,M.wireframe=A.wireframe,S===Z0?M.side=A.shadowSide!==null?A.shadowSide:A.side:M.side=A.shadowSide!==null?A.shadowSide:u[A.side],M.alphaMap=A.alphaMap,M.alphaTest=A.alphaToCoverage===!0?.5:A.alphaTest,M.map=A.map,M.clipShadows=A.clipShadows,M.clippingPlanes=A.clippingPlanes,M.clipIntersection=A.clipIntersection,M.displacementMap=A.displacementMap,M.displacementScale=A.displacementScale,M.displacementBias=A.displacementBias,M.wireframeLinewidth=A.wireframeLinewidth,M.linewidth=A.linewidth,I.isPointLight===!0&&M.isMeshDistanceMaterial===!0){const N=i.properties.get(M);N.light=I}return M}function x(E,A,I,S,M){if(E.visible===!1)return;if(E.layers.test(A.layers)&&(E.isMesh||E.isLine||E.isPoints)&&(E.castShadow||E.receiveShadow&&M===Z0)&&(!E.frustumCulled||n.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,E.matrixWorld);const z=t.update(E),q=E.material;if(Array.isArray(q)){const H=z.groups;for(let Y=0,t1=H.length;Y<t1;Y++){const W=H[Y],f1=q[W.materialIndex];if(f1&&f1.visible){const x1=v(E,f1,S,M);E.onBeforeShadow(i,E,A,I,z,x1,W),i.renderBufferDirect(I,null,z,x1,E,W),E.onAfterShadow(i,E,A,I,z,x1,W)}}}else if(q.visible){const H=v(E,q,S,M);E.onBeforeShadow(i,E,A,I,z,H,null),i.renderBufferDirect(I,null,z,H,E,null),E.onAfterShadow(i,E,A,I,z,H,null)}}const N=E.children;for(let z=0,q=N.length;z<q;z++)x(N[z],A,I,S,M)}function T(E){E.target.removeEventListener("dispose",T);for(const I in l){const S=l[I],M=E.target.uuid;M in S&&(S[M].dispose(),delete S[M])}}}const Vv={[I8]:P8,[L8]:O8,[D8]:N8,[L5]:U8,[P8]:I8,[O8]:L8,[N8]:D8,[U8]:L5};function Hv(i,t){function e(){let D=!1;const c1=new i4;let d1=null;const E1=new i4(0,0,0,0);return{setMask:function(a1){d1!==a1&&!D&&(i.colorMask(a1,a1,a1,a1),d1=a1)},setLocked:function(a1){D=a1},setClear:function(a1,j,R1,G1,v4){v4===!0&&(a1*=G1,j*=G1,R1*=G1),c1.set(a1,j,R1,G1),E1.equals(c1)===!1&&(i.clearColor(a1,j,R1,G1),E1.copy(c1))},reset:function(){D=!1,d1=null,E1.set(-1,0,0,0)}}}function n(){let D=!1,c1=!1,d1=null,E1=null,a1=null;return{setReversed:function(j){if(c1!==j){const R1=t.get("EXT_clip_control");j?R1.clipControlEXT(R1.LOWER_LEFT_EXT,R1.ZERO_TO_ONE_EXT):R1.clipControlEXT(R1.LOWER_LEFT_EXT,R1.NEGATIVE_ONE_TO_ONE_EXT),c1=j;const G1=a1;a1=null,this.setClear(G1)}},getReversed:function(){return c1},setTest:function(j){j?i1(i.DEPTH_TEST):b1(i.DEPTH_TEST)},setMask:function(j){d1!==j&&!D&&(i.depthMask(j),d1=j)},setFunc:function(j){if(c1&&(j=Vv[j]),E1!==j){switch(j){case I8:i.depthFunc(i.NEVER);break;case P8:i.depthFunc(i.ALWAYS);break;case L8:i.depthFunc(i.LESS);break;case L5:i.depthFunc(i.LEQUAL);break;case D8:i.depthFunc(i.EQUAL);break;case U8:i.depthFunc(i.GEQUAL);break;case O8:i.depthFunc(i.GREATER);break;case N8:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}E1=j}},setLocked:function(j){D=j},setClear:function(j){a1!==j&&(c1&&(j=1-j),i.clearDepth(j),a1=j)},reset:function(){D=!1,d1=null,E1=null,a1=null,c1=!1}}}function s(){let D=!1,c1=null,d1=null,E1=null,a1=null,j=null,R1=null,G1=null,v4=null;return{setTest:function(h4){D||(h4?i1(i.STENCIL_TEST):b1(i.STENCIL_TEST))},setMask:function(h4){c1!==h4&&!D&&(i.stencilMask(h4),c1=h4)},setFunc:function(h4,a2,G0){(d1!==h4||E1!==a2||a1!==G0)&&(i.stencilFunc(h4,a2,G0),d1=h4,E1=a2,a1=G0)},setOp:function(h4,a2,G0){(j!==h4||R1!==a2||G1!==G0)&&(i.stencilOp(h4,a2,G0),j=h4,R1=a2,G1=G0)},setLocked:function(h4){D=h4},setClear:function(h4){v4!==h4&&(i.clearStencil(h4),v4=h4)},reset:function(){D=!1,c1=null,d1=null,E1=null,a1=null,j=null,R1=null,G1=null,v4=null}}}const r=new e,a=new n,o=new s,c=new WeakMap,l=new WeakMap;let h={},u={},f=new WeakMap,d=[],m=null,_=!1,g=null,p=null,y=null,v=null,x=null,T=null,E=null,A=new v1(0,0,0),I=0,S=!1,M=null,L=null,N=null,z=null,q=null;const H=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Y=!1,t1=0;const W=i.getParameter(i.VERSION);W.indexOf("WebGL")!==-1?(t1=parseFloat(/^WebGL (\d)/.exec(W)[1]),Y=t1>=1):W.indexOf("OpenGL ES")!==-1&&(t1=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),Y=t1>=2);let f1=null,x1={};const S1=i.getParameter(i.SCISSOR_BOX),Y1=i.getParameter(i.VIEWPORT),j1=new i4().fromArray(S1),f4=new i4().fromArray(Y1);function e4(D,c1,d1,E1){const a1=new Uint8Array(4),j=i.createTexture();i.bindTexture(D,j),i.texParameteri(D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(D,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let R1=0;R1<d1;R1++)D===i.TEXTURE_3D||D===i.TEXTURE_2D_ARRAY?i.texImage3D(c1,0,i.RGBA,1,1,E1,0,i.RGBA,i.UNSIGNED_BYTE,a1):i.texImage2D(c1+R1,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,a1);return j}const Z={};Z[i.TEXTURE_2D]=e4(i.TEXTURE_2D,i.TEXTURE_2D,1),Z[i.TEXTURE_CUBE_MAP]=e4(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),Z[i.TEXTURE_2D_ARRAY]=e4(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),Z[i.TEXTURE_3D]=e4(i.TEXTURE_3D,i.TEXTURE_3D,1,1),r.setClear(0,0,0,1),a.setClear(1),o.setClear(0),i1(i.DEPTH_TEST),a.setFunc(L5),J(!1),$(Me),i1(i.CULL_FACE),n1(_2);function i1(D){h[D]!==!0&&(i.enable(D),h[D]=!0)}function b1(D){h[D]!==!1&&(i.disable(D),h[D]=!1)}function L1(D,c1){return u[D]!==c1?(i.bindFramebuffer(D,c1),u[D]=c1,D===i.DRAW_FRAMEBUFFER&&(u[i.FRAMEBUFFER]=c1),D===i.FRAMEBUFFER&&(u[i.DRAW_FRAMEBUFFER]=c1),!0):!1}function w1(D,c1){let d1=d,E1=!1;if(D){d1=f.get(c1),d1===void 0&&(d1=[],f.set(c1,d1));const a1=D.textures;if(d1.length!==a1.length||d1[0]!==i.COLOR_ATTACHMENT0){for(let j=0,R1=a1.length;j<R1;j++)d1[j]=i.COLOR_ATTACHMENT0+j;d1.length=a1.length,E1=!0}}else d1[0]!==i.BACK&&(d1[0]=i.BACK,E1=!0);E1&&i.drawBuffers(d1)}function K1(D){return m!==D?(i.useProgram(D),m=D,!0):!1}const x4={[B2]:i.FUNC_ADD,[ca]:i.FUNC_SUBTRACT,[la]:i.FUNC_REVERSE_SUBTRACT};x4[ha]=i.MIN,x4[ua]=i.MAX;const P={[fa]:i.ZERO,[da]:i.ONE,[pa]:i.SRC_COLOR,[C8]:i.SRC_ALPHA,[ya]:i.SRC_ALPHA_SATURATE,[xa]:i.DST_COLOR,[ga]:i.DST_ALPHA,[ma]:i.ONE_MINUS_SRC_COLOR,[R8]:i.ONE_MINUS_SRC_ALPHA,[va]:i.ONE_MINUS_DST_COLOR,[_a]:i.ONE_MINUS_DST_ALPHA,[ba]:i.CONSTANT_COLOR,[Ma]:i.ONE_MINUS_CONSTANT_COLOR,[Sa]:i.CONSTANT_ALPHA,[Ea]:i.ONE_MINUS_CONSTANT_ALPHA};function n1(D,c1,d1,E1,a1,j,R1,G1,v4,h4){if(D===_2){_===!0&&(b1(i.BLEND),_=!1);return}if(_===!1&&(i1(i.BLEND),_=!0),D!==oa){if(D!==g||h4!==S){if((p!==B2||x!==B2)&&(i.blendEquation(i.FUNC_ADD),p=B2,x=B2),h4)switch(D){case A5:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case Se:i.blendFunc(i.ONE,i.ONE);break;case Ee:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case Te:i.blendFuncSeparate(i.DST_COLOR,i.ONE_MINUS_SRC_ALPHA,i.ZERO,i.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}else switch(D){case A5:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case Se:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE,i.ONE,i.ONE);break;case Ee:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Te:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}y=null,v=null,T=null,E=null,A.set(0,0,0),I=0,g=D,S=h4}return}a1=a1||c1,j=j||d1,R1=R1||E1,(c1!==p||a1!==x)&&(i.blendEquationSeparate(x4[c1],x4[a1]),p=c1,x=a1),(d1!==y||E1!==v||j!==T||R1!==E)&&(i.blendFuncSeparate(P[d1],P[E1],P[j],P[R1]),y=d1,v=E1,T=j,E=R1),(G1.equals(A)===!1||v4!==I)&&(i.blendColor(G1.r,G1.g,G1.b,v4),A.copy(G1),I=v4),g=D,S=!1}function Q(D,c1){D.side===J0?b1(i.CULL_FACE):i1(i.CULL_FACE);let d1=D.side===j4;c1&&(d1=!d1),J(d1),D.blending===A5&&D.transparent===!1?n1(_2):n1(D.blending,D.blendEquation,D.blendSrc,D.blendDst,D.blendEquationAlpha,D.blendSrcAlpha,D.blendDstAlpha,D.blendColor,D.blendAlpha,D.premultipliedAlpha),a.setFunc(D.depthFunc),a.setTest(D.depthTest),a.setMask(D.depthWrite),r.setMask(D.colorWrite);const E1=D.stencilWrite;o.setTest(E1),E1&&(o.setMask(D.stencilWriteMask),o.setFunc(D.stencilFunc,D.stencilRef,D.stencilFuncMask),o.setOp(D.stencilFail,D.stencilZFail,D.stencilZPass)),s1(D.polygonOffset,D.polygonOffsetFactor,D.polygonOffsetUnits),D.alphaToCoverage===!0?i1(i.SAMPLE_ALPHA_TO_COVERAGE):b1(i.SAMPLE_ALPHA_TO_COVERAGE)}function J(D){M!==D&&(D?i.frontFace(i.CW):i.frontFace(i.CCW),M=D)}function $(D){D!==sa?(i1(i.CULL_FACE),D!==L&&(D===Me?i.cullFace(i.BACK):D===ra?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):b1(i.CULL_FACE),L=D}function h1(D){D!==N&&(Y&&i.lineWidth(D),N=D)}function s1(D,c1,d1){D?(i1(i.POLYGON_OFFSET_FILL),(z!==c1||q!==d1)&&(i.polygonOffset(c1,d1),z=c1,q=d1)):b1(i.POLYGON_OFFSET_FILL)}function u1(D){D?i1(i.SCISSOR_TEST):b1(i.SCISSOR_TEST)}function H1(D){D===void 0&&(D=i.TEXTURE0+H-1),f1!==D&&(i.activeTexture(D),f1=D)}function V1(D,c1,d1){d1===void 0&&(f1===null?d1=i.TEXTURE0+H-1:d1=f1);let E1=x1[d1];E1===void 0&&(E1={type:void 0,texture:void 0},x1[d1]=E1),(E1.type!==D||E1.texture!==c1)&&(f1!==d1&&(i.activeTexture(d1),f1=d1),i.bindTexture(D,c1||Z[D]),E1.type=D,E1.texture=c1)}function R(){const D=x1[f1];D!==void 0&&D.type!==void 0&&(i.bindTexture(D.type,null),D.type=void 0,D.texture=void 0)}function b(){try{i.compressedTexImage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function F(){try{i.compressedTexImage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function G(){try{i.texSubImage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function e1(){try{i.texSubImage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function X(){try{i.compressedTexSubImage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function I1(){try{i.compressedTexSubImage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function l1(){try{i.texStorage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function A1(){try{i.texStorage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function C1(){try{i.texImage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function r1(){try{i.texImage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function _1(D){j1.equals(D)===!1&&(i.scissor(D.x,D.y,D.z,D.w),j1.copy(D))}function F1(D){f4.equals(D)===!1&&(i.viewport(D.x,D.y,D.z,D.w),f4.copy(D))}function P1(D,c1){let d1=l.get(c1);d1===void 0&&(d1=new WeakMap,l.set(c1,d1));let E1=d1.get(D);E1===void 0&&(E1=i.getUniformBlockIndex(c1,D.name),d1.set(D,E1))}function m1(D,c1){const E1=l.get(c1).get(D);c.get(c1)!==E1&&(i.uniformBlockBinding(c1,E1,D.__bindingPointIndex),c.set(c1,E1))}function Z1(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),a.setReversed(!1),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),h={},f1=null,x1={},u={},f=new WeakMap,d=[],m=null,_=!1,g=null,p=null,y=null,v=null,x=null,T=null,E=null,A=new v1(0,0,0),I=0,S=!1,M=null,L=null,N=null,z=null,q=null,j1.set(0,0,i.canvas.width,i.canvas.height),f4.set(0,0,i.canvas.width,i.canvas.height),r.reset(),a.reset(),o.reset()}return{buffers:{color:r,depth:a,stencil:o},enable:i1,disable:b1,bindFramebuffer:L1,drawBuffers:w1,useProgram:K1,setBlending:n1,setMaterial:Q,setFlipSided:J,setCullFace:$,setLineWidth:h1,setPolygonOffset:s1,setScissorTest:u1,activeTexture:H1,bindTexture:V1,unbindTexture:R,compressedTexImage2D:b,compressedTexImage3D:F,texImage2D:C1,texImage3D:r1,updateUBOMapping:P1,uniformBlockBinding:m1,texStorage2D:l1,texStorage3D:A1,texSubImage2D:G,texSubImage3D:e1,compressedTexSubImage2D:X,compressedTexSubImage3D:I1,scissor:_1,viewport:F1,reset:Z1}}function Gv(i,t,e,n,s,r,a){const o=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new K,h=new WeakMap;let u;const f=new WeakMap;let d=!1;try{d=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(R,b){return d?new OffscreenCanvas(R,b):G6("canvas")}function _(R,b,F){let G=1;const e1=V1(R);if((e1.width>F||e1.height>F)&&(G=F/Math.max(e1.width,e1.height)),G<1)if(typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&R instanceof ImageBitmap||typeof VideoFrame<"u"&&R instanceof VideoFrame){const X=Math.floor(G*e1.width),I1=Math.floor(G*e1.height);u===void 0&&(u=m(X,I1));const l1=b?m(X,I1):u;return l1.width=X,l1.height=I1,l1.getContext("2d").drawImage(R,0,0,X,I1),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e1.width+"x"+e1.height+") to ("+X+"x"+I1+")."),l1}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e1.width+"x"+e1.height+")."),R;return R}function g(R){return R.generateMipmaps}function p(R){i.generateMipmap(R)}function y(R){return R.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:R.isWebGL3DRenderTarget?i.TEXTURE_3D:R.isWebGLArrayRenderTarget||R.isCompressedArrayTexture?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D}function v(R,b,F,G,e1=!1){if(R!==null){if(i[R]!==void 0)return i[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let X=b;if(b===i.RED&&(F===i.FLOAT&&(X=i.R32F),F===i.HALF_FLOAT&&(X=i.R16F),F===i.UNSIGNED_BYTE&&(X=i.R8)),b===i.RED_INTEGER&&(F===i.UNSIGNED_BYTE&&(X=i.R8UI),F===i.UNSIGNED_SHORT&&(X=i.R16UI),F===i.UNSIGNED_INT&&(X=i.R32UI),F===i.BYTE&&(X=i.R8I),F===i.SHORT&&(X=i.R16I),F===i.INT&&(X=i.R32I)),b===i.RG&&(F===i.FLOAT&&(X=i.RG32F),F===i.HALF_FLOAT&&(X=i.RG16F),F===i.UNSIGNED_BYTE&&(X=i.RG8)),b===i.RG_INTEGER&&(F===i.UNSIGNED_BYTE&&(X=i.RG8UI),F===i.UNSIGNED_SHORT&&(X=i.RG16UI),F===i.UNSIGNED_INT&&(X=i.RG32UI),F===i.BYTE&&(X=i.RG8I),F===i.SHORT&&(X=i.RG16I),F===i.INT&&(X=i.RG32I)),b===i.RGB_INTEGER&&(F===i.UNSIGNED_BYTE&&(X=i.RGB8UI),F===i.UNSIGNED_SHORT&&(X=i.RGB16UI),F===i.UNSIGNED_INT&&(X=i.RGB32UI),F===i.BYTE&&(X=i.RGB8I),F===i.SHORT&&(X=i.RGB16I),F===i.INT&&(X=i.RGB32I)),b===i.RGBA_INTEGER&&(F===i.UNSIGNED_BYTE&&(X=i.RGBA8UI),F===i.UNSIGNED_SHORT&&(X=i.RGBA16UI),F===i.UNSIGNED_INT&&(X=i.RGBA32UI),F===i.BYTE&&(X=i.RGBA8I),F===i.SHORT&&(X=i.RGBA16I),F===i.INT&&(X=i.RGBA32I)),b===i.RGB&&(F===i.UNSIGNED_INT_5_9_9_9_REV&&(X=i.RGB9_E5),F===i.UNSIGNED_INT_10F_11F_11F_REV&&(X=i.R11F_G11F_B10F)),b===i.RGBA){const I1=e1?V6:t4.getTransfer(G);F===i.FLOAT&&(X=i.RGBA32F),F===i.HALF_FLOAT&&(X=i.RGBA16F),F===i.UNSIGNED_BYTE&&(X=I1===d4?i.SRGB8_ALPHA8:i.RGBA8),F===i.UNSIGNED_SHORT_4_4_4_4&&(X=i.RGBA4),F===i.UNSIGNED_SHORT_5_5_5_1&&(X=i.RGB5_A1)}return(X===i.R16F||X===i.R32F||X===i.RG16F||X===i.RG32F||X===i.RGBA16F||X===i.RGBA32F)&&t.get("EXT_color_buffer_float"),X}function x(R,b){let F;return R?b===null||b===M2||b===R3?F=i.DEPTH24_STENCIL8:b===c0?F=i.DEPTH32F_STENCIL8:b===C3&&(F=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):b===null||b===M2||b===R3?F=i.DEPTH_COMPONENT24:b===c0?F=i.DEPTH_COMPONENT32F:b===C3&&(F=i.DEPTH_COMPONENT16),F}function T(R,b){return g(R)===!0||R.isFramebufferTexture&&R.minFilter!==B4&&R.minFilter!==L4?Math.log2(Math.max(b.width,b.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?b.mipmaps.length:1}function E(R){const b=R.target;b.removeEventListener("dispose",E),I(b),b.isVideoTexture&&h.delete(b)}function A(R){const b=R.target;b.removeEventListener("dispose",A),M(b)}function I(R){const b=n.get(R);if(b.__webglInit===void 0)return;const F=R.source,G=f.get(F);if(G){const e1=G[b.__cacheKey];e1.usedTimes--,e1.usedTimes===0&&S(R),Object.keys(G).length===0&&f.delete(F)}n.remove(R)}function S(R){const b=n.get(R);i.deleteTexture(b.__webglTexture);const F=R.source,G=f.get(F);delete G[b.__cacheKey],a.memory.textures--}function M(R){const b=n.get(R);if(R.depthTexture&&(R.depthTexture.dispose(),n.remove(R.depthTexture)),R.isWebGLCubeRenderTarget)for(let G=0;G<6;G++){if(Array.isArray(b.__webglFramebuffer[G]))for(let e1=0;e1<b.__webglFramebuffer[G].length;e1++)i.deleteFramebuffer(b.__webglFramebuffer[G][e1]);else i.deleteFramebuffer(b.__webglFramebuffer[G]);b.__webglDepthbuffer&&i.deleteRenderbuffer(b.__webglDepthbuffer[G])}else{if(Array.isArray(b.__webglFramebuffer))for(let G=0;G<b.__webglFramebuffer.length;G++)i.deleteFramebuffer(b.__webglFramebuffer[G]);else i.deleteFramebuffer(b.__webglFramebuffer);if(b.__webglDepthbuffer&&i.deleteRenderbuffer(b.__webglDepthbuffer),b.__webglMultisampledFramebuffer&&i.deleteFramebuffer(b.__webglMultisampledFramebuffer),b.__webglColorRenderbuffer)for(let G=0;G<b.__webglColorRenderbuffer.length;G++)b.__webglColorRenderbuffer[G]&&i.deleteRenderbuffer(b.__webglColorRenderbuffer[G]);b.__webglDepthRenderbuffer&&i.deleteRenderbuffer(b.__webglDepthRenderbuffer)}const F=R.textures;for(let G=0,e1=F.length;G<e1;G++){const X=n.get(F[G]);X.__webglTexture&&(i.deleteTexture(X.__webglTexture),a.memory.textures--),n.remove(F[G])}n.remove(R)}let L=0;function N(){L=0}function z(){const R=L;return R>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+s.maxTextures),L+=1,R}function q(R){const b=[];return b.push(R.wrapS),b.push(R.wrapT),b.push(R.wrapR||0),b.push(R.magFilter),b.push(R.minFilter),b.push(R.anisotropy),b.push(R.internalFormat),b.push(R.format),b.push(R.type),b.push(R.generateMipmaps),b.push(R.premultiplyAlpha),b.push(R.flipY),b.push(R.unpackAlignment),b.push(R.colorSpace),b.join()}function H(R,b){const F=n.get(R);if(R.isVideoTexture&&u1(R),R.isRenderTargetTexture===!1&&R.isExternalTexture!==!0&&R.version>0&&F.__version!==R.version){const G=R.image;if(G===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(G.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Z(F,R,b);return}}else R.isExternalTexture&&(F.__webglTexture=R.sourceTexture?R.sourceTexture:null);e.bindTexture(i.TEXTURE_2D,F.__webglTexture,i.TEXTURE0+b)}function Y(R,b){const F=n.get(R);if(R.isRenderTargetTexture===!1&&R.version>0&&F.__version!==R.version){Z(F,R,b);return}e.bindTexture(i.TEXTURE_2D_ARRAY,F.__webglTexture,i.TEXTURE0+b)}function t1(R,b){const F=n.get(R);if(R.isRenderTargetTexture===!1&&R.version>0&&F.__version!==R.version){Z(F,R,b);return}e.bindTexture(i.TEXTURE_3D,F.__webglTexture,i.TEXTURE0+b)}function W(R,b){const F=n.get(R);if(R.version>0&&F.__version!==R.version){i1(F,R,b);return}e.bindTexture(i.TEXTURE_CUBE_MAP,F.__webglTexture,i.TEXTURE0+b)}const f1={[F6]:i.REPEAT,[w0]:i.CLAMP_TO_EDGE,[B6]:i.MIRRORED_REPEAT},x1={[B4]:i.NEAREST,[je]:i.NEAREST_MIPMAP_NEAREST,[p3]:i.NEAREST_MIPMAP_LINEAR,[L4]:i.LINEAR,[y6]:i.LINEAR_MIPMAP_NEAREST,[K0]:i.LINEAR_MIPMAP_LINEAR},S1={[Va]:i.NEVER,[qa]:i.ALWAYS,[Ha]:i.LESS,[ln]:i.LEQUAL,[Ga]:i.EQUAL,[Ya]:i.GEQUAL,[Wa]:i.GREATER,[Xa]:i.NOTEQUAL};function Y1(R,b){if(b.type===c0&&t.has("OES_texture_float_linear")===!1&&(b.magFilter===L4||b.magFilter===y6||b.magFilter===p3||b.magFilter===K0||b.minFilter===L4||b.minFilter===y6||b.minFilter===p3||b.minFilter===K0)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(R,i.TEXTURE_WRAP_S,f1[b.wrapS]),i.texParameteri(R,i.TEXTURE_WRAP_T,f1[b.wrapT]),(R===i.TEXTURE_3D||R===i.TEXTURE_2D_ARRAY)&&i.texParameteri(R,i.TEXTURE_WRAP_R,f1[b.wrapR]),i.texParameteri(R,i.TEXTURE_MAG_FILTER,x1[b.magFilter]),i.texParameteri(R,i.TEXTURE_MIN_FILTER,x1[b.minFilter]),b.compareFunction&&(i.texParameteri(R,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(R,i.TEXTURE_COMPARE_FUNC,S1[b.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(b.magFilter===B4||b.minFilter!==p3&&b.minFilter!==K0||b.type===c0&&t.has("OES_texture_float_linear")===!1)return;if(b.anisotropy>1||n.get(b).__currentAnisotropy){const F=t.get("EXT_texture_filter_anisotropic");i.texParameterf(R,F.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,s.getMaxAnisotropy())),n.get(b).__currentAnisotropy=b.anisotropy}}}function j1(R,b){let F=!1;R.__webglInit===void 0&&(R.__webglInit=!0,b.addEventListener("dispose",E));const G=b.source;let e1=f.get(G);e1===void 0&&(e1={},f.set(G,e1));const X=q(b);if(X!==R.__cacheKey){e1[X]===void 0&&(e1[X]={texture:i.createTexture(),usedTimes:0},a.memory.textures++,F=!0),e1[X].usedTimes++;const I1=e1[R.__cacheKey];I1!==void 0&&(e1[R.__cacheKey].usedTimes--,I1.usedTimes===0&&S(b)),R.__cacheKey=X,R.__webglTexture=e1[X].texture}return F}function f4(R,b,F){return Math.floor(Math.floor(R/F)/b)}function e4(R,b,F,G){const X=R.updateRanges;if(X.length===0)e.texSubImage2D(i.TEXTURE_2D,0,0,0,b.width,b.height,F,G,b.data);else{X.sort((r1,_1)=>r1.start-_1.start);let I1=0;for(let r1=1;r1<X.length;r1++){const _1=X[I1],F1=X[r1],P1=_1.start+_1.count,m1=f4(F1.start,b.width,4),Z1=f4(_1.start,b.width,4);F1.start<=P1+1&&m1===Z1&&f4(F1.start+F1.count-1,b.width,4)===m1?_1.count=Math.max(_1.count,F1.start+F1.count-_1.start):(++I1,X[I1]=F1)}X.length=I1+1;const l1=i.getParameter(i.UNPACK_ROW_LENGTH),A1=i.getParameter(i.UNPACK_SKIP_PIXELS),C1=i.getParameter(i.UNPACK_SKIP_ROWS);i.pixelStorei(i.UNPACK_ROW_LENGTH,b.width);for(let r1=0,_1=X.length;r1<_1;r1++){const F1=X[r1],P1=Math.floor(F1.start/4),m1=Math.ceil(F1.count/4),Z1=P1%b.width,D=Math.floor(P1/b.width),c1=m1,d1=1;i.pixelStorei(i.UNPACK_SKIP_PIXELS,Z1),i.pixelStorei(i.UNPACK_SKIP_ROWS,D),e.texSubImage2D(i.TEXTURE_2D,0,Z1,D,c1,d1,F,G,b.data)}R.clearUpdateRanges(),i.pixelStorei(i.UNPACK_ROW_LENGTH,l1),i.pixelStorei(i.UNPACK_SKIP_PIXELS,A1),i.pixelStorei(i.UNPACK_SKIP_ROWS,C1)}}function Z(R,b,F){let G=i.TEXTURE_2D;(b.isDataArrayTexture||b.isCompressedArrayTexture)&&(G=i.TEXTURE_2D_ARRAY),b.isData3DTexture&&(G=i.TEXTURE_3D);const e1=j1(R,b),X=b.source;e.bindTexture(G,R.__webglTexture,i.TEXTURE0+F);const I1=n.get(X);if(X.version!==I1.__version||e1===!0){e.activeTexture(i.TEXTURE0+F);const l1=t4.getPrimaries(t4.workingColorSpace),A1=b.colorSpace===p2?null:t4.getPrimaries(b.colorSpace),C1=b.colorSpace===p2||l1===A1?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,b.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,b.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,b.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,C1);let r1=_(b.image,!1,s.maxTextureSize);r1=H1(b,r1);const _1=r.convert(b.format,b.colorSpace),F1=r.convert(b.type);let P1=v(b.internalFormat,_1,F1,b.colorSpace,b.isVideoTexture);Y1(G,b);let m1;const Z1=b.mipmaps,D=b.isVideoTexture!==!0,c1=I1.__version===void 0||e1===!0,d1=X.dataReady,E1=T(b,r1);if(b.isDepthTexture)P1=x(b.format===P3,b.type),c1&&(D?e.texStorage2D(i.TEXTURE_2D,1,P1,r1.width,r1.height):e.texImage2D(i.TEXTURE_2D,0,P1,r1.width,r1.height,0,_1,F1,null));else if(b.isDataTexture)if(Z1.length>0){D&&c1&&e.texStorage2D(i.TEXTURE_2D,E1,P1,Z1[0].width,Z1[0].height);for(let a1=0,j=Z1.length;a1<j;a1++)m1=Z1[a1],D?d1&&e.texSubImage2D(i.TEXTURE_2D,a1,0,0,m1.width,m1.height,_1,F1,m1.data):e.texImage2D(i.TEXTURE_2D,a1,P1,m1.width,m1.height,0,_1,F1,m1.data);b.generateMipmaps=!1}else D?(c1&&e.texStorage2D(i.TEXTURE_2D,E1,P1,r1.width,r1.height),d1&&e4(b,r1,_1,F1)):e.texImage2D(i.TEXTURE_2D,0,P1,r1.width,r1.height,0,_1,F1,r1.data);else if(b.isCompressedTexture)if(b.isCompressedArrayTexture){D&&c1&&e.texStorage3D(i.TEXTURE_2D_ARRAY,E1,P1,Z1[0].width,Z1[0].height,r1.depth);for(let a1=0,j=Z1.length;a1<j;a1++)if(m1=Z1[a1],b.format!==Q4)if(_1!==null)if(D){if(d1)if(b.layerUpdates.size>0){const R1=Oe(m1.width,m1.height,b.format,b.type);for(const G1 of b.layerUpdates){const v4=m1.data.subarray(G1*R1/m1.data.BYTES_PER_ELEMENT,(G1+1)*R1/m1.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,a1,0,0,G1,m1.width,m1.height,1,_1,v4)}b.clearLayerUpdates()}else e.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,a1,0,0,0,m1.width,m1.height,r1.depth,_1,m1.data)}else e.compressedTexImage3D(i.TEXTURE_2D_ARRAY,a1,P1,m1.width,m1.height,r1.depth,0,m1.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else D?d1&&e.texSubImage3D(i.TEXTURE_2D_ARRAY,a1,0,0,0,m1.width,m1.height,r1.depth,_1,F1,m1.data):e.texImage3D(i.TEXTURE_2D_ARRAY,a1,P1,m1.width,m1.height,r1.depth,0,_1,F1,m1.data)}else{D&&c1&&e.texStorage2D(i.TEXTURE_2D,E1,P1,Z1[0].width,Z1[0].height);for(let a1=0,j=Z1.length;a1<j;a1++)m1=Z1[a1],b.format!==Q4?_1!==null?D?d1&&e.compressedTexSubImage2D(i.TEXTURE_2D,a1,0,0,m1.width,m1.height,_1,m1.data):e.compressedTexImage2D(i.TEXTURE_2D,a1,P1,m1.width,m1.height,0,m1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):D?d1&&e.texSubImage2D(i.TEXTURE_2D,a1,0,0,m1.width,m1.height,_1,F1,m1.data):e.texImage2D(i.TEXTURE_2D,a1,P1,m1.width,m1.height,0,_1,F1,m1.data)}else if(b.isDataArrayTexture)if(D){if(c1&&e.texStorage3D(i.TEXTURE_2D_ARRAY,E1,P1,r1.width,r1.height,r1.depth),d1)if(b.layerUpdates.size>0){const a1=Oe(r1.width,r1.height,b.format,b.type);for(const j of b.layerUpdates){const R1=r1.data.subarray(j*a1/r1.data.BYTES_PER_ELEMENT,(j+1)*a1/r1.data.BYTES_PER_ELEMENT);e.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,j,r1.width,r1.height,1,_1,F1,R1)}b.clearLayerUpdates()}else e.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,r1.width,r1.height,r1.depth,_1,F1,r1.data)}else e.texImage3D(i.TEXTURE_2D_ARRAY,0,P1,r1.width,r1.height,r1.depth,0,_1,F1,r1.data);else if(b.isData3DTexture)D?(c1&&e.texStorage3D(i.TEXTURE_3D,E1,P1,r1.width,r1.height,r1.depth),d1&&e.texSubImage3D(i.TEXTURE_3D,0,0,0,0,r1.width,r1.height,r1.depth,_1,F1,r1.data)):e.texImage3D(i.TEXTURE_3D,0,P1,r1.width,r1.height,r1.depth,0,_1,F1,r1.data);else if(b.isFramebufferTexture){if(c1)if(D)e.texStorage2D(i.TEXTURE_2D,E1,P1,r1.width,r1.height);else{let a1=r1.width,j=r1.height;for(let R1=0;R1<E1;R1++)e.texImage2D(i.TEXTURE_2D,R1,P1,a1,j,0,_1,F1,null),a1>>=1,j>>=1}}else if(Z1.length>0){if(D&&c1){const a1=V1(Z1[0]);e.texStorage2D(i.TEXTURE_2D,E1,P1,a1.width,a1.height)}for(let a1=0,j=Z1.length;a1<j;a1++)m1=Z1[a1],D?d1&&e.texSubImage2D(i.TEXTURE_2D,a1,0,0,_1,F1,m1):e.texImage2D(i.TEXTURE_2D,a1,P1,_1,F1,m1);b.generateMipmaps=!1}else if(D){if(c1){const a1=V1(r1);e.texStorage2D(i.TEXTURE_2D,E1,P1,a1.width,a1.height)}d1&&e.texSubImage2D(i.TEXTURE_2D,0,0,0,_1,F1,r1)}else e.texImage2D(i.TEXTURE_2D,0,P1,_1,F1,r1);g(b)&&p(G),I1.__version=X.version,b.onUpdate&&b.onUpdate(b)}R.__version=b.version}function i1(R,b,F){if(b.image.length!==6)return;const G=j1(R,b),e1=b.source;e.bindTexture(i.TEXTURE_CUBE_MAP,R.__webglTexture,i.TEXTURE0+F);const X=n.get(e1);if(e1.version!==X.__version||G===!0){e.activeTexture(i.TEXTURE0+F);const I1=t4.getPrimaries(t4.workingColorSpace),l1=b.colorSpace===p2?null:t4.getPrimaries(b.colorSpace),A1=b.colorSpace===p2||I1===l1?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,b.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,b.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,b.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,A1);const C1=b.isCompressedTexture||b.image[0].isCompressedTexture,r1=b.image[0]&&b.image[0].isDataTexture,_1=[];for(let j=0;j<6;j++)!C1&&!r1?_1[j]=_(b.image[j],!0,s.maxCubemapSize):_1[j]=r1?b.image[j].image:b.image[j],_1[j]=H1(b,_1[j]);const F1=_1[0],P1=r.convert(b.format,b.colorSpace),m1=r.convert(b.type),Z1=v(b.internalFormat,P1,m1,b.colorSpace),D=b.isVideoTexture!==!0,c1=X.__version===void 0||G===!0,d1=e1.dataReady;let E1=T(b,F1);Y1(i.TEXTURE_CUBE_MAP,b);let a1;if(C1){D&&c1&&e.texStorage2D(i.TEXTURE_CUBE_MAP,E1,Z1,F1.width,F1.height);for(let j=0;j<6;j++){a1=_1[j].mipmaps;for(let R1=0;R1<a1.length;R1++){const G1=a1[R1];b.format!==Q4?P1!==null?D?d1&&e.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,R1,0,0,G1.width,G1.height,P1,G1.data):e.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,R1,Z1,G1.width,G1.height,0,G1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):D?d1&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,R1,0,0,G1.width,G1.height,P1,m1,G1.data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,R1,Z1,G1.width,G1.height,0,P1,m1,G1.data)}}}else{if(a1=b.mipmaps,D&&c1){a1.length>0&&E1++;const j=V1(_1[0]);e.texStorage2D(i.TEXTURE_CUBE_MAP,E1,Z1,j.width,j.height)}for(let j=0;j<6;j++)if(r1){D?d1&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,0,0,_1[j].width,_1[j].height,P1,m1,_1[j].data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,Z1,_1[j].width,_1[j].height,0,P1,m1,_1[j].data);for(let R1=0;R1<a1.length;R1++){const v4=a1[R1].image[j].image;D?d1&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,R1+1,0,0,v4.width,v4.height,P1,m1,v4.data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,R1+1,Z1,v4.width,v4.height,0,P1,m1,v4.data)}}else{D?d1&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,0,0,P1,m1,_1[j]):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,Z1,P1,m1,_1[j]);for(let R1=0;R1<a1.length;R1++){const G1=a1[R1];D?d1&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,R1+1,0,0,P1,m1,G1.image[j]):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,R1+1,Z1,P1,m1,G1.image[j])}}}g(b)&&p(i.TEXTURE_CUBE_MAP),X.__version=e1.version,b.onUpdate&&b.onUpdate(b)}R.__version=b.version}function b1(R,b,F,G,e1,X){const I1=r.convert(F.format,F.colorSpace),l1=r.convert(F.type),A1=v(F.internalFormat,I1,l1,F.colorSpace),C1=n.get(b),r1=n.get(F);if(r1.__renderTarget=b,!C1.__hasExternalTextures){const _1=Math.max(1,b.width>>X),F1=Math.max(1,b.height>>X);e1===i.TEXTURE_3D||e1===i.TEXTURE_2D_ARRAY?e.texImage3D(e1,X,A1,_1,F1,b.depth,0,I1,l1,null):e.texImage2D(e1,X,A1,_1,F1,0,I1,l1,null)}e.bindFramebuffer(i.FRAMEBUFFER,R),s1(b)?o.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,G,e1,r1.__webglTexture,0,h1(b)):(e1===i.TEXTURE_2D||e1>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&e1<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,G,e1,r1.__webglTexture,X),e.bindFramebuffer(i.FRAMEBUFFER,null)}function L1(R,b,F){if(i.bindRenderbuffer(i.RENDERBUFFER,R),b.depthBuffer){const G=b.depthTexture,e1=G&&G.isDepthTexture?G.type:null,X=x(b.stencilBuffer,e1),I1=b.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,l1=h1(b);s1(b)?o.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,l1,X,b.width,b.height):F?i.renderbufferStorageMultisample(i.RENDERBUFFER,l1,X,b.width,b.height):i.renderbufferStorage(i.RENDERBUFFER,X,b.width,b.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,I1,i.RENDERBUFFER,R)}else{const G=b.textures;for(let e1=0;e1<G.length;e1++){const X=G[e1],I1=r.convert(X.format,X.colorSpace),l1=r.convert(X.type),A1=v(X.internalFormat,I1,l1,X.colorSpace),C1=h1(b);F&&s1(b)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,C1,A1,b.width,b.height):s1(b)?o.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,C1,A1,b.width,b.height):i.renderbufferStorage(i.RENDERBUFFER,A1,b.width,b.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function w1(R,b){if(b&&b.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(i.FRAMEBUFFER,R),!(b.depthTexture&&b.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const G=n.get(b.depthTexture);G.__renderTarget=b,(!G.__webglTexture||b.depthTexture.image.width!==b.width||b.depthTexture.image.height!==b.height)&&(b.depthTexture.image.width=b.width,b.depthTexture.image.height=b.height,b.depthTexture.needsUpdate=!0),H(b.depthTexture,0);const e1=G.__webglTexture,X=h1(b);if(b.depthTexture.format===I3)s1(b)?o.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,e1,0,X):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,e1,0);else if(b.depthTexture.format===P3)s1(b)?o.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,e1,0,X):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,e1,0);else throw new Error("Unknown depthTexture format")}function K1(R){const b=n.get(R),F=R.isWebGLCubeRenderTarget===!0;if(b.__boundDepthTexture!==R.depthTexture){const G=R.depthTexture;if(b.__depthDisposeCallback&&b.__depthDisposeCallback(),G){const e1=()=>{delete b.__boundDepthTexture,delete b.__depthDisposeCallback,G.removeEventListener("dispose",e1)};G.addEventListener("dispose",e1),b.__depthDisposeCallback=e1}b.__boundDepthTexture=G}if(R.depthTexture&&!b.__autoAllocateDepthBuffer){if(F)throw new Error("target.depthTexture not supported in Cube render targets");const G=R.texture.mipmaps;G&&G.length>0?w1(b.__webglFramebuffer[0],R):w1(b.__webglFramebuffer,R)}else if(F){b.__webglDepthbuffer=[];for(let G=0;G<6;G++)if(e.bindFramebuffer(i.FRAMEBUFFER,b.__webglFramebuffer[G]),b.__webglDepthbuffer[G]===void 0)b.__webglDepthbuffer[G]=i.createRenderbuffer(),L1(b.__webglDepthbuffer[G],R,!1);else{const e1=R.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,X=b.__webglDepthbuffer[G];i.bindRenderbuffer(i.RENDERBUFFER,X),i.framebufferRenderbuffer(i.FRAMEBUFFER,e1,i.RENDERBUFFER,X)}}else{const G=R.texture.mipmaps;if(G&&G.length>0?e.bindFramebuffer(i.FRAMEBUFFER,b.__webglFramebuffer[0]):e.bindFramebuffer(i.FRAMEBUFFER,b.__webglFramebuffer),b.__webglDepthbuffer===void 0)b.__webglDepthbuffer=i.createRenderbuffer(),L1(b.__webglDepthbuffer,R,!1);else{const e1=R.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,X=b.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,X),i.framebufferRenderbuffer(i.FRAMEBUFFER,e1,i.RENDERBUFFER,X)}}e.bindFramebuffer(i.FRAMEBUFFER,null)}function x4(R,b,F){const G=n.get(R);b!==void 0&&b1(G.__webglFramebuffer,R,R.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),F!==void 0&&K1(R)}function P(R){const b=R.texture,F=n.get(R),G=n.get(b);R.addEventListener("dispose",A);const e1=R.textures,X=R.isWebGLCubeRenderTarget===!0,I1=e1.length>1;if(I1||(G.__webglTexture===void 0&&(G.__webglTexture=i.createTexture()),G.__version=b.version,a.memory.textures++),X){F.__webglFramebuffer=[];for(let l1=0;l1<6;l1++)if(b.mipmaps&&b.mipmaps.length>0){F.__webglFramebuffer[l1]=[];for(let A1=0;A1<b.mipmaps.length;A1++)F.__webglFramebuffer[l1][A1]=i.createFramebuffer()}else F.__webglFramebuffer[l1]=i.createFramebuffer()}else{if(b.mipmaps&&b.mipmaps.length>0){F.__webglFramebuffer=[];for(let l1=0;l1<b.mipmaps.length;l1++)F.__webglFramebuffer[l1]=i.createFramebuffer()}else F.__webglFramebuffer=i.createFramebuffer();if(I1)for(let l1=0,A1=e1.length;l1<A1;l1++){const C1=n.get(e1[l1]);C1.__webglTexture===void 0&&(C1.__webglTexture=i.createTexture(),a.memory.textures++)}if(R.samples>0&&s1(R)===!1){F.__webglMultisampledFramebuffer=i.createFramebuffer(),F.__webglColorRenderbuffer=[],e.bindFramebuffer(i.FRAMEBUFFER,F.__webglMultisampledFramebuffer);for(let l1=0;l1<e1.length;l1++){const A1=e1[l1];F.__webglColorRenderbuffer[l1]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,F.__webglColorRenderbuffer[l1]);const C1=r.convert(A1.format,A1.colorSpace),r1=r.convert(A1.type),_1=v(A1.internalFormat,C1,r1,A1.colorSpace,R.isXRRenderTarget===!0),F1=h1(R);i.renderbufferStorageMultisample(i.RENDERBUFFER,F1,_1,R.width,R.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+l1,i.RENDERBUFFER,F.__webglColorRenderbuffer[l1])}i.bindRenderbuffer(i.RENDERBUFFER,null),R.depthBuffer&&(F.__webglDepthRenderbuffer=i.createRenderbuffer(),L1(F.__webglDepthRenderbuffer,R,!0)),e.bindFramebuffer(i.FRAMEBUFFER,null)}}if(X){e.bindTexture(i.TEXTURE_CUBE_MAP,G.__webglTexture),Y1(i.TEXTURE_CUBE_MAP,b);for(let l1=0;l1<6;l1++)if(b.mipmaps&&b.mipmaps.length>0)for(let A1=0;A1<b.mipmaps.length;A1++)b1(F.__webglFramebuffer[l1][A1],R,b,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+l1,A1);else b1(F.__webglFramebuffer[l1],R,b,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+l1,0);g(b)&&p(i.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(I1){for(let l1=0,A1=e1.length;l1<A1;l1++){const C1=e1[l1],r1=n.get(C1);let _1=i.TEXTURE_2D;(R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(_1=R.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),e.bindTexture(_1,r1.__webglTexture),Y1(_1,C1),b1(F.__webglFramebuffer,R,C1,i.COLOR_ATTACHMENT0+l1,_1,0),g(C1)&&p(_1)}e.unbindTexture()}else{let l1=i.TEXTURE_2D;if((R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(l1=R.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),e.bindTexture(l1,G.__webglTexture),Y1(l1,b),b.mipmaps&&b.mipmaps.length>0)for(let A1=0;A1<b.mipmaps.length;A1++)b1(F.__webglFramebuffer[A1],R,b,i.COLOR_ATTACHMENT0,l1,A1);else b1(F.__webglFramebuffer,R,b,i.COLOR_ATTACHMENT0,l1,0);g(b)&&p(l1),e.unbindTexture()}R.depthBuffer&&K1(R)}function n1(R){const b=R.textures;for(let F=0,G=b.length;F<G;F++){const e1=b[F];if(g(e1)){const X=y(R),I1=n.get(e1).__webglTexture;e.bindTexture(X,I1),p(X),e.unbindTexture()}}}const Q=[],J=[];function $(R){if(R.samples>0){if(s1(R)===!1){const b=R.textures,F=R.width,G=R.height;let e1=i.COLOR_BUFFER_BIT;const X=R.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,I1=n.get(R),l1=b.length>1;if(l1)for(let C1=0;C1<b.length;C1++)e.bindFramebuffer(i.FRAMEBUFFER,I1.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+C1,i.RENDERBUFFER,null),e.bindFramebuffer(i.FRAMEBUFFER,I1.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+C1,i.TEXTURE_2D,null,0);e.bindFramebuffer(i.READ_FRAMEBUFFER,I1.__webglMultisampledFramebuffer);const A1=R.texture.mipmaps;A1&&A1.length>0?e.bindFramebuffer(i.DRAW_FRAMEBUFFER,I1.__webglFramebuffer[0]):e.bindFramebuffer(i.DRAW_FRAMEBUFFER,I1.__webglFramebuffer);for(let C1=0;C1<b.length;C1++){if(R.resolveDepthBuffer&&(R.depthBuffer&&(e1|=i.DEPTH_BUFFER_BIT),R.stencilBuffer&&R.resolveStencilBuffer&&(e1|=i.STENCIL_BUFFER_BIT)),l1){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,I1.__webglColorRenderbuffer[C1]);const r1=n.get(b[C1]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,r1,0)}i.blitFramebuffer(0,0,F,G,0,0,F,G,e1,i.NEAREST),c===!0&&(Q.length=0,J.length=0,Q.push(i.COLOR_ATTACHMENT0+C1),R.depthBuffer&&R.resolveDepthBuffer===!1&&(Q.push(X),J.push(X),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,J)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,Q))}if(e.bindFramebuffer(i.READ_FRAMEBUFFER,null),e.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),l1)for(let C1=0;C1<b.length;C1++){e.bindFramebuffer(i.FRAMEBUFFER,I1.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+C1,i.RENDERBUFFER,I1.__webglColorRenderbuffer[C1]);const r1=n.get(b[C1]).__webglTexture;e.bindFramebuffer(i.FRAMEBUFFER,I1.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+C1,i.TEXTURE_2D,r1,0)}e.bindFramebuffer(i.DRAW_FRAMEBUFFER,I1.__webglMultisampledFramebuffer)}else if(R.depthBuffer&&R.resolveDepthBuffer===!1&&c){const b=R.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[b])}}}function h1(R){return Math.min(s.maxSamples,R.samples)}function s1(R){const b=n.get(R);return R.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&b.__useRenderToTexture!==!1}function u1(R){const b=a.render.frame;h.get(R)!==b&&(h.set(R,b),R.update())}function H1(R,b){const F=R.colorSpace,G=R.format,e1=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||F!==D5&&F!==p2&&(t4.getTransfer(F)===d4?(G!==Q4||e1!==B0)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",F)),b}function V1(R){return typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement?(l.width=R.naturalWidth||R.width,l.height=R.naturalHeight||R.height):typeof VideoFrame<"u"&&R instanceof VideoFrame?(l.width=R.displayWidth,l.height=R.displayHeight):(l.width=R.width,l.height=R.height),l}this.allocateTextureUnit=z,this.resetTextureUnits=N,this.setTexture2D=H,this.setTexture2DArray=Y,this.setTexture3D=t1,this.setTextureCube=W,this.rebindTextures=x4,this.setupRenderTarget=P,this.updateRenderTargetMipmap=n1,this.updateMultisampleRenderTarget=$,this.setupDepthRenderbuffer=K1,this.setupFrameBufferTexture=b1,this.useMultisampledRTT=s1}function nc(i,t){function e(n,s=p2){let r;const a=t4.getTransfer(s);if(n===B0)return i.UNSIGNED_BYTE;if(n===I9)return i.UNSIGNED_SHORT_4_4_4_4;if(n===P9)return i.UNSIGNED_SHORT_5_5_5_1;if(n===nn)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===sn)return i.UNSIGNED_INT_10F_11F_11F_REV;if(n===tn)return i.BYTE;if(n===en)return i.SHORT;if(n===C3)return i.UNSIGNED_SHORT;if(n===R9)return i.INT;if(n===M2)return i.UNSIGNED_INT;if(n===c0)return i.FLOAT;if(n===G3)return i.HALF_FLOAT;if(n===rn)return i.ALPHA;if(n===an)return i.RGB;if(n===Q4)return i.RGBA;if(n===I3)return i.DEPTH_COMPONENT;if(n===P3)return i.DEPTH_STENCIL;if(n===L9)return i.RED;if(n===s7)return i.RED_INTEGER;if(n===on)return i.RG;if(n===D9)return i.RG_INTEGER;if(n===U9)return i.RGBA_INTEGER;if(n===b6||n===M6||n===S6||n===E6)if(a===d4)if(r=t.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===b6)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===M6)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===S6)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===E6)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=t.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===b6)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===M6)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===S6)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===E6)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===F8||n===B8||n===z8||n===k8)if(r=t.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===F8)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===B8)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===z8)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===k8)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===V8||n===H8||n===G8)if(r=t.get("WEBGL_compressed_texture_etc"),r!==null){if(n===V8||n===H8)return a===d4?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===G8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===W8||n===X8||n===Y8||n===q8||n===Z8||n===$8||n===J8||n===K8||n===Q8||n===j8||n===t9||n===e9||n===n9||n===i9)if(r=t.get("WEBGL_compressed_texture_astc"),r!==null){if(n===W8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===X8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Y8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===q8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Z8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===$8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===J8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===K8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Q8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===j8)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===t9)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===e9)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===n9)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===i9)return a===d4?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===s9||n===r9||n===a9)if(r=t.get("EXT_texture_compression_bptc"),r!==null){if(n===s9)return a===d4?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===r9)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===a9)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===o9||n===c9||n===l9||n===h9)if(r=t.get("EXT_texture_compression_rgtc"),r!==null){if(n===o9)return r.COMPRESSED_RED_RGTC1_EXT;if(n===c9)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===l9)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===h9)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===R3?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:e}}const Wv=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,Xv=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class Yv{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e){if(this.texture===null){const n=new vn(t.texture);(t.depthNear!==e.depthNear||t.depthFar!==e.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new z0({vertexShader:Wv,fragmentShader:Xv,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new I4(new Y3(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class qv extends i2{constructor(t,e){super();const n=this;let s=null,r=1,a=null,o="local-floor",c=1,l=null,h=null,u=null,f=null,d=null,m=null;const _=typeof XRWebGLBinding<"u",g=new Yv,p={},y=e.getContextAttributes();let v=null,x=null;const T=[],E=[],A=new K;let I=null;const S=new F4;S.viewport=new i4;const M=new F4;M.viewport=new i4;const L=[S,M],N=new Xo;let z=null,q=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Z){let i1=T[Z];return i1===void 0&&(i1=new _8,T[Z]=i1),i1.getTargetRaySpace()},this.getControllerGrip=function(Z){let i1=T[Z];return i1===void 0&&(i1=new _8,T[Z]=i1),i1.getGripSpace()},this.getHand=function(Z){let i1=T[Z];return i1===void 0&&(i1=new _8,T[Z]=i1),i1.getHandSpace()};function H(Z){const i1=E.indexOf(Z.inputSource);if(i1===-1)return;const b1=T[i1];b1!==void 0&&(b1.update(Z.inputSource,Z.frame,l||a),b1.dispatchEvent({type:Z.type,data:Z.inputSource}))}function Y(){s.removeEventListener("select",H),s.removeEventListener("selectstart",H),s.removeEventListener("selectend",H),s.removeEventListener("squeeze",H),s.removeEventListener("squeezestart",H),s.removeEventListener("squeezeend",H),s.removeEventListener("end",Y),s.removeEventListener("inputsourceschange",t1);for(let Z=0;Z<T.length;Z++){const i1=E[Z];i1!==null&&(E[Z]=null,T[Z].disconnect(i1))}z=null,q=null,g.reset();for(const Z in p)delete p[Z];t.setRenderTarget(v),d=null,f=null,u=null,s=null,x=null,e4.stop(),n.isPresenting=!1,t.setPixelRatio(I),t.setSize(A.width,A.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Z){r=Z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Z){o=Z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(Z){l=Z},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u===null&&_&&(u=new XRWebGLBinding(s,e)),u},this.getFrame=function(){return m},this.getSession=function(){return s},this.setSession=async function(Z){if(s=Z,s!==null){if(v=t.getRenderTarget(),s.addEventListener("select",H),s.addEventListener("selectstart",H),s.addEventListener("selectend",H),s.addEventListener("squeeze",H),s.addEventListener("squeezestart",H),s.addEventListener("squeezeend",H),s.addEventListener("end",Y),s.addEventListener("inputsourceschange",t1),y.xrCompatible!==!0&&await e.makeXRCompatible(),I=t.getPixelRatio(),t.getSize(A),_&&"createProjectionLayer"in XRWebGLBinding.prototype){let b1=null,L1=null,w1=null;y.depth&&(w1=y.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,b1=y.stencil?P3:I3,L1=y.stencil?R3:M2);const K1={colorFormat:e.RGBA8,depthFormat:w1,scaleFactor:r};u=this.getBinding(),f=u.createProjectionLayer(K1),s.updateRenderState({layers:[f]}),t.setPixelRatio(1),t.setSize(f.textureWidth,f.textureHeight,!1),x=new n2(f.textureWidth,f.textureHeight,{format:Q4,type:B0,depthTexture:new xn(f.textureWidth,f.textureHeight,L1,void 0,void 0,void 0,void 0,void 0,void 0,b1),stencilBuffer:y.stencil,colorSpace:t.outputColorSpace,samples:y.antialias?4:0,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}else{const b1={antialias:y.antialias,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(s,e,b1),s.updateRenderState({baseLayer:d}),t.setPixelRatio(1),t.setSize(d.framebufferWidth,d.framebufferHeight,!1),x=new n2(d.framebufferWidth,d.framebufferHeight,{format:Q4,type:B0,colorSpace:t.outputColorSpace,stencilBuffer:y.stencil,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}x.isXRRenderTarget=!0,this.setFoveation(c),l=null,a=await s.requestReferenceSpace(o),e4.setContext(s),e4.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return g.getDepthTexture()};function t1(Z){for(let i1=0;i1<Z.removed.length;i1++){const b1=Z.removed[i1],L1=E.indexOf(b1);L1>=0&&(E[L1]=null,T[L1].disconnect(b1))}for(let i1=0;i1<Z.added.length;i1++){const b1=Z.added[i1];let L1=E.indexOf(b1);if(L1===-1){for(let K1=0;K1<T.length;K1++)if(K1>=E.length){E.push(b1),L1=K1;break}else if(E[K1]===null){E[K1]=b1,L1=K1;break}if(L1===-1)break}const w1=T[L1];w1&&w1.connect(b1)}}const W=new C,f1=new C;function x1(Z,i1,b1){W.setFromMatrixPosition(i1.matrixWorld),f1.setFromMatrixPosition(b1.matrixWorld);const L1=W.distanceTo(f1),w1=i1.projectionMatrix.elements,K1=b1.projectionMatrix.elements,x4=w1[14]/(w1[10]-1),P=w1[14]/(w1[10]+1),n1=(w1[9]+1)/w1[5],Q=(w1[9]-1)/w1[5],J=(w1[8]-1)/w1[0],$=(K1[8]+1)/K1[0],h1=x4*J,s1=x4*$,u1=L1/(-J+$),H1=u1*-J;if(i1.matrixWorld.decompose(Z.position,Z.quaternion,Z.scale),Z.translateX(H1),Z.translateZ(u1),Z.matrixWorld.compose(Z.position,Z.quaternion,Z.scale),Z.matrixWorldInverse.copy(Z.matrixWorld).invert(),w1[10]===-1)Z.projectionMatrix.copy(i1.projectionMatrix),Z.projectionMatrixInverse.copy(i1.projectionMatrixInverse);else{const V1=x4+u1,R=P+u1,b=h1-H1,F=s1+(L1-H1),G=n1*P/R*V1,e1=Q*P/R*V1;Z.projectionMatrix.makePerspective(b,F,G,e1,V1,R),Z.projectionMatrixInverse.copy(Z.projectionMatrix).invert()}}function S1(Z,i1){i1===null?Z.matrixWorld.copy(Z.matrix):Z.matrixWorld.multiplyMatrices(i1.matrixWorld,Z.matrix),Z.matrixWorldInverse.copy(Z.matrixWorld).invert()}this.updateCamera=function(Z){if(s===null)return;let i1=Z.near,b1=Z.far;g.texture!==null&&(g.depthNear>0&&(i1=g.depthNear),g.depthFar>0&&(b1=g.depthFar)),N.near=M.near=S.near=i1,N.far=M.far=S.far=b1,(z!==N.near||q!==N.far)&&(s.updateRenderState({depthNear:N.near,depthFar:N.far}),z=N.near,q=N.far),N.layers.mask=Z.layers.mask|6,S.layers.mask=N.layers.mask&3,M.layers.mask=N.layers.mask&5;const L1=Z.parent,w1=N.cameras;S1(N,L1);for(let K1=0;K1<w1.length;K1++)S1(w1[K1],L1);w1.length===2?x1(N,S,M):N.projectionMatrix.copy(S.projectionMatrix),Y1(Z,N,L1)};function Y1(Z,i1,b1){b1===null?Z.matrix.copy(i1.matrixWorld):(Z.matrix.copy(b1.matrixWorld),Z.matrix.invert(),Z.matrix.multiply(i1.matrixWorld)),Z.matrix.decompose(Z.position,Z.quaternion,Z.scale),Z.updateMatrixWorld(!0),Z.projectionMatrix.copy(i1.projectionMatrix),Z.projectionMatrixInverse.copy(i1.projectionMatrixInverse),Z.isPerspectiveCamera&&(Z.fov=D3*2*Math.atan(1/Z.projectionMatrix.elements[5]),Z.zoom=1)}this.getCamera=function(){return N},this.getFoveation=function(){if(!(f===null&&d===null))return c},this.setFoveation=function(Z){c=Z,f!==null&&(f.fixedFoveation=Z),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=Z)},this.hasDepthSensing=function(){return g.texture!==null},this.getDepthSensingMesh=function(){return g.getMesh(N)},this.getCameraTexture=function(Z){return p[Z]};let j1=null;function f4(Z,i1){if(h=i1.getViewerPose(l||a),m=i1,h!==null){const b1=h.views;d!==null&&(t.setRenderTargetFramebuffer(x,d.framebuffer),t.setRenderTarget(x));let L1=!1;b1.length!==N.cameras.length&&(N.cameras.length=0,L1=!0);for(let P=0;P<b1.length;P++){const n1=b1[P];let Q=null;if(d!==null)Q=d.getViewport(n1);else{const $=u.getViewSubImage(f,n1);Q=$.viewport,P===0&&(t.setRenderTargetTextures(x,$.colorTexture,$.depthStencilTexture),t.setRenderTarget(x))}let J=L[P];J===void 0&&(J=new F4,J.layers.enable(P),J.viewport=new i4,L[P]=J),J.matrix.fromArray(n1.transform.matrix),J.matrix.decompose(J.position,J.quaternion,J.scale),J.projectionMatrix.fromArray(n1.projectionMatrix),J.projectionMatrixInverse.copy(J.projectionMatrix).invert(),J.viewport.set(Q.x,Q.y,Q.width,Q.height),P===0&&(N.matrix.copy(J.matrix),N.matrix.decompose(N.position,N.quaternion,N.scale)),L1===!0&&N.cameras.push(J)}const w1=s.enabledFeatures;if(w1&&w1.includes("depth-sensing")&&s.depthUsage=="gpu-optimized"&&_){u=n.getBinding();const P=u.getDepthInformation(b1[0]);P&&P.isValid&&P.texture&&g.init(P,s.renderState)}if(w1&&w1.includes("camera-access")&&_){t.state.unbindTexture(),u=n.getBinding();for(let P=0;P<b1.length;P++){const n1=b1[P].camera;if(n1){let Q=p[n1];Q||(Q=new vn,p[n1]=Q);const J=u.getCameraImage(n1);Q.sourceTexture=J}}}}for(let b1=0;b1<T.length;b1++){const L1=E[b1],w1=T[b1];L1!==null&&w1!==void 0&&w1.update(L1,i1,l||a)}j1&&j1(Z,i1),i1.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:i1}),m=null}const e4=new Ko;e4.setAnimationLoop(f4),this.setAnimationLoop=function(Z){j1=Z},this.dispose=function(){}}}const d5=new y0,Zv=new B1;function $v(i,t){function e(g,p){g.matrixAutoUpdate===!0&&g.updateMatrix(),p.value.copy(g.matrix)}function n(g,p){p.color.getRGB(g.fogColor.value,Qa(i)),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function s(g,p,y,v,x){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(g,p):p.isMeshToonMaterial?(r(g,p),u(g,p)):p.isMeshPhongMaterial?(r(g,p),h(g,p)):p.isMeshStandardMaterial?(r(g,p),f(g,p),p.isMeshPhysicalMaterial&&d(g,p,x)):p.isMeshMatcapMaterial?(r(g,p),m(g,p)):p.isMeshDepthMaterial?r(g,p):p.isMeshDistanceMaterial?(r(g,p),_(g,p)):p.isMeshNormalMaterial?r(g,p):p.isLineBasicMaterial?(a(g,p),p.isLineDashedMaterial&&o(g,p)):p.isPointsMaterial?c(g,p,y,v):p.isSpriteMaterial?l(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map,e(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,e(p.alphaMap,g.alphaMapTransform)),p.bumpMap&&(g.bumpMap.value=p.bumpMap,e(p.bumpMap,g.bumpMapTransform),g.bumpScale.value=p.bumpScale,p.side===j4&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,e(p.normalMap,g.normalMapTransform),g.normalScale.value.copy(p.normalScale),p.side===j4&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,e(p.displacementMap,g.displacementMapTransform),g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap,e(p.emissiveMap,g.emissiveMapTransform)),p.specularMap&&(g.specularMap.value=p.specularMap,e(p.specularMap,g.specularMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);const y=t.get(p),v=y.envMap,x=y.envMapRotation;v&&(g.envMap.value=v,d5.copy(x),d5.x*=-1,d5.y*=-1,d5.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(d5.y*=-1,d5.z*=-1),g.envMapRotation.value.setFromMatrix4(Zv.makeRotationFromEuler(d5)),g.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=p.reflectivity,g.ior.value=p.ior,g.refractionRatio.value=p.refractionRatio),p.lightMap&&(g.lightMap.value=p.lightMap,g.lightMapIntensity.value=p.lightMapIntensity,e(p.lightMap,g.lightMapTransform)),p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity,e(p.aoMap,g.aoMapTransform))}function a(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,p.map&&(g.map.value=p.map,e(p.map,g.mapTransform))}function o(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function c(g,p,y,v){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*y,g.scale.value=v*.5,p.map&&(g.map.value=p.map,e(p.map,g.uvTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,e(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function l(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map,e(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,e(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function h(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4)}function u(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap)}function f(g,p){g.metalness.value=p.metalness,p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap,e(p.metalnessMap,g.metalnessMapTransform)),g.roughness.value=p.roughness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap,e(p.roughnessMap,g.roughnessMapTransform)),p.envMap&&(g.envMapIntensity.value=p.envMapIntensity)}function d(g,p,y){g.ior.value=p.ior,p.sheen>0&&(g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),g.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(g.sheenColorMap.value=p.sheenColorMap,e(p.sheenColorMap,g.sheenColorMapTransform)),p.sheenRoughnessMap&&(g.sheenRoughnessMap.value=p.sheenRoughnessMap,e(p.sheenRoughnessMap,g.sheenRoughnessMapTransform))),p.clearcoat>0&&(g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap,e(p.clearcoatMap,g.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,e(p.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(g.clearcoatNormalMap.value=p.clearcoatNormalMap,e(p.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===j4&&g.clearcoatNormalScale.value.negate())),p.dispersion>0&&(g.dispersion.value=p.dispersion),p.iridescence>0&&(g.iridescence.value=p.iridescence,g.iridescenceIOR.value=p.iridescenceIOR,g.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(g.iridescenceMap.value=p.iridescenceMap,e(p.iridescenceMap,g.iridescenceMapTransform)),p.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=p.iridescenceThicknessMap,e(p.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),p.transmission>0&&(g.transmission.value=p.transmission,g.transmissionSamplerMap.value=y.texture,g.transmissionSamplerSize.value.set(y.width,y.height),p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap,e(p.transmissionMap,g.transmissionMapTransform)),g.thickness.value=p.thickness,p.thicknessMap&&(g.thicknessMap.value=p.thicknessMap,e(p.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=p.attenuationDistance,g.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(g.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(g.anisotropyMap.value=p.anisotropyMap,e(p.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=p.specularIntensity,g.specularColor.value.copy(p.specularColor),p.specularColorMap&&(g.specularColorMap.value=p.specularColorMap,e(p.specularColorMap,g.specularColorMapTransform)),p.specularIntensityMap&&(g.specularIntensityMap.value=p.specularIntensityMap,e(p.specularIntensityMap,g.specularIntensityMapTransform))}function m(g,p){p.matcap&&(g.matcap.value=p.matcap)}function _(g,p){const y=t.get(p).light;g.referencePosition.value.setFromMatrixPosition(y.matrixWorld),g.nearDistance.value=y.shadow.camera.near,g.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:s}}function Jv(i,t,e,n){let s={},r={},a=[];const o=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function c(y,v){const x=v.program;n.uniformBlockBinding(y,x)}function l(y,v){let x=s[y.id];x===void 0&&(m(y),x=h(y),s[y.id]=x,y.addEventListener("dispose",g));const T=v.program;n.updateUBOMapping(y,T);const E=t.render.frame;r[y.id]!==E&&(f(y),r[y.id]=E)}function h(y){const v=u();y.__bindingPointIndex=v;const x=i.createBuffer(),T=y.__size,E=y.usage;return i.bindBuffer(i.UNIFORM_BUFFER,x),i.bufferData(i.UNIFORM_BUFFER,T,E),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,v,x),x}function u(){for(let y=0;y<o;y++)if(a.indexOf(y)===-1)return a.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(y){const v=s[y.id],x=y.uniforms,T=y.__cache;i.bindBuffer(i.UNIFORM_BUFFER,v);for(let E=0,A=x.length;E<A;E++){const I=Array.isArray(x[E])?x[E]:[x[E]];for(let S=0,M=I.length;S<M;S++){const L=I[S];if(d(L,E,S,T)===!0){const N=L.__offset,z=Array.isArray(L.value)?L.value:[L.value];let q=0;for(let H=0;H<z.length;H++){const Y=z[H],t1=_(Y);typeof Y=="number"||typeof Y=="boolean"?(L.__data[0]=Y,i.bufferSubData(i.UNIFORM_BUFFER,N+q,L.__data)):Y.isMatrix3?(L.__data[0]=Y.elements[0],L.__data[1]=Y.elements[1],L.__data[2]=Y.elements[2],L.__data[3]=0,L.__data[4]=Y.elements[3],L.__data[5]=Y.elements[4],L.__data[6]=Y.elements[5],L.__data[7]=0,L.__data[8]=Y.elements[6],L.__data[9]=Y.elements[7],L.__data[10]=Y.elements[8],L.__data[11]=0):(Y.toArray(L.__data,q),q+=t1.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,N,L.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function d(y,v,x,T){const E=y.value,A=v+"_"+x;if(T[A]===void 0)return typeof E=="number"||typeof E=="boolean"?T[A]=E:T[A]=E.clone(),!0;{const I=T[A];if(typeof E=="number"||typeof E=="boolean"){if(I!==E)return T[A]=E,!0}else if(I.equals(E)===!1)return I.copy(E),!0}return!1}function m(y){const v=y.uniforms;let x=0;const T=16;for(let A=0,I=v.length;A<I;A++){const S=Array.isArray(v[A])?v[A]:[v[A]];for(let M=0,L=S.length;M<L;M++){const N=S[M],z=Array.isArray(N.value)?N.value:[N.value];for(let q=0,H=z.length;q<H;q++){const Y=z[q],t1=_(Y),W=x%T,f1=W%t1.boundary,x1=W+f1;x+=f1,x1!==0&&T-x1<t1.storage&&(x+=T-x1),N.__data=new Float32Array(t1.storage/Float32Array.BYTES_PER_ELEMENT),N.__offset=x,x+=t1.storage}}}const E=x%T;return E>0&&(x+=T-E),y.__size=x,y.__cache={},this}function _(y){const v={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(v.boundary=4,v.storage=4):y.isVector2?(v.boundary=8,v.storage=8):y.isVector3||y.isColor?(v.boundary=16,v.storage=12):y.isVector4?(v.boundary=16,v.storage=16):y.isMatrix3?(v.boundary=48,v.storage=48):y.isMatrix4?(v.boundary=64,v.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),v}function g(y){const v=y.target;v.removeEventListener("dispose",g);const x=a.indexOf(v.__bindingPointIndex);a.splice(x,1),i.deleteBuffer(s[v.id]),delete s[v.id],delete r[v.id]}function p(){for(const y in s)i.deleteBuffer(s[y]);a=[],s={},r={}}return{bind:c,update:l,dispose:p}}class ic{constructor(t={}){const{canvas:e=$a(),context:n=null,depth:s=!0,stencil:r=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reversedDepthBuffer:f=!1}=t;this.isWebGLRenderer=!0;let d;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=n.getContextAttributes().alpha}else d=a;const m=new Uint32Array(4),_=new Int32Array(4);let g=null,p=null;const y=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=x2,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const x=this;let T=!1;this._outputColorSpace=r0;let E=0,A=0,I=null,S=-1,M=null;const L=new i4,N=new i4;let z=null;const q=new v1(0);let H=0,Y=e.width,t1=e.height,W=1,f1=null,x1=null;const S1=new i4(0,0,Y,t1),Y1=new i4(0,0,Y,t1);let j1=!1;const f4=new X3;let e4=!1,Z=!1;const i1=new B1,b1=new C,L1=new i4,w1={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let K1=!1;function x4(){return I===null?W:1}let P=n;function n1(w,U){return e.getContext(w,U)}try{const w={alpha:!0,depth:s,stencil:r,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${A9}`),e.addEventListener("webglcontextlost",d1,!1),e.addEventListener("webglcontextrestored",E1,!1),e.addEventListener("webglcontextcreationerror",a1,!1),P===null){const U="webgl2";if(P=n1(U,w),P===null)throw n1(U)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(w){throw console.error("THREE.WebGLRenderer: "+w.message),w}let Q,J,$,h1,s1,u1,H1,V1,R,b,F,G,e1,X,I1,l1,A1,C1,r1,_1,F1,P1,m1,Z1;function D(){Q=new cx(P),Q.init(),P1=new nc(P,Q),J=new ex(P,Q,t,P1),$=new Hv(P,Q),J.reversedDepthBuffer&&f&&$.buffers.depth.setReversed(!0),h1=new ux(P),s1=new Rv,u1=new Gv(P,Q,$,s1,J,P1,h1),H1=new ix(x),V1=new ox(x),R=new _m(P),m1=new j_(P,R),b=new lx(P,R,h1,m1),F=new dx(P,b,R,h1),r1=new fx(P,J,u1),l1=new nx(s1),G=new Cv(x,H1,V1,Q,J,m1,l1),e1=new $v(x,s1),X=new Pv,I1=new Fv(Q),C1=new Q_(x,H1,V1,$,F,d,c),A1=new kv(x,F,J),Z1=new Jv(P,h1,J,$),_1=new tx(P,Q,h1),F1=new hx(P,Q,h1),h1.programs=G.programs,x.capabilities=J,x.extensions=Q,x.properties=s1,x.renderLists=X,x.shadowMap=A1,x.state=$,x.info=h1}D();const c1=new qv(x,P);this.xr=c1,this.getContext=function(){return P},this.getContextAttributes=function(){return P.getContextAttributes()},this.forceContextLoss=function(){const w=Q.get("WEBGL_lose_context");w&&w.loseContext()},this.forceContextRestore=function(){const w=Q.get("WEBGL_lose_context");w&&w.restoreContext()},this.getPixelRatio=function(){return W},this.setPixelRatio=function(w){w!==void 0&&(W=w,this.setSize(Y,t1,!1))},this.getSize=function(w){return w.set(Y,t1)},this.setSize=function(w,U,k=!0){if(c1.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Y=w,t1=U,e.width=Math.floor(w*W),e.height=Math.floor(U*W),k===!0&&(e.style.width=w+"px",e.style.height=U+"px"),this.setViewport(0,0,w,U)},this.getDrawingBufferSize=function(w){return w.set(Y*W,t1*W).floor()},this.setDrawingBufferSize=function(w,U,k){Y=w,t1=U,W=k,e.width=Math.floor(w*k),e.height=Math.floor(U*k),this.setViewport(0,0,w,U)},this.getCurrentViewport=function(w){return w.copy(L)},this.getViewport=function(w){return w.copy(S1)},this.setViewport=function(w,U,k,V){w.isVector4?S1.set(w.x,w.y,w.z,w.w):S1.set(w,U,k,V),$.viewport(L.copy(S1).multiplyScalar(W).round())},this.getScissor=function(w){return w.copy(Y1)},this.setScissor=function(w,U,k,V){w.isVector4?Y1.set(w.x,w.y,w.z,w.w):Y1.set(w,U,k,V),$.scissor(N.copy(Y1).multiplyScalar(W).round())},this.getScissorTest=function(){return j1},this.setScissorTest=function(w){$.setScissorTest(j1=w)},this.setOpaqueSort=function(w){f1=w},this.setTransparentSort=function(w){x1=w},this.getClearColor=function(w){return w.copy(C1.getClearColor())},this.setClearColor=function(){C1.setClearColor(...arguments)},this.getClearAlpha=function(){return C1.getClearAlpha()},this.setClearAlpha=function(){C1.setClearAlpha(...arguments)},this.clear=function(w=!0,U=!0,k=!0){let V=0;if(w){let O=!1;if(I!==null){const o1=I.texture.format;O=o1===U9||o1===D9||o1===s7}if(O){const o1=I.texture.type,g1=o1===B0||o1===M2||o1===C3||o1===R3||o1===I9||o1===P9,T1=C1.getClearColor(),y1=C1.getClearAlpha(),O1=T1.r,z1=T1.g,D1=T1.b;g1?(m[0]=O1,m[1]=z1,m[2]=D1,m[3]=y1,P.clearBufferuiv(P.COLOR,0,m)):(_[0]=O1,_[1]=z1,_[2]=D1,_[3]=y1,P.clearBufferiv(P.COLOR,0,_))}else V|=P.COLOR_BUFFER_BIT}U&&(V|=P.DEPTH_BUFFER_BIT),k&&(V|=P.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),P.clear(V)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",d1,!1),e.removeEventListener("webglcontextrestored",E1,!1),e.removeEventListener("webglcontextcreationerror",a1,!1),C1.dispose(),X.dispose(),I1.dispose(),s1.dispose(),H1.dispose(),V1.dispose(),F.dispose(),m1.dispose(),Z1.dispose(),G.dispose(),c1.dispose(),c1.removeEventListener("sessionstart",G0),c1.removeEventListener("sessionend",Zn),Q2.stop()};function d1(w){w.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function E1(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const w=h1.autoReset,U=A1.enabled,k=A1.autoUpdate,V=A1.needsUpdate,O=A1.type;D(),h1.autoReset=w,A1.enabled=U,A1.autoUpdate=k,A1.needsUpdate=V,A1.type=O}function a1(w){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",w.statusMessage)}function j(w){const U=w.target;U.removeEventListener("dispose",j),R1(U)}function R1(w){G1(w),s1.remove(w)}function G1(w){const U=s1.get(w).programs;U!==void 0&&(U.forEach(function(k){G.releaseProgram(k)}),w.isShaderMaterial&&G.releaseShaderCache(w))}this.renderBufferDirect=function(w,U,k,V,O,o1){U===null&&(U=w1);const g1=O.isMesh&&O.matrixWorld.determinant()<0,T1=Ec(w,U,k,V,O);$.setMaterial(V,g1);let y1=k.index,O1=1;if(V.wireframe===!0){if(y1=b.getWireframeAttribute(k),y1===void 0)return;O1=2}const z1=k.drawRange,D1=k.attributes.position;let Q1=z1.start*O1,p4=(z1.start+z1.count)*O1;o1!==null&&(Q1=Math.max(Q1,o1.start*O1),p4=Math.min(p4,(o1.start+o1.count)*O1)),y1!==null?(Q1=Math.max(Q1,0),p4=Math.min(p4,y1.count)):D1!=null&&(Q1=Math.max(Q1,0),p4=Math.min(p4,D1.count));const w4=p4-Q1;if(w4<0||w4===1/0)return;m1.setup(O,V,T1,k,y1);let b4,g4=_1;if(y1!==null&&(b4=R.get(y1),g4=F1,g4.setIndex(b4)),O.isMesh)V.wireframe===!0?($.setLineWidth(V.wireframeLinewidth*x4()),g4.setMode(P.LINES)):g4.setMode(P.TRIANGLES);else if(O.isLine){let U1=V.linewidth;U1===void 0&&(U1=1),$.setLineWidth(U1*x4()),O.isLineSegments?g4.setMode(P.LINES):O.isLineLoop?g4.setMode(P.LINE_LOOP):g4.setMode(P.LINE_STRIP)}else O.isPoints?g4.setMode(P.POINTS):O.isSprite&&g4.setMode(P.TRIANGLES);if(O.isBatchedMesh)if(O._multiDrawInstances!==null)W6("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),g4.renderMultiDrawInstances(O._multiDrawStarts,O._multiDrawCounts,O._multiDrawCount,O._multiDrawInstances);else if(Q.get("WEBGL_multi_draw"))g4.renderMultiDraw(O._multiDrawStarts,O._multiDrawCounts,O._multiDrawCount);else{const U1=O._multiDrawStarts,M4=O._multiDrawCounts,r4=O._multiDrawCount,u0=y1?R.get(y1).bytesPerElement:1,V5=s1.get(V).currentProgram.getUniforms();for(let f0=0;f0<r4;f0++)V5.setValue(P,"_gl_DrawID",f0),g4.render(U1[f0]/u0,M4[f0])}else if(O.isInstancedMesh)g4.renderInstances(Q1,w4,O.count);else if(k.isInstancedBufferGeometry){const U1=k._maxInstanceCount!==void 0?k._maxInstanceCount:1/0,M4=Math.min(k.instanceCount,U1);g4.renderInstances(Q1,w4,M4)}else g4.render(Q1,w4)};function v4(w,U,k){w.transparent===!0&&w.side===J0&&w.forceSinglePass===!1?(w.side=j4,w.needsUpdate=!0,p7(w,U,k),w.side=y2,w.needsUpdate=!0,p7(w,U,k),w.side=J0):p7(w,U,k)}this.compile=function(w,U,k=null){k===null&&(k=w),p=I1.get(k),p.init(U),v.push(p),k.traverseVisible(function(O){O.isLight&&O.layers.test(U.layers)&&(p.pushLight(O),O.castShadow&&p.pushShadow(O))}),w!==k&&w.traverseVisible(function(O){O.isLight&&O.layers.test(U.layers)&&(p.pushLight(O),O.castShadow&&p.pushShadow(O))}),p.setupLights();const V=new Set;return w.traverse(function(O){if(!(O.isMesh||O.isPoints||O.isLine||O.isSprite))return;const o1=O.material;if(o1)if(Array.isArray(o1))for(let g1=0;g1<o1.length;g1++){const T1=o1[g1];v4(T1,k,O),V.add(T1)}else v4(o1,k,O),V.add(o1)}),p=v.pop(),V},this.compileAsync=function(w,U,k=null){const V=this.compile(w,U,k);return new Promise(O=>{function o1(){if(V.forEach(function(g1){s1.get(g1).currentProgram.isReady()&&V.delete(g1)}),V.size===0){O(w);return}setTimeout(o1,10)}Q.get("KHR_parallel_shader_compile")!==null?o1():setTimeout(o1,10)})};let h4=null;function a2(w){h4&&h4(w)}function G0(){Q2.stop()}function Zn(){Q2.start()}const Q2=new Ko;Q2.setAnimationLoop(a2),typeof self<"u"&&Q2.setContext(self),this.setAnimationLoop=function(w){h4=w,c1.setAnimationLoop(w),w===null?Q2.stop():Q2.start()},c1.addEventListener("sessionstart",G0),c1.addEventListener("sessionend",Zn),this.render=function(w,U){if(U!==void 0&&U.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(T===!0)return;if(w.matrixWorldAutoUpdate===!0&&w.updateMatrixWorld(),U.parent===null&&U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),c1.enabled===!0&&c1.isPresenting===!0&&(c1.cameraAutoUpdate===!0&&c1.updateCamera(U),U=c1.getCamera()),w.isScene===!0&&w.onBeforeRender(x,w,U,I),p=I1.get(w,v.length),p.init(U),v.push(p),i1.multiplyMatrices(U.projectionMatrix,U.matrixWorldInverse),f4.setFromProjectionMatrix(i1,_0,U.reversedDepth),Z=this.localClippingEnabled,e4=l1.init(this.clippingPlanes,Z),g=X.get(w,y.length),g.init(),y.push(g),c1.enabled===!0&&c1.isPresenting===!0){const o1=x.xr.getDepthSensingMesh();o1!==null&&ut(o1,U,-1/0,x.sortObjects)}ut(w,U,0,x.sortObjects),g.finish(),x.sortObjects===!0&&g.sort(f1,x1),K1=c1.enabled===!1||c1.isPresenting===!1||c1.hasDepthSensing()===!1,K1&&C1.addToRenderList(g,w),this.info.render.frame++,e4===!0&&l1.beginShadows();const k=p.state.shadowsArray;A1.render(k,w,U),e4===!0&&l1.endShadows(),this.info.autoReset===!0&&this.info.reset();const V=g.opaque,O=g.transmissive;if(p.setupLights(),U.isArrayCamera){const o1=U.cameras;if(O.length>0)for(let g1=0,T1=o1.length;g1<T1;g1++){const y1=o1[g1];Jn(V,O,w,y1)}K1&&C1.render(w);for(let g1=0,T1=o1.length;g1<T1;g1++){const y1=o1[g1];$n(g,w,y1,y1.viewport)}}else O.length>0&&Jn(V,O,w,U),K1&&C1.render(w),$n(g,w,U);I!==null&&A===0&&(u1.updateMultisampleRenderTarget(I),u1.updateRenderTargetMipmap(I)),w.isScene===!0&&w.onAfterRender(x,w,U),m1.resetDefaultState(),S=-1,M=null,v.pop(),v.length>0?(p=v[v.length-1],e4===!0&&l1.setGlobalState(x.clippingPlanes,p.state.camera)):p=null,y.pop(),y.length>0?g=y[y.length-1]:g=null};function ut(w,U,k,V){if(w.visible===!1)return;if(w.layers.test(U.layers)){if(w.isGroup)k=w.renderOrder;else if(w.isLOD)w.autoUpdate===!0&&w.update(U);else if(w.isLight)p.pushLight(w),w.castShadow&&p.pushShadow(w);else if(w.isSprite){if(!w.frustumCulled||f4.intersectsSprite(w)){V&&L1.setFromMatrixPosition(w.matrixWorld).applyMatrix4(i1);const g1=F.update(w),T1=w.material;T1.visible&&g.push(w,g1,T1,k,L1.z,null)}}else if((w.isMesh||w.isLine||w.isPoints)&&(!w.frustumCulled||f4.intersectsObject(w))){const g1=F.update(w),T1=w.material;if(V&&(w.boundingSphere!==void 0?(w.boundingSphere===null&&w.computeBoundingSphere(),L1.copy(w.boundingSphere.center)):(g1.boundingSphere===null&&g1.computeBoundingSphere(),L1.copy(g1.boundingSphere.center)),L1.applyMatrix4(w.matrixWorld).applyMatrix4(i1)),Array.isArray(T1)){const y1=g1.groups;for(let O1=0,z1=y1.length;O1<z1;O1++){const D1=y1[O1],Q1=T1[D1.materialIndex];Q1&&Q1.visible&&g.push(w,g1,Q1,k,L1.z,D1)}}else T1.visible&&g.push(w,g1,T1,k,L1.z,null)}}const o1=w.children;for(let g1=0,T1=o1.length;g1<T1;g1++)ut(o1[g1],U,k,V)}function $n(w,U,k,V){const O=w.opaque,o1=w.transmissive,g1=w.transparent;p.setupLightsView(k),e4===!0&&l1.setGlobalState(x.clippingPlanes,k),V&&$.viewport(L.copy(V)),O.length>0&&d7(O,U,k),o1.length>0&&d7(o1,U,k),g1.length>0&&d7(g1,U,k),$.buffers.depth.setTest(!0),$.buffers.depth.setMask(!0),$.buffers.color.setMask(!0),$.setPolygonOffset(!1)}function Jn(w,U,k,V){if((k.isScene===!0?k.overrideMaterial:null)!==null)return;p.state.transmissionRenderTarget[V.id]===void 0&&(p.state.transmissionRenderTarget[V.id]=new n2(1,1,{generateMipmaps:!0,type:Q.has("EXT_color_buffer_half_float")||Q.has("EXT_color_buffer_float")?G3:B0,minFilter:K0,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:t4.workingColorSpace}));const o1=p.state.transmissionRenderTarget[V.id],g1=V.viewport||L;o1.setSize(g1.z*x.transmissionResolutionScale,g1.w*x.transmissionResolutionScale);const T1=x.getRenderTarget(),y1=x.getActiveCubeFace(),O1=x.getActiveMipmapLevel();x.setRenderTarget(o1),x.getClearColor(q),H=x.getClearAlpha(),H<1&&x.setClearColor(16777215,.5),x.clear(),K1&&C1.render(k);const z1=x.toneMapping;x.toneMapping=x2;const D1=V.viewport;if(V.viewport!==void 0&&(V.viewport=void 0),p.setupLightsView(V),e4===!0&&l1.setGlobalState(x.clippingPlanes,V),d7(w,k,V),u1.updateMultisampleRenderTarget(o1),u1.updateRenderTargetMipmap(o1),Q.has("WEBGL_multisampled_render_to_texture")===!1){let Q1=!1;for(let p4=0,w4=U.length;p4<w4;p4++){const b4=U[p4],g4=b4.object,U1=b4.geometry,M4=b4.material,r4=b4.group;if(M4.side===J0&&g4.layers.test(V.layers)){const u0=M4.side;M4.side=j4,M4.needsUpdate=!0,Kn(g4,k,V,U1,M4,r4),M4.side=u0,M4.needsUpdate=!0,Q1=!0}}Q1===!0&&(u1.updateMultisampleRenderTarget(o1),u1.updateRenderTargetMipmap(o1))}x.setRenderTarget(T1,y1,O1),x.setClearColor(q,H),D1!==void 0&&(V.viewport=D1),x.toneMapping=z1}function d7(w,U,k){const V=U.isScene===!0?U.overrideMaterial:null;for(let O=0,o1=w.length;O<o1;O++){const g1=w[O],T1=g1.object,y1=g1.geometry,O1=g1.group;let z1=g1.material;z1.allowOverride===!0&&V!==null&&(z1=V),T1.layers.test(k.layers)&&Kn(T1,U,k,y1,z1,O1)}}function Kn(w,U,k,V,O,o1){w.onBeforeRender(x,U,k,V,O,o1),w.modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,w.matrixWorld),w.normalMatrix.getNormalMatrix(w.modelViewMatrix),O.onBeforeRender(x,U,k,V,w,o1),O.transparent===!0&&O.side===J0&&O.forceSinglePass===!1?(O.side=j4,O.needsUpdate=!0,x.renderBufferDirect(k,U,V,O,w,o1),O.side=y2,O.needsUpdate=!0,x.renderBufferDirect(k,U,V,O,w,o1),O.side=J0):x.renderBufferDirect(k,U,V,O,w,o1),w.onAfterRender(x,U,k,V,O,o1)}function p7(w,U,k){U.isScene!==!0&&(U=w1);const V=s1.get(w),O=p.state.lights,o1=p.state.shadowsArray,g1=O.state.version,T1=G.getParameters(w,O.state,o1,U,k),y1=G.getProgramCacheKey(T1);let O1=V.programs;V.environment=w.isMeshStandardMaterial?U.environment:null,V.fog=U.fog,V.envMap=(w.isMeshStandardMaterial?V1:H1).get(w.envMap||V.environment),V.envMapRotation=V.environment!==null&&w.envMap===null?U.environmentRotation:w.envMapRotation,O1===void 0&&(w.addEventListener("dispose",j),O1=new Map,V.programs=O1);let z1=O1.get(y1);if(z1!==void 0){if(V.currentProgram===z1&&V.lightsStateVersion===g1)return jn(w,T1),z1}else T1.uniforms=G.getUniforms(w),w.onBeforeCompile(T1,x),z1=G.acquireProgram(T1,y1),O1.set(y1,z1),V.uniforms=T1.uniforms;const D1=V.uniforms;return(!w.isShaderMaterial&&!w.isRawShaderMaterial||w.clipping===!0)&&(D1.clippingPlanes=l1.uniform),jn(w,T1),V.needsLights=wc(w),V.lightsStateVersion=g1,V.needsLights&&(D1.ambientLightColor.value=O.state.ambient,D1.lightProbe.value=O.state.probe,D1.directionalLights.value=O.state.directional,D1.directionalLightShadows.value=O.state.directionalShadow,D1.spotLights.value=O.state.spot,D1.spotLightShadows.value=O.state.spotShadow,D1.rectAreaLights.value=O.state.rectArea,D1.ltc_1.value=O.state.rectAreaLTC1,D1.ltc_2.value=O.state.rectAreaLTC2,D1.pointLights.value=O.state.point,D1.pointLightShadows.value=O.state.pointShadow,D1.hemisphereLights.value=O.state.hemi,D1.directionalShadowMap.value=O.state.directionalShadowMap,D1.directionalShadowMatrix.value=O.state.directionalShadowMatrix,D1.spotShadowMap.value=O.state.spotShadowMap,D1.spotLightMatrix.value=O.state.spotLightMatrix,D1.spotLightMap.value=O.state.spotLightMap,D1.pointShadowMap.value=O.state.pointShadowMap,D1.pointShadowMatrix.value=O.state.pointShadowMatrix),V.currentProgram=z1,V.uniformsList=null,z1}function Qn(w){if(w.uniformsList===null){const U=w.currentProgram.getUniforms();w.uniformsList=x8.seqWithValue(U.seq,w.uniforms)}return w.uniformsList}function jn(w,U){const k=s1.get(w);k.outputColorSpace=U.outputColorSpace,k.batching=U.batching,k.batchingColor=U.batchingColor,k.instancing=U.instancing,k.instancingColor=U.instancingColor,k.instancingMorph=U.instancingMorph,k.skinning=U.skinning,k.morphTargets=U.morphTargets,k.morphNormals=U.morphNormals,k.morphColors=U.morphColors,k.morphTargetsCount=U.morphTargetsCount,k.numClippingPlanes=U.numClippingPlanes,k.numIntersection=U.numClipIntersection,k.vertexAlphas=U.vertexAlphas,k.vertexTangents=U.vertexTangents,k.toneMapping=U.toneMapping}function Ec(w,U,k,V,O){U.isScene!==!0&&(U=w1),u1.resetTextureUnits();const o1=U.fog,g1=V.isMeshStandardMaterial?U.environment:null,T1=I===null?x.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:D5,y1=(V.isMeshStandardMaterial?V1:H1).get(V.envMap||g1),O1=V.vertexColors===!0&&!!k.attributes.color&&k.attributes.color.itemSize===4,z1=!!k.attributes.tangent&&(!!V.normalMap||V.anisotropy>0),D1=!!k.morphAttributes.position,Q1=!!k.morphAttributes.normal,p4=!!k.morphAttributes.color;let w4=x2;V.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(w4=x.toneMapping);const b4=k.morphAttributes.position||k.morphAttributes.normal||k.morphAttributes.color,g4=b4!==void 0?b4.length:0,U1=s1.get(V),M4=p.state.lights;if(e4===!0&&(Z===!0||w!==M)){const Y4=w===M&&V.id===S;l1.setState(V,w,Y4)}let r4=!1;V.version===U1.__version?(U1.needsLights&&U1.lightsStateVersion!==M4.state.version||U1.outputColorSpace!==T1||O.isBatchedMesh&&U1.batching===!1||!O.isBatchedMesh&&U1.batching===!0||O.isBatchedMesh&&U1.batchingColor===!0&&O.colorTexture===null||O.isBatchedMesh&&U1.batchingColor===!1&&O.colorTexture!==null||O.isInstancedMesh&&U1.instancing===!1||!O.isInstancedMesh&&U1.instancing===!0||O.isSkinnedMesh&&U1.skinning===!1||!O.isSkinnedMesh&&U1.skinning===!0||O.isInstancedMesh&&U1.instancingColor===!0&&O.instanceColor===null||O.isInstancedMesh&&U1.instancingColor===!1&&O.instanceColor!==null||O.isInstancedMesh&&U1.instancingMorph===!0&&O.morphTexture===null||O.isInstancedMesh&&U1.instancingMorph===!1&&O.morphTexture!==null||U1.envMap!==y1||V.fog===!0&&U1.fog!==o1||U1.numClippingPlanes!==void 0&&(U1.numClippingPlanes!==l1.numPlanes||U1.numIntersection!==l1.numIntersection)||U1.vertexAlphas!==O1||U1.vertexTangents!==z1||U1.morphTargets!==D1||U1.morphNormals!==Q1||U1.morphColors!==p4||U1.toneMapping!==w4||U1.morphTargetsCount!==g4)&&(r4=!0):(r4=!0,U1.__version=V.version);let u0=U1.currentProgram;r4===!0&&(u0=p7(V,U,O));let V5=!1,f0=!1,Z3=!1;const S4=u0.getUniforms(),b0=U1.uniforms;if($.useProgram(u0.program)&&(V5=!0,f0=!0,Z3=!0),V.id!==S&&(S=V.id,f0=!0),V5||M!==w){$.buffers.depth.getReversed()&&w.reversedDepth!==!0&&(w._reversedDepth=!0,w.updateProjectionMatrix()),S4.setValue(P,"projectionMatrix",w.projectionMatrix),S4.setValue(P,"viewMatrix",w.matrixWorldInverse);const e0=S4.map.cameraPosition;e0!==void 0&&e0.setValue(P,b1.setFromMatrixPosition(w.matrixWorld)),J.logarithmicDepthBuffer&&S4.setValue(P,"logDepthBufFC",2/(Math.log(w.far+1)/Math.LN2)),(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial)&&S4.setValue(P,"isOrthographic",w.isOrthographicCamera===!0),M!==w&&(M=w,f0=!0,Z3=!0)}if(O.isSkinnedMesh){S4.setOptional(P,O,"bindMatrix"),S4.setOptional(P,O,"bindMatrixInverse");const Y4=O.skeleton;Y4&&(Y4.boneTexture===null&&Y4.computeBoneTexture(),S4.setValue(P,"boneTexture",Y4.boneTexture,u1))}O.isBatchedMesh&&(S4.setOptional(P,O,"batchingTexture"),S4.setValue(P,"batchingTexture",O._matricesTexture,u1),S4.setOptional(P,O,"batchingIdTexture"),S4.setValue(P,"batchingIdTexture",O._indirectTexture,u1),S4.setOptional(P,O,"batchingColorTexture"),O._colorsTexture!==null&&S4.setValue(P,"batchingColorTexture",O._colorsTexture,u1));const M0=k.morphAttributes;if((M0.position!==void 0||M0.normal!==void 0||M0.color!==void 0)&&r1.update(O,k,u0),(f0||U1.receiveShadow!==O.receiveShadow)&&(U1.receiveShadow=O.receiveShadow,S4.setValue(P,"receiveShadow",O.receiveShadow)),V.isMeshGouraudMaterial&&V.envMap!==null&&(b0.envMap.value=y1,b0.flipEnvMap.value=y1.isCubeTexture&&y1.isRenderTargetTexture===!1?-1:1),V.isMeshStandardMaterial&&V.envMap===null&&U.environment!==null&&(b0.envMapIntensity.value=U.environmentIntensity),f0&&(S4.setValue(P,"toneMappingExposure",x.toneMappingExposure),U1.needsLights&&Tc(b0,Z3),o1&&V.fog===!0&&e1.refreshFogUniforms(b0,o1),e1.refreshMaterialUniforms(b0,V,W,t1,p.state.transmissionRenderTarget[w.id]),x8.upload(P,Qn(U1),b0,u1)),V.isShaderMaterial&&V.uniformsNeedUpdate===!0&&(x8.upload(P,Qn(U1),b0,u1),V.uniformsNeedUpdate=!1),V.isSpriteMaterial&&S4.setValue(P,"center",O.center),S4.setValue(P,"modelViewMatrix",O.modelViewMatrix),S4.setValue(P,"normalMatrix",O.normalMatrix),S4.setValue(P,"modelMatrix",O.matrixWorld),V.isShaderMaterial||V.isRawShaderMaterial){const Y4=V.uniformsGroups;for(let e0=0,ft=Y4.length;e0<ft;e0++){const j2=Y4[e0];Z1.update(j2,u0),Z1.bind(j2,u0)}}return u0}function Tc(w,U){w.ambientLightColor.needsUpdate=U,w.lightProbe.needsUpdate=U,w.directionalLights.needsUpdate=U,w.directionalLightShadows.needsUpdate=U,w.pointLights.needsUpdate=U,w.pointLightShadows.needsUpdate=U,w.spotLights.needsUpdate=U,w.spotLightShadows.needsUpdate=U,w.rectAreaLights.needsUpdate=U,w.hemisphereLights.needsUpdate=U}function wc(w){return w.isMeshLambertMaterial||w.isMeshToonMaterial||w.isMeshPhongMaterial||w.isMeshStandardMaterial||w.isShadowMaterial||w.isShaderMaterial&&w.lights===!0}this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return A},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(w,U,k){const V=s1.get(w);V.__autoAllocateDepthBuffer=w.resolveDepthBuffer===!1,V.__autoAllocateDepthBuffer===!1&&(V.__useRenderToTexture=!1),s1.get(w.texture).__webglTexture=U,s1.get(w.depthTexture).__webglTexture=V.__autoAllocateDepthBuffer?void 0:k,V.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(w,U){const k=s1.get(w);k.__webglFramebuffer=U,k.__useDefaultFramebuffer=U===void 0};const Ac=P.createFramebuffer();this.setRenderTarget=function(w,U=0,k=0){I=w,E=U,A=k;let V=!0,O=null,o1=!1,g1=!1;if(w){const y1=s1.get(w);if(y1.__useDefaultFramebuffer!==void 0)$.bindFramebuffer(P.FRAMEBUFFER,null),V=!1;else if(y1.__webglFramebuffer===void 0)u1.setupRenderTarget(w);else if(y1.__hasExternalTextures)u1.rebindTextures(w,s1.get(w.texture).__webglTexture,s1.get(w.depthTexture).__webglTexture);else if(w.depthBuffer){const D1=w.depthTexture;if(y1.__boundDepthTexture!==D1){if(D1!==null&&s1.has(D1)&&(w.width!==D1.image.width||w.height!==D1.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");u1.setupDepthRenderbuffer(w)}}const O1=w.texture;(O1.isData3DTexture||O1.isDataArrayTexture||O1.isCompressedArrayTexture)&&(g1=!0);const z1=s1.get(w).__webglFramebuffer;w.isWebGLCubeRenderTarget?(Array.isArray(z1[U])?O=z1[U][k]:O=z1[U],o1=!0):w.samples>0&&u1.useMultisampledRTT(w)===!1?O=s1.get(w).__webglMultisampledFramebuffer:Array.isArray(z1)?O=z1[k]:O=z1,L.copy(w.viewport),N.copy(w.scissor),z=w.scissorTest}else L.copy(S1).multiplyScalar(W).floor(),N.copy(Y1).multiplyScalar(W).floor(),z=j1;if(k!==0&&(O=Ac),$.bindFramebuffer(P.FRAMEBUFFER,O)&&V&&$.drawBuffers(w,O),$.viewport(L),$.scissor(N),$.setScissorTest(z),o1){const y1=s1.get(w.texture);P.framebufferTexture2D(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_CUBE_MAP_POSITIVE_X+U,y1.__webglTexture,k)}else if(g1){const y1=U;for(let O1=0;O1<w.textures.length;O1++){const z1=s1.get(w.textures[O1]);P.framebufferTextureLayer(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0+O1,z1.__webglTexture,k,y1)}}else if(w!==null&&k!==0){const y1=s1.get(w.texture);P.framebufferTexture2D(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_2D,y1.__webglTexture,k)}S=-1},this.readRenderTargetPixels=function(w,U,k,V,O,o1,g1,T1=0){if(!(w&&w.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let y1=s1.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&g1!==void 0&&(y1=y1[g1]),y1){$.bindFramebuffer(P.FRAMEBUFFER,y1);try{const O1=w.textures[T1],z1=O1.format,D1=O1.type;if(!J.textureFormatReadable(z1)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!J.textureTypeReadable(D1)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}U>=0&&U<=w.width-V&&k>=0&&k<=w.height-O&&(w.textures.length>1&&P.readBuffer(P.COLOR_ATTACHMENT0+T1),P.readPixels(U,k,V,O,P1.convert(z1),P1.convert(D1),o1))}finally{const O1=I!==null?s1.get(I).__webglFramebuffer:null;$.bindFramebuffer(P.FRAMEBUFFER,O1)}}},this.readRenderTargetPixelsAsync=async function(w,U,k,V,O,o1,g1,T1=0){if(!(w&&w.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let y1=s1.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&g1!==void 0&&(y1=y1[g1]),y1)if(U>=0&&U<=w.width-V&&k>=0&&k<=w.height-O){$.bindFramebuffer(P.FRAMEBUFFER,y1);const O1=w.textures[T1],z1=O1.format,D1=O1.type;if(!J.textureFormatReadable(z1))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!J.textureTypeReadable(D1))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Q1=P.createBuffer();P.bindBuffer(P.PIXEL_PACK_BUFFER,Q1),P.bufferData(P.PIXEL_PACK_BUFFER,o1.byteLength,P.STREAM_READ),w.textures.length>1&&P.readBuffer(P.COLOR_ATTACHMENT0+T1),P.readPixels(U,k,V,O,P1.convert(z1),P1.convert(D1),0);const p4=I!==null?s1.get(I).__webglFramebuffer:null;$.bindFramebuffer(P.FRAMEBUFFER,p4);const w4=P.fenceSync(P.SYNC_GPU_COMMANDS_COMPLETE,0);return P.flush(),await Uf(P,w4,4),P.bindBuffer(P.PIXEL_PACK_BUFFER,Q1),P.getBufferSubData(P.PIXEL_PACK_BUFFER,0,o1),P.deleteBuffer(Q1),P.deleteSync(w4),o1}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(w,U=null,k=0){const V=Math.pow(2,-k),O=Math.floor(w.image.width*V),o1=Math.floor(w.image.height*V),g1=U!==null?U.x:0,T1=U!==null?U.y:0;u1.setTexture2D(w,0),P.copyTexSubImage2D(P.TEXTURE_2D,k,0,0,g1,T1,O,o1),$.unbindTexture()};const Cc=P.createFramebuffer(),Rc=P.createFramebuffer();this.copyTextureToTexture=function(w,U,k=null,V=null,O=0,o1=null){o1===null&&(O!==0?(W6("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),o1=O,O=0):o1=0);let g1,T1,y1,O1,z1,D1,Q1,p4,w4;const b4=w.isCompressedTexture?w.mipmaps[o1]:w.image;if(k!==null)g1=k.max.x-k.min.x,T1=k.max.y-k.min.y,y1=k.isBox3?k.max.z-k.min.z:1,O1=k.min.x,z1=k.min.y,D1=k.isBox3?k.min.z:0;else{const M0=Math.pow(2,-O);g1=Math.floor(b4.width*M0),T1=Math.floor(b4.height*M0),w.isDataArrayTexture?y1=b4.depth:w.isData3DTexture?y1=Math.floor(b4.depth*M0):y1=1,O1=0,z1=0,D1=0}V!==null?(Q1=V.x,p4=V.y,w4=V.z):(Q1=0,p4=0,w4=0);const g4=P1.convert(U.format),U1=P1.convert(U.type);let M4;U.isData3DTexture?(u1.setTexture3D(U,0),M4=P.TEXTURE_3D):U.isDataArrayTexture||U.isCompressedArrayTexture?(u1.setTexture2DArray(U,0),M4=P.TEXTURE_2D_ARRAY):(u1.setTexture2D(U,0),M4=P.TEXTURE_2D),P.pixelStorei(P.UNPACK_FLIP_Y_WEBGL,U.flipY),P.pixelStorei(P.UNPACK_PREMULTIPLY_ALPHA_WEBGL,U.premultiplyAlpha),P.pixelStorei(P.UNPACK_ALIGNMENT,U.unpackAlignment);const r4=P.getParameter(P.UNPACK_ROW_LENGTH),u0=P.getParameter(P.UNPACK_IMAGE_HEIGHT),V5=P.getParameter(P.UNPACK_SKIP_PIXELS),f0=P.getParameter(P.UNPACK_SKIP_ROWS),Z3=P.getParameter(P.UNPACK_SKIP_IMAGES);P.pixelStorei(P.UNPACK_ROW_LENGTH,b4.width),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,b4.height),P.pixelStorei(P.UNPACK_SKIP_PIXELS,O1),P.pixelStorei(P.UNPACK_SKIP_ROWS,z1),P.pixelStorei(P.UNPACK_SKIP_IMAGES,D1);const S4=w.isDataArrayTexture||w.isData3DTexture,b0=U.isDataArrayTexture||U.isData3DTexture;if(w.isDepthTexture){const M0=s1.get(w),Y4=s1.get(U),e0=s1.get(M0.__renderTarget),ft=s1.get(Y4.__renderTarget);$.bindFramebuffer(P.READ_FRAMEBUFFER,e0.__webglFramebuffer),$.bindFramebuffer(P.DRAW_FRAMEBUFFER,ft.__webglFramebuffer);for(let j2=0;j2<y1;j2++)S4&&(P.framebufferTextureLayer(P.READ_FRAMEBUFFER,P.COLOR_ATTACHMENT0,s1.get(w).__webglTexture,O,D1+j2),P.framebufferTextureLayer(P.DRAW_FRAMEBUFFER,P.COLOR_ATTACHMENT0,s1.get(U).__webglTexture,o1,w4+j2)),P.blitFramebuffer(O1,z1,g1,T1,Q1,p4,g1,T1,P.DEPTH_BUFFER_BIT,P.NEAREST);$.bindFramebuffer(P.READ_FRAMEBUFFER,null),$.bindFramebuffer(P.DRAW_FRAMEBUFFER,null)}else if(O!==0||w.isRenderTargetTexture||s1.has(w)){const M0=s1.get(w),Y4=s1.get(U);$.bindFramebuffer(P.READ_FRAMEBUFFER,Cc),$.bindFramebuffer(P.DRAW_FRAMEBUFFER,Rc);for(let e0=0;e0<y1;e0++)S4?P.framebufferTextureLayer(P.READ_FRAMEBUFFER,P.COLOR_ATTACHMENT0,M0.__webglTexture,O,D1+e0):P.framebufferTexture2D(P.READ_FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_2D,M0.__webglTexture,O),b0?P.framebufferTextureLayer(P.DRAW_FRAMEBUFFER,P.COLOR_ATTACHMENT0,Y4.__webglTexture,o1,w4+e0):P.framebufferTexture2D(P.DRAW_FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_2D,Y4.__webglTexture,o1),O!==0?P.blitFramebuffer(O1,z1,g1,T1,Q1,p4,g1,T1,P.COLOR_BUFFER_BIT,P.NEAREST):b0?P.copyTexSubImage3D(M4,o1,Q1,p4,w4+e0,O1,z1,g1,T1):P.copyTexSubImage2D(M4,o1,Q1,p4,O1,z1,g1,T1);$.bindFramebuffer(P.READ_FRAMEBUFFER,null),$.bindFramebuffer(P.DRAW_FRAMEBUFFER,null)}else b0?w.isDataTexture||w.isData3DTexture?P.texSubImage3D(M4,o1,Q1,p4,w4,g1,T1,y1,g4,U1,b4.data):U.isCompressedArrayTexture?P.compressedTexSubImage3D(M4,o1,Q1,p4,w4,g1,T1,y1,g4,b4.data):P.texSubImage3D(M4,o1,Q1,p4,w4,g1,T1,y1,g4,U1,b4):w.isDataTexture?P.texSubImage2D(P.TEXTURE_2D,o1,Q1,p4,g1,T1,g4,U1,b4.data):w.isCompressedTexture?P.compressedTexSubImage2D(P.TEXTURE_2D,o1,Q1,p4,b4.width,b4.height,g4,b4.data):P.texSubImage2D(P.TEXTURE_2D,o1,Q1,p4,g1,T1,g4,U1,b4);P.pixelStorei(P.UNPACK_ROW_LENGTH,r4),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,u0),P.pixelStorei(P.UNPACK_SKIP_PIXELS,V5),P.pixelStorei(P.UNPACK_SKIP_ROWS,f0),P.pixelStorei(P.UNPACK_SKIP_IMAGES,Z3),o1===0&&U.generateMipmaps&&P.generateMipmap(M4),$.unbindTexture()},this.initRenderTarget=function(w){s1.get(w).__webglFramebuffer===void 0&&u1.setupRenderTarget(w)},this.initTexture=function(w){w.isCubeTexture?u1.setTextureCube(w,0):w.isData3DTexture?u1.setTexture3D(w,0):w.isDataArrayTexture||w.isCompressedArrayTexture?u1.setTexture2DArray(w,0):u1.setTexture2D(w,0),$.unbindTexture()},this.resetState=function(){E=0,A=0,I=null,$.reset(),m1.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return _0}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=t4._getDrawingBufferColorSpace(t),e.unpackColorSpace=t4._getUnpackColorSpace()}}const Kv=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Ia,AddEquation:B2,AddOperation:wa,AdditiveAnimationBlendMode:cn,AdditiveBlending:Se,AgXToneMapping:La,AlphaFormat:rn,AlwaysCompare:qa,AlwaysDepth:P8,AlwaysStencilFunc:Ae,AmbientLight:On,AnimationAction:Zo,AnimationClip:J6,AnimationLoader:op,AnimationMixer:Np,AnimationObjectGroup:Up,AnimationUtils:ip,ArcCurve:fo,ArrayCamera:Xo,ArrowHelper:cm,AttachedBindMode:we,Audio:Yo,AudioAnalyser:Ep,AudioContext:Nn,AudioListener:bp,AudioLoader:xp,AxesHelper:lm,BackSide:j4,BasicDepthPacking:Ba,BasicShadowMap:Lu,BatchedMesh:oo,Bone:gn,BooleanKeyframeTrack:z5,Box2:Yp,Box3:z4,Box3Helper:am,BoxGeometry:B5,BoxHelper:rm,BufferAttribute:c4,BufferGeometry:X1,BufferGeometryLoader:Wo,ByteType:tn,Cache:Q0,Camera:z9,CameraHelper:sm,CanvasTexture:wd,CapsuleGeometry:Y9,CatmullRomCurve3:po,CineonToneMapping:Ra,CircleGeometry:q9,ClampToEdgeWrapping:w0,Clock:Fn,Color:v1,ColorKeyframeTrack:Pn,ColorManagement:t4,CompressedArrayTexture:Ed,CompressedCubeTexture:Td,CompressedTexture:X9,CompressedTextureLoader:cp,ConeGeometry:o7,ConstantAlphaFactor:Sa,ConstantColorFactor:ba,Controls:um,CubeCamera:to,CubeReflectionMapping:b2,CubeRefractionMapping:W2,CubeTexture:r7,CubeTextureLoader:lp,CubeUVReflectionMapping:H3,CubicBezierCurve:bn,CubicBezierCurve3:mo,CubicInterpolant:Do,CullFaceBack:Me,CullFaceFront:ra,CullFaceFrontBack:Pu,CullFaceNone:sa,Curve:V0,CurvePath:_o,CustomBlending:oa,CustomToneMapping:Pa,CylinderGeometry:a7,Cylindrical:Xp,Data3DTexture:F9,DataArrayTexture:N9,DataTexture:t2,DataTextureLoader:hp,DataUtils:$f,DecrementStencilOp:Yu,DecrementWrapStencilOp:Zu,DefaultLoadingManager:No,DepthFormat:I3,DepthStencilFormat:P3,DepthTexture:xn,DetachedBindMode:Ua,DirectionalLight:Un,DirectionalLightHelper:im,DiscreteInterpolant:Uo,DodecahedronGeometry:Z9,DoubleSide:J0,DstAlphaFactor:ga,DstColorFactor:xa,DynamicCopyUsage:hf,DynamicDrawUsage:sf,DynamicReadUsage:of,EdgesGeometry:uo,EllipseCurve:$9,EqualCompare:Ga,EqualDepth:D8,EqualStencilFunc:Qu,EquirectangularReflectionMapping:O6,EquirectangularRefractionMapping:N6,Euler:y0,EventDispatcher:i2,ExternalTexture:vn,ExtrudeGeometry:J9,FileLoader:S2,Float16BufferAttribute:nd,Float32BufferAttribute:M1,FloatType:c0,Fog:V9,FogExp2:k9,FramebufferTexture:Sd,FrontSide:y2,Frustum:X3,FrustumArray:W9,GLBufferAttribute:Vp,GLSL1:ff,GLSL3:Ce,GreaterCompare:Wa,GreaterDepth:O8,GreaterEqualCompare:Ya,GreaterEqualDepth:U8,GreaterEqualStencilFunc:nf,GreaterStencilFunc:tf,GridHelper:em,Group:g3,HalfFloatType:G3,HemisphereLight:Fo,HemisphereLightHelper:tm,IcosahedronGeometry:K9,ImageBitmapLoader:_p,ImageLoader:K6,ImageUtils:Ja,IncrementStencilOp:Xu,IncrementWrapStencilOp:qu,InstancedBufferAttribute:O3,InstancedBufferGeometry:Go,InstancedInterleavedBuffer:kp,InstancedMesh:ao,Int16BufferAttribute:td,Int32BufferAttribute:ed,Int8BufferAttribute:Kf,IntType:R9,InterleavedBuffer:H9,InterleavedBufferAttribute:U5,Interpolant:h7,InterpolateDiscrete:z6,InterpolateLinear:u9,InterpolateSmooth:g8,InterpolationSamplingMode:mf,InterpolationSamplingType:pf,InvertStencilOp:$u,KeepStencilOp:g5,KeyframeTrack:R0,LOD:so,LatheGeometry:Q9,Layers:B9,LessCompare:Ha,LessDepth:L8,LessEqualCompare:ln,LessEqualDepth:L5,LessEqualStencilFunc:ju,LessStencilFunc:Ku,Light:K2,LightProbe:Ho,Line:X2,Line3:$p,LineBasicMaterial:t0,LineCurve:Mn,LineCurve3:go,LineDashedMaterial:Io,LineLoop:co,LineSegments:s2,LinearFilter:L4,LinearInterpolant:In,LinearMipMapLinearFilter:Nu,LinearMipMapNearestFilter:Ou,LinearMipmapLinearFilter:K0,LinearMipmapNearestFilter:y6,LinearSRGBColorSpace:D5,LinearToneMapping:Aa,LinearTransfer:V6,Loader:h0,LoaderUtils:De,LoadingManager:Ln,LoopOnce:Oa,LoopPingPong:Fa,LoopRepeat:Na,MOUSE:Ru,Material:X4,MaterialLoader:at,MathUtils:Lf,Matrix2:Vn,Matrix3:W1,Matrix4:B1,MaxEquation:ua,Mesh:I4,MeshBasicMaterial:$2,MeshDepthMaterial:An,MeshDistanceMaterial:Cn,MeshLambertMaterial:g9,MeshMatcapMaterial:Ro,MeshNormalMaterial:Co,MeshPhongMaterial:wo,MeshPhysicalMaterial:To,MeshStandardMaterial:wn,MeshToonMaterial:Ao,MinEquation:ha,MirroredRepeatWrapping:B6,MixOperation:Ta,MultiplyBlending:Te,MultiplyOperation:i7,NearestFilter:B4,NearestMipMapLinearFilter:Uu,NearestMipMapNearestFilter:Du,NearestMipmapLinearFilter:p3,NearestMipmapNearestFilter:je,NeutralToneMapping:Da,NeverCompare:Va,NeverDepth:I8,NeverStencilFunc:Ju,NoBlending:_2,NoColorSpace:p2,NoToneMapping:x2,NormalAnimationBlendMode:O9,NormalBlending:A5,NotEqualCompare:Xa,NotEqualDepth:N8,NotEqualStencilFunc:ef,NumberKeyframeTrack:Z6,Object3D:s4,ObjectLoader:mp,ObjectSpaceNormalMap:ka,OctahedronGeometry:c7,OneFactor:da,OneMinusConstantAlphaFactor:Ea,OneMinusConstantColorFactor:Ma,OneMinusDstAlphaFactor:_a,OneMinusDstColorFactor:va,OneMinusSrcAlphaFactor:R8,OneMinusSrcColorFactor:ma,OrthographicCamera:rt,PCFShadowMap:Qe,PCFSoftShadowMap:aa,PMREMGenerator:Ne,Path:m9,PerspectiveCamera:F4,Plane:F2,PlaneGeometry:Y3,PlaneHelper:om,PointLight:zo,PointLightHelper:Qp,Points:lo,PointsMaterial:_n,PolarGridHelper:nm,PolyhedronGeometry:J2,PositionalAudio:Sp,PropertyBinding:n4,PropertyMixer:qo,QuadraticBezierCurve:Sn,QuadraticBezierCurve3:En,Quaternion:l0,QuaternionKeyframeTrack:u7,QuaternionLinearInterpolant:Oo,RED_GREEN_RGTC2_Format:l9,RED_RGTC1_Format:o9,REVISION:A9,RGBADepthPacking:za,RGBAFormat:Q4,RGBAIntegerFormat:U9,RGBA_ASTC_10x10_Format:e9,RGBA_ASTC_10x5_Format:Q8,RGBA_ASTC_10x6_Format:j8,RGBA_ASTC_10x8_Format:t9,RGBA_ASTC_12x10_Format:n9,RGBA_ASTC_12x12_Format:i9,RGBA_ASTC_4x4_Format:W8,RGBA_ASTC_5x4_Format:X8,RGBA_ASTC_5x5_Format:Y8,RGBA_ASTC_6x5_Format:q8,RGBA_ASTC_6x6_Format:Z8,RGBA_ASTC_8x5_Format:$8,RGBA_ASTC_8x6_Format:J8,RGBA_ASTC_8x8_Format:K8,RGBA_BPTC_Format:s9,RGBA_ETC2_EAC_Format:G8,RGBA_PVRTC_2BPPV1_Format:k8,RGBA_PVRTC_4BPPV1_Format:z8,RGBA_S3TC_DXT1_Format:M6,RGBA_S3TC_DXT3_Format:S6,RGBA_S3TC_DXT5_Format:E6,RGBDepthPacking:Vu,RGBFormat:an,RGBIntegerFormat:Fu,RGB_BPTC_SIGNED_Format:r9,RGB_BPTC_UNSIGNED_Format:a9,RGB_ETC1_Format:V8,RGB_ETC2_Format:H8,RGB_PVRTC_2BPPV1_Format:B8,RGB_PVRTC_4BPPV1_Format:F8,RGB_S3TC_DXT1_Format:b6,RGDepthPacking:Hu,RGFormat:on,RGIntegerFormat:D9,RawShaderMaterial:Eo,Ray:W3,Raycaster:$o,RectAreaLight:ko,RedFormat:L9,RedIntegerFormat:s7,ReinhardToneMapping:Ca,RenderTarget:un,RenderTarget3D:Fp,RepeatWrapping:F6,ReplaceStencilOp:Wu,ReverseSubtractEquation:la,RingGeometry:j9,SIGNED_RED_GREEN_RGTC2_Format:h9,SIGNED_RED_RGTC1_Format:c9,SRGBColorSpace:r0,SRGBTransfer:d4,Scene:pn,ShaderChunk:J1,ShaderLib:U0,ShaderMaterial:z0,ShadowMaterial:So,Shape:R5,ShapeGeometry:tt,ShapePath:hm,ShapeUtils:N0,ShortType:en,Skeleton:G9,SkeletonHelper:Kp,SkinnedMesh:ro,Source:V2,Sphere:k4,SphereGeometry:l7,Spherical:Wp,SphericalHarmonics3:Vo,SplineCurve:Tn,SpotLight:Bo,SpotLightHelper:Jp,Sprite:io,SpriteMaterial:mn,SrcAlphaFactor:C8,SrcAlphaSaturateFactor:ya,SrcColorFactor:pa,StaticCopyUsage:lf,StaticDrawUsage:H6,StaticReadUsage:af,StereoCamera:vp,StreamCopyUsage:uf,StreamDrawUsage:rf,StreamReadUsage:cf,StringKeyframeTrack:k5,SubtractEquation:ca,SubtractiveBlending:Ee,TOUCH:Iu,TangentSpaceNormalMap:Z2,TetrahedronGeometry:et,Texture:C4,TextureLoader:up,TextureUtils:gm,Timer:Hp,TimestampQuery:df,TorusGeometry:nt,TorusKnotGeometry:it,Triangle:o0,TriangleFanDrawMode:ku,TriangleStripDrawMode:zu,TrianglesDrawMode:Bu,TubeGeometry:st,UVMapping:C9,Uint16BufferAttribute:fn,Uint32BufferAttribute:dn,Uint8BufferAttribute:Qf,Uint8ClampedBufferAttribute:jf,Uniform:kn,UniformsGroup:zp,UniformsLib:p1,UniformsUtils:ja,UnsignedByteType:B0,UnsignedInt101111Type:sn,UnsignedInt248Type:R3,UnsignedInt5999Type:nn,UnsignedIntType:M2,UnsignedShort4444Type:I9,UnsignedShort5551Type:P9,UnsignedShortType:C3,VSMShadowMap:Z0,Vector2:K,Vector3:C,Vector4:i4,VectorKeyframeTrack:$6,VideoFrameTexture:Md,VideoTexture:ho,WebGL3DRenderTarget:zf,WebGLArrayRenderTarget:Bf,WebGLCoordinateSystem:_0,WebGLCubeRenderTarget:eo,WebGLRenderTarget:n2,WebGLRenderer:ic,WebGLUtils:nc,WebGPUCoordinateSystem:L3,WebXRController:_8,WireframeGeometry:Mo,WrapAroundEnding:k6,ZeroCurvatureEnding:b5,ZeroFactor:fa,ZeroSlopeEnding:M5,ZeroStencilOp:Gu,createCanvasElement:$a},Symbol.toStringTag,{value:"Module"}));/*!
 * camera-controls
 * https://github.com/yomotsu/camera-controls
 * (c) 2017 @yomotsu
 * Released under the MIT License.
 */const E4={LEFT:1,RIGHT:2,MIDDLE:4},B=Object.freeze({NONE:0,ROTATE:1,TRUCK:2,SCREEN_PAN:4,OFFSET:8,DOLLY:16,ZOOM:32,TOUCH_ROTATE:64,TOUCH_TRUCK:128,TOUCH_SCREEN_PAN:256,TOUCH_OFFSET:512,TOUCH_DOLLY:1024,TOUCH_ZOOM:2048,TOUCH_DOLLY_TRUCK:4096,TOUCH_DOLLY_SCREEN_PAN:8192,TOUCH_DOLLY_OFFSET:16384,TOUCH_DOLLY_ROTATE:32768,TOUCH_ZOOM_TRUCK:65536,TOUCH_ZOOM_OFFSET:131072,TOUCH_ZOOM_SCREEN_PAN:262144,TOUCH_ZOOM_ROTATE:524288}),h3={NONE:0,IN:1,OUT:-1};function p5(i){return i.isPerspectiveCamera}function U2(i){return i.isOrthographicCamera}const D2=Math.PI*2,nr=Math.PI/2,sc=1e-5,o6=Math.PI/180;function D0(i,t,e){return Math.max(t,Math.min(e,i))}function y4(i,t=sc){return Math.abs(i)<t}function u4(i,t,e=sc){return y4(i-t,e)}function ir(i,t){return Math.round(i/t)*t}function c6(i){return isFinite(i)?i:i<0?-Number.MAX_VALUE:Number.MAX_VALUE}function l6(i){return Math.abs(i)<Number.MAX_VALUE?i:i*(1/0)}function f8(i,t,e,n,s=1/0,r){n=Math.max(1e-4,n);const a=2/n,o=a*r,c=1/(1+o+.48*o*o+.235*o*o*o);let l=i-t;const h=t,u=s*n;l=D0(l,-u,u),t=i-l;const f=(e.value+a*l)*r;e.value=(e.value-a*f)*c;let d=t+(l+f)*c;return h-i>0==d>h&&(d=h,e.value=(d-h)/r),d}function sr(i,t,e,n,s=1/0,r,a){n=Math.max(1e-4,n);const o=2/n,c=o*r,l=1/(1+c+.48*c*c+.235*c*c*c);let h=t.x,u=t.y,f=t.z,d=i.x-h,m=i.y-u,_=i.z-f;const g=h,p=u,y=f,v=s*n,x=v*v,T=d*d+m*m+_*_;if(T>x){const H=Math.sqrt(T);d=d/H*v,m=m/H*v,_=_/H*v}h=i.x-d,u=i.y-m,f=i.z-_;const E=(e.x+o*d)*r,A=(e.y+o*m)*r,I=(e.z+o*_)*r;e.x=(e.x-o*E)*l,e.y=(e.y-o*A)*l,e.z=(e.z-o*I)*l,a.x=h+(d+E)*l,a.y=u+(m+A)*l,a.z=f+(_+I)*l;const S=g-i.x,M=p-i.y,L=y-i.z,N=a.x-g,z=a.y-p,q=a.z-y;return S*N+M*z+L*q>0&&(a.x=g,a.y=p,a.z=y,e.x=(a.x-g)/r,e.y=(a.y-p)/r,e.z=(a.z-y)/r),a}function oe(i,t){t.set(0,0),i.forEach(e=>{t.x+=e.clientX,t.y+=e.clientY}),t.x/=i.length,t.y/=i.length}function ce(i,t){return U2(i)?(console.warn(`${t} is not supported in OrthographicCamera`),!0):!1}class Qv{constructor(){this._listeners={}}addEventListener(t,e){const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const s=this._listeners[t];if(s!==void 0){const r=s.indexOf(e);r!==-1&&s.splice(r,1)}}removeAllEventListeners(t){if(!t){this._listeners={};return}Array.isArray(this._listeners[t])&&(this._listeners[t].length=0)}dispatchEvent(t){const n=this._listeners[t.type];if(n!==void 0){t.target=this;const s=n.slice(0);for(let r=0,a=s.length;r<a;r++)s[r].call(this,t)}}}var le;const jv="3.1.0",d8=1/8,ty=/Mac/.test((le=globalThis?.navigator)===null||le===void 0?void 0:le.platform);let k1,rr,p8,he,i0,$1,a4,u3,h6,Y0,q0,m5,ar,or,m0,f3,d3,cr,ue,lr,fe,de,m8;class Q6 extends Qv{static install(t){k1=t.THREE,rr=Object.freeze(new k1.Vector3(0,0,0)),p8=Object.freeze(new k1.Vector3(0,1,0)),he=Object.freeze(new k1.Vector3(0,0,1)),i0=new k1.Vector2,$1=new k1.Vector3,a4=new k1.Vector3,u3=new k1.Vector3,h6=new k1.Vector3,Y0=new k1.Vector3,q0=new k1.Vector3,m5=new k1.Vector3,ar=new k1.Vector3,or=new k1.Vector3,m0=new k1.Spherical,f3=new k1.Spherical,d3=new k1.Box3,cr=new k1.Box3,ue=new k1.Sphere,lr=new k1.Quaternion,fe=new k1.Quaternion,de=new k1.Matrix4,m8=new k1.Raycaster}static get ACTION(){return B}set verticalDragToForward(t){console.warn("camera-controls: `verticalDragToForward` was removed. Use `mouseButtons.left = CameraControls.ACTION.SCREEN_PAN` instead.")}constructor(t,e){super(),this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.minDistance=Number.EPSILON,this.maxDistance=1/0,this.infinityDolly=!1,this.minZoom=.01,this.maxZoom=1/0,this.smoothTime=.25,this.draggingSmoothTime=.125,this.maxSpeed=1/0,this.azimuthRotateSpeed=1,this.polarRotateSpeed=1,this.dollySpeed=1,this.dollyDragInverted=!1,this.truckSpeed=2,this.dollyToCursor=!1,this.dragToOffset=!1,this.boundaryFriction=0,this.restThreshold=.01,this.colliderMeshes=[],this.cancel=()=>{},this._enabled=!0,this._state=B.NONE,this._viewport=null,this._changedDolly=0,this._changedZoom=0,this._hasRested=!0,this._boundaryEnclosesCamera=!1,this._needsUpdate=!0,this._updatedLastTime=!1,this._elementRect=new DOMRect,this._isDragging=!1,this._dragNeedsUpdate=!0,this._activePointers=[],this._lockedPointer=null,this._interactiveArea=new DOMRect(0,0,1,1),this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._isUserControllingOffset=!1,this._isUserControllingZoom=!1,this._lastDollyDirection=h3.NONE,this._thetaVelocity={value:0},this._phiVelocity={value:0},this._radiusVelocity={value:0},this._targetVelocity=new k1.Vector3,this._focalOffsetVelocity=new k1.Vector3,this._zoomVelocity={value:0},this._truckInternal=(p,y,v,x)=>{let T,E;if(p5(this._camera)){const A=$1.copy(this._camera.position).sub(this._target),I=this._camera.getEffectiveFOV()*o6,S=A.length()*Math.tan(I*.5);T=this.truckSpeed*p*S/this._elementRect.height,E=this.truckSpeed*y*S/this._elementRect.height}else if(U2(this._camera)){const A=this._camera;T=this.truckSpeed*p*(A.right-A.left)/A.zoom/this._elementRect.width,E=this.truckSpeed*y*(A.top-A.bottom)/A.zoom/this._elementRect.height}else return;x?(v?this.setFocalOffset(this._focalOffsetEnd.x+T,this._focalOffsetEnd.y,this._focalOffsetEnd.z,!0):this.truck(T,0,!0),this.forward(-E,!0)):v?this.setFocalOffset(this._focalOffsetEnd.x+T,this._focalOffsetEnd.y+E,this._focalOffsetEnd.z,!0):this.truck(T,E,!0)},this._rotateInternal=(p,y)=>{const v=D2*this.azimuthRotateSpeed*p/this._elementRect.height,x=D2*this.polarRotateSpeed*y/this._elementRect.height;this.rotate(v,x,!0)},this._dollyInternal=(p,y,v)=>{const x=Math.pow(.95,-p*this.dollySpeed),T=this._sphericalEnd.radius,E=this._sphericalEnd.radius*x,A=D0(E,this.minDistance,this.maxDistance),I=A-E;this.infinityDolly&&this.dollyToCursor?this._dollyToNoClamp(E,!0):this.infinityDolly&&!this.dollyToCursor?(this.dollyInFixed(I,!0),this._dollyToNoClamp(A,!0)):this._dollyToNoClamp(A,!0),this.dollyToCursor&&(this._changedDolly+=(this.infinityDolly?E:A)-T,this._dollyControlCoord.set(y,v)),this._lastDollyDirection=Math.sign(-p)},this._zoomInternal=(p,y,v)=>{const x=Math.pow(.95,p*this.dollySpeed),T=this._zoom,E=this._zoom*x;this.zoomTo(E,!0),this.dollyToCursor&&(this._changedZoom+=E-T,this._dollyControlCoord.set(y,v))},typeof k1>"u"&&console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information."),this._camera=t,this._yAxisUpSpace=new k1.Quaternion().setFromUnitVectors(this._camera.up,p8),this._yAxisUpSpaceInverse=this._yAxisUpSpace.clone().invert(),this._state=B.NONE,this._target=new k1.Vector3,this._targetEnd=this._target.clone(),this._focalOffset=new k1.Vector3,this._focalOffsetEnd=this._focalOffset.clone(),this._spherical=new k1.Spherical().setFromVector3($1.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)),this._sphericalEnd=this._spherical.clone(),this._lastDistance=this._spherical.radius,this._zoom=this._camera.zoom,this._zoomEnd=this._zoom,this._lastZoom=this._zoom,this._nearPlaneCorners=[new k1.Vector3,new k1.Vector3,new k1.Vector3,new k1.Vector3],this._updateNearPlaneCorners(),this._boundary=new k1.Box3(new k1.Vector3(-1/0,-1/0,-1/0),new k1.Vector3(1/0,1/0,1/0)),this._cameraUp0=this._camera.up.clone(),this._target0=this._target.clone(),this._position0=this._camera.position.clone(),this._zoom0=this._zoom,this._focalOffset0=this._focalOffset.clone(),this._dollyControlCoord=new k1.Vector2,this.mouseButtons={left:B.ROTATE,middle:B.DOLLY,right:B.TRUCK,wheel:p5(this._camera)?B.DOLLY:U2(this._camera)?B.ZOOM:B.NONE},this.touches={one:B.TOUCH_ROTATE,two:p5(this._camera)?B.TOUCH_DOLLY_TRUCK:U2(this._camera)?B.TOUCH_ZOOM_TRUCK:B.NONE,three:B.TOUCH_TRUCK};const n=new k1.Vector2,s=new k1.Vector2,r=new k1.Vector2,a=p=>{if(!this._enabled||!this._domElement)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const x=this._domElement.getBoundingClientRect(),T=p.clientX/x.width,E=p.clientY/x.height;if(T<this._interactiveArea.left||T>this._interactiveArea.right||E<this._interactiveArea.top||E>this._interactiveArea.bottom)return}const y=p.pointerType!=="mouse"?null:(p.buttons&E4.LEFT)===E4.LEFT?E4.LEFT:(p.buttons&E4.MIDDLE)===E4.MIDDLE?E4.MIDDLE:(p.buttons&E4.RIGHT)===E4.RIGHT?E4.RIGHT:null;if(y!==null){const x=this._findPointerByMouseButton(y);x&&this._disposePointer(x)}if((p.buttons&E4.LEFT)===E4.LEFT&&this._lockedPointer)return;const v={pointerId:p.pointerId,clientX:p.clientX,clientY:p.clientY,deltaX:0,deltaY:0,mouseButton:y};this._activePointers.push(v),this._domElement.ownerDocument.removeEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",c),this._domElement.ownerDocument.addEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",c),this._isDragging=!0,f(p)},o=p=>{p.cancelable&&p.preventDefault();const y=p.pointerId,v=this._lockedPointer||this._findPointerById(y);if(v){if(v.clientX=p.clientX,v.clientY=p.clientY,v.deltaX=p.movementX,v.deltaY=p.movementY,this._state=0,p.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else(!this._isDragging&&this._lockedPointer||this._isDragging&&(p.buttons&E4.LEFT)===E4.LEFT)&&(this._state=this._state|this.mouseButtons.left),this._isDragging&&(p.buttons&E4.MIDDLE)===E4.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),this._isDragging&&(p.buttons&E4.RIGHT)===E4.RIGHT&&(this._state=this._state|this.mouseButtons.right);d()}},c=p=>{const y=this._findPointerById(p.pointerId);if(!(y&&y===this._lockedPointer)){if(y&&this._disposePointer(y),p.pointerType==="touch")switch(this._activePointers.length){case 0:this._state=B.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else this._state=B.NONE;m()}};let l=-1;const h=p=>{if(!this._domElement||!this._enabled||this.mouseButtons.wheel===B.NONE)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const E=this._domElement.getBoundingClientRect(),A=p.clientX/E.width,I=p.clientY/E.height;if(A<this._interactiveArea.left||A>this._interactiveArea.right||I<this._interactiveArea.top||I>this._interactiveArea.bottom)return}if(p.preventDefault(),this.dollyToCursor||this.mouseButtons.wheel===B.ROTATE||this.mouseButtons.wheel===B.TRUCK){const E=performance.now();l-E<1e3&&this._getClientRect(this._elementRect),l=E}const y=ty?-1:-3,v=p.deltaMode===1||p.ctrlKey?p.deltaY/y:p.deltaY/(y*10),x=this.dollyToCursor?(p.clientX-this._elementRect.x)/this._elementRect.width*2-1:0,T=this.dollyToCursor?(p.clientY-this._elementRect.y)/this._elementRect.height*-2+1:0;switch(this.mouseButtons.wheel){case B.ROTATE:{this._rotateInternal(p.deltaX,p.deltaY),this._isUserControllingRotate=!0;break}case B.TRUCK:{this._truckInternal(p.deltaX,p.deltaY,!1,!1),this._isUserControllingTruck=!0;break}case B.SCREEN_PAN:{this._truckInternal(p.deltaX,p.deltaY,!1,!0),this._isUserControllingTruck=!0;break}case B.OFFSET:{this._truckInternal(p.deltaX,p.deltaY,!0,!1),this._isUserControllingOffset=!0;break}case B.DOLLY:{this._dollyInternal(-v,x,T),this._isUserControllingDolly=!0;break}case B.ZOOM:{this._zoomInternal(-v,x,T),this._isUserControllingZoom=!0;break}}this.dispatchEvent({type:"control"})},u=p=>{if(!(!this._domElement||!this._enabled)){if(this.mouseButtons.right===Q6.ACTION.NONE){const y=p instanceof PointerEvent?p.pointerId:0,v=this._findPointerById(y);v&&this._disposePointer(v),this._domElement.ownerDocument.removeEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",c);return}p.preventDefault()}},f=p=>{if(!this._enabled)return;if(oe(this._activePointers,i0),this._getClientRect(this._elementRect),n.copy(i0),s.copy(i0),this._activePointers.length>=2){const v=i0.x-this._activePointers[1].clientX,x=i0.y-this._activePointers[1].clientY,T=Math.sqrt(v*v+x*x);r.set(0,T);const E=(this._activePointers[0].clientX+this._activePointers[1].clientX)*.5,A=(this._activePointers[0].clientY+this._activePointers[1].clientY)*.5;s.set(E,A)}if(this._state=0,!p)this._lockedPointer&&(this._state=this._state|this.mouseButtons.left);else if("pointerType"in p&&p.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else!this._lockedPointer&&(p.buttons&E4.LEFT)===E4.LEFT&&(this._state=this._state|this.mouseButtons.left),(p.buttons&E4.MIDDLE)===E4.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(p.buttons&E4.RIGHT)===E4.RIGHT&&(this._state=this._state|this.mouseButtons.right);((this._state&B.ROTATE)===B.ROTATE||(this._state&B.TOUCH_ROTATE)===B.TOUCH_ROTATE||(this._state&B.TOUCH_DOLLY_ROTATE)===B.TOUCH_DOLLY_ROTATE||(this._state&B.TOUCH_ZOOM_ROTATE)===B.TOUCH_ZOOM_ROTATE)&&(this._sphericalEnd.theta=this._spherical.theta,this._sphericalEnd.phi=this._spherical.phi,this._thetaVelocity.value=0,this._phiVelocity.value=0),((this._state&B.TRUCK)===B.TRUCK||(this._state&B.SCREEN_PAN)===B.SCREEN_PAN||(this._state&B.TOUCH_TRUCK)===B.TOUCH_TRUCK||(this._state&B.TOUCH_SCREEN_PAN)===B.TOUCH_SCREEN_PAN||(this._state&B.TOUCH_DOLLY_TRUCK)===B.TOUCH_DOLLY_TRUCK||(this._state&B.TOUCH_DOLLY_SCREEN_PAN)===B.TOUCH_DOLLY_SCREEN_PAN||(this._state&B.TOUCH_ZOOM_TRUCK)===B.TOUCH_ZOOM_TRUCK||(this._state&B.TOUCH_ZOOM_SCREEN_PAN)===B.TOUCH_DOLLY_SCREEN_PAN)&&(this._targetEnd.copy(this._target),this._targetVelocity.set(0,0,0)),((this._state&B.DOLLY)===B.DOLLY||(this._state&B.TOUCH_DOLLY)===B.TOUCH_DOLLY||(this._state&B.TOUCH_DOLLY_TRUCK)===B.TOUCH_DOLLY_TRUCK||(this._state&B.TOUCH_DOLLY_SCREEN_PAN)===B.TOUCH_DOLLY_SCREEN_PAN||(this._state&B.TOUCH_DOLLY_OFFSET)===B.TOUCH_DOLLY_OFFSET||(this._state&B.TOUCH_DOLLY_ROTATE)===B.TOUCH_DOLLY_ROTATE)&&(this._sphericalEnd.radius=this._spherical.radius,this._radiusVelocity.value=0),((this._state&B.ZOOM)===B.ZOOM||(this._state&B.TOUCH_ZOOM)===B.TOUCH_ZOOM||(this._state&B.TOUCH_ZOOM_TRUCK)===B.TOUCH_ZOOM_TRUCK||(this._state&B.TOUCH_ZOOM_SCREEN_PAN)===B.TOUCH_ZOOM_SCREEN_PAN||(this._state&B.TOUCH_ZOOM_OFFSET)===B.TOUCH_ZOOM_OFFSET||(this._state&B.TOUCH_ZOOM_ROTATE)===B.TOUCH_ZOOM_ROTATE)&&(this._zoomEnd=this._zoom,this._zoomVelocity.value=0),((this._state&B.OFFSET)===B.OFFSET||(this._state&B.TOUCH_OFFSET)===B.TOUCH_OFFSET||(this._state&B.TOUCH_DOLLY_OFFSET)===B.TOUCH_DOLLY_OFFSET||(this._state&B.TOUCH_ZOOM_OFFSET)===B.TOUCH_ZOOM_OFFSET)&&(this._focalOffsetEnd.copy(this._focalOffset),this._focalOffsetVelocity.set(0,0,0)),this.dispatchEvent({type:"controlstart"})},d=()=>{if(!this._enabled||!this._dragNeedsUpdate)return;this._dragNeedsUpdate=!1,oe(this._activePointers,i0);const y=this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement?this._lockedPointer||this._activePointers[0]:null,v=y?-y.deltaX:s.x-i0.x,x=y?-y.deltaY:s.y-i0.y;if(s.copy(i0),((this._state&B.ROTATE)===B.ROTATE||(this._state&B.TOUCH_ROTATE)===B.TOUCH_ROTATE||(this._state&B.TOUCH_DOLLY_ROTATE)===B.TOUCH_DOLLY_ROTATE||(this._state&B.TOUCH_ZOOM_ROTATE)===B.TOUCH_ZOOM_ROTATE)&&(this._rotateInternal(v,x),this._isUserControllingRotate=!0),(this._state&B.DOLLY)===B.DOLLY||(this._state&B.ZOOM)===B.ZOOM){const T=this.dollyToCursor?(n.x-this._elementRect.x)/this._elementRect.width*2-1:0,E=this.dollyToCursor?(n.y-this._elementRect.y)/this._elementRect.height*-2+1:0,A=this.dollyDragInverted?-1:1;(this._state&B.DOLLY)===B.DOLLY?(this._dollyInternal(A*x*d8,T,E),this._isUserControllingDolly=!0):(this._zoomInternal(A*x*d8,T,E),this._isUserControllingZoom=!0)}if((this._state&B.TOUCH_DOLLY)===B.TOUCH_DOLLY||(this._state&B.TOUCH_ZOOM)===B.TOUCH_ZOOM||(this._state&B.TOUCH_DOLLY_TRUCK)===B.TOUCH_DOLLY_TRUCK||(this._state&B.TOUCH_ZOOM_TRUCK)===B.TOUCH_ZOOM_TRUCK||(this._state&B.TOUCH_DOLLY_SCREEN_PAN)===B.TOUCH_DOLLY_SCREEN_PAN||(this._state&B.TOUCH_ZOOM_SCREEN_PAN)===B.TOUCH_ZOOM_SCREEN_PAN||(this._state&B.TOUCH_DOLLY_OFFSET)===B.TOUCH_DOLLY_OFFSET||(this._state&B.TOUCH_ZOOM_OFFSET)===B.TOUCH_ZOOM_OFFSET||(this._state&B.TOUCH_DOLLY_ROTATE)===B.TOUCH_DOLLY_ROTATE||(this._state&B.TOUCH_ZOOM_ROTATE)===B.TOUCH_ZOOM_ROTATE){const T=i0.x-this._activePointers[1].clientX,E=i0.y-this._activePointers[1].clientY,A=Math.sqrt(T*T+E*E),I=r.y-A;r.set(0,A);const S=this.dollyToCursor?(s.x-this._elementRect.x)/this._elementRect.width*2-1:0,M=this.dollyToCursor?(s.y-this._elementRect.y)/this._elementRect.height*-2+1:0;(this._state&B.TOUCH_DOLLY)===B.TOUCH_DOLLY||(this._state&B.TOUCH_DOLLY_ROTATE)===B.TOUCH_DOLLY_ROTATE||(this._state&B.TOUCH_DOLLY_TRUCK)===B.TOUCH_DOLLY_TRUCK||(this._state&B.TOUCH_DOLLY_SCREEN_PAN)===B.TOUCH_DOLLY_SCREEN_PAN||(this._state&B.TOUCH_DOLLY_OFFSET)===B.TOUCH_DOLLY_OFFSET?(this._dollyInternal(I*d8,S,M),this._isUserControllingDolly=!0):(this._zoomInternal(I*d8,S,M),this._isUserControllingZoom=!0)}((this._state&B.TRUCK)===B.TRUCK||(this._state&B.TOUCH_TRUCK)===B.TOUCH_TRUCK||(this._state&B.TOUCH_DOLLY_TRUCK)===B.TOUCH_DOLLY_TRUCK||(this._state&B.TOUCH_ZOOM_TRUCK)===B.TOUCH_ZOOM_TRUCK)&&(this._truckInternal(v,x,!1,!1),this._isUserControllingTruck=!0),((this._state&B.SCREEN_PAN)===B.SCREEN_PAN||(this._state&B.TOUCH_SCREEN_PAN)===B.TOUCH_SCREEN_PAN||(this._state&B.TOUCH_DOLLY_SCREEN_PAN)===B.TOUCH_DOLLY_SCREEN_PAN||(this._state&B.TOUCH_ZOOM_SCREEN_PAN)===B.TOUCH_ZOOM_SCREEN_PAN)&&(this._truckInternal(v,x,!1,!0),this._isUserControllingTruck=!0),((this._state&B.OFFSET)===B.OFFSET||(this._state&B.TOUCH_OFFSET)===B.TOUCH_OFFSET||(this._state&B.TOUCH_DOLLY_OFFSET)===B.TOUCH_DOLLY_OFFSET||(this._state&B.TOUCH_ZOOM_OFFSET)===B.TOUCH_ZOOM_OFFSET)&&(this._truckInternal(v,x,!0,!1),this._isUserControllingOffset=!0),this.dispatchEvent({type:"control"})},m=()=>{oe(this._activePointers,i0),s.copy(i0),this._dragNeedsUpdate=!1,(this._activePointers.length===0||this._activePointers.length===1&&this._activePointers[0]===this._lockedPointer)&&(this._isDragging=!1),this._activePointers.length===0&&this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",c),this.dispatchEvent({type:"controlend"}))};this.lockPointer=()=>{!this._enabled||!this._domElement||(this.cancel(),this._lockedPointer={pointerId:-1,clientX:0,clientY:0,deltaX:0,deltaY:0,mouseButton:null},this._activePointers.push(this._lockedPointer),this._domElement.ownerDocument.removeEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",c),this._domElement.requestPointerLock(),this._domElement.ownerDocument.addEventListener("pointerlockchange",_),this._domElement.ownerDocument.addEventListener("pointerlockerror",g),this._domElement.ownerDocument.addEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",c),f())},this.unlockPointer=()=>{var p,y,v;this._lockedPointer!==null&&(this._disposePointer(this._lockedPointer),this._lockedPointer=null),(p=this._domElement)===null||p===void 0||p.ownerDocument.exitPointerLock(),(y=this._domElement)===null||y===void 0||y.ownerDocument.removeEventListener("pointerlockchange",_),(v=this._domElement)===null||v===void 0||v.ownerDocument.removeEventListener("pointerlockerror",g),this.cancel()};const _=()=>{this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement||this.unlockPointer()},g=()=>{this.unlockPointer()};this._addAllEventListeners=p=>{this._domElement=p,this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none",this._domElement.addEventListener("pointerdown",a),this._domElement.addEventListener("pointercancel",c),this._domElement.addEventListener("wheel",h,{passive:!1}),this._domElement.addEventListener("contextmenu",u)},this._removeAllEventListeners=()=>{this._domElement&&(this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect="",this._domElement.removeEventListener("pointerdown",a),this._domElement.removeEventListener("pointercancel",c),this._domElement.removeEventListener("wheel",h,{passive:!1}),this._domElement.removeEventListener("contextmenu",u),this._domElement.ownerDocument.removeEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",c),this._domElement.ownerDocument.removeEventListener("pointerlockchange",_),this._domElement.ownerDocument.removeEventListener("pointerlockerror",g))},this.cancel=()=>{this._state!==B.NONE&&(this._state=B.NONE,this._activePointers.length=0,m())},e&&this.connect(e),this.update(0)}get camera(){return this._camera}set camera(t){this._camera=t,this.updateCameraUp(),this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0}get enabled(){return this._enabled}set enabled(t){this._enabled=t,this._domElement&&(t?(this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none"):(this.cancel(),this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect=""))}get active(){return!this._hasRested}get currentAction(){return this._state}get distance(){return this._spherical.radius}set distance(t){this._spherical.radius===t&&this._sphericalEnd.radius===t||(this._spherical.radius=t,this._sphericalEnd.radius=t,this._needsUpdate=!0)}get azimuthAngle(){return this._spherical.theta}set azimuthAngle(t){this._spherical.theta===t&&this._sphericalEnd.theta===t||(this._spherical.theta=t,this._sphericalEnd.theta=t,this._needsUpdate=!0)}get polarAngle(){return this._spherical.phi}set polarAngle(t){this._spherical.phi===t&&this._sphericalEnd.phi===t||(this._spherical.phi=t,this._sphericalEnd.phi=t,this._needsUpdate=!0)}get boundaryEnclosesCamera(){return this._boundaryEnclosesCamera}set boundaryEnclosesCamera(t){this._boundaryEnclosesCamera=t,this._needsUpdate=!0}set interactiveArea(t){this._interactiveArea.width=D0(t.width,0,1),this._interactiveArea.height=D0(t.height,0,1),this._interactiveArea.x=D0(t.x,0,1-this._interactiveArea.width),this._interactiveArea.y=D0(t.y,0,1-this._interactiveArea.height)}addEventListener(t,e){super.addEventListener(t,e)}removeEventListener(t,e){super.removeEventListener(t,e)}rotate(t,e,n=!1){return this.rotateTo(this._sphericalEnd.theta+t,this._sphericalEnd.phi+e,n)}rotateAzimuthTo(t,e=!1){return this.rotateTo(t,this._sphericalEnd.phi,e)}rotatePolarTo(t,e=!1){return this.rotateTo(this._sphericalEnd.theta,t,e)}rotateTo(t,e,n=!1){this._isUserControllingRotate=!1;const s=D0(t,this.minAzimuthAngle,this.maxAzimuthAngle),r=D0(e,this.minPolarAngle,this.maxPolarAngle);this._sphericalEnd.theta=s,this._sphericalEnd.phi=r,this._sphericalEnd.makeSafe(),this._needsUpdate=!0,n||(this._spherical.theta=this._sphericalEnd.theta,this._spherical.phi=this._sphericalEnd.phi);const a=!n||u4(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&u4(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold);return this._createOnRestPromise(a)}dolly(t,e=!1){return this.dollyTo(this._sphericalEnd.radius-t,e)}dollyTo(t,e=!1){return this._isUserControllingDolly=!1,this._lastDollyDirection=h3.NONE,this._changedDolly=0,this._dollyToNoClamp(D0(t,this.minDistance,this.maxDistance),e)}_dollyToNoClamp(t,e=!1){const n=this._sphericalEnd.radius;if(this.colliderMeshes.length>=1){const a=this._collisionTest(),o=u4(a,this._spherical.radius);if(!(n>t)&&o)return Promise.resolve();this._sphericalEnd.radius=Math.min(t,a)}else this._sphericalEnd.radius=t;this._needsUpdate=!0,e||(this._spherical.radius=this._sphericalEnd.radius);const r=!e||u4(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(r)}dollyInFixed(t,e=!1){this._targetEnd.add(this._getCameraDirection(h6).multiplyScalar(t)),e||this._target.copy(this._targetEnd);const n=!e||u4(this._target.x,this._targetEnd.x,this.restThreshold)&&u4(this._target.y,this._targetEnd.y,this.restThreshold)&&u4(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(n)}zoom(t,e=!1){return this.zoomTo(this._zoomEnd+t,e)}zoomTo(t,e=!1){this._isUserControllingZoom=!1,this._zoomEnd=D0(t,this.minZoom,this.maxZoom),this._needsUpdate=!0,e||(this._zoom=this._zoomEnd);const n=!e||u4(this._zoom,this._zoomEnd,this.restThreshold);return this._changedZoom=0,this._createOnRestPromise(n)}pan(t,e,n=!1){return console.warn("`pan` has been renamed to `truck`"),this.truck(t,e,n)}truck(t,e,n=!1){this._camera.updateMatrix(),Y0.setFromMatrixColumn(this._camera.matrix,0),q0.setFromMatrixColumn(this._camera.matrix,1),Y0.multiplyScalar(t),q0.multiplyScalar(-e);const s=$1.copy(Y0).add(q0),r=a4.copy(this._targetEnd).add(s);return this.moveTo(r.x,r.y,r.z,n)}forward(t,e=!1){$1.setFromMatrixColumn(this._camera.matrix,0),$1.crossVectors(this._camera.up,$1),$1.multiplyScalar(t);const n=a4.copy(this._targetEnd).add($1);return this.moveTo(n.x,n.y,n.z,e)}elevate(t,e=!1){return $1.copy(this._camera.up).multiplyScalar(t),this.moveTo(this._targetEnd.x+$1.x,this._targetEnd.y+$1.y,this._targetEnd.z+$1.z,e)}moveTo(t,e,n,s=!1){this._isUserControllingTruck=!1;const r=$1.set(t,e,n).sub(this._targetEnd);this._encloseToBoundary(this._targetEnd,r,this.boundaryFriction),this._needsUpdate=!0,s||this._target.copy(this._targetEnd);const a=!s||u4(this._target.x,this._targetEnd.x,this.restThreshold)&&u4(this._target.y,this._targetEnd.y,this.restThreshold)&&u4(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(a)}lookInDirectionOf(t,e,n,s=!1){const o=$1.set(t,e,n).sub(this._targetEnd).normalize().multiplyScalar(-this._sphericalEnd.radius).add(this._targetEnd);return this.setPosition(o.x,o.y,o.z,s)}fitToBox(t,e,{cover:n=!1,paddingLeft:s=0,paddingRight:r=0,paddingBottom:a=0,paddingTop:o=0}={}){const c=[],l=t.isBox3?d3.copy(t):d3.setFromObject(t);l.isEmpty()&&(console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"),Promise.resolve());const h=ir(this._sphericalEnd.theta,nr),u=ir(this._sphericalEnd.phi,nr);c.push(this.rotateTo(h,u,e));const f=$1.setFromSpherical(this._sphericalEnd).normalize(),d=lr.setFromUnitVectors(f,he),m=u4(Math.abs(f.y),1);m&&d.multiply(fe.setFromAxisAngle(p8,h)),d.multiply(this._yAxisUpSpaceInverse);const _=cr.makeEmpty();a4.copy(l.min).applyQuaternion(d),_.expandByPoint(a4),a4.copy(l.min).setX(l.max.x).applyQuaternion(d),_.expandByPoint(a4),a4.copy(l.min).setY(l.max.y).applyQuaternion(d),_.expandByPoint(a4),a4.copy(l.max).setZ(l.min.z).applyQuaternion(d),_.expandByPoint(a4),a4.copy(l.min).setZ(l.max.z).applyQuaternion(d),_.expandByPoint(a4),a4.copy(l.max).setY(l.min.y).applyQuaternion(d),_.expandByPoint(a4),a4.copy(l.max).setX(l.min.x).applyQuaternion(d),_.expandByPoint(a4),a4.copy(l.max).applyQuaternion(d),_.expandByPoint(a4),_.min.x-=s,_.min.y-=a,_.max.x+=r,_.max.y+=o,d.setFromUnitVectors(he,f),m&&d.premultiply(fe.invert()),d.premultiply(this._yAxisUpSpace);const g=_.getSize($1),p=_.getCenter(a4).applyQuaternion(d);if(p5(this._camera)){const y=this.getDistanceToFitBox(g.x,g.y,g.z,n);c.push(this.moveTo(p.x,p.y,p.z,e)),c.push(this.dollyTo(y,e)),c.push(this.setFocalOffset(0,0,0,e))}else if(U2(this._camera)){const y=this._camera,v=y.right-y.left,x=y.top-y.bottom,T=n?Math.max(v/g.x,x/g.y):Math.min(v/g.x,x/g.y);c.push(this.moveTo(p.x,p.y,p.z,e)),c.push(this.zoomTo(T,e)),c.push(this.setFocalOffset(0,0,0,e))}return Promise.all(c)}fitToSphere(t,e){const n=[],r="isObject3D"in t?Q6.createBoundingSphere(t,ue):ue.copy(t);if(n.push(this.moveTo(r.center.x,r.center.y,r.center.z,e)),p5(this._camera)){const a=this.getDistanceToFitSphere(r.radius);n.push(this.dollyTo(a,e))}else if(U2(this._camera)){const a=this._camera.right-this._camera.left,o=this._camera.top-this._camera.bottom,c=2*r.radius,l=Math.min(a/c,o/c);n.push(this.zoomTo(l,e))}return n.push(this.setFocalOffset(0,0,0,e)),Promise.all(n)}setLookAt(t,e,n,s,r,a,o=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=h3.NONE,this._changedDolly=0;const c=a4.set(s,r,a),l=$1.set(t,e,n);this._targetEnd.copy(c),this._sphericalEnd.setFromVector3(l.sub(c).applyQuaternion(this._yAxisUpSpace)),this._needsUpdate=!0,o||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const h=!o||u4(this._target.x,this._targetEnd.x,this.restThreshold)&&u4(this._target.y,this._targetEnd.y,this.restThreshold)&&u4(this._target.z,this._targetEnd.z,this.restThreshold)&&u4(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&u4(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&u4(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(h)}lerp(t,e,n,s=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=h3.NONE,this._changedDolly=0;const r=$1.set(...t.target);if("spherical"in t)m0.set(...t.spherical);else{const u=a4.set(...t.position);m0.setFromVector3(u.sub(r).applyQuaternion(this._yAxisUpSpace))}const a=u3.set(...e.target);if("spherical"in e)f3.set(...e.spherical);else{const u=a4.set(...e.position);f3.setFromVector3(u.sub(a).applyQuaternion(this._yAxisUpSpace))}this._targetEnd.copy(r.lerp(a,n));const o=f3.theta-m0.theta,c=f3.phi-m0.phi,l=f3.radius-m0.radius;this._sphericalEnd.set(m0.radius+l*n,m0.phi+c*n,m0.theta+o*n),this._needsUpdate=!0,s||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const h=!s||u4(this._target.x,this._targetEnd.x,this.restThreshold)&&u4(this._target.y,this._targetEnd.y,this.restThreshold)&&u4(this._target.z,this._targetEnd.z,this.restThreshold)&&u4(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&u4(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&u4(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(h)}lerpLookAt(t,e,n,s,r,a,o,c,l,h,u,f,d,m=!1){return this.lerp({position:[t,e,n],target:[s,r,a]},{position:[o,c,l],target:[h,u,f]},d,m)}setPosition(t,e,n,s=!1){return this.setLookAt(t,e,n,this._targetEnd.x,this._targetEnd.y,this._targetEnd.z,s)}setTarget(t,e,n,s=!1){const r=this.getPosition($1),a=this.setLookAt(r.x,r.y,r.z,t,e,n,s);return this._sphericalEnd.phi=D0(this._sphericalEnd.phi,this.minPolarAngle,this.maxPolarAngle),a}setFocalOffset(t,e,n,s=!1){this._isUserControllingOffset=!1,this._focalOffsetEnd.set(t,e,n),this._needsUpdate=!0,s||this._focalOffset.copy(this._focalOffsetEnd);const r=!s||u4(this._focalOffset.x,this._focalOffsetEnd.x,this.restThreshold)&&u4(this._focalOffset.y,this._focalOffsetEnd.y,this.restThreshold)&&u4(this._focalOffset.z,this._focalOffsetEnd.z,this.restThreshold);return this._createOnRestPromise(r)}setOrbitPoint(t,e,n){this._camera.updateMatrixWorld(),Y0.setFromMatrixColumn(this._camera.matrixWorldInverse,0),q0.setFromMatrixColumn(this._camera.matrixWorldInverse,1),m5.setFromMatrixColumn(this._camera.matrixWorldInverse,2);const s=$1.set(t,e,n),r=s.distanceTo(this._camera.position),a=s.sub(this._camera.position);Y0.multiplyScalar(a.x),q0.multiplyScalar(a.y),m5.multiplyScalar(a.z),$1.copy(Y0).add(q0).add(m5),$1.z=$1.z+r,this.dollyTo(r,!1),this.setFocalOffset(-$1.x,$1.y,-$1.z,!1),this.moveTo(t,e,n,!1)}setBoundary(t){if(!t){this._boundary.min.set(-1/0,-1/0,-1/0),this._boundary.max.set(1/0,1/0,1/0),this._needsUpdate=!0;return}this._boundary.copy(t),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._needsUpdate=!0}setViewport(t,e,n,s){if(t===null){this._viewport=null;return}this._viewport=this._viewport||new k1.Vector4,typeof t=="number"?this._viewport.set(t,e,n,s):this._viewport.copy(t)}getDistanceToFitBox(t,e,n,s=!1){if(ce(this._camera,"getDistanceToFitBox"))return this._spherical.radius;const r=t/e,a=this._camera.getEffectiveFOV()*o6,o=this._camera.aspect;return((s?r>o:r<o)?e:t/o)*.5/Math.tan(a*.5)+n*.5}getDistanceToFitSphere(t){if(ce(this._camera,"getDistanceToFitSphere"))return this._spherical.radius;const e=this._camera.getEffectiveFOV()*o6,n=Math.atan(Math.tan(e*.5)*this._camera.aspect)*2,s=1<this._camera.aspect?e:n;return t/Math.sin(s*.5)}getTarget(t,e=!0){return(t&&t.isVector3?t:new k1.Vector3).copy(e?this._targetEnd:this._target)}getPosition(t,e=!0){return(t&&t.isVector3?t:new k1.Vector3).setFromSpherical(e?this._sphericalEnd:this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(e?this._targetEnd:this._target)}getSpherical(t,e=!0){return(t||new k1.Spherical).copy(e?this._sphericalEnd:this._spherical)}getFocalOffset(t,e=!0){return(t&&t.isVector3?t:new k1.Vector3).copy(e?this._focalOffsetEnd:this._focalOffset)}normalizeRotations(){return this._sphericalEnd.theta=(this._sphericalEnd.theta%D2+D2)%D2,this._sphericalEnd.theta>Math.PI&&(this._sphericalEnd.theta-=D2),this._spherical.theta+=D2*Math.round((this._sphericalEnd.theta-this._spherical.theta)/D2),this}stop(){this._focalOffset.copy(this._focalOffsetEnd),this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd),this._zoom=this._zoomEnd}reset(t=!1){if(!u4(this._camera.up.x,this._cameraUp0.x)||!u4(this._camera.up.y,this._cameraUp0.y)||!u4(this._camera.up.z,this._cameraUp0.z)){this._camera.up.copy(this._cameraUp0);const n=this.getPosition($1);this.updateCameraUp(),this.setPosition(n.x,n.y,n.z)}const e=[this.setLookAt(this._position0.x,this._position0.y,this._position0.z,this._target0.x,this._target0.y,this._target0.z,t),this.setFocalOffset(this._focalOffset0.x,this._focalOffset0.y,this._focalOffset0.z,t),this.zoomTo(this._zoom0,t)];return Promise.all(e)}saveState(){this._cameraUp0.copy(this._camera.up),this.getTarget(this._target0),this.getPosition(this._position0),this._zoom0=this._zoom,this._focalOffset0.copy(this._focalOffset)}updateCameraUp(){this._yAxisUpSpace.setFromUnitVectors(this._camera.up,p8),this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert()}applyCameraUp(){const t=$1.subVectors(this._target,this._camera.position).normalize(),e=a4.crossVectors(t,this._camera.up);this._camera.up.crossVectors(e,t).normalize(),this._camera.updateMatrixWorld();const n=this.getPosition($1);this.updateCameraUp(),this.setPosition(n.x,n.y,n.z)}update(t){const e=this._sphericalEnd.theta-this._spherical.theta,n=this._sphericalEnd.phi-this._spherical.phi,s=this._sphericalEnd.radius-this._spherical.radius,r=ar.subVectors(this._targetEnd,this._target),a=or.subVectors(this._focalOffsetEnd,this._focalOffset),o=this._zoomEnd-this._zoom;if(y4(e))this._thetaVelocity.value=0,this._spherical.theta=this._sphericalEnd.theta;else{const u=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.theta=f8(this._spherical.theta,this._sphericalEnd.theta,this._thetaVelocity,u,1/0,t),this._needsUpdate=!0}if(y4(n))this._phiVelocity.value=0,this._spherical.phi=this._sphericalEnd.phi;else{const u=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.phi=f8(this._spherical.phi,this._sphericalEnd.phi,this._phiVelocity,u,1/0,t),this._needsUpdate=!0}if(y4(s))this._radiusVelocity.value=0,this._spherical.radius=this._sphericalEnd.radius;else{const u=this._isUserControllingDolly?this.draggingSmoothTime:this.smoothTime;this._spherical.radius=f8(this._spherical.radius,this._sphericalEnd.radius,this._radiusVelocity,u,this.maxSpeed,t),this._needsUpdate=!0}if(y4(r.x)&&y4(r.y)&&y4(r.z))this._targetVelocity.set(0,0,0),this._target.copy(this._targetEnd);else{const u=this._isUserControllingTruck?this.draggingSmoothTime:this.smoothTime;sr(this._target,this._targetEnd,this._targetVelocity,u,this.maxSpeed,t,this._target),this._needsUpdate=!0}if(y4(a.x)&&y4(a.y)&&y4(a.z))this._focalOffsetVelocity.set(0,0,0),this._focalOffset.copy(this._focalOffsetEnd);else{const u=this._isUserControllingOffset?this.draggingSmoothTime:this.smoothTime;sr(this._focalOffset,this._focalOffsetEnd,this._focalOffsetVelocity,u,this.maxSpeed,t,this._focalOffset),this._needsUpdate=!0}if(y4(o))this._zoomVelocity.value=0,this._zoom=this._zoomEnd;else{const u=this._isUserControllingZoom?this.draggingSmoothTime:this.smoothTime;this._zoom=f8(this._zoom,this._zoomEnd,this._zoomVelocity,u,1/0,t)}if(this.dollyToCursor){if(p5(this._camera)&&this._changedDolly!==0){const u=this._spherical.radius-this._lastDistance,f=this._camera,d=this._getCameraDirection(h6),m=$1.copy(d).cross(f.up).normalize();m.lengthSq()===0&&(m.x=1);const _=a4.crossVectors(m,d),g=this._sphericalEnd.radius*Math.tan(f.getEffectiveFOV()*o6*.5),y=(this._sphericalEnd.radius-u-this._sphericalEnd.radius)/this._sphericalEnd.radius,v=u3.copy(this._targetEnd).add(m.multiplyScalar(this._dollyControlCoord.x*g*f.aspect)).add(_.multiplyScalar(this._dollyControlCoord.y*g)),x=$1.copy(this._targetEnd).lerp(v,y),T=this._lastDollyDirection===h3.IN&&this._spherical.radius<=this.minDistance,E=this._lastDollyDirection===h3.OUT&&this.maxDistance<=this._spherical.radius;if(this.infinityDolly&&(T||E)){this._sphericalEnd.radius-=u,this._spherical.radius-=u;const I=a4.copy(d).multiplyScalar(-u);x.add(I)}this._boundary.clampPoint(x,x);const A=a4.subVectors(x,this._targetEnd);this._targetEnd.copy(x),this._target.add(A),this._changedDolly-=u,y4(this._changedDolly)&&(this._changedDolly=0)}else if(U2(this._camera)&&this._changedZoom!==0){const u=this._zoom-this._lastZoom,f=this._camera,d=$1.set(this._dollyControlCoord.x,this._dollyControlCoord.y,(f.near+f.far)/(f.near-f.far)).unproject(f),m=a4.set(0,0,-1).applyQuaternion(f.quaternion),_=u3.copy(d).add(m.multiplyScalar(-d.dot(f.up))),p=-(this._zoom-u-this._zoom)/this._zoom,y=this._getCameraDirection(h6),v=this._targetEnd.dot(y),x=$1.copy(this._targetEnd).lerp(_,p),T=x.dot(y),E=y.multiplyScalar(T-v);x.sub(E),this._boundary.clampPoint(x,x);const A=a4.subVectors(x,this._targetEnd);this._targetEnd.copy(x),this._target.add(A),this._changedZoom-=u,y4(this._changedZoom)&&(this._changedZoom=0)}}this._camera.zoom!==this._zoom&&(this._camera.zoom=this._zoom,this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0),this._dragNeedsUpdate=!0;const c=this._collisionTest();this._spherical.radius=Math.min(this._spherical.radius,c),this._spherical.makeSafe(),this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target),this._camera.lookAt(this._target),(!y4(this._focalOffset.x)||!y4(this._focalOffset.y)||!y4(this._focalOffset.z))&&(Y0.setFromMatrixColumn(this._camera.matrix,0),q0.setFromMatrixColumn(this._camera.matrix,1),m5.setFromMatrixColumn(this._camera.matrix,2),Y0.multiplyScalar(this._focalOffset.x),q0.multiplyScalar(-this._focalOffset.y),m5.multiplyScalar(this._focalOffset.z),$1.copy(Y0).add(q0).add(m5),this._camera.position.add($1),this._camera.updateMatrixWorld()),this._boundaryEnclosesCamera&&this._encloseToBoundary(this._camera.position.copy(this._target),$1.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse),1);const h=this._needsUpdate;return h&&!this._updatedLastTime?(this._hasRested=!1,this.dispatchEvent({type:"wake"}),this.dispatchEvent({type:"update"})):h?(this.dispatchEvent({type:"update"}),y4(e,this.restThreshold)&&y4(n,this.restThreshold)&&y4(s,this.restThreshold)&&y4(r.x,this.restThreshold)&&y4(r.y,this.restThreshold)&&y4(r.z,this.restThreshold)&&y4(a.x,this.restThreshold)&&y4(a.y,this.restThreshold)&&y4(a.z,this.restThreshold)&&y4(o,this.restThreshold)&&!this._hasRested&&(this._hasRested=!0,this.dispatchEvent({type:"rest"}))):!h&&this._updatedLastTime&&this.dispatchEvent({type:"sleep"}),this._lastDistance=this._spherical.radius,this._lastZoom=this._zoom,this._updatedLastTime=h,this._needsUpdate=!1,h}toJSON(){return JSON.stringify({enabled:this._enabled,minDistance:this.minDistance,maxDistance:c6(this.maxDistance),minZoom:this.minZoom,maxZoom:c6(this.maxZoom),minPolarAngle:this.minPolarAngle,maxPolarAngle:c6(this.maxPolarAngle),minAzimuthAngle:c6(this.minAzimuthAngle),maxAzimuthAngle:c6(this.maxAzimuthAngle),smoothTime:this.smoothTime,draggingSmoothTime:this.draggingSmoothTime,dollySpeed:this.dollySpeed,truckSpeed:this.truckSpeed,dollyToCursor:this.dollyToCursor,target:this._targetEnd.toArray(),position:$1.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),zoom:this._zoomEnd,focalOffset:this._focalOffsetEnd.toArray(),target0:this._target0.toArray(),position0:this._position0.toArray(),zoom0:this._zoom0,focalOffset0:this._focalOffset0.toArray()})}fromJSON(t,e=!1){const n=JSON.parse(t);this.enabled=n.enabled,this.minDistance=n.minDistance,this.maxDistance=l6(n.maxDistance),this.minZoom=n.minZoom,this.maxZoom=l6(n.maxZoom),this.minPolarAngle=n.minPolarAngle,this.maxPolarAngle=l6(n.maxPolarAngle),this.minAzimuthAngle=l6(n.minAzimuthAngle),this.maxAzimuthAngle=l6(n.maxAzimuthAngle),this.smoothTime=n.smoothTime,this.draggingSmoothTime=n.draggingSmoothTime,this.dollySpeed=n.dollySpeed,this.truckSpeed=n.truckSpeed,this.dollyToCursor=n.dollyToCursor,this._target0.fromArray(n.target0),this._position0.fromArray(n.position0),this._zoom0=n.zoom0,this._focalOffset0.fromArray(n.focalOffset0),this.moveTo(n.target[0],n.target[1],n.target[2],e),m0.setFromVector3($1.fromArray(n.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)),this.rotateTo(m0.theta,m0.phi,e),this.dollyTo(m0.radius,e),this.zoomTo(n.zoom,e),this.setFocalOffset(n.focalOffset[0],n.focalOffset[1],n.focalOffset[2],e),this._needsUpdate=!0}connect(t){if(this._domElement){console.warn("camera-controls is already connected.");return}t.setAttribute("data-camera-controls-version",jv),this._addAllEventListeners(t),this._getClientRect(this._elementRect)}disconnect(){this.cancel(),this._removeAllEventListeners(),this._domElement&&(this._domElement.removeAttribute("data-camera-controls-version"),this._domElement=void 0)}dispose(){this.removeAllEventListeners(),this.disconnect()}_getTargetDirection(t){return t.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse)}_getCameraDirection(t){return this._getTargetDirection(t).negate()}_findPointerById(t){return this._activePointers.find(e=>e.pointerId===t)}_findPointerByMouseButton(t){return this._activePointers.find(e=>e.mouseButton===t)}_disposePointer(t){this._activePointers.splice(this._activePointers.indexOf(t),1)}_encloseToBoundary(t,e,n){const s=e.lengthSq();if(s===0)return t;const r=a4.copy(e).add(t),o=this._boundary.clampPoint(r,u3).sub(r),c=o.lengthSq();if(c===0)return t.add(e);if(c===s)return t;if(n===0)return t.add(e).add(o);{const l=1+n*c/e.dot(o);return t.add(a4.copy(e).multiplyScalar(l)).add(o.multiplyScalar(1-n))}}_updateNearPlaneCorners(){if(p5(this._camera)){const t=this._camera,e=t.near,n=t.getEffectiveFOV()*o6,s=Math.tan(n*.5)*e,r=s*t.aspect;this._nearPlaneCorners[0].set(-r,-s,0),this._nearPlaneCorners[1].set(r,-s,0),this._nearPlaneCorners[2].set(r,s,0),this._nearPlaneCorners[3].set(-r,s,0)}else if(U2(this._camera)){const t=this._camera,e=1/t.zoom,n=t.left*e,s=t.right*e,r=t.top*e,a=t.bottom*e;this._nearPlaneCorners[0].set(n,r,0),this._nearPlaneCorners[1].set(s,r,0),this._nearPlaneCorners[2].set(s,a,0),this._nearPlaneCorners[3].set(n,a,0)}}_collisionTest(){let t=1/0;if(!(this.colliderMeshes.length>=1)||ce(this._camera,"_collisionTest"))return t;const n=this._getTargetDirection(h6);de.lookAt(rr,n,this._camera.up);for(let s=0;s<4;s++){const r=a4.copy(this._nearPlaneCorners[s]);r.applyMatrix4(de);const a=u3.addVectors(this._target,r);m8.set(a,n),m8.far=this._spherical.radius+1;const o=m8.intersectObjects(this.colliderMeshes);o.length!==0&&o[0].distance<t&&(t=o[0].distance)}return t}_getClientRect(t){if(!this._domElement)return;const e=this._domElement.getBoundingClientRect();return t.x=e.left,t.y=e.top,this._viewport?(t.x+=this._viewport.x,t.y+=e.height-this._viewport.w-this._viewport.y,t.width=this._viewport.z,t.height=this._viewport.w):(t.width=e.width,t.height=e.height),t}_createOnRestPromise(t){return t?Promise.resolve():(this._hasRested=!1,this.dispatchEvent({type:"transitionstart"}),new Promise(e=>{const n=()=>{this.removeEventListener("rest",n),e()};this.addEventListener("rest",n)}))}_addAllEventListeners(t){}_removeAllEventListeners(){}get dampingFactor(){return console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead."),0}set dampingFactor(t){console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.")}get draggingDampingFactor(){return console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead."),0}set draggingDampingFactor(t){console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.")}static createBoundingSphere(t,e=new k1.Sphere){const n=e,s=n.center;d3.makeEmpty(),t.traverseVisible(a=>{a.isMesh&&d3.expandByObject(a)}),d3.getCenter(s);let r=0;return t.traverseVisible(a=>{if(!a.isMesh)return;const o=a;if(!o.geometry)return;const c=o.geometry.clone();c.applyMatrix4(o.matrixWorld);const h=c.attributes.position;for(let u=0,f=h.count;u<f;u++)$1.fromBufferAttribute(h,u),r=Math.max(r,s.distanceToSquared($1))}),n.radius=Math.sqrt(r),n}}var ey={value:()=>{}};function rc(){for(var i=0,t=arguments.length,e={},n;i<t;++i){if(!(n=arguments[i]+"")||n in e||/[\s.]/.test(n))throw new Error("illegal type: "+n);e[n]=[]}return new v8(e)}function v8(i){this._=i}function ny(i,t){return i.trim().split(/^|\s+/).map(function(e){var n="",s=e.indexOf(".");if(s>=0&&(n=e.slice(s+1),e=e.slice(0,s)),e&&!t.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:n}})}v8.prototype=rc.prototype={constructor:v8,on:function(i,t){var e=this._,n=ny(i+"",e),s,r=-1,a=n.length;if(arguments.length<2){for(;++r<a;)if((s=(i=n[r]).type)&&(s=iy(e[s],i.name)))return s;return}if(t!=null&&typeof t!="function")throw new Error("invalid callback: "+t);for(;++r<a;)if(s=(i=n[r]).type)e[s]=hr(e[s],i.name,t);else if(t==null)for(s in e)e[s]=hr(e[s],i.name,null);return this},copy:function(){var i={},t=this._;for(var e in t)i[e]=t[e].slice();return new v8(i)},call:function(i,t){if((s=arguments.length-2)>0)for(var e=new Array(s),n=0,s,r;n<s;++n)e[n]=arguments[n+2];if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(r=this._[i],n=0,s=r.length;n<s;++n)r[n].value.apply(t,e)},apply:function(i,t,e){if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(var n=this._[i],s=0,r=n.length;s<r;++s)n[s].value.apply(t,e)}};function iy(i,t){for(var e=0,n=i.length,s;e<n;++e)if((s=i[e]).name===t)return s.value}function hr(i,t,e){for(var n=0,s=i.length;n<s;++n)if(i[n].name===t){i[n]=ey,i=i.slice(0,n).concat(i.slice(n+1));break}return e!=null&&i.push({name:t,value:e}),i}var Be="http://www.w3.org/1999/xhtml";const ur={svg:"http://www.w3.org/2000/svg",xhtml:Be,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function ct(i){var t=i+="",e=t.indexOf(":");return e>=0&&(t=i.slice(0,e))!=="xmlns"&&(i=i.slice(e+1)),ur.hasOwnProperty(t)?{space:ur[t],local:i}:i}function sy(i){return function(){var t=this.ownerDocument,e=this.namespaceURI;return e===Be&&t.documentElement.namespaceURI===Be?t.createElement(i):t.createElementNS(e,i)}}function ry(i){return function(){return this.ownerDocument.createElementNS(i.space,i.local)}}function ac(i){var t=ct(i);return(t.local?ry:sy)(t)}function ay(){}function Gn(i){return i==null?ay:function(){return this.querySelector(i)}}function oy(i){typeof i!="function"&&(i=Gn(i));for(var t=this._groups,e=t.length,n=new Array(e),s=0;s<e;++s)for(var r=t[s],a=r.length,o=n[s]=new Array(a),c,l,h=0;h<a;++h)(c=r[h])&&(l=i.call(c,c.__data__,h,r))&&("__data__"in c&&(l.__data__=c.__data__),o[h]=l);return new k0(n,this._parents)}function cy(i){return i==null?[]:Array.isArray(i)?i:Array.from(i)}function ly(){return[]}function oc(i){return i==null?ly:function(){return this.querySelectorAll(i)}}function hy(i){return function(){return cy(i.apply(this,arguments))}}function uy(i){typeof i=="function"?i=hy(i):i=oc(i);for(var t=this._groups,e=t.length,n=[],s=[],r=0;r<e;++r)for(var a=t[r],o=a.length,c,l=0;l<o;++l)(c=a[l])&&(n.push(i.call(c,c.__data__,l,a)),s.push(c));return new k0(n,s)}function cc(i){return function(){return this.matches(i)}}function lc(i){return function(t){return t.matches(i)}}var fy=Array.prototype.find;function dy(i){return function(){return fy.call(this.children,i)}}function py(){return this.firstElementChild}function my(i){return this.select(i==null?py:dy(typeof i=="function"?i:lc(i)))}var gy=Array.prototype.filter;function _y(){return Array.from(this.children)}function xy(i){return function(){return gy.call(this.children,i)}}function vy(i){return this.selectAll(i==null?_y:xy(typeof i=="function"?i:lc(i)))}function yy(i){typeof i!="function"&&(i=cc(i));for(var t=this._groups,e=t.length,n=new Array(e),s=0;s<e;++s)for(var r=t[s],a=r.length,o=n[s]=[],c,l=0;l<a;++l)(c=r[l])&&i.call(c,c.__data__,l,r)&&o.push(c);return new k0(n,this._parents)}function hc(i){return new Array(i.length)}function by(){return new k0(this._enter||this._groups.map(hc),this._parents)}function _9(i,t){this.ownerDocument=i.ownerDocument,this.namespaceURI=i.namespaceURI,this._next=null,this._parent=i,this.__data__=t}_9.prototype={constructor:_9,appendChild:function(i){return this._parent.insertBefore(i,this._next)},insertBefore:function(i,t){return this._parent.insertBefore(i,t)},querySelector:function(i){return this._parent.querySelector(i)},querySelectorAll:function(i){return this._parent.querySelectorAll(i)}};function My(i){return function(){return i}}function Sy(i,t,e,n,s,r){for(var a=0,o,c=t.length,l=r.length;a<l;++a)(o=t[a])?(o.__data__=r[a],n[a]=o):e[a]=new _9(i,r[a]);for(;a<c;++a)(o=t[a])&&(s[a]=o)}function Ey(i,t,e,n,s,r,a){var o,c,l=new Map,h=t.length,u=r.length,f=new Array(h),d;for(o=0;o<h;++o)(c=t[o])&&(f[o]=d=a.call(c,c.__data__,o,t)+"",l.has(d)?s[o]=c:l.set(d,c));for(o=0;o<u;++o)d=a.call(i,r[o],o,r)+"",(c=l.get(d))?(n[o]=c,c.__data__=r[o],l.delete(d)):e[o]=new _9(i,r[o]);for(o=0;o<h;++o)(c=t[o])&&l.get(f[o])===c&&(s[o]=c)}function Ty(i){return i.__data__}function wy(i,t){if(!arguments.length)return Array.from(this,Ty);var e=t?Ey:Sy,n=this._parents,s=this._groups;typeof i!="function"&&(i=My(i));for(var r=s.length,a=new Array(r),o=new Array(r),c=new Array(r),l=0;l<r;++l){var h=n[l],u=s[l],f=u.length,d=Ay(i.call(h,h&&h.__data__,l,n)),m=d.length,_=o[l]=new Array(m),g=a[l]=new Array(m),p=c[l]=new Array(f);e(h,u,_,g,p,d,t);for(var y=0,v=0,x,T;y<m;++y)if(x=_[y]){for(y>=v&&(v=y+1);!(T=g[v])&&++v<m;);x._next=T||null}}return a=new k0(a,n),a._enter=o,a._exit=c,a}function Ay(i){return typeof i=="object"&&"length"in i?i:Array.from(i)}function Cy(){return new k0(this._exit||this._groups.map(hc),this._parents)}function Ry(i,t,e){var n=this.enter(),s=this,r=this.exit();return typeof i=="function"?(n=i(n),n&&(n=n.selection())):n=n.append(i+""),t!=null&&(s=t(s),s&&(s=s.selection())),e==null?r.remove():e(r),n&&s?n.merge(s).order():s}function Iy(i){for(var t=i.selection?i.selection():i,e=this._groups,n=t._groups,s=e.length,r=n.length,a=Math.min(s,r),o=new Array(s),c=0;c<a;++c)for(var l=e[c],h=n[c],u=l.length,f=o[c]=new Array(u),d,m=0;m<u;++m)(d=l[m]||h[m])&&(f[m]=d);for(;c<s;++c)o[c]=e[c];return new k0(o,this._parents)}function Py(){for(var i=this._groups,t=-1,e=i.length;++t<e;)for(var n=i[t],s=n.length-1,r=n[s],a;--s>=0;)(a=n[s])&&(r&&a.compareDocumentPosition(r)^4&&r.parentNode.insertBefore(a,r),r=a);return this}function Ly(i){i||(i=Dy);function t(u,f){return u&&f?i(u.__data__,f.__data__):!u-!f}for(var e=this._groups,n=e.length,s=new Array(n),r=0;r<n;++r){for(var a=e[r],o=a.length,c=s[r]=new Array(o),l,h=0;h<o;++h)(l=a[h])&&(c[h]=l);c.sort(t)}return new k0(s,this._parents).order()}function Dy(i,t){return i<t?-1:i>t?1:i>=t?0:NaN}function Uy(){var i=arguments[0];return arguments[0]=this,i.apply(null,arguments),this}function Oy(){return Array.from(this)}function Ny(){for(var i=this._groups,t=0,e=i.length;t<e;++t)for(var n=i[t],s=0,r=n.length;s<r;++s){var a=n[s];if(a)return a}return null}function Fy(){let i=0;for(const t of this)++i;return i}function By(){return!this.node()}function zy(i){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var s=t[e],r=0,a=s.length,o;r<a;++r)(o=s[r])&&i.call(o,o.__data__,r,s);return this}function ky(i){return function(){this.removeAttribute(i)}}function Vy(i){return function(){this.removeAttributeNS(i.space,i.local)}}function Hy(i,t){return function(){this.setAttribute(i,t)}}function Gy(i,t){return function(){this.setAttributeNS(i.space,i.local,t)}}function Wy(i,t){return function(){var e=t.apply(this,arguments);e==null?this.removeAttribute(i):this.setAttribute(i,e)}}function Xy(i,t){return function(){var e=t.apply(this,arguments);e==null?this.removeAttributeNS(i.space,i.local):this.setAttributeNS(i.space,i.local,e)}}function Yy(i,t){var e=ct(i);if(arguments.length<2){var n=this.node();return e.local?n.getAttributeNS(e.space,e.local):n.getAttribute(e)}return this.each((t==null?e.local?Vy:ky:typeof t=="function"?e.local?Xy:Wy:e.local?Gy:Hy)(e,t))}function uc(i){return i.ownerDocument&&i.ownerDocument.defaultView||i.document&&i||i.defaultView}function qy(i){return function(){this.style.removeProperty(i)}}function Zy(i,t,e){return function(){this.style.setProperty(i,t,e)}}function $y(i,t,e){return function(){var n=t.apply(this,arguments);n==null?this.style.removeProperty(i):this.style.setProperty(i,n,e)}}function Jy(i,t,e){return arguments.length>1?this.each((t==null?qy:typeof t=="function"?$y:Zy)(i,t,e??"")):F3(this.node(),i)}function F3(i,t){return i.style.getPropertyValue(t)||uc(i).getComputedStyle(i,null).getPropertyValue(t)}function Ky(i){return function(){delete this[i]}}function Qy(i,t){return function(){this[i]=t}}function jy(i,t){return function(){var e=t.apply(this,arguments);e==null?delete this[i]:this[i]=e}}function tb(i,t){return arguments.length>1?this.each((t==null?Ky:typeof t=="function"?jy:Qy)(i,t)):this.node()[i]}function fc(i){return i.trim().split(/^|\s+/)}function Wn(i){return i.classList||new dc(i)}function dc(i){this._node=i,this._names=fc(i.getAttribute("class")||"")}dc.prototype={add:function(i){var t=this._names.indexOf(i);t<0&&(this._names.push(i),this._node.setAttribute("class",this._names.join(" ")))},remove:function(i){var t=this._names.indexOf(i);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(i){return this._names.indexOf(i)>=0}};function pc(i,t){for(var e=Wn(i),n=-1,s=t.length;++n<s;)e.add(t[n])}function mc(i,t){for(var e=Wn(i),n=-1,s=t.length;++n<s;)e.remove(t[n])}function eb(i){return function(){pc(this,i)}}function nb(i){return function(){mc(this,i)}}function ib(i,t){return function(){(t.apply(this,arguments)?pc:mc)(this,i)}}function sb(i,t){var e=fc(i+"");if(arguments.length<2){for(var n=Wn(this.node()),s=-1,r=e.length;++s<r;)if(!n.contains(e[s]))return!1;return!0}return this.each((typeof t=="function"?ib:t?eb:nb)(e,t))}function rb(){this.textContent=""}function ab(i){return function(){this.textContent=i}}function ob(i){return function(){var t=i.apply(this,arguments);this.textContent=t??""}}function cb(i){return arguments.length?this.each(i==null?rb:(typeof i=="function"?ob:ab)(i)):this.node().textContent}function lb(){this.innerHTML=""}function hb(i){return function(){this.innerHTML=i}}function ub(i){return function(){var t=i.apply(this,arguments);this.innerHTML=t??""}}function fb(i){return arguments.length?this.each(i==null?lb:(typeof i=="function"?ub:hb)(i)):this.node().innerHTML}function db(){this.nextSibling&&this.parentNode.appendChild(this)}function pb(){return this.each(db)}function mb(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function gb(){return this.each(mb)}function _b(i){var t=typeof i=="function"?i:ac(i);return this.select(function(){return this.appendChild(t.apply(this,arguments))})}function xb(){return null}function vb(i,t){var e=typeof i=="function"?i:ac(i),n=t==null?xb:typeof t=="function"?t:Gn(t);return this.select(function(){return this.insertBefore(e.apply(this,arguments),n.apply(this,arguments)||null)})}function yb(){var i=this.parentNode;i&&i.removeChild(this)}function bb(){return this.each(yb)}function Mb(){var i=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(i,this.nextSibling):i}function Sb(){var i=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(i,this.nextSibling):i}function Eb(i){return this.select(i?Sb:Mb)}function Tb(i){return arguments.length?this.property("__data__",i):this.node().__data__}function wb(i){return function(t){i.call(this,t,this.__data__)}}function Ab(i){return i.trim().split(/^|\s+/).map(function(t){var e="",n=t.indexOf(".");return n>=0&&(e=t.slice(n+1),t=t.slice(0,n)),{type:t,name:e}})}function Cb(i){return function(){var t=this.__on;if(t){for(var e=0,n=-1,s=t.length,r;e<s;++e)r=t[e],(!i.type||r.type===i.type)&&r.name===i.name?this.removeEventListener(r.type,r.listener,r.options):t[++n]=r;++n?t.length=n:delete this.__on}}}function Rb(i,t,e){return function(){var n=this.__on,s,r=wb(t);if(n){for(var a=0,o=n.length;a<o;++a)if((s=n[a]).type===i.type&&s.name===i.name){this.removeEventListener(s.type,s.listener,s.options),this.addEventListener(s.type,s.listener=r,s.options=e),s.value=t;return}}this.addEventListener(i.type,r,e),s={type:i.type,name:i.name,value:t,listener:r,options:e},n?n.push(s):this.__on=[s]}}function Ib(i,t,e){var n=Ab(i+""),s,r=n.length,a;if(arguments.length<2){var o=this.node().__on;if(o){for(var c=0,l=o.length,h;c<l;++c)for(s=0,h=o[c];s<r;++s)if((a=n[s]).type===h.type&&a.name===h.name)return h.value}return}for(o=t?Rb:Cb,s=0;s<r;++s)this.each(o(n[s],t,e));return this}function gc(i,t,e){var n=uc(i),s=n.CustomEvent;typeof s=="function"?s=new s(t,e):(s=n.document.createEvent("Event"),e?(s.initEvent(t,e.bubbles,e.cancelable),s.detail=e.detail):s.initEvent(t,!1,!1)),i.dispatchEvent(s)}function Pb(i,t){return function(){return gc(this,i,t)}}function Lb(i,t){return function(){return gc(this,i,t.apply(this,arguments))}}function Db(i,t){return this.each((typeof t=="function"?Lb:Pb)(i,t))}function*Ub(){for(var i=this._groups,t=0,e=i.length;t<e;++t)for(var n=i[t],s=0,r=n.length,a;s<r;++s)(a=n[s])&&(yield a)}var Ob=[null];function k0(i,t){this._groups=i,this._parents=t}function f7(){return new k0([[document.documentElement]],Ob)}function Nb(){return this}k0.prototype=f7.prototype={constructor:k0,select:oy,selectAll:uy,selectChild:my,selectChildren:vy,filter:yy,data:wy,enter:by,exit:Cy,join:Ry,merge:Iy,selection:Nb,order:Py,sort:Ly,call:Uy,nodes:Oy,node:Ny,size:Fy,empty:By,each:zy,attr:Yy,style:Jy,property:tb,classed:sb,text:cb,html:fb,raise:pb,lower:gb,append:_b,insert:vb,remove:bb,clone:Eb,datum:Tb,on:Ib,dispatch:Db,[Symbol.iterator]:Ub};var B3=0,g6=0,u6=0,_c=1e3,x9,_6,v9=0,N5=0,lt=0,j6=typeof performance=="object"&&performance.now?performance:Date,xc=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(i){setTimeout(i,17)};function Xn(){return N5||(xc(Fb),N5=j6.now()+lt)}function Fb(){N5=0}function y9(){this._call=this._time=this._next=null}y9.prototype=vc.prototype={constructor:y9,restart:function(i,t,e){if(typeof i!="function")throw new TypeError("callback is not a function");e=(e==null?Xn():+e)+(t==null?0:+t),!this._next&&_6!==this&&(_6?_6._next=this:x9=this,_6=this),this._call=i,this._time=e,ze()},stop:function(){this._call&&(this._call=null,this._time=1/0,ze())}};function vc(i,t,e){var n=new y9;return n.restart(i,t,e),n}function Bb(){Xn(),++B3;for(var i=x9,t;i;)(t=N5-i._time)>=0&&i._call.call(void 0,t),i=i._next;--B3}function fr(){N5=(v9=j6.now())+lt,B3=g6=0;try{Bb()}finally{B3=0,kb(),N5=0}}function zb(){var i=j6.now(),t=i-v9;t>_c&&(lt-=t,v9=i)}function kb(){for(var i,t=x9,e,n=1/0;t;)t._call?(n>t._time&&(n=t._time),i=t,t=t._next):(e=t._next,t._next=null,t=i?i._next=e:x9=e);_6=i,ze(n)}function ze(i){if(!B3){g6&&(g6=clearTimeout(g6));var t=i-N5;t>24?(i<1/0&&(g6=setTimeout(fr,i-j6.now()-lt)),u6&&(u6=clearInterval(u6))):(u6||(v9=j6.now(),u6=setInterval(zb,_c)),B3=1,xc(fr))}}function dr(i,t,e){var n=new y9;return t=t==null?0:+t,n.restart(s=>{n.stop(),i(s+t)},t,e),n}var Vb=rc("start","end","cancel","interrupt"),Hb=[],yc=0,pr=1,ke=2,y8=3,mr=4,Ve=5,b8=6;function ht(i,t,e,n,s,r){var a=i.__transition;if(!a)i.__transition={};else if(e in a)return;Gb(i,e,{name:t,index:n,group:s,on:Vb,tween:Hb,time:r.time,delay:r.delay,duration:r.duration,ease:r.ease,timer:null,state:yc})}function Yn(i,t){var e=H0(i,t);if(e.state>yc)throw new Error("too late; already scheduled");return e}function r2(i,t){var e=H0(i,t);if(e.state>y8)throw new Error("too late; already running");return e}function H0(i,t){var e=i.__transition;if(!e||!(e=e[t]))throw new Error("transition not found");return e}function Gb(i,t,e){var n=i.__transition,s;n[t]=e,e.timer=vc(r,0,e.time);function r(l){e.state=pr,e.timer.restart(a,e.delay,e.time),e.delay<=l&&a(l-e.delay)}function a(l){var h,u,f,d;if(e.state!==pr)return c();for(h in n)if(d=n[h],d.name===e.name){if(d.state===y8)return dr(a);d.state===mr?(d.state=b8,d.timer.stop(),d.on.call("interrupt",i,i.__data__,d.index,d.group),delete n[h]):+h<t&&(d.state=b8,d.timer.stop(),d.on.call("cancel",i,i.__data__,d.index,d.group),delete n[h])}if(dr(function(){e.state===y8&&(e.state=mr,e.timer.restart(o,e.delay,e.time),o(l))}),e.state=ke,e.on.call("start",i,i.__data__,e.index,e.group),e.state===ke){for(e.state=y8,s=new Array(f=e.tween.length),h=0,u=-1;h<f;++h)(d=e.tween[h].value.call(i,i.__data__,e.index,e.group))&&(s[++u]=d);s.length=u+1}}function o(l){for(var h=l<e.duration?e.ease.call(null,l/e.duration):(e.timer.restart(c),e.state=Ve,1),u=-1,f=s.length;++u<f;)s[u].call(i,h);e.state===Ve&&(e.on.call("end",i,i.__data__,e.index,e.group),c())}function c(){e.state=b8,e.timer.stop(),delete n[t];for(var l in n)return;delete i.__transition}}function Wb(i,t){var e=i.__transition,n,s,r=!0,a;if(e){t=t==null?null:t+"";for(a in e){if((n=e[a]).name!==t){r=!1;continue}s=n.state>ke&&n.state<Ve,n.state=b8,n.timer.stop(),n.on.call(s?"interrupt":"cancel",i,i.__data__,n.index,n.group),delete e[a]}r&&delete i.__transition}}function Xb(i){return this.each(function(){Wb(this,i)})}function Yb(i,t){var e,n;return function(){var s=r2(this,i),r=s.tween;if(r!==e){n=e=r;for(var a=0,o=n.length;a<o;++a)if(n[a].name===t){n=n.slice(),n.splice(a,1);break}}s.tween=n}}function qb(i,t,e){var n,s;if(typeof e!="function")throw new Error;return function(){var r=r2(this,i),a=r.tween;if(a!==n){s=(n=a).slice();for(var o={name:t,value:e},c=0,l=s.length;c<l;++c)if(s[c].name===t){s[c]=o;break}c===l&&s.push(o)}r.tween=s}}function Zb(i,t){var e=this._id;if(i+="",arguments.length<2){for(var n=H0(this.node(),e).tween,s=0,r=n.length,a;s<r;++s)if((a=n[s]).name===i)return a.value;return null}return this.each((t==null?Yb:qb)(e,i,t))}function qn(i,t,e){var n=i._id;return i.each(function(){var s=r2(this,n);(s.value||(s.value={}))[t]=e.apply(this,arguments)}),function(s){return H0(s,n).value[t]}}function bc(i,t){var e;return(typeof t=="number"?N2:t instanceof L6?Ei:(e=L6(t))?(t=e,Ei):uh)(i,t)}function $b(i){return function(){this.removeAttribute(i)}}function Jb(i){return function(){this.removeAttributeNS(i.space,i.local)}}function Kb(i,t,e){var n,s=e+"",r;return function(){var a=this.getAttribute(i);return a===s?null:a===n?r:r=t(n=a,e)}}function Qb(i,t,e){var n,s=e+"",r;return function(){var a=this.getAttributeNS(i.space,i.local);return a===s?null:a===n?r:r=t(n=a,e)}}function jb(i,t,e){var n,s,r;return function(){var a,o=e(this),c;return o==null?void this.removeAttribute(i):(a=this.getAttribute(i),c=o+"",a===c?null:a===n&&c===s?r:(s=c,r=t(n=a,o)))}}function tM(i,t,e){var n,s,r;return function(){var a,o=e(this),c;return o==null?void this.removeAttributeNS(i.space,i.local):(a=this.getAttributeNS(i.space,i.local),c=o+"",a===c?null:a===n&&c===s?r:(s=c,r=t(n=a,o)))}}function eM(i,t){var e=ct(i),n=e==="transform"?mh:bc;return this.attrTween(i,typeof t=="function"?(e.local?tM:jb)(e,n,qn(this,"attr."+i,t)):t==null?(e.local?Jb:$b)(e):(e.local?Qb:Kb)(e,n,t))}function nM(i,t){return function(e){this.setAttribute(i,t.call(this,e))}}function iM(i,t){return function(e){this.setAttributeNS(i.space,i.local,t.call(this,e))}}function sM(i,t){var e,n;function s(){var r=t.apply(this,arguments);return r!==n&&(e=(n=r)&&iM(i,r)),e}return s._value=t,s}function rM(i,t){var e,n;function s(){var r=t.apply(this,arguments);return r!==n&&(e=(n=r)&&nM(i,r)),e}return s._value=t,s}function aM(i,t){var e="attr."+i;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;var n=ct(i);return this.tween(e,(n.local?sM:rM)(n,t))}function oM(i,t){return function(){Yn(this,i).delay=+t.apply(this,arguments)}}function cM(i,t){return t=+t,function(){Yn(this,i).delay=t}}function lM(i){var t=this._id;return arguments.length?this.each((typeof i=="function"?oM:cM)(t,i)):H0(this.node(),t).delay}function hM(i,t){return function(){r2(this,i).duration=+t.apply(this,arguments)}}function uM(i,t){return t=+t,function(){r2(this,i).duration=t}}function fM(i){var t=this._id;return arguments.length?this.each((typeof i=="function"?hM:uM)(t,i)):H0(this.node(),t).duration}function dM(i,t){if(typeof t!="function")throw new Error;return function(){r2(this,i).ease=t}}function pM(i){var t=this._id;return arguments.length?this.each(dM(t,i)):H0(this.node(),t).ease}function mM(i,t){return function(){var e=t.apply(this,arguments);if(typeof e!="function")throw new Error;r2(this,i).ease=e}}function gM(i){if(typeof i!="function")throw new Error;return this.each(mM(this._id,i))}function _M(i){typeof i!="function"&&(i=cc(i));for(var t=this._groups,e=t.length,n=new Array(e),s=0;s<e;++s)for(var r=t[s],a=r.length,o=n[s]=[],c,l=0;l<a;++l)(c=r[l])&&i.call(c,c.__data__,l,r)&&o.push(c);return new E2(n,this._parents,this._name,this._id)}function xM(i){if(i._id!==this._id)throw new Error;for(var t=this._groups,e=i._groups,n=t.length,s=e.length,r=Math.min(n,s),a=new Array(n),o=0;o<r;++o)for(var c=t[o],l=e[o],h=c.length,u=a[o]=new Array(h),f,d=0;d<h;++d)(f=c[d]||l[d])&&(u[d]=f);for(;o<n;++o)a[o]=t[o];return new E2(a,this._parents,this._name,this._id)}function vM(i){return(i+"").trim().split(/^|\s+/).every(function(t){var e=t.indexOf(".");return e>=0&&(t=t.slice(0,e)),!t||t==="start"})}function yM(i,t,e){var n,s,r=vM(t)?Yn:r2;return function(){var a=r(this,i),o=a.on;o!==n&&(s=(n=o).copy()).on(t,e),a.on=s}}function bM(i,t){var e=this._id;return arguments.length<2?H0(this.node(),e).on.on(i):this.each(yM(e,i,t))}function MM(i){return function(){var t=this.parentNode;for(var e in this.__transition)if(+e!==i)return;t&&t.removeChild(this)}}function SM(){return this.on("end.remove",MM(this._id))}function EM(i){var t=this._name,e=this._id;typeof i!="function"&&(i=Gn(i));for(var n=this._groups,s=n.length,r=new Array(s),a=0;a<s;++a)for(var o=n[a],c=o.length,l=r[a]=new Array(c),h,u,f=0;f<c;++f)(h=o[f])&&(u=i.call(h,h.__data__,f,o))&&("__data__"in h&&(u.__data__=h.__data__),l[f]=u,ht(l[f],t,e,f,l,H0(h,e)));return new E2(r,this._parents,t,e)}function TM(i){var t=this._name,e=this._id;typeof i!="function"&&(i=oc(i));for(var n=this._groups,s=n.length,r=[],a=[],o=0;o<s;++o)for(var c=n[o],l=c.length,h,u=0;u<l;++u)if(h=c[u]){for(var f=i.call(h,h.__data__,u,c),d,m=H0(h,e),_=0,g=f.length;_<g;++_)(d=f[_])&&ht(d,t,e,_,f,m);r.push(f),a.push(h)}return new E2(r,a,t,e)}var wM=f7.prototype.constructor;function AM(){return new wM(this._groups,this._parents)}function CM(i,t){var e,n,s;return function(){var r=F3(this,i),a=(this.style.removeProperty(i),F3(this,i));return r===a?null:r===e&&a===n?s:s=t(e=r,n=a)}}function Mc(i){return function(){this.style.removeProperty(i)}}function RM(i,t,e){var n,s=e+"",r;return function(){var a=F3(this,i);return a===s?null:a===n?r:r=t(n=a,e)}}function IM(i,t,e){var n,s,r;return function(){var a=F3(this,i),o=e(this),c=o+"";return o==null&&(c=o=(this.style.removeProperty(i),F3(this,i))),a===c?null:a===n&&c===s?r:(s=c,r=t(n=a,o))}}function PM(i,t){var e,n,s,r="style."+t,a="end."+r,o;return function(){var c=r2(this,i),l=c.on,h=c.value[r]==null?o||(o=Mc(t)):void 0;(l!==e||s!==h)&&(n=(e=l).copy()).on(a,s=h),c.on=n}}function LM(i,t,e){var n=(i+="")=="transform"?ph:bc;return t==null?this.styleTween(i,CM(i,n)).on("end.style."+i,Mc(i)):typeof t=="function"?this.styleTween(i,IM(i,n,qn(this,"style."+i,t))).each(PM(this._id,i)):this.styleTween(i,RM(i,n,t),e).on("end.style."+i,null)}function DM(i,t,e){return function(n){this.style.setProperty(i,t.call(this,n),e)}}function UM(i,t,e){var n,s;function r(){var a=t.apply(this,arguments);return a!==s&&(n=(s=a)&&DM(i,a,e)),n}return r._value=t,r}function OM(i,t,e){var n="style."+(i+="");if(arguments.length<2)return(n=this.tween(n))&&n._value;if(t==null)return this.tween(n,null);if(typeof t!="function")throw new Error;return this.tween(n,UM(i,t,e??""))}function NM(i){return function(){this.textContent=i}}function FM(i){return function(){var t=i(this);this.textContent=t??""}}function BM(i){return this.tween("text",typeof i=="function"?FM(qn(this,"text",i)):NM(i==null?"":i+""))}function zM(i){return function(t){this.textContent=i.call(this,t)}}function kM(i){var t,e;function n(){var s=i.apply(this,arguments);return s!==e&&(t=(e=s)&&zM(s)),t}return n._value=i,n}function VM(i){var t="text";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(i==null)return this.tween(t,null);if(typeof i!="function")throw new Error;return this.tween(t,kM(i))}function HM(){for(var i=this._name,t=this._id,e=Sc(),n=this._groups,s=n.length,r=0;r<s;++r)for(var a=n[r],o=a.length,c,l=0;l<o;++l)if(c=a[l]){var h=H0(c,t);ht(c,i,e,l,a,{time:h.time+h.delay+h.duration,delay:0,duration:h.duration,ease:h.ease})}return new E2(n,this._parents,i,e)}function GM(){var i,t,e=this,n=e._id,s=e.size();return new Promise(function(r,a){var o={value:a},c={value:function(){--s===0&&r()}};e.each(function(){var l=r2(this,n),h=l.on;h!==i&&(t=(i=h).copy(),t._.cancel.push(o),t._.interrupt.push(o),t._.end.push(c)),l.on=t}),s===0&&r()})}var WM=0;function E2(i,t,e,n){this._groups=i,this._parents=t,this._name=e,this._id=n}function Sc(){return++WM}var d2=f7.prototype;E2.prototype={constructor:E2,select:EM,selectAll:TM,selectChild:d2.selectChild,selectChildren:d2.selectChildren,filter:_M,merge:xM,selection:AM,transition:HM,call:d2.call,nodes:d2.nodes,node:d2.node,size:d2.size,empty:d2.empty,each:d2.each,on:bM,attr:eM,attrTween:aM,style:LM,styleTween:OM,text:BM,textTween:VM,remove:SM,tween:Zb,delay:lM,duration:fM,ease:pM,easeVarying:gM,end:GM,[Symbol.iterator]:d2[Symbol.iterator]};function XM(i){return((i*=2)<=1?i*i*i:(i-=2)*i*i+2)/2}var YM={time:null,delay:0,duration:250,ease:XM};function qM(i,t){for(var e;!(e=i.__transition)||!(e=e[t]);)if(!(i=i.parentNode))throw new Error(`transition ${t} not found`);return e}function ZM(i){var t,e;i instanceof E2?(t=i._id,i=i._name):(t=Sc(),(e=YM).time=Xn(),i=i==null?null:i+"");for(var n=this._groups,s=n.length,r=0;r<s;++r)for(var a=n[r],o=a.length,c,l=0;l<o;++l)(c=a[l])&&ht(c,i,t,l,a,e||qM(c,t));return new E2(n,this._parents,i,t)}f7.prototype.interrupt=Xb;f7.prototype.transition=ZM;function x6(i,t,e){this.k=i,this.x=t,this.y=e}x6.prototype={constructor:x6,scale:function(i){return i===1?this:new x6(this.k*i,this.x,this.y)},translate:function(i,t){return i===0&t===0?this:new x6(this.k,this.x+this.k*i,this.y+this.k*t)},apply:function(i){return[i[0]*this.k+this.x,i[1]*this.k+this.y]},applyX:function(i){return i*this.k+this.x},applyY:function(i){return i*this.k+this.y},invert:function(i){return[(i[0]-this.x)/this.k,(i[1]-this.y)/this.k]},invertX:function(i){return(i-this.x)/this.k},invertY:function(i){return(i-this.y)/this.k},rescaleX:function(i){return i.copy().domain(i.range().map(this.invertX,this).map(i.invert,i))},rescaleY:function(i){return i.copy().domain(i.range().map(this.invertY,this).map(i.invert,i))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};x6.prototype;const $M={Blues:ru,BrBG:_h,BuGn:Oh,BuPu:Fh,Cividis:gu,Cool:vu,CubehelixDefault:_u,GnBu:zh,Greens:ou,Greys:lu,Inferno:Au,Magma:wu,OrRd:Vh,Oranges:mu,PRGn:vh,PiYG:bh,Plasma:Cu,PuBu:Xh,PuBuGn:Gh,PuOr:Sh,PuRd:qh,Purples:uu,Rainbow:yu,RdBu:Th,RdGy:Ah,RdPu:$h,RdYlBu:Rh,RdYlGn:Ph,Reds:du,Sinebow:Su,Spectral:Dh,Turbo:Eu,Viridis:Tu,Warm:xu,YlGn:jh,YlGnBu:Kh,YlOrBr:eu,YlOrRd:iu};function JM(i){const t=$M[i];return e=>tS(t(e))}function KM(i,t,e){const n=JM(t);return Array.from(i).map(s=>n((s-e[0])/(e[1]-e[0]))).flat()}function QM(i){const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(i);return t?[parseInt(t[1],16)/255,parseInt(t[2],16)/255,parseInt(t[3],16)/255]:[0,0,0]}function jM(i){return i.substring(4,i.length-1).split(", ").map(t=>parseInt(t)/255)}function tS(i){return i.startsWith("#")?QM(i):jM(i)}class eS{vertices;faces;constructor(t,e){this.vertices=t,this.faces=e}}class nS{colors;constructor(t,e,n){const s=KM(t,e,n);this.colors=new Float32Array(s)}}class iS{mesh;colors;constructor(t,e){this.mesh=t,this.colors=e}}function sS(i){if(i.length===0)return;let t=i[0],e=t;for(let n=0;n<i.length;n++){const s=i[n];t<s&&(t=s),e>s&&(e=s)}return[e,t]}function rS(i){const t=new X1;t.setAttribute("position",new c4(i.mesh.vertices,3)),t.setIndex(new c4(i.mesh.faces,1)),t.computeVertexNormals();let e;i.colors?(t.setAttribute("color",new c4(i.colors.colors,3)),e=new g9({vertexColors:!0})):e=new g9({color:"orange",vertexColors:!1});const n=new I4(t,e);return n.rotation.x=-Math.PI/2,n}class aS{controls;renderer;elem;scene;camera;raycaster;constructor(t){this.elem=t,this.scene=new pn,this.camera=new F4(60,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(-150,100,-100),this.raycaster=new $o,this.renderer=new ic,this.elem.innerHTML="",this.renderer.setSize(this.elem.clientWidth,this.elem.clientHeight),this.elem.appendChild(this.renderer.domElement),Q6.install({THREE:Kv}),this.controls=new Q6(this.camera,this.renderer.domElement),this.controls.minZoom=.1;const e=new On(16777215,.6);this.scene.add(e);const n=new Un(16777215,.4);this.scene.add(n);const s=new Fn,r=()=>{if(!this.camera)return;const a=s.getDelta();this.controls.update(a),requestAnimationFrame(r);const o=this.camera.position,c=this.controls.getTarget(new C);n.position.set(o.x+(o.x-c.x)*.2,o.y+(o.y-c.y)*.2,o.z+(o.z-c.z)*4),this.render()};r(),window.addEventListener("resize",()=>this.onWindowResize(),!1)}render(){this.renderer.render(this.scene,this.camera)}onWindowResize(){this.camera.aspect=this.elem.clientWidth/this.elem.clientHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.elem.clientWidth,this.elem.clientHeight),this.render()}setBackgroundColor(t){this.renderer.setClearColor(t)}setAlpha(t){this.renderer.setClearAlpha(t)}setTarget(t){t=t.toLowerCase();let e;if(t==="origin")e=new C(0,0,0);else if(t==="center")e=new z4().setFromObject(this.scene).getCenter(new C);else{console.warn("Unknown orbit point: "+t);return}this.controls.setTarget(e.x,e.y,e.z)}addListener(t,e){const n=["click","dblclick","mousedown","mouseup","touchstart","touchend"],s=t.toLowerCase();if(!n.includes(s)){this.elem.addEventListener(s,e,!1);return}this.elem.addEventListener(s,r=>{const a=this.elem.getBoundingClientRect(),o=oS(r,a),c=[];for(let l=0;l<o.length;l++){this.raycaster.setFromCamera(o[l],this.camera);const h=this.raycaster.intersectObjects(this.getModels());c.push(h[0])}e(r,c)})}addModel(t){const e=rS(t);return this.scene.add(e),e}getModels(){return this.scene.children.filter(t=>t.type==="Mesh")}deleteModel(t){this.scene.remove(t)}dispose(){window.removeEventListener("resize",this.onWindowResize)}}function oS(i,t){const e=[];if(i instanceof TouchEvent)for(let n=0;n<i.touches.length;n++){const s=i.touches[n],r=new K;r.x=(s.clientX-t.left)/t.width*2-1,r.y=-((s.clientY-t.top)/t.height)*2+1,e.push(r)}if(i instanceof MouseEvent){const n=new K;n.x=(i.clientX-t.left)/t.width*2-1,n.y=-((i.clientY-t.top)/t.height)*2+1,e.push(n)}return e}async function cS(i){const t=await navigator.mediaDevices.getUserMedia({audio:!0}),e=new AudioContext,n=e.createAnalyser();e.createMediaStreamSource(t).connect(n),n.fftSize=1024,setInterval(()=>{const r=n.frequencyBinCount,a=new Uint8Array(r);n.getByteTimeDomainData(a),i(a)},100)}const lS=JSON.parse("[[-3.9506757259368896,-45.13039016723633,32.57640838623047],[-19.066118240356445,-42.215267181396484,73.8915023803711],[-52.48468780517578,-2.579436779022217,47.66960144042969],[-8.86612319946289,24.186323165893555,61.420108795166016],[-19.97587013244629,-97.85315704345703,19.297142028808594],[-53.60777282714844,-51.88005447387695,48.22872543334961],[-39.937259674072266,57.95512008666992,6.362272262573242],[-2.4886889457702637,20.251562118530273,-4.631840229034424],[-21.774412155151367,-58.98153305053711,-13.52955150604248],[-61.438838958740234,-49.07358169555664,-8.439291954040527],[-41.06557846069336,-21.519853591918945,15.382617950439453],[-35.67539978027344,13.135690689086914,-32.772579193115234],[-3.459366798400879,-43.536476135253906,31.89068603515625],[-3.04915452003479,-41.74823760986328,31.103025436401367],[-2.7841074466705322,-39.87833786010742,30.295724868774414],[-2.6529855728149414,-37.9599494934082,29.517330169677734],[-2.59516978263855,-35.998802185058594,28.790889739990234],[-2.5166988372802734,-33.99699401855469,28.108366012573242],[-2.344764232635498,-31.969417572021484,27.447057723999023],[-2.051330327987671,-29.934070587158203,26.791324615478516],[-1.6552865505218506,-27.898591995239258,26.130510330200195],[-1.2074528932571411,-25.851905822753906,25.448402404785156],[-0.7705496549606323,-23.778820037841797,24.725074768066406],[-0.3881000280380249,-21.67266845703125,23.941513061523438],[-0.08671937882900238,-19.536481857299805,23.08247184753418],[0.12279298901557922,-17.379878997802734,22.135900497436523],[0.24744366109371185,-15.215715408325195,21.093162536621094],[0.3127606213092804,-13.054866790771484,19.95713996887207],[0.34211888909339905,-10.903843879699707,18.73004913330078],[0.35460683703422546,-8.765387535095215,17.418851852416992],[0.36039161682128906,-6.638143539428711,16.032901763916016],[0.3596612811088562,-4.514588356018066,14.591378211975098],[0.3461796045303345,-2.3854126930236816,13.110660552978516],[0.3121311068534851,-0.24241890013217926,11.602415084838867],[0.2503143548965454,1.9194053411483765,10.073479652404785],[0.15299350023269653,4.100139141082764,8.524874687194824],[0.01570187881588936,6.292870044708252,6.954341411590576],[-0.1696985960006714,8.48728084564209,5.356451988220215],[-0.4129125475883484,10.669004440307617,3.725590705871582],[-0.7254229784011841,12.816032409667969,2.057213544845581],[-1.1089204549789429,14.899026870727539,0.3545921742916107],[-1.551794409751892,16.88166046142578,-1.3670039176940918],[-2.0294697284698486,18.706661224365234,-3.0686638355255127],[-3.8090858459472656,-46.361549377441406,31.033649444580078],[-3.6765401363372803,-47.71435546875,29.22350311279297],[-3.5807931423187256,-49.06678771972656,27.24636459350586],[-3.545823574066162,-50.36008071899414,25.14816665649414],[-3.6005165576934814,-51.561031341552734,22.96832847595215],[-3.7789833545684814,-52.66404342651367,20.75337791442871],[-4.110443115234375,-53.68998718261719,18.546669006347656],[-4.624845504760742,-54.66509246826172,16.38225555419922],[-5.342441558837891,-55.6142578125,14.286754608154297],[-6.279881477355957,-56.553443908691406,12.284072875976562],[-7.4111552238464355,-57.485687255859375,10.381071090698242],[-8.70396614074707,-58.401573181152344,8.583541870117188],[-10.112757682800293,-59.28252029418945,6.898464202880859],[-11.572003364562988,-60.10197448730469,5.334784984588623],[-12.983245849609375,-60.83055877685547,3.896348476409912],[-14.239239692687988,-61.46044158935547,2.565981864929199],[-15.233518600463867,-62.00255584716797,1.327858805656433],[-15.863646507263184,-62.48295593261719,0.176974356174469],[-16.010412216186523,-62.887847900390625,-0.8532105088233948],[-15.664997100830078,-63.08686828613281,-1.7233555316925049],[-14.964458465576172,-62.967498779296875,-2.4669723510742188],[-14.105354309082031,-62.56585693359375,-3.1865384578704834],[-13.283320426940918,-62.01918029785156,-4.006343364715576],[-12.716100692749023,-61.506473541259766,-5.03906774520874],[-12.581661224365234,-61.164100646972656,-6.2709174156188965],[-12.970012664794922,-61.007137298583984,-7.588592052459717],[-13.845702171325684,-60.938385009765625,-8.876932144165039],[-15.12435531616211,-60.83162307739258,-10.071863174438477],[-16.687517166137695,-60.596763610839844,-11.143052101135254],[-18.414939880371094,-60.19893264770508,-12.077625274658203],[-20.17779541015625,-59.639984130859375,-12.87369441986084],[-2.191765785217285,16.905345916748047,-4.798086166381836],[-1.9001870155334473,13.046502113342285,-5.187358856201172],[-1.644296646118164,8.953737258911133,-5.853521347045898],[-1.4451863765716553,4.7736029624938965,-6.802367210388184],[-1.335310459136963,0.6223294734954834,-7.990564346313477],[-1.3648844957351685,-3.399916410446167,-9.314435958862305],[-1.592085599899292,-7.233001232147217,-10.649550437927246],[-2.0918080806732178,-10.840691566467285,-11.88571548461914],[-2.9433584213256836,-14.203350067138672,-12.9273099899292],[-4.236848831176758,-17.292882919311523,-13.678987503051758],[-5.961541175842285,-20.120662689208984,-14.109736442565918],[-8.061783790588379,-22.718467712402344,-14.226892471313477],[-10.447474479675293,-25.140405654907227,-14.072480201721191],[-13.003557205200195,-27.43598747253418,-13.708497047424316],[-15.576130867004395,-29.620670318603516,-13.213119506835938],[-17.997318267822266,-31.677635192871094,-12.6766357421875],[-20.10618019104004,-33.56913375854492,-12.186688423156738],[-21.754486083984375,-35.26360321044922,-11.843267440795898],[-22.774641036987305,-36.73428726196289,-11.788434028625488],[-23.032629013061523,-37.907135009765625,-12.149245262145996],[-22.534399032592773,-38.62034606933594,-12.802539825439453],[-21.559904098510742,-39.03236389160156,-13.502094268798828],[-20.40660285949707,-39.517520904541016,-14.181414604187012],[-19.37839126586914,-40.44516372680664,-14.825643539428711],[-18.77631378173828,-41.94816589355469,-15.362691879272461],[-18.737171173095703,-43.92876434326172,-15.676252365112305],[-19.15842628479004,-46.215614318847656,-15.69737434387207],[-19.83097267150879,-48.703643798828125,-15.435567855834961],[-20.542896270751953,-51.31926727294922,-14.982044219970703],[-21.152873992919922,-53.990482330322266,-14.448429107666016],[-21.575651168823242,-56.6170539855957,-13.93502140045166],[-3.3316333293914795,-44.751583099365234,30.098060607910156],[-3.0071029663085938,-42.99863052368164,29.22516441345215],[-2.829241991043091,-41.1687126159668,28.404539108276367],[-2.7459523677825928,-39.27783203125,27.652067184448242],[-2.663569211959839,-37.32283020019531,26.965646743774414],[-2.4933457374572754,-35.31462478637695,26.319528579711914],[-2.1918528079986572,-33.28240203857422,25.690826416015625],[-1.7714476585388184,-31.24921226501465,25.060789108276367],[-1.2847139835357666,-29.21893310546875,24.40937614440918],[-0.809269905090332,-27.173397064208984,23.710580825805664],[-0.39832234382629395,-25.099842071533203,22.95014762878418],[-0.08483050018548965,-22.995941162109375,22.116878509521484],[0.1170191615819931,-20.869443893432617,21.202280044555664],[0.21448121964931488,-18.7342472076416,20.198301315307617],[0.24430778622627258,-16.601051330566406,19.09908676147461],[0.23877255618572235,-14.483321189880371,17.90361976623535],[0.2262970358133316,-12.38860034942627,16.614089965820312],[0.22452972829341888,-10.324995994567871,15.237960815429688],[0.23676671087741852,-8.281646728515625,13.79442310333252],[0.25104573369026184,-6.2473931312561035,12.306440353393555],[0.2538539171218872,-4.212093353271484,10.792131423950195],[0.23323553800582886,-2.166926860809326,9.264983177185059],[0.18012173473834991,-0.11039304733276367,7.7351179122924805],[0.08548736572265625,1.9757159948349,6.2042036056518555],[-0.054232750087976456,4.081910133361816,4.670510292053223],[-0.24715834856033325,6.205113887786865,3.129520893096924],[-0.5028573870658875,8.337750434875488,1.5798417329788208],[-0.8304939270019531,10.47708797454834,0.01139901578426361],[-1.2285583019256592,12.608034133911133,-1.5821268558502197],[-1.6859968900680542,14.726682662963867,-3.1922249794006348],[-3.2717478275299072,-46.085533142089844,28.20464324951172],[-3.0255768299102783,-44.34039306640625,27.295446395874023],[-2.897545576095581,-42.51518249511719,26.48500633239746],[-2.8007001876831055,-40.61056900024414,25.769620895385742],[-2.6389105319976807,-38.62786865234375,25.12590789794922],[-2.346994161605835,-36.59520721435547,24.520706176757812],[-1.9219590425491333,-34.552555084228516,23.92394256591797],[-1.4122207164764404,-32.52174758911133,23.306072235107422],[-0.8999499082565308,-30.496097564697266,22.638219833374023],[-0.45475953817367554,-28.453876495361328,21.903240203857422],[-0.11988814920186996,-26.38513946533203,21.096895217895508],[0.08362823724746704,-24.29210090637207,20.21584701538086],[0.1593620926141739,-22.187082290649414,19.255674362182617],[0.14746516942977905,-20.081823348999023,18.207191467285156],[0.09504495561122894,-17.989625930786133,17.056461334228516],[0.041202109307050705,-15.925411224365234,15.80056381225586],[0.014468470588326454,-13.902661323547363,14.44058895111084],[0.025493785738945007,-11.921136856079102,12.994006156921387],[0.061884064227342606,-9.965750694274902,11.486818313598633],[0.10163883119821548,-8.023735046386719,9.945032119750977],[0.12571662664413452,-6.08377742767334,8.388467788696289],[0.11983545869588852,-4.1403374671936035,6.832543849945068],[0.07340872287750244,-2.1748530864715576,5.290395259857178],[-0.021075010299682617,-0.1719776690006256,3.767510175704956],[-0.16663825511932373,1.8672796487808228,2.2624752521514893],[-0.3716498017311096,3.9492616653442383,0.7752282023429871],[-0.6444944143295288,6.089470863342285,-0.698610782623291],[-0.9921334385871887,8.302420616149902,-2.176259756088257],[-1.412841558456421,10.60080337524414,-3.671628952026367],[-3.260462760925293,-47.416343688964844,26.20448875427246],[-3.0732619762420654,-45.660911560058594,25.298782348632812],[-2.9482741355895996,-43.8117790222168,24.521575927734375],[-2.7920689582824707,-41.868553161621094,23.852304458618164],[-2.524960517883301,-39.84752655029297,23.257183074951172],[-2.117241144180298,-37.79454040527344,22.691059112548828],[-1.6039279699325562,-35.75288009643555,22.111839294433594],[-1.0663785934448242,-33.731712341308594,21.48089027404785],[-0.5818380117416382,-31.715524673461914,20.780221939086914],[-0.2124422937631607,-29.682199478149414,20.004608154296875],[0.009430637583136559,-27.626544952392578,19.159515380859375],[0.0793803334236145,-25.556110382080078,18.246570587158203],[0.03494473919272423,-23.48176383972168,17.257753372192383],[-0.07133478671312332,-21.416961669921875,16.172962188720703],[-0.1807231456041336,-19.376340866088867,14.971199035644531],[-0.25202062726020813,-17.38126564025879,13.647150993347168],[-0.2627311646938324,-15.438493728637695,12.211758613586426],[-0.21965062618255615,-13.543438911437988,10.69058895111084],[-0.14848914742469788,-11.678451538085938,9.11474895477295],[-0.07894401997327805,-9.82878589630127,7.512632369995117],[-0.03294617682695389,-7.985790252685547,5.904695510864258],[-0.026714665815234184,-6.128581523895264,4.3117289543151855],[-0.06816952675580978,-4.2413225173950195,2.7482059001922607],[-0.16451647877693176,-2.3008484840393066,1.225295066833496],[-0.3186686933040619,-0.297324538230896,-0.25476503372192383],[-0.5384305715560913,1.7984700202941895,-1.689880132675171],[-0.8301911354064941,4.016961097717285,-3.087815284729004],[-1.1996073722839355,6.389435768127441,-4.468222618103027],[-3.2983906269073486,-48.67976760864258,24.11545181274414],[-3.1345157623291016,-46.89330291748047,23.24082374572754],[-2.9740774631500244,-45.00211715698242,22.50997543334961],[-2.735507011413574,-43.01429748535156,21.89362907409668],[-2.3662374019622803,-40.96488952636719,21.344520568847656],[-1.8725031614303589,-38.91014099121094,20.803592681884766],[-1.326743721961975,-36.881893157958984,20.217859268188477],[-0.8096972703933716,-34.87571716308594,19.559953689575195],[-0.3932219445705414,-32.87273025512695,18.825275421142578],[-0.1322118639945984,-30.854280471801758,18.01972007751465],[-0.044067781418561935,-28.82164764404297,17.15564727783203],[-0.09989497065544128,-26.782522201538086,16.22996711730957],[-0.2484983503818512,-24.749168395996094,15.222854614257812],[-0.42248645424842834,-22.7351016998291,14.103089332580566],[-0.556210994720459,-20.76115608215332,12.8424072265625],[-0.6123178005218506,-18.84378433227539,11.444352149963379],[-0.587006688117981,-16.986122131347656,9.930344581604004],[-0.5020891427993774,-15.180060386657715,8.332117080688477],[-0.39373522996902466,-13.404851913452148,6.684372901916504],[-0.29572463035583496,-11.647322654724121,5.015627861022949],[-0.23217971622943878,-9.885107040405273,3.352871894836426],[-0.21540796756744385,-8.100475311279297,1.716863989830017],[-0.25242093205451965,-6.270605087280273,0.12674084305763245],[-0.35105231404304504,-4.362080097198486,-1.3983476161956787],[-0.514122486114502,-2.343592405319214,-2.8508787155151367],[-0.7480118274688721,-0.17401666939258575,-4.227928161621094],[-1.057226538658142,2.185626745223999,-5.537003993988037],[-3.3956003189086914,-49.84089660644531,21.963844299316406],[-3.2209360599517822,-48.01158142089844,21.131776809692383],[-3.0034537315368652,-46.074607849121094,20.45293426513672],[-2.6813366413116455,-44.052494049072266,19.88604736328125],[-2.2312211990356445,-41.99494552612305,19.370237350463867],[-1.699406385421753,-39.95340347290039,18.8319091796875],[-1.1636606454849243,-37.943359375,18.22781753540039],[-0.7023215293884277,-35.953277587890625,17.543725967407227],[-0.38187387585639954,-33.96554183959961,16.7877197265625],[-0.24715958535671234,-31.968400955200195,15.974175453186035],[-0.28446099162101746,-29.965782165527344,15.111638069152832],[-0.4504343271255493,-27.967376708984375,14.185431480407715],[-0.6770007610321045,-25.984373092651367,13.16225528717041],[-0.8860989809036255,-24.034887313842773,11.998998641967773],[-1.0103284120559692,-22.13611602783203,10.670976638793945],[-1.0311214923858643,-20.302438735961914,9.194849014282227],[-0.9614248275756836,-18.533153533935547,7.6008172035217285],[-0.835417628288269,-16.815366744995117,5.925165176391602],[-0.6949162483215332,-15.128314018249512,4.202830791473389],[-0.5759165287017822,-13.446118354797363,2.4689929485321045],[-0.4973205029964447,-11.7503662109375,0.7494080066680908],[-0.469796746969223,-10.017580032348633,-0.9311095476150513],[-0.5004549622535706,-8.216139793395996,-2.546952724456787],[-0.599241316318512,-6.293531894683838,-4.0682525634765625],[-0.7685847282409668,-4.208707332611084,-5.483853816986084],[-1.013289213180542,-1.9159581661224365,-6.788081169128418],[-3.581692695617676,-50.90167236328125,19.781564712524414],[-3.3720173835754395,-49.02830123901367,18.993438720703125],[-3.089289426803589,-47.05376052856445,18.360776901245117],[-2.6935508251190186,-45.01411437988281,17.830963134765625],[-2.1994194984436035,-42.96294403076172,17.32670783996582],[-1.6650235652923584,-40.93788146972656,16.779727935791016],[-1.1693519353866577,-38.9438591003418,16.158231735229492],[-0.7875791192054749,-36.967430114746094,15.46065616607666],[-0.5788509845733643,-34.99633026123047,14.705496788024902],[-0.5629379749298096,-33.02424621582031,13.904637336730957],[-0.7115374803543091,-31.059005737304688,13.056756973266602],[-0.9632407426834106,-29.109106063842773,12.132576942443848],[-1.2369890213012695,-27.18826675415039,11.083733558654785],[-1.447390079498291,-25.31060028076172,9.863907814025879],[-1.542336106300354,-23.49346160888672,8.460987091064453],[-1.5214829444885254,-21.747825622558594,6.904170989990234],[-1.4121257066726685,-20.066814422607422,5.230776786804199],[-1.2558457851409912,-18.43490982055664,3.4781620502471924],[-1.095860242843628,-16.81830596923828,1.6874914169311523],[-0.9614620208740234,-15.196311950683594,-0.10869844257831573],[-0.8687400817871094,-13.546407699584961,-1.8817965984344482],[-0.8276431560516357,-11.837890625,-3.602023124694824],[-0.8481897711753845,-10.022778511047363,-5.233375549316406],[-0.9432108402252197,-8.040498733520508,-6.7380571365356445],[-1.1144593954086304,-5.8469953536987305,-8.10059928894043],[-3.8913865089416504,-51.888328552246094,17.604625701904297],[-3.6296770572662354,-49.97760772705078,16.852373123168945],[-3.2791271209716797,-47.977195739746094,16.253324508666992],[-2.8333330154418945,-45.93245315551758,15.738995552062988],[-2.322223424911499,-43.88971710205078,15.233796119689941],[-1.8104559183120728,-41.87642288208008,14.677077293395996],[-1.375572681427002,-39.89198303222656,14.048851013183594],[-1.087857961654663,-37.92560577392578,13.358541488647461],[-0.9855493903160095,-35.971031188964844,12.624003410339355],[-1.0773621797561646,-34.0289421081543,11.849260330200195],[-1.316085696220398,-32.10712814331055,11.01867961883545],[-1.6260849237442017,-30.215240478515625,10.086195945739746],[-1.914473056793213,-28.361858367919922,8.99343204498291],[-2.1068644523620605,-26.56211280822754,7.703512191772461],[-2.1675503253936768,-24.831954956054688,6.219318389892578],[-2.113049030303955,-23.175195693969727,4.581209659576416],[-1.9804176092147827,-21.57964324951172,2.830009937286377],[-1.812410831451416,-20.014785766601562,1.0095312595367432],[-1.6430208683013916,-18.45235824584961,-0.8432623744010925],[-1.4969810247421265,-16.869766235351562,-2.694685935974121],[-1.38850736618042,-15.239062309265137,-4.512909412384033],[-1.3302913904190063,-13.516016006469727,-6.259057521820068],[-1.3368775844573975,-11.645934104919434,-7.889942169189453],[-1.4238059520721436,-9.565024375915527,-9.359580993652344],[-4.361032009124756,-52.83162307739258,15.460338592529297],[-4.034465312957764,-50.891258239746094,14.731348037719727],[-3.6270270347595215,-48.874473571777344,14.145404815673828],[-3.148301362991333,-46.825523376464844,13.633018493652344],[-2.6384754180908203,-44.7851448059082,13.123047828674316],[-2.1653554439544678,-42.77429962158203,12.564251899719238],[-1.8030047416687012,-40.79138946533203,11.947558403015137],[-1.6055976152420044,-38.83122253417969,11.282873153686523],[-1.6017796993255615,-36.89469909667969,10.583215713500977],[-1.7845830917358398,-34.98674774169922,9.839000701904297],[-2.091421127319336,-33.11579513549805,9.017372131347656],[-2.430910587310791,-31.28533935546875,8.055716514587402],[-2.7167186737060547,-29.5042667388916,6.900445461273193],[-2.887916088104248,-27.788358688354492,5.529041290283203],[-2.925090789794922,-26.14735221862793,3.9602184295654297],[-2.858424186706543,-24.57697105407715,2.241945743560791],[-2.7261502742767334,-23.04692840576172,0.42347651720046997],[-2.561753273010254,-21.530803680419922,-1.4563910961151123],[-2.3906047344207764,-20.000505447387695,-3.361696720123291],[-2.2339377403259277,-18.430585861206055,-5.257641315460205],[-2.1074347496032715,-16.783008575439453,-7.105504989624023],[-2.029184103012085,-15.008122444152832,-8.86034107208252],[-2.017838954925537,-13.04809856414795,-10.471620559692383],[-5.01533317565918,-53.75556564331055,13.373634338378906],[-4.625495910644531,-51.792327880859375,12.650351524353027],[-4.169476509094238,-49.75913619995117,12.064166069030762],[-3.6684045791625977,-47.699684143066406,11.547347068786621],[-3.1695914268493652,-45.65095520019531,11.035985946655273],[-2.7424638271331787,-43.63125991821289,10.489245414733887],[-2.449227809906006,-41.642822265625,9.899870872497559],[-2.335772752761841,-39.6869010925293,9.274984359741211],[-2.418203830718994,-37.76997756958008,8.61677074432373],[-2.676342248916626,-35.901546478271484,7.898492813110352],[-3.028188705444336,-34.08359909057617,7.065099239349365],[-3.3837461471557617,-32.318023681640625,6.052768707275391],[-3.666513442993164,-30.614938735961914,4.81918478012085],[-3.830042839050293,-28.98654556274414,3.359252452850342],[-3.8697285652160645,-27.43340492248535,1.7055907249450684],[-3.8187313079833984,-25.92887306213379,-0.08115687966346741],[-3.706793785095215,-24.44407081604004,-1.956757664680481],[-3.557973623275757,-22.95231056213379,-3.884337902069092],[-3.389848470687866,-21.425899505615234,-5.829293251037598],[-3.222461223602295,-19.834074020385742,-7.75303316116333],[-3.0769145488739014,-18.135740280151367,-9.612617492675781],[-2.9763500690460205,-16.277912139892578,-11.356679916381836],[-5.888999938964844,-54.67417526245117,11.368663787841797],[-5.438746452331543,-52.68666458129883,10.640998840332031],[-4.937580108642578,-50.63028335571289,10.047806739807129],[-4.415892601013184,-48.5492057800293,9.525925636291504],[-3.9280214309692383,-46.479068756103516,9.021245956420898],[-3.5401482582092285,-44.440921783447266,8.497723579406738],[-3.307370185852051,-42.44091033935547,7.947890758514404],[-3.2668707370758057,-40.486881256103516,7.370722770690918],[-3.425616502761841,-38.59181213378906,6.75462007522583],[-3.7436294555664062,-36.76383972167969,6.045914649963379],[-4.133974552154541,-35.0007209777832,5.180903434753418],[-4.511135101318359,-33.30455017089844,4.10091495513916],[-4.8092546463012695,-31.683988571166992,2.779085874557495],[-4.996517181396484,-30.144269943237305,1.2286714315414429],[-5.071293354034424,-28.659574508666992,-0.4969029426574707],[-5.061519145965576,-27.199695587158203,-2.340071439743042],[-4.986880779266357,-25.73354721069336,-4.2587385177612305],[-4.863002300262451,-24.235172271728516,-6.218442916870117],[-4.700836658477783,-22.677509307861328,-8.18431282043457],[-4.52454948425293,-21.031583786010742,-10.116461753845215],[-4.360739707946777,-19.254436492919922,-11.967308044433594],[-6.961330413818359,-55.580352783203125,9.462904930114746],[-6.45405387878418,-53.560611724853516,8.729018211364746],[-5.9077677726745605,-51.47049331665039,8.128120422363281],[-5.362223148345947,-49.35563659667969,7.604708671569824],[-4.87800931930542,-47.2551383972168,7.1125078201293945],[-4.519949913024902,-45.19157409667969,6.620414733886719],[-4.337431907653809,-43.176395416259766,6.116414546966553],[-4.362941741943359,-41.22481155395508,5.589805603027344],[-4.5885467529296875,-39.3533821105957,5.003483295440674],[-4.964921474456787,-37.56822967529297,4.286709785461426],[-5.403171539306641,-35.86451721191406,3.3731818199157715],[-5.823216438293457,-34.2432746887207,2.214242935180664],[-6.171368598937988,-32.70934295654297,0.8012057542800903],[-6.416802883148193,-31.24159049987793,-0.8249905705451965],[-6.554490089416504,-29.804786682128906,-2.6080477237701416],[-6.604426383972168,-28.362714767456055,-4.491438865661621],[-6.577829837799072,-26.88350486755371,-6.435635089874268],[-6.481406211853027,-25.34384536743164,-8.407249450683594],[-6.326142311096191,-23.724193572998047,-10.373526573181152],[-6.142407417297363,-21.997148513793945,-12.29187297821045],[-8.200885772705078,-56.45573043823242,7.669391632080078],[-7.6366424560546875,-54.38954162597656,6.9328083992004395],[-7.040221691131592,-52.252262115478516,6.3267717361450195],[-6.464529037475586,-50.095680236816406,5.803958415985107],[-5.973766803741455,-47.957889556884766,5.327874660491943],[-5.635070323944092,-45.86471176147461,4.870555400848389],[-5.496203899383545,-43.83317947387695,4.415225982666016],[-5.582267761230469,-41.887001037597656,3.9298229217529297],[-5.877545356750488,-40.04316711425781,3.3594093322753906],[-6.3255205154418945,-38.306480407714844,2.620133399963379],[-6.836112976074219,-36.668853759765625,1.647355079650879],[-7.337092399597168,-35.12935256958008,0.4058685004711151],[-7.770232200622559,-33.66944122314453,-1.0829232931137085],[-8.104053497314453,-32.255889892578125,-2.7680983543395996],[-8.325016021728516,-30.84151840209961,-4.59004545211792],[-8.447246551513672,-29.38646125793457,-6.493954181671143],[-8.470398902893066,-27.861326217651367,-8.442193984985352],[-8.400504112243652,-26.25260353088379,-10.404619216918945],[-8.252328872680664,-24.546249389648438,-12.348136901855469],[-9.55697250366211,-57.273170471191406,5.99800968170166],[-8.92980670928955,-55.141632080078125,5.262807846069336],[-8.279048919677734,-52.94835662841797,4.651893615722656],[-7.664177417755127,-50.74256134033203,4.129837989807129],[-7.157566070556641,-48.56291198730469,3.6696724891662598],[-6.831483840942383,-46.43745040893555,3.247687339782715],[-6.734360694885254,-44.39330291748047,2.8330745697021484],[-6.886682033538818,-42.45844650268555,2.377202033996582],[-7.267580509185791,-40.65031051635742,1.8108129501342773],[-7.813891410827637,-38.97119140625,1.0396151542663574],[-8.43777084350586,-37.409576416015625,0.0038896724581718445],[-9.05359935760498,-35.94405746459961,-1.3059666156768799],[-9.603273391723633,-34.544349670410156,-2.8525454998016357],[-10.04766845703125,-33.16233825683594,-4.575750350952148],[-10.366783142089844,-31.74172592163086,-6.414671897888184],[-10.563016891479492,-30.24322509765625,-8.316305160522461],[-10.63364315032959,-28.648122787475586,-10.247349739074707],[-10.589158058166504,-26.9498348236084,-12.17748737335205],[-10.956252098083496,-58.00007629394531,4.453739166259766],[-10.262981414794922,-55.790279388427734,3.7183244228363037],[-9.55101490020752,-53.53049087524414,3.1003012657165527],[-8.890817642211914,-51.26888656616211,2.5758254528045654],[-8.363597869873047,-49.04235076904297,2.128725290298462],[-8.052491188049316,-46.88767623901367,1.733845829963684],[-8.00567626953125,-44.83751678466797,1.3486672639846802],[-8.241969108581543,-42.92403793334961,0.9109615087509155],[-8.736520767211914,-41.16456985473633,0.339241623878479],[-9.423980712890625,-39.5577507019043,-0.46781644225120544],[-10.193361282348633,-38.070274353027344,-1.5555557012557983],[-10.956291198730469,-36.66981887817383,-2.9162449836730957],[-11.645943641662598,-35.31141662597656,-4.4984893798828125],[-12.218216896057129,-33.935020446777344,-6.235536575317383],[-12.638232231140137,-32.47975540161133,-8.066878318786621],[-12.906102180480957,-30.916776657104492,-9.944419860839844],[-13.023265838623047,-29.23534393310547,-11.835368156433105],[-12.30364990234375,-58.61772155761719,3.028655529022217],[-11.540257453918457,-56.31371307373047,2.288212299346924],[-10.766036987304688,-53.97605895996094,1.6578333377838135],[-10.061403274536133,-51.64817810058594,1.125516414642334],[-9.523451805114746,-49.373779296875,0.6825764179229736],[-9.241007804870605,-47.19401550292969,0.3022921085357666],[-9.264862060546875,-45.14707565307617,-0.06742317229509354],[-9.614298820495605,-43.269798278808594,-0.5000855922698975],[-10.265552520751953,-41.57981872558594,-1.0859768390655518],[-11.123647689819336,-40.05158233642578,-1.9244683980941772],[-12.069934844970703,-38.63645935058594,-3.049382209777832],[-13.003469467163086,-37.28725814819336,-4.439207077026367],[-13.85181999206543,-35.94710922241211,-6.031350612640381],[-14.55481243133545,-34.54837417602539,-7.7555060386657715],[-15.073041915893555,-33.038116455078125,-9.556121826171875],[-15.412123680114746,-31.39649200439453,-11.386265754699707],[-13.493967056274414,-59.12091827392578,1.7015163898468018],[-12.665283203125,-56.70936584472656,0.9483332633972168],[-11.837625503540039,-54.2772331237793,0.2991287112236023],[-11.109026908874512,-51.875553131103516,-0.24857158958911896],[-10.583699226379395,-49.55141067504883,-0.6987756490707397],[-10.357316017150879,-47.351837158203125,-1.0799176692962646],[-10.485180854797363,-45.321044921875,-1.452580213546753],[-10.992329597473145,-43.50218963623047,-1.8985562324523926],[-11.826805114746094,-41.8946418762207,-2.507688522338867],[-12.882620811462402,-40.45164489746094,-3.372209310531616],[-14.02505111694336,-39.101993560791016,-4.517228126525879],[-15.145145416259766,-37.784461975097656,-5.910804748535156],[-16.151029586791992,-36.433265686035156,-7.484389305114746],[-16.97763442993164,-34.98857879638672,-9.171049118041992],[-17.589908599853516,-33.406890869140625,-10.917214393615723],[-14.433158874511719,-59.52444839477539,0.45677557587623596],[-13.556355476379395,-56.98259735107422,-0.3171807825565338],[-12.705140113830566,-54.44013977050781,-0.9933290481567383],[-11.984850883483887,-51.95227813720703,-1.5677626132965088],[-11.50709342956543,-49.573692321777344,-2.0416791439056396],[-11.375643730163574,-47.359405517578125,-2.445549249649048],[-11.655858039855957,-45.36055374145508,-2.8476972579956055],[-12.34802532196045,-43.612300872802734,-3.328639030456543],[-13.39018440246582,-42.09778594970703,-3.9711172580718994],[-14.659097671508789,-40.74176788330078,-4.855355739593506],[-16.011171340942383,-39.446983337402344,-5.999094009399414],[-17.313129425048828,-38.134376525878906,-7.366891860961914],[-18.464984893798828,-36.74569320678711,-8.895058631896973],[-19.4067440032959,-35.23448944091797,-10.518821716308594],[-15.039304733276367,-59.84489440917969,-0.7090951204299927],[-14.157072067260742,-57.15169143676758,-1.5147862434387207],[-13.325246810913086,-54.47624969482422,-2.231931209564209],[-12.657380104064941,-51.885169982910156,-2.8517532348632812],[-12.273598670959473,-49.44573974609375,-3.3734331130981445],[-12.290826797485352,-47.221092224121094,-3.831634998321533],[-12.753776550292969,-45.260353088378906,-4.291731834411621],[-13.654763221740723,-43.58677291870117,-4.830523490905762],[-14.91508674621582,-42.16496276855469,-5.518840789794922],[-16.404441833496094,-40.8934440612793,-6.418137550354004],[-17.955934524536133,-39.636505126953125,-7.538088798522949],[-19.424131393432617,-38.30636978149414,-8.852916717529297],[-20.709758758544922,-36.85802459716797,-10.307819366455078],[-15.230178833007812,-60.08561706542969,-1.7719862461090088],[-14.407581329345703,-57.22174072265625,-2.63340163230896],[-13.656814575195312,-54.389835357666016,-3.4199275970458984],[-13.101358413696289,-51.67958068847656,-4.116234302520752],[-12.87523078918457,-49.173133850097656,-4.721449375152588],[-13.07672119140625,-46.9379768371582,-5.263068199157715],[-13.747457504272461,-45.00775146484375,-5.808226108551025],[-14.86447525024414,-43.39347839355469,-6.426522254943848],[-16.340087890625,-42.04527282714844,-7.177488803863525],[-18.02455711364746,-40.83641815185547,-8.098630905151367],[-19.748323440551758,-39.6060676574707,-9.190218925476074],[-21.367475509643555,-38.25218200683594,-10.432909965515137],[-15.005620956420898,-60.15314483642578,-2.71280574798584],[-14.321199417114258,-57.13738250732422,-3.6727232933044434],[-13.72834300994873,-54.160614013671875,-4.571521282196045],[-13.364413261413574,-51.3425178527832,-5.386344909667969],[-13.340311050415039,-48.78396987915039,-6.100109577178955],[-13.755633354187012,-46.53651809692383,-6.74566125869751],[-14.641140937805176,-44.619895935058594,-7.389361381530762],[-15.965248107910156,-43.03125,-8.097885131835938],[-17.616411209106445,-41.70376968383789,-8.919414520263672],[-19.444787979125977,-40.50914001464844,-9.878686904907227],[-21.295377731323242,-39.28171920776367,-10.964212417602539],[-14.48304271697998,-59.956687927246094,-3.5717673301696777],[-14.005020141601562,-56.845123291015625,-4.675376892089844],[-13.652665138244629,-53.77915573120117,-5.730173587799072],[-13.527695655822754,-50.907833099365234,-6.681042671203613],[-13.739035606384277,-48.320953369140625,-7.514947414398193],[-14.375951766967773,-46.06000900268555,-8.267814636230469],[-15.464265823364258,-44.12998962402344,-9.00967788696289],[-16.94955825805664,-42.51313400268555,-9.801753044128418],[-18.71680450439453,-41.1402702331543,-10.690869331359863],[-20.62643814086914,-39.895103454589844,-11.697758674621582],[-13.845964431762695,-59.524932861328125,-4.4454498291015625],[-13.640959739685059,-56.385040283203125,-5.726279258728027],[-13.564630508422852,-53.31010818481445,-6.935323715209961],[-13.70859432220459,-50.43916702270508,-8.016669273376465],[-14.160865783691406,-47.84615707397461,-8.960553169250488],[-15.003701210021973,-45.5605583190918,-9.81078052520752],[-16.24212074279785,-43.5756950378418,-10.636615753173828],[-17.82325553894043,-41.87309646606445,-11.500787734985352],[-19.640518188476562,-40.39120101928711,-12.450565338134766],[-13.306751251220703,-58.98925018310547,-5.445681095123291],[-13.400314331054688,-55.885032653808594,-6.88052225112915],[-13.621793746948242,-52.859169006347656,-8.211943626403809],[-14.03239917755127,-50.02067565917969,-9.390517234802246],[-14.704375267028809,-47.42240524291992,-10.420228958129883],[-15.694123268127441,-45.08439636230469,-11.348955154418945],[-17.0104923248291,-43.00186538696289,-12.247499465942383],[-18.614328384399414,-41.16144561767578,-13.177658081054688],[-13.052042961120605,-58.52460479736328,-6.615900993347168],[-13.461483001708984,-55.49198532104492,-8.143006324768066],[-13.968526840209961,-52.52927780151367,-9.534695625305176],[-14.616811752319336,-49.713172912597656,-10.766117095947266],[-15.447773933410645,-47.08415603637695,-11.85546588897705],[-16.51410675048828,-44.66704559326172,-12.853264808654785],[-17.833908081054688,-42.45698547363281,-13.825928688049316],[-13.235248565673828,-58.23711013793945,-7.898793697357178],[-13.93143081665039,-55.25862503051758,-9.438748359680176],[-14.682183265686035,-52.3201904296875,-10.836709022521973],[-15.504985809326172,-49.48514938354492,-12.092151641845703],[-16.433807373046875,-46.801151275634766,-13.232030868530273],[-17.51846694946289,-44.291751861572266,-14.303847312927246],[-13.892009735107422,-58.09636306762695,-9.183006286621094],[-14.82066535949707,-55.11662673950195,-10.680314064025879],[-15.74992561340332,-52.15183639526367,-12.05759334564209],[-16.692386627197266,-49.27186584472656,-13.32736873626709],[-17.676284790039062,-46.52494430541992,-14.519606590270996],[-14.972887992858887,-57.987060546875,-10.386674880981445],[-16.068283081054688,-54.959190368652344,-11.817625999450684],[-17.12432289123535,-51.94611740112305,-13.165287017822266],[-18.149948120117188,-49.017578125,-14.447612762451172],[-16.389442443847656,-57.80455017089844,-11.472490310668945],[-17.60055923461914,-54.71665573120117,-12.827237129211426],[-18.749309539794922,-51.66231918334961,-14.140188217163086],[-18.03428840637207,-57.49707794189453,-12.425895690917969],[-19.326698303222656,-54.37315368652344,-13.701951026916504],[-19.798969268798828,-57.069374084472656,-13.244041442871094],[-3.7618446350097656,-42.896278381347656,33.63225555419922],[-3.5319502353668213,-40.384517669677734,34.758419036865234],[-3.29374361038208,-37.791412353515625,35.896331787109375],[-3.091963768005371,-35.205684661865234,37.033241271972656],[-2.9835877418518066,-32.67253112792969,38.15498352050781],[-3.022364616394043,-30.204771041870117,39.23398208618164],[-3.228940010070801,-27.792694091796875,40.23859405517578],[-3.5969913005828857,-25.42053985595703,41.14116668701172],[-4.089496612548828,-23.067232131958008,41.93156433105469],[-4.649207592010498,-20.705495834350586,42.62659454345703],[-5.2108564376831055,-18.314233779907227,43.28611755371094],[-5.731456279754639,-15.89004898071289,43.973175048828125],[-6.182079315185547,-13.448612213134766,44.739288330078125],[-6.5399885177612305,-11.019735336303711,45.613162994384766],[-6.785250186920166,-8.635879516601562,46.590030670166016],[-6.915932655334473,-6.310670852661133,47.63127136230469],[-6.937955856323242,-4.046230316162109,48.69861602783203],[-6.869879722595215,-1.840523362159729,49.762569427490234],[-6.737807273864746,0.3032172918319702,50.80897903442383],[-6.577172756195068,2.383192300796509,51.84153747558594],[-6.416583061218262,4.398075103759766,52.87004089355469],[-6.2769269943237305,6.34918737411499,53.90080642700195],[-6.171383857727051,8.242325782775879,54.93191146850586],[-6.107705593109131,10.087157249450684,55.94995880126953],[-6.087408065795898,11.901864051818848,56.93721389770508],[-6.120379447937012,13.701179504394531,57.87596893310547],[-6.227485179901123,15.498157501220703,58.751121520996094],[-6.446967124938965,17.30158042907715,59.54539108276367],[-6.818822860717773,19.11035919189453,60.240047454833984],[-7.364227294921875,20.906118392944336,60.80900192260742],[-8.074213027954102,22.64072036743164,61.2144889831543],[-8.198952674865723,25.397096633911133,59.91463851928711],[-7.56736946105957,26.724884033203125,58.08076477050781],[-7.03580904006958,28.08736801147461,56.03578567504883],[-6.622715473175049,29.459938049316406,53.83708572387695],[-6.3316192626953125,30.829421997070312,51.522117614746094],[-6.154067039489746,32.182762145996094,49.12462615966797],[-6.074688911437988,33.50811004638672,46.67461395263672],[-6.084341049194336,34.79486846923828,44.19330596923828],[-6.175517559051514,36.03411102294922,41.6985969543457],[-6.3436713218688965,37.214134216308594,39.20506286621094],[-6.569697380065918,38.32684326171875,36.72282791137695],[-6.828101634979248,39.35748291015625,34.25540542602539],[-7.0826826095581055,40.2834358215332,31.802593231201172],[-7.286012649536133,41.072025299072266,29.363811492919922],[-7.383747577667236,41.683807373046875,26.943418502807617],[-7.345630168914795,42.101654052734375,24.55071258544922],[-7.162130355834961,42.312774658203125,22.19675064086914],[-6.84775447845459,42.312442779541016,19.88841438293457],[-6.4313063621521,42.08690643310547,17.62906837463379],[-5.956647872924805,41.63685607910156,15.415993690490723],[-5.4583210945129395,40.95979690551758,13.250093460083008],[-4.96173095703125,40.05028533935547,11.137857437133789],[-4.486107349395752,38.90385055541992,9.09056568145752],[-4.048553466796875,37.511966705322266,7.12661600112915],[-3.658414602279663,35.89637756347656,5.255393028259277],[-3.3237791061401367,34.06907653808594,3.489217758178711],[-3.0495572090148926,32.04621505737305,1.8377861976623535],[-2.839207410812378,29.842988967895508,0.31157171726226807],[-2.68812894821167,27.49202537536621,-1.0924127101898193],[-2.586566925048828,25.03988265991211,-2.3863627910614014],[-2.5237815380096436,22.561880111694336,-3.5771355628967285],[-3.21144962310791,-40.821502685546875,32.95795822143555],[-2.9808831214904785,-38.09709167480469,34.05864715576172],[-2.7710821628570557,-35.38370132446289,35.17286682128906],[-2.6136136054992676,-32.718204498291016,36.29363250732422],[-2.549506902694702,-30.12344741821289,37.406883239746094],[-2.6151514053344727,-27.597740173339844,38.48651123046875],[-2.8226561546325684,-25.121746063232422,39.50568389892578],[-3.1624436378479004,-22.6760311126709,40.444427490234375],[-3.5995125770568848,-20.23743438720703,41.302833557128906],[-4.099481105804443,-17.793363571166992,42.08761978149414],[-4.612945556640625,-15.332447052001953,42.84199142456055],[-5.108405590057373,-12.858232498168945,43.60908889770508],[-5.565450668334961,-10.387178421020508,44.422115325927734],[-5.9692816734313965,-7.943873405456543,45.29489517211914],[-6.2939677238464355,-5.550602912902832,46.22836685180664],[-6.528207778930664,-3.2180516719818115,47.19788360595703],[-6.663322448730469,-0.9504167437553406,48.176998138427734],[-6.7059173583984375,1.2491307258605957,49.138790130615234],[-6.659082412719727,3.3769643306732178,50.08274459838867],[-6.556126594543457,5.4342756271362305,51.014122009277344],[-6.428856372833252,7.423966884613037,51.94194412231445],[-6.301872253417969,9.352468490600586,52.87249755859375],[-6.192069053649902,11.229634284973145,53.80095672607422],[-6.1131696701049805,13.070301055908203,54.72834777832031],[-6.07246732711792,14.888097763061523,55.633949279785156],[-6.084929943084717,16.69321632385254,56.50489044189453],[-6.176873683929443,18.49172592163086,57.329349517822266],[-6.394636631011963,20.284500122070312,58.09886932373047],[-6.784109115600586,22.06292724609375,58.79582977294922],[-7.376734256744385,23.79544448852539,59.39949035644531],[-2.816643714904785,-38.80755615234375,32.18088150024414],[-2.6071877479553223,-35.91500473022461,33.27920150756836],[-2.4254119396209717,-33.08216857910156,34.39039611816406],[-2.2938239574432373,-30.327716827392578,35.509193420410156],[-2.243626356124878,-27.658782958984375,36.623104095458984],[-2.3049135208129883,-25.06072235107422,37.71061325073242],[-2.484388589859009,-22.508113861083984,38.751625061035156],[-2.770277738571167,-19.977338790893555,39.735252380371094],[-3.143820285797119,-17.454975128173828,40.65798568725586],[-3.5849127769470215,-14.933813095092773,41.52056884765625],[-4.05727481842041,-12.409086227416992,42.34953308105469],[-4.538883209228516,-9.887540817260742,43.17040252685547],[-5.0171284675598145,-7.3847222328186035,43.99871063232422],[-5.4747090339660645,-4.919034004211426,44.84368133544922],[-5.881410121917725,-2.5078039169311523,45.71229553222656],[-6.214247226715088,-0.15931501984596252,46.592308044433594],[-6.454235076904297,2.1195428371429443,47.46343994140625],[-6.583761215209961,4.323416709899902,48.31734085083008],[-6.59871244430542,6.44624662399292,49.158226013183594],[-6.533057689666748,8.49169635772705,49.9905891418457],[-6.422292709350586,10.467613220214844,50.82356643676758],[-6.295965671539307,12.384973526000977,51.6611213684082],[-6.177567005157471,14.260347366333008,52.51116943359375],[-6.085954666137695,16.105934143066406,53.369300842285156],[-6.033336639404297,17.932588577270508,54.21925354003906],[-6.040496826171875,19.74514389038086,55.05150604248047],[-6.142667770385742,21.544048309326172,55.86307144165039],[-6.393882751464844,23.325109481811523,56.64640426635742],[-6.851537227630615,25.07059097290039,57.38661575317383],[-2.583752155303955,-36.79755401611328,31.388193130493164],[-2.3964157104492188,-33.778533935546875,32.49125671386719],[-2.228355884552002,-30.84249496459961,33.603118896484375],[-2.0998241901397705,-28.001535415649414,34.720489501953125],[-2.0398526191711426,-25.25165557861328,35.83460235595703],[-2.0742087364196777,-22.57271957397461,36.92994689941406],[-2.2052414417266846,-19.933683395385742,37.99294662475586],[-2.4314913749694824,-17.318422317504883,39.013641357421875],[-2.7434794902801514,-14.715160369873047,39.985599517822266],[-3.1327199935913086,-12.121159553527832,40.90359878540039],[-3.574124574661255,-9.535063743591309,41.779232025146484],[-4.054887294769287,-6.9653191566467285,42.62132263183594],[-4.5634236335754395,-4.425770282745361,43.43608856201172],[-5.078706741333008,-1.9303193092346191,44.232234954833984],[-5.564117431640625,0.5068223476409912,45.02078628540039],[-5.9875335693359375,2.879199981689453,45.79534149169922],[-6.308374881744385,5.178189277648926,46.556514739990234],[-6.499075889587402,7.3957390785217285,47.30489730834961],[-6.552597522735596,9.522941589355469,48.04704666137695],[-6.504648208618164,11.566128730773926,48.78829574584961],[-6.396111965179443,13.537508964538574,49.53615188598633],[-6.264030456542969,15.455571174621582,50.30535888671875],[-6.137876510620117,17.336851119995117,51.098289489746094],[-6.040095806121826,19.192138671875,51.91206359863281],[-5.988096237182617,21.028079986572266,52.73405838012695],[-6.01010799407959,22.844200134277344,53.5623779296875],[-6.148534774780273,24.636884689331055,54.394859313964844],[-6.467483043670654,26.3953857421875,55.223426818847656],[-2.4776008129119873,-34.77760314941406,30.62432861328125],[-2.299434185028076,-31.661640167236328,31.72997283935547],[-2.1295053958892822,-28.638336181640625,32.83800506591797],[-1.9894993305206299,-25.7136173248291,33.949031829833984],[-1.9064993858337402,-22.88016128540039,35.05888748168945],[-1.9018702507019043,-20.11309051513672,36.15713119506836],[-1.9836766719818115,-17.388214111328125,37.23292922973633],[-2.1554195880889893,-14.689697265625,38.27531051635742],[-2.4151370525360107,-12.007948875427246,39.274234771728516],[-2.763664484024048,-9.342938423156738,40.21914291381836],[-3.186934232711792,-6.6954216957092285,41.108001708984375],[-3.6774065494537354,-4.0756306648254395,41.940223693847656],[-4.221086502075195,-1.4938511848449707,42.71806335449219],[-4.792823314666748,1.038237452507019,43.448814392089844],[-5.350596904754639,3.5090982913970947,44.142494201660156],[-5.843376636505127,5.91301155090332,44.81132888793945],[-6.2199201583862305,8.239744186401367,45.46729278564453],[-6.447235584259033,10.478224754333496,46.11671447753906],[-6.517536163330078,12.61686897277832,46.7696647644043],[-6.4707207679748535,14.664115905761719,47.4312858581543],[-6.356255531311035,16.639442443847656,48.11852264404297],[-6.217797756195068,18.563858032226562,48.84016418457031],[-6.088418960571289,20.4543514251709,49.59912872314453],[-5.994080066680908,22.31841278076172,50.39399719238281],[-5.957496643066406,24.157848358154297,51.21856689453125],[-6.012580871582031,25.968290328979492,52.07124328613281],[-6.2099995613098145,27.741682052612305,52.947998046875],[-2.42842435836792,-32.74228286743164,29.9032039642334],[-2.2490220069885254,-29.552536010742188,31.003482818603516],[-2.0717833042144775,-26.453258514404297,32.10104751586914],[-1.9181959629058838,-23.448774337768555,33.20026397705078],[-1.8118776082992554,-20.528045654296875,34.29976272583008],[-1.7752685546875,-17.673967361450195,35.39281463623047],[-1.8184211254119873,-14.863133430480957,36.467716217041016],[-1.948934555053711,-12.081707000732422,37.511592864990234],[-2.170611619949341,-9.321502685546875,38.51091766357422],[-2.4930591583251953,-6.58493185043335,39.44981384277344],[-2.910886287689209,-3.876129150390625,40.320404052734375],[-3.4170942306518555,-1.2025024890899658,41.11692810058594],[-3.9963035583496094,1.4269390106201172,41.83830261230469],[-4.620346546173096,4.0029120445251465,42.486812591552734],[-5.233469486236572,6.514325141906738,43.08392333984375],[-5.773439884185791,8.956305503845215,43.6522102355957],[-6.182278156280518,11.316634178161621,44.21087646484375],[-6.423760890960693,13.580732345581055,44.77231216430664],[-6.492300987243652,15.733945846557617,45.348793029785156],[-6.436939239501953,17.78951644897461,45.95503234863281],[-6.314517974853516,19.771615982055664,46.60184860229492],[-6.172638416290283,21.703624725341797,47.297584533691406],[-6.046931743621826,23.60081672668457,48.04529571533203],[-5.966164588928223,25.466625213623047,48.847408294677734],[-5.95667839050293,27.299076080322266,49.697696685791016],[-6.059196472167969,29.09035301208496,50.59239196777344],[-2.3508760929107666,-30.691593170166016,29.212522506713867],[-2.172511100769043,-27.44567108154297,30.299270629882812],[-1.9961564540863037,-24.280187606811523,31.381614685058594],[-1.840996265411377,-21.196075439453125,32.46501922607422],[-1.727405309677124,-18.19000244140625,33.55023193359375],[-1.6758854389190674,-15.24783706665039,34.629207611083984],[-1.6987155675888062,-12.349377632141113,35.68830490112305],[-1.8065167665481567,-9.48258113861084,36.71208190917969],[-2.008514404296875,-6.6414384841918945,37.68349075317383],[-2.321276903152466,-3.8338005542755127,38.588260650634766],[-2.743223190307617,-1.0609596967697144,39.414390563964844],[-3.2691433429718018,1.6704471111297607,40.153324127197266],[-3.8832948207855225,4.353733539581299,40.79808044433594],[-4.548465728759766,6.978924751281738,41.35843276977539],[-5.19993257522583,9.53615951538086,41.861610412597656],[-5.767420768737793,12.02077865600586,42.33652114868164],[-6.187966346740723,14.417584419250488,42.80916976928711],[-6.424648284912109,16.707164764404297,43.296043395996094],[-6.480576992034912,18.87420654296875,43.820091247558594],[-6.413311958312988,20.93716812133789,44.3903694152832],[-6.284546375274658,22.924522399902344,45.01673126220703],[-6.144200325012207,24.85982894897461,45.70669937133789],[-6.028777122497559,26.755718231201172,46.465084075927734],[-5.968400001525879,28.612274169921875,47.29305648803711],[-5.994348526000977,30.424293518066406,48.182472229003906],[-2.18648624420166,-28.634130477905273,28.53228187561035],[-2.0230214595794678,-25.34348487854004,29.600122451782227],[-1.8670096397399902,-22.11393165588379,30.66400718688965],[-1.7307320833206177,-18.95223617553711,31.730302810668945],[-1.6302777528762817,-15.859384536743164,32.79661178588867],[-1.5844407081604004,-12.826484680175781,33.85210418701172],[-1.60779869556427,-9.836299896240234,34.8800048828125],[-1.7137409448623657,-6.879657745361328,35.86180114746094],[-1.9151532649993896,-3.9571168422698975,36.78390121459961],[-2.2317452430725098,-1.07552170753479,37.631996154785156],[-2.6666557788848877,1.764649510383606,38.39295959472656],[-3.2168219089508057,4.559296607971191,39.0531120300293],[-3.8617141246795654,7.299962520599365,39.612037658691406],[-4.557683944702148,9.978119850158691,40.0828971862793],[-5.23317289352417,12.58444595336914,40.49641036987305],[-5.811443328857422,15.113153457641602,40.887691497802734],[-6.226284980773926,17.544157028198242,41.287418365478516],[-6.447214126586914,19.853988647460938,41.723323822021484],[-6.486336708068848,22.02971839904785,42.21371078491211],[-6.4080328941345215,24.095413208007812,42.766685485839844],[-6.276862144470215,26.081668853759766,43.39085388183594],[-6.143005847930908,28.011547088623047,44.0937385559082],[-6.0418596267700195,29.89522933959961,44.87773895263672],[-6.006814479827881,31.729427337646484,45.74217224121094],[-1.9163696765899658,-26.578372955322266,27.851398468017578],[-1.7894067764282227,-23.245344161987305,28.895950317382812],[-1.6728657484054565,-19.95315170288086,29.939451217651367],[-1.5747132301330566,-16.71350860595703,30.984359741210938],[-1.507431149482727,-13.532156944274902,32.024356842041016],[-1.4885799884796143,-10.404476165771484,33.044219970703125],[-1.5343601703643799,-7.317132949829102,34.023193359375],[-1.6577352285385132,-4.269577503204346,34.94691467285156],[-1.8747544288635254,-1.2615662813186646,35.8015251159668],[-2.2076961994171143,1.6979783773422241,36.57511901855469],[-2.664652109146118,4.611611843109131,37.250850677490234],[-3.2409331798553467,7.472326278686523,37.82258987426758],[-3.9124531745910645,10.2732572555542,38.292171478271484],[-4.630707740783691,13.006793022155762,38.674842834472656],[-5.31805944442749,15.663000106811523,39.00596618652344],[-5.8927412033081055,18.23296356201172,39.32514190673828],[-6.291754722595215,20.690444946289062,39.67448425292969],[-6.492082118988037,23.01190185546875,40.07764434814453],[-6.514554023742676,25.188228607177734,40.552223205566406],[-6.428407192230225,27.247596740722656,41.10504150390625],[-6.299184799194336,29.223114013671875,41.743560791015625],[-6.174591541290283,31.136850357055664,42.4718017578125],[-6.090276718139648,32.995521545410156,43.289710998535156],[-1.5624175071716309,-24.52039337158203,27.16202735900879],[-1.4843274354934692,-21.143354415893555,28.181581497192383],[-1.4194278717041016,-17.789331436157227,29.19981575012207],[-1.3728463649749756,-14.473011016845703,30.215543746948242],[-1.3552662134170532,-11.202269554138184,31.217729568481445],[-1.3825066089630127,-7.9761528968811035,32.186134338378906],[-1.4668794870376587,-4.791663646697998,33.1031608581543],[-1.623940348625183,-1.649020791053772,33.95381546020508],[-1.8710441589355469,1.4490959644317627,34.726585388183594],[-2.2333929538726807,4.493961334228516,35.4079475402832],[-2.7191832065582275,7.483865737915039,35.990360260009766],[-3.3230607509613037,10.413277626037598,36.46982192993164],[-4.018402576446533,13.276500701904297,36.84962463378906],[-4.752161026000977,16.065757751464844,37.14873504638672],[-5.441119194030762,18.769018173217773,37.40665054321289],[-6.003612995147705,21.37136459350586,37.67450714111328],[-6.381868362426758,23.8446044921875,37.99079132080078],[-6.5609822273254395,26.166242599487305,38.37834167480469],[-6.56928825378418,28.330944061279297,38.85346603393555],[-6.479665756225586,30.373092651367188,39.42124557495117],[-6.35496711730957,32.32729721069336,40.08477020263672],[-6.241138458251953,34.212467193603516,40.84513473510742],[-1.1606619358062744,-22.443706512451172,26.453474044799805],[-1.1330645084381104,-19.023115158081055,27.445697784423828],[-1.122088074684143,-15.611964225769043,28.432538986206055],[-1.1329072713851929,-12.22377872467041,29.408714294433594],[-1.1752712726593018,-8.865715980529785,30.358312606811523],[-1.2578752040863037,-5.5451860427856445,31.2634220123291],[-1.3942300081253052,-2.2616915702819824,32.105018615722656],[-1.5989105701446533,0.9799928665161133,32.87015151977539],[-1.891257643699646,4.176307201385498,33.545536041259766],[-2.2931952476501465,7.309884071350098,34.12854766845703],[-2.814181327819824,10.379362106323242,34.614356994628906],[-3.4483962059020996,13.380102157592773,35.000335693359375],[-4.166475772857666,16.306270599365234,35.29298782348633],[-4.910822868347168,19.148775100708008,35.514774322509766],[-5.5954437255859375,21.89015007019043,35.71762466430664],[-6.1418046951293945,24.513559341430664,35.94963836669922],[-6.498188495635986,26.988983154296875,36.248775482177734],[-6.657471656799316,29.295059204101562,36.636165618896484],[-6.655826091766357,31.43494415283203,37.12583923339844],[-6.565472602844238,33.448760986328125,37.71784210205078],[-6.446287631988525,35.36925506591797,38.41185760498047],[-0.7639071941375732,-20.336421966552734,25.70521354675293],[-0.7792502641677856,-16.87412452697754,26.66849708557129],[-0.8164137601852417,-13.410449981689453,27.61834144592285],[-0.8822936415672302,-9.954915046691895,28.544639587402344],[-0.9818346500396729,-6.516474723815918,29.432920455932617],[-1.123794436454773,-3.103297233581543,30.26333236694336],[-1.318861484527588,0.2797836661338806,31.018766403198242],[-1.5824005603790283,3.626415967941284,31.684476852416992],[-1.9281032085418701,6.92228364944458,32.25825881958008],[-2.3767595291137695,10.146478652954102,32.741180419921875],[-2.938384532928467,13.297433853149414,33.1297492980957],[-3.605501174926758,16.369699478149414,33.42425537109375],[-4.345554351806641,19.356111526489258,33.63391876220703],[-5.09659481048584,22.242488861083984,33.79429244995117],[-5.773495197296143,25.010162353515625,33.95575714111328],[-6.301990509033203,27.639591217041016,34.16651153564453],[-6.636696815490723,30.09876823425293,34.463035583496094],[-6.780183792114258,32.37359619140625,34.86344909667969],[-6.772217750549316,34.477203369140625,35.3763313293457],[-6.682777404785156,36.450889587402344,35.99764633178711],[-0.4088720977306366,-18.196075439453125,24.896438598632812],[-0.4547443687915802,-14.695029258728027,25.828397750854492],[-0.5298212766647339,-11.182331085205078,26.735797882080078],[-0.6399782299995422,-7.6647467613220215,27.608110427856445],[-0.7923454642295837,-4.148446083068848,28.427490234375],[-0.992995023727417,-0.6437724232673645,29.17501449584961],[-1.2520580291748047,2.8427605628967285,29.832199096679688],[-1.577370524406433,6.293227195739746,30.39542007446289],[-1.9807852506637573,9.688453674316406,30.866647720336914],[-2.481311321258545,13.00376033782959,31.249126434326172],[-3.0874245166778564,16.235363006591797,31.54207992553711],[-3.7893881797790527,19.37578582763672,31.747722625732422],[-4.548672676086426,22.412050247192383,31.888530731201172],[-5.30387020111084,25.330150604248047,31.99898910522461],[-5.970929145812988,28.108386993408203,32.13201141357422],[-6.480408668518066,30.723485946655273,32.33485412597656],[-6.7962236404418945,33.147865295410156,32.64129638671875],[-6.927760124206543,35.37858963012695,33.06290817260742],[-6.915744304656982,37.43412780761719,33.60388946533203],[-0.11849164217710495,-16.02798843383789,24.00954818725586],[-0.1800166219472885,-12.490218162536621,24.906898498535156],[-0.279130756855011,-8.930205345153809,25.77049446105957],[-0.42446577548980713,-5.3505425453186035,26.585052490234375],[-0.6232972741127014,-1.7561389207839966,27.330814361572266],[-0.8819343447685242,1.8436695337295532,27.986223220825195],[-1.2023766040802002,5.431744575500488,28.543495178222656],[-1.589359164237976,8.98404598236084,29.004047393798828],[-2.052659749984741,12.476977348327637,29.372631072998047],[-2.607905149459839,15.880773544311523,29.655902862548828],[-3.2613463401794434,19.188274383544922,29.854516983032227],[-3.9952685832977295,22.3845272064209,29.98394012451172],[-4.7717719078063965,25.457454681396484,30.06535530090332],[-5.528782844543457,28.39069366455078,30.13685417175293],[-6.183837413787842,31.157825469970703,30.253217697143555],[-6.675200462341309,33.73741149902344,30.460044860839844],[-6.975325584411621,36.112060546875,30.7843074798584],[-7.097393989562988,38.285888671875,31.232135772705078],[0.09778100252151489,-13.841230392456055,23.031112670898438],[0.0347064845263958,-10.26594066619873,23.89298439025879],[-0.0778435543179512,-6.655679702758789,24.71099281311035],[-0.24976450204849243,-3.0103235244750977,25.465688705444336],[-0.4903815984725952,0.6683441400527954,26.13168716430664],[-0.8005932569503784,4.363317966461182,26.69476318359375],[-1.1782259941101074,8.050929069519043,27.152820587158203],[-1.6253390312194824,11.70223331451416,27.510950088500977],[-2.1484553813934326,15.28816032409668,27.77780532836914],[-2.760258197784424,18.773696899414062,27.96188735961914],[-3.4569449424743652,22.14212417602539,28.077295303344727],[-4.2208404541015625,25.379215240478516,28.137935638427734],[-5.0121002197265625,28.47077751159668,28.168785095214844],[-5.768166542053223,31.396108627319336,28.210905075073242],[-6.410264492034912,34.128746032714844,28.321552276611328],[-6.88535213470459,36.655338287353516,28.540102005004883],[-7.171830654144287,38.96561050415039,28.88746452331543],[0.24151931703090668,-11.645410537719727,21.95541763305664],[0.1861041933298111,-8.02774715423584,22.780811309814453],[0.06742946803569794,-4.360464096069336,23.552356719970703],[-0.12626437842845917,-0.639414370059967,24.242881774902344],[-0.4019799530506134,3.1279289722442627,24.829334259033203],[-0.7576699256896973,6.918652534484863,25.30106544494629],[-1.1880404949188232,10.703904151916504,25.66023063659668],[-1.6921838521957397,14.449015617370605,25.916383743286133],[-2.2744393348693848,18.11931800842285,26.080272674560547],[-2.936642646789551,21.668663024902344,26.17488670349121],[-3.673748016357422,25.080509185791016,26.212583541870117],[-4.464657306671143,28.33816909790039,26.211040496826172],[-5.267609119415283,31.42340850830078,26.198322296142578],[-6.020164966583252,34.315242767333984,26.220813751220703],[-6.649528503417969,36.993377685546875,26.33344078063965],[-7.109524726867676,39.44995880126953,26.569448471069336],[0.3301507532596588,-9.446956634521484,20.78712272644043],[0.28419074416160583,-5.777663230895996,21.576168060302734],[0.1597922444343567,-2.0398788452148438,22.29785919189453],[-0.05372846871614456,1.7660506963729858,22.922962188720703],[-0.36120903491973877,5.627140045166016,23.42889404296875],[-0.7588464617729187,9.514913558959961,23.807907104492188],[-1.2384482622146606,13.39437484741211,24.06715202331543],[-1.7977139949798584,17.224740982055664,24.218605041503906],[-2.431276321411133,20.95978546142578,24.287837982177734],[-3.1394920349121094,24.553176879882812,24.297231674194336],[-3.9125351905822754,27.98573875427246,24.26276206970215],[-4.726324558258057,31.236801147460938,24.20473861694336],[-5.5364089012146,34.287994384765625,24.157989501953125],[-6.283488750457764,37.1241340637207,24.169532775878906],[-6.899893283843994,39.72858428955078,24.291513442993164],[0.379316508769989,-7.248256206512451,19.53144073486328],[0.3383151888847351,-3.5120184421539307,20.284101486206055],[0.20458494126796722,0.30865374207496643,20.954833984375],[-0.02962995134294033,4.208127498626709,21.512102127075195],[-0.36796844005584717,8.167640686035156,21.933992385864258],[-0.8053747415542603,12.151633262634277,22.216901779174805],[-1.3326877355575562,16.118375778198242,22.370920181274414],[-1.9395601749420166,20.014331817626953,22.42375373840332],[-2.619722366333008,23.79315185546875,22.40070152282715],[-3.3690025806427,27.406076431274414,22.328857421875],[-4.173738956451416,30.83013153076172,22.22607421875],[-5.004847526550293,34.04490661621094,22.120262145996094],[-5.818595886230469,37.03814697265625,22.04853057861328],[-6.558740139007568,39.797401428222656,22.057607650756836],[0.40124860405921936,-5.045541286468506,18.19705581665039],[0.3556820750236511,-1.2275334596633911,18.914264678955078],[0.20713485777378082,2.687438726425171,19.53138542175293],[-0.0505184531211853,6.688169479370117,20.015644073486328],[-0.4203159213066101,10.748208045959473,20.347257614135742],[-0.8976763486862183,14.82394790649414,20.525402069091797],[-1.4670547246932983,18.859012603759766,20.5771484375],[-2.11763334274292,22.79940414428711,20.53144645690918],[-2.839874744415283,26.596349716186523,20.41815757751465],[-3.6263208389282227,30.197750091552734,20.2670841217041],[-4.456812858581543,33.58185577392578,20.10373306274414],[-5.300668239593506,36.734920501708984,19.959360122680664],[-6.115615367889404,39.64734649658203,19.871950149536133],[0.4010666608810425,-2.8374228477478027,16.793670654296875],[0.34100034832954407,1.075871229171753,17.475040435791016],[0.17142321169376373,5.095364570617676,18.033721923828125],[-0.11323759704828262,9.202398300170898,18.436899185180664],[-0.5171608328819275,13.361464500427246,18.665882110595703],[-1.0313884019851685,17.511159896850586,18.738056182861328],[-1.6405234336853027,21.593801498413086,18.684144973754883],[-2.331594228744507,25.55237579345703,18.539047241210938],[-3.093193531036377,29.334712982177734,18.3349609375],[-3.911428928375244,32.891170501708984,18.11072540283203],[-4.762881755828857,36.2079963684082,17.89525604248047],[-5.616725921630859,39.27457046508789,17.721311569213867],[0.38112354278564453,-0.6179315447807312,15.336355209350586],[0.29766571521759033,3.4026479721069336,15.97726821899414],[0.10103432834148407,7.533761978149414,16.46782875061035],[-0.21589453518390656,11.747970581054688,16.774085998535156],[-0.654013454914093,15.989233016967773,16.894695281982422],[-1.205509066581726,20.192459106445312,16.853992462158203],[-1.8536006212234497,24.29601287841797,16.690813064575195],[-2.584425449371338,28.238868713378906,16.443429946899414],[-3.38128399848938,31.971424102783203,16.153528213500977],[-4.226451873779297,35.45410919189453,15.864838600158691],[-5.095398902893066,38.677398681640625,15.607015609741211],[0.33877310156822205,1.6200155019760132,13.83621597290039],[0.22521881759166718,5.7561869621276855,14.426374435424805],[-0.004801098257303238,10.001712799072266,14.830639839172363],[-0.355964332818985,14.306864738464355,15.029752731323242],[-0.8310303688049316,18.610122680664062,15.031166076660156],[-1.4213939905166626,22.839599609375,14.870916366577148],[-2.1100573539733887,26.92885971069336,14.592900276184082],[-2.8784396648406982,30.81877899169922,14.247102737426758],[-3.7065327167510986,34.47080612182617,13.8798246383667],[-4.575093746185303,37.85191345214844,13.536706924438477],[0.2697449028491974,3.880558729171753,12.29891586303711],[0.11993765830993652,8.136552810668945,12.819214820861816],[-0.14596769213676453,12.480737686157227,13.122696876525879],[-0.5356507301330566,16.857126235961914,13.199957847595215],[-1.0514153242111206,21.194522857666016,13.071783065795898],[-1.6846339702606201,25.413698196411133,12.783045768737793],[-2.4137659072875977,29.44886016845703,12.392356872558594],[-3.2169036865234375,33.25276565551758,11.956137657165527],[-4.073228359222412,36.794227600097656,11.521364212036133],[0.16800406575202942,6.164942741394043,10.722623825073242],[-0.01999383047223091,10.525504112243652,11.154739379882812],[-0.32676607370376587,14.949254989624023,11.339284896850586],[-0.7603272199630737,19.368928909301758,11.280323028564453],[-1.3231209516525269,23.702646255493164,11.009466171264648],[-2.001206874847412,27.868778228759766,10.591968536376953],[-2.769376516342163,31.813655853271484,10.095758438110352],[-3.6049959659576416,35.498722076416016,9.578540802001953],[0.030185824260115623,8.453374862670898,9.106429100036621],[-0.20098546147346497,12.900171279907227,9.43002986907959],[-0.5550006628036499,17.37601089477539,9.477500915527344],[-1.0408097505569458,21.800561904907227,9.264215469360352],[-1.654819130897522,26.08479881286621,8.84644889831543],[-2.377872943878174,30.157590866088867,8.305177688598633],[-3.1837451457977295,33.975162506103516,7.711275100708008],[-0.1517079472541809,10.735753059387207,7.444732189178467],[-0.4323647618293762,15.241265296936035,7.638007640838623],[-0.842836856842041,19.7303466796875,7.526226997375488],[-1.3861738443374634,24.1109676361084,7.150803565979004],[-2.0521152019500732,28.300796508789062,6.589702606201172],[-2.8188087940216064,32.238853454589844,5.932456016540527],[-0.3875000774860382,12.992047309875488,5.731586456298828],[-0.727034330368042,17.517440795898438,5.7688984870910645],[-1.1998425722122192,21.968997955322266,5.485335350036621],[-1.8018207550048828,26.256214141845703,4.947734355926514],[-2.5182857513427734,30.3040714263916,4.2486114501953125],[-0.6896349787712097,15.195406913757324,3.9580767154693604],[-1.0936412811279297,19.688161849975586,3.822598457336426],[-1.6298543214797974,24.048553466796875,3.362492084503174],[-2.288764238357544,28.187368392944336,2.663382053375244],[-1.064642071723938,17.30706024169922,2.1293978691101074],[-1.5333669185638428,21.70922088623047,1.8118633031845093],[-2.130976915359497,25.91441535949707,1.167758584022522],[-1.5075846910476685,19.2888126373291,0.2587641775608063],[-2.038012981414795,23.5261287689209,-0.2563379406929016],[-2.003230333328247,21.083181381225586,-1.6435022354125977],[-4.418637752532959,-45.36681365966797,33.90160369873047],[-4.975743293762207,-45.665348052978516,35.37485885620117],[-5.539739608764648,-46.02106475830078,36.91147232055664],[-6.048484802246094,-46.43167495727539,38.484962463378906],[-6.455915451049805,-46.886817932128906,40.08090591430664],[-6.744268417358398,-47.360877990722656,41.68853759765625],[-6.929980278015137,-47.82354736328125,43.303619384765625],[-7.041845321655273,-48.25117492675781,44.92787170410156],[-7.1155805587768555,-48.63047409057617,46.564117431640625],[-7.186570644378662,-48.95701217651367,48.2138671875],[-7.2805938720703125,-49.240211486816406,49.87281036376953],[-7.409110069274902,-49.488136291503906,51.53550338745117],[-7.5742692947387695,-49.70484924316406,53.19636154174805],[-7.772681713104248,-49.88857650756836,54.8504753112793],[-7.998212814331055,-50.031761169433594,56.49371337890625],[-8.244508743286133,-50.12815475463867,58.12400817871094],[-8.510746002197266,-50.171119689941406,59.7396354675293],[-8.801204681396484,-50.15671920776367,61.339073181152344],[-9.128446578979492,-50.08127212524414,62.91934585571289],[-9.509005546569824,-49.94779968261719,64.47711181640625],[-9.961984634399414,-49.757659912109375,66.00546264648438],[-10.50761890411377,-49.50724792480469,67.4911880493164],[-11.163900375366211,-49.18599319458008,68.91189575195312],[-11.944070816040039,-48.77069091796875,70.22782135009766],[-12.830967903137207,-48.24359130859375,71.40228271484375],[-13.795978546142578,-47.587257385253906,72.3932876586914],[-14.796204566955566,-46.79839324951172,73.16609954833984],[-15.781970977783203,-45.89284133911133,73.6932373046875],[-16.71379852294922,-44.918697357177734,73.98580932617188],[-17.57701873779297,-43.93488311767578,74.0827865600586],[-18.368417739868164,-43.00398635864258,74.03105926513672],[-18.15009117126465,-41.13393783569336,74.52053833007812],[-17.07863998413086,-39.99676513671875,75.08122253417969],[-15.883962631225586,-38.90290832519531,75.42083740234375],[-14.593645095825195,-37.89177703857422,75.44620513916016],[-13.270541191101074,-36.95987319946289,75.1321792602539],[-12.005339622497559,-36.0255012512207,74.56631469726562],[-10.876230239868164,-34.953369140625,73.90918731689453],[-9.954275131225586,-33.6234130859375,73.31945037841797],[-9.291110038757324,-31.990083694458008,72.92147064208984],[-8.903779983520508,-30.084257125854492,72.7682876586914],[-8.727931022644043,-28.00269317626953,72.78860473632812],[-8.699824333190918,-25.8107852935791,72.88706970214844],[-8.767047882080078,-23.55106544494629,72.97933197021484],[-8.893392562866211,-21.248586654663086,73.00682067871094],[-9.0597562789917,-18.915042877197266,72.94287109375],[-9.260932922363281,-16.553424835205078,72.79824829101562],[-9.500442504882812,-14.159830093383789,72.59446716308594],[-9.777603149414062,-11.729466438293457,72.35691833496094],[-10.077251434326172,-9.258185386657715,72.10599517822266],[-10.36178970336914,-6.750211715698242,71.84953308105469],[-10.589106559753418,-4.213588237762451,71.57770538330078],[-10.725671768188477,-1.6560275554656982,71.26573944091797],[-10.755840301513672,0.9190528988838196,70.87655639648438],[-10.683743476867676,3.5160272121429443,70.36093139648438],[-10.53888988494873,6.141584396362305,69.69161987304688],[-10.34500503540039,8.799939155578613,68.85282897949219],[-10.119908332824707,11.487642288208008,67.84722137451172],[-9.873285293579102,14.189371109008789,66.69010162353516],[-9.611510276794434,16.873647689819336,65.41898345947266],[-9.342778205871582,19.49679183959961,64.0770263671875],[-9.083008766174316,21.989238739013672,62.7117919921875],[-4.235496997833252,-42.91798400878906,35.23014831542969],[-4.771470546722412,-43.147254943847656,36.81172561645508],[-5.31080436706543,-43.50502395629883,38.3954963684082],[-5.808778285980225,-43.96577072143555,39.97537612915039],[-6.238005638122559,-44.50125503540039,41.54303741455078],[-6.5869550704956055,-45.06484603881836,43.10248565673828],[-6.871946811676025,-45.620670318603516,44.658836364746094],[-7.115444183349609,-46.141910552978516,46.22109603881836],[-7.350983142852783,-46.6209716796875,47.791988372802734],[-7.578035354614258,-47.041934967041016,49.38459777832031],[-7.811131954193115,-47.41423797607422,50.99224090576172],[-8.05052661895752,-47.740928649902344,52.6092643737793],[-8.290459632873535,-48.02040481567383,54.229312896728516],[-8.520031929016113,-48.243865966796875,55.84697723388672],[-8.735218048095703,-48.40081024169922,57.460899353027344],[-8.938009262084961,-48.49053192138672,59.065406799316406],[-9.134231567382812,-48.510955810546875,60.65842056274414],[-9.33022403717041,-48.461669921875,62.23716354370117],[-9.554803848266602,-48.34718704223633,63.802818298339844],[-9.831501960754395,-48.17390441894531,65.35194396972656],[-10.182039260864258,-47.94346237182617,66.87667846679688],[-10.628716468811035,-47.651092529296875,68.36219024658203],[-11.18791675567627,-47.282291412353516,69.7824478149414],[-11.884469985961914,-46.81654739379883,71.09466552734375],[-12.694829940795898,-46.23465347290039,72.25618743896484],[-13.590218544006348,-45.524173736572266,73.22056579589844],[-14.526185035705566,-44.690895080566406,73.94861602783203],[-15.462726593017578,-43.76903533935547,74.41756439208984],[-16.371410369873047,-42.8178596496582,74.64713287353516],[-17.25330924987793,-41.907039642333984,74.67437744140625],[-3.986685276031494,-40.3802604675293,36.468074798583984],[-4.505698204040527,-40.616065979003906,38.12630081176758],[-5.045698165893555,-41.02312469482422,39.743324279785156],[-5.580103397369385,-41.56096649169922,41.31346130371094],[-6.0868611335754395,-42.181854248046875,42.84008026123047],[-6.554027080535889,-42.836055755615234,44.338172912597656],[-6.991133213043213,-43.48625564575195,45.82322311401367],[-7.416383743286133,-44.113197326660156,47.306922912597656],[-7.822125434875488,-44.69609451293945,48.809234619140625],[-8.193421363830566,-45.21388626098633,50.344696044921875],[-8.533594131469727,-45.6678466796875,51.905738830566406],[-8.834721565246582,-46.053550720214844,53.48491668701172],[-9.08329963684082,-46.362525939941406,55.07353973388672],[-9.274897575378418,-46.58763122558594,56.666282653808594],[-9.417998313903809,-46.72822570800781,58.25690460205078],[-9.52199649810791,-46.78958511352539,59.83968734741211],[-9.59578800201416,-46.77507019042969,61.41169357299805],[-9.665589332580566,-46.69330978393555,62.9751091003418],[-9.769858360290527,-46.5501823425293,64.53205871582031],[-9.93342113494873,-46.3509407043457,66.0784683227539],[-10.179607391357422,-46.095489501953125,67.60516357421875],[-10.529773712158203,-45.775047302246094,69.09416198730469],[-11.011841773986816,-45.37349319458008,70.51678466796875],[-11.643011093139648,-44.865020751953125,71.82420349121094],[-12.400327682495117,-44.23420715332031,72.96910858154297],[-13.25482177734375,-43.47532272338867,73.89898681640625],[-14.170626640319824,-42.611656188964844,74.57610321044922],[-15.115363121032715,-41.69265365600586,74.98416900634766],[-16.075031280517578,-40.79022979736328,75.14376831054688],[-3.739272117614746,-37.83738327026367,37.66265106201172],[-4.270106315612793,-38.130680084228516,39.35738754272461],[-4.86006498336792,-38.611751556396484,40.97151184082031],[-5.485718250274658,-39.22835922241211,42.50201416015625],[-6.123789310455322,-39.933616638183594,43.959739685058594],[-6.753735065460205,-40.67948913574219,45.371559143066406],[-7.378110885620117,-41.4372673034668,46.75861740112305],[-7.9703545570373535,-42.171539306640625,48.159080505371094],[-8.50855827331543,-42.85126876831055,49.59791946411133],[-8.968121528625488,-43.44371795654297,51.08866882324219],[-9.343241691589355,-43.94151306152344,52.618656158447266],[-9.61795425415039,-44.335899353027344,54.174468994140625],[-9.790553092956543,-44.62828826904297,55.74356460571289],[-9.870715141296387,-44.82548522949219,57.315338134765625],[-9.880424499511719,-44.93511962890625,58.883941650390625],[-9.831561088562012,-44.96839141845703,60.444053649902344],[-9.758369445800781,-44.935848236083984,61.999176025390625],[-9.695464134216309,-44.84497833251953,63.553245544433594],[-9.682307243347168,-44.69762420654297,65.1077880859375],[-9.744048118591309,-44.49687194824219,66.65727233886719],[-9.903722763061523,-44.23947525024414,68.18917846679688],[-10.19194221496582,-43.911224365234375,69.68260192871094],[-10.629582405090332,-43.49079132080078,71.10346221923828],[-11.231611251831055,-42.949928283691406,72.39796447753906],[-11.97677993774414,-42.27832794189453,73.51153564453125],[-12.840248107910156,-41.485145568847656,74.39035034179688],[-13.789950370788574,-40.610755920410156,75.00311279296875],[-14.803377151489258,-39.7203369140625,75.33927154541016],[-3.5649213790893555,-35.3410758972168,38.81884002685547],[-4.16082763671875,-35.71617889404297,40.50360870361328],[-4.854525089263916,-36.274532318115234,42.07123565673828],[-5.620234489440918,-36.97117233276367,43.51988983154297],[-6.423254489898682,-37.7641716003418,44.8707275390625],[-7.232735633850098,-38.615516662597656,46.16065216064453],[-8.00663948059082,-39.477176666259766,47.44805908203125],[-8.706647872924805,-40.29911422729492,48.779991149902344],[-9.299989700317383,-41.03413009643555,50.18025207519531],[-9.756035804748535,-41.643470764160156,51.651424407958984],[-10.058882713317871,-42.120548248291016,53.16913604736328],[-10.211594581604004,-42.478126525878906,54.71126174926758],[-10.228199005126953,-42.73456573486328,56.26084899902344],[-10.136425018310547,-42.90578079223633,57.8092041015625],[-9.966104507446289,-43.00321578979492,59.35311508178711],[-9.756913185119629,-43.03968048095703,60.89555358886719],[-9.54865837097168,-43.02019500732422,62.442081451416016],[-9.374771118164062,-42.94826889038086,63.995689392089844],[-9.272663116455078,-42.82192611694336,65.55541229248047],[-9.267327308654785,-42.6422233581543,67.1119155883789],[-9.38714599609375,-42.398948669433594,68.64899444580078],[-9.656479835510254,-42.0748405456543,70.14064025878906],[-10.09543514251709,-41.64550018310547,71.54812622070312],[-10.718367576599121,-41.08157730102539,72.80955505371094],[-11.505181312561035,-40.38383865356445,73.86618041992188],[-12.428561210632324,-39.57801055908203,74.66908264160156],[-13.46200942993164,-38.72069549560547,75.19491577148438],[-3.540057897567749,-32.91118240356445,39.916107177734375],[-4.253077983856201,-33.37139129638672,41.541290283203125],[-5.093770503997803,-34.01189422607422,43.010215759277344],[-6.02138090133667,-34.79526138305664,44.328773498535156],[-6.986258029937744,-35.688899993896484,45.5313835144043],[-7.917438507080078,-36.633670806884766,46.70518112182617],[-8.764981269836426,-37.56475067138672,47.92107009887695],[-9.480874061584473,-38.41460037231445,49.22416687011719],[-10.021358489990234,-39.129310607910156,50.62258529663086],[-10.349578857421875,-39.68479537963867,52.095909118652344],[-10.477478981018066,-40.108890533447266,53.606143951416016],[-10.428458213806152,-40.432037353515625,55.129398345947266],[-10.239786148071289,-40.67843246459961,56.6537971496582],[-9.950540542602539,-40.8624153137207,58.176395416259766],[-9.619529724121094,-40.98661804199219,59.70410919189453],[-9.286161422729492,-41.05590057373047,61.24162673950195],[-8.985635757446289,-41.07123947143555,62.79277420043945],[-8.748086929321289,-41.03377914428711,64.35710144042969],[-8.607708930969238,-40.94048309326172,65.92816162109375],[-8.590363502502441,-40.786563873291016,67.49160766601562],[-8.719785690307617,-40.56159591674805,69.02645874023438],[-9.020383834838867,-40.24624252319336,70.50225830078125],[-9.51488971710205,-39.81531524658203,71.87186431884766],[-10.213700294494629,-39.243125915527344,73.06755065917969],[-11.090274810791016,-38.544002532958984,74.03170776367188],[-12.116836547851562,-37.75967788696289,74.72193145751953],[-3.7090086936950684,-30.54253578186035,40.92374038696289],[-4.5748610496521,-31.09221839904785,42.43502426147461],[-5.573057174682617,-31.82137680053711,43.754234313964844],[-6.643176555633545,-32.69992446899414,44.90213394165039],[-7.698980808258057,-33.672420501708984,45.974205017089844],[-8.668468475341797,-34.66477966308594,47.076011657714844],[-9.491996765136719,-35.595123291015625,48.27622985839844],[-10.107019424438477,-36.391754150390625,49.5988655090332],[-10.460030555725098,-37.026039123535156,51.01793670654297],[-10.561607360839844,-37.52442169189453,52.490379333496094],[-10.450342178344727,-37.92757797241211,53.981964111328125],[-10.176660537719727,-38.26295471191406,55.478702545166016],[-9.789545059204102,-38.54535675048828,56.97801971435547],[-9.354228973388672,-38.77288055419922,58.48860549926758],[-8.922187805175781,-38.93906784057617,60.01818084716797],[-8.525490760803223,-39.04684829711914,61.56896209716797],[-8.193670272827148,-39.0963134765625,63.140201568603516],[-7.953689098358154,-39.08926010131836,64.72503662109375],[-7.8330912590026855,-39.02009582519531,66.30899047851562],[-7.854579925537109,-38.88601303100586,67.87298583984375],[-8.043126106262207,-38.676143646240234,69.3917007446289],[-8.42830753326416,-38.372127532958984,70.82611846923828],[-9.0299072265625,-37.95173263549805,72.12200927734375],[-9.847349166870117,-37.396759033203125,73.2095947265625],[-10.849802017211914,-36.73646545410156,74.0325927734375],[-4.072995185852051,-28.227462768554688,41.80763244628906],[-5.09325647354126,-28.867839813232422,43.15845489501953],[-6.220008850097656,-29.686885833740234,44.293212890625],[-7.3579487800598145,-30.63103675842285,45.300567626953125],[-8.42320728302002,-31.632774353027344,46.30101776123047],[-9.336991310119629,-32.604820251464844,47.400535583496094],[-10.020362854003906,-33.46288299560547,48.64318084716797],[-10.400299072265625,-34.16935348510742,50.006439208984375],[-10.484922409057617,-34.75343704223633,51.432342529296875],[-10.324313163757324,-35.247798919677734,52.88646697998047],[-9.983073234558105,-35.68074417114258,54.350921630859375],[-9.521233558654785,-36.06441879272461,55.824371337890625],[-9.009521484375,-36.39433288574219,57.31697463989258],[-8.50223445892334,-36.661781311035156,58.83823013305664],[-8.038862228393555,-36.860435485839844,60.391761779785156],[-7.645354747772217,-36.993473052978516,61.97471237182617],[-7.347175121307373,-37.06264877319336,63.57917785644531],[-7.159705638885498,-37.069725036621094,65.18793487548828],[-7.106280326843262,-37.01343536376953,66.7806396484375],[-7.211899757385254,-36.89164352416992,68.33389282226562],[-7.509377956390381,-36.69570541381836,69.8140640258789],[-8.025442123413086,-36.41094207763672,71.1742172241211],[-8.770666122436523,-36.02172088623047,72.35437774658203],[-9.734667778015137,-35.521507263183594,73.28012084960938],[-4.594270706176758,-25.947025299072266,42.54946517944336],[-5.7354536056518555,-26.672304153442383,43.71129608154297],[-6.916424751281738,-27.54686737060547,44.70033645629883],[-8.045242309570312,-28.5084228515625,45.63595962524414],[-9.032554626464844,-29.48080825805664,46.645606994628906],[-9.778843879699707,-30.37726593017578,47.809844970703125],[-10.193089485168457,-31.15050506591797,49.11471939086914],[-10.27826976776123,-31.818992614746094,50.49360656738281],[-10.088151931762695,-32.41279983520508,51.902679443359375],[-9.700510025024414,-32.9455451965332,53.32988357543945],[-9.186162948608398,-33.42814254760742,54.7736701965332],[-8.62246322631836,-33.854339599609375,56.24631118774414],[-8.067394256591797,-34.21556854248047,57.758872985839844],[-7.562966823577881,-34.504310607910156,59.316593170166016],[-7.13773250579834,-34.716453552246094,60.91587829589844],[-6.8140339851379395,-34.856842041015625,62.546653747558594],[-6.598896503448486,-34.92955780029297,64.18789672851562],[-6.506633281707764,-34.939937591552734,65.81792449951172],[-6.560865879058838,-34.889320373535156,67.4107437133789],[-6.797035217285156,-34.77824783325195,68.9354248046875],[-7.245786190032959,-34.60218811035156,70.35001373291016],[-7.925929069519043,-34.35216522216797,71.59991455078125],[-8.839115142822266,-34.02338409423828,72.61287689208984],[-5.2060465812683105,-23.674842834472656,43.156795501708984],[-6.396567344665527,-24.449384689331055,44.17323303222656],[-7.560337543487549,-25.336320877075195,45.090518951416016],[-8.601141929626465,-26.2696475982666,46.041934967041016],[-9.40826416015625,-27.177814483642578,47.13493728637695],[-9.868497848510742,-28.00682258605957,48.38286209106445],[-9.97465991973877,-28.756000518798828,49.714237213134766],[-9.781536102294922,-29.44106101989746,51.0798454284668],[-9.371747970581055,-30.0721492767334,52.464107513427734],[-8.826821327209473,-30.647371292114258,53.87445068359375],[-8.231901168823242,-31.162412643432617,55.32401657104492],[-7.650545597076416,-31.609111785888672,56.825870513916016],[-7.12880802154541,-31.9804744720459,58.38677978515625],[-6.696976661682129,-32.27149963378906,60.00410842895508],[-6.375194549560547,-32.48115539550781,61.66498947143555],[-6.162285804748535,-32.617191314697266,63.34458541870117],[-6.065637111663818,-32.68655776977539,65.01866149902344],[-6.101397514343262,-32.6967658996582,66.66143035888672],[-6.3041157722473145,-32.65264892578125,68.23963165283203],[-6.708390235900879,-32.55886459350586,69.71401977539062],[-7.338863372802734,-32.41570281982422,71.03421020507812],[-8.207273483276367,-32.223445892333984,72.1299057006836],[-5.818299770355225,-21.36125946044922,43.7131462097168],[-6.992873668670654,-22.150325775146484,44.658302307128906],[-8.069376945495605,-23.018749237060547,45.59291458129883],[-8.932830810546875,-23.909526824951172,46.638328552246094],[-9.455305099487305,-24.776575088500977,47.83546447753906],[-9.606064796447754,-25.595142364501953,49.124507904052734],[-9.436219215393066,-26.36160659790039,50.45016098022461],[-9.031635284423828,-27.07594108581543,51.79591369628906],[-8.479524612426758,-27.736534118652344,53.16949462890625],[-7.873064041137695,-28.33181381225586,54.59334182739258],[-7.283350467681885,-28.856645584106445,56.081478118896484],[-6.7618513107299805,-29.30454444885254,57.642364501953125],[-6.3421125411987305,-29.670852661132812,59.274192810058594],[-6.043965816497803,-29.95346450805664,60.964107513427734],[-5.856611728668213,-30.1546573638916,62.682430267333984],[-5.780768394470215,-30.284141540527344,64.40292358398438],[-5.8261637687683105,-30.350889205932617,66.09850311279297],[-6.022582054138184,-30.3656005859375,67.7389144897461],[-6.405278205871582,-30.33725357055664,69.28326416015625],[-7.005091667175293,-30.274738311767578,70.6839828491211],[-7.841972827911377,-30.186595916748047,71.87398529052734],[-6.372713565826416,-18.9929256439209,44.30241775512695],[-7.469138145446777,-19.77800941467285,45.261619567871094],[-8.381628036499023,-20.626771926879883,46.29113006591797],[-8.976966857910156,-21.502830505371094,47.45459747314453],[-9.198925971984863,-22.37193489074707,48.7104606628418],[-9.0786771774292,-23.205608367919922,50.00532913208008],[-8.704029083251953,-23.99151039123535,51.31917190551758],[-8.167268753051758,-24.7230281829834,52.66187286376953],[-7.567323684692383,-25.39263153076172,54.057003021240234],[-6.981888294219971,-25.99018096923828,55.52720260620117],[-6.470129489898682,-26.511268615722656,57.08196258544922],[-6.070210933685303,-26.95115852355957,58.72056198120117],[-5.804073333740234,-27.307493209838867,60.43022155761719],[-5.656143665313721,-27.580652236938477,62.180809020996094],[-5.616466522216797,-27.774682998657227,63.94215393066406],[-5.68932580947876,-27.901269912719727,65.68659210205078],[-5.89963436126709,-27.972858428955078,67.38424682617188],[-6.280352592468262,-28.004274368286133,68.99980163574219],[-6.8650312423706055,-28.008316040039062,70.48500061035156],[-7.681585311889648,-28.001554489135742,71.77600860595703],[-6.829396724700928,-16.581607818603516,44.99695587158203],[-7.780492782592773,-17.368919372558594,46.044700622558594],[-8.44880199432373,-18.226144790649414,47.19883728027344],[-8.759652137756348,-19.117338180541992,48.43926239013672],[-8.716869354248047,-20.001110076904297,49.71722412109375],[-8.39593505859375,-20.846004486083984,51.01100540161133],[-7.894996166229248,-21.638832092285156,52.330711364746094],[-7.317798614501953,-22.3714599609375,53.702362060546875],[-6.7484941482543945,-23.03803825378418,55.1505126953125],[-6.251906871795654,-23.629669189453125,56.69239044189453],[-5.873502731323242,-24.14250373840332,58.328346252441406],[-5.638774871826172,-24.57320785522461,60.04604721069336],[-5.531474590301514,-24.92056655883789,61.815486907958984],[-5.536884307861328,-25.186594009399414,63.60697555541992],[-5.647900104522705,-25.377885818481445,65.38975524902344],[-5.885091781616211,-25.51013946533203,67.13426208496094],[-6.278295040130615,-25.600194931030273,68.80716705322266],[-6.860989570617676,-25.666259765625,70.36843872070312],[-7.665574550628662,-25.72796058654785,71.7553939819336],[-7.156063556671143,-14.162637710571289,45.83993911743164],[-7.890297889709473,-14.97829818725586,47.011844635009766],[-8.294102668762207,-15.863889694213867,48.25844192504883],[-8.347750663757324,-16.7737979888916,49.53999710083008],[-8.105511665344238,-17.66413116455078,50.83073043823242],[-7.659459590911865,-18.508726119995117,52.140281677246094],[-7.120187759399414,-19.297134399414062,53.496192932128906],[-6.5764594078063965,-20.02397918701172,54.925933837890625],[-6.100042819976807,-20.684329986572266,56.44917297363281],[-5.741745948791504,-21.26923942565918,58.07343292236328],[-5.53361701965332,-21.775047302246094,59.787452697753906],[-5.461541652679443,-22.19800567626953,61.562042236328125],[-5.5096588134765625,-22.53852653503418,63.36790466308594],[-5.665194511413574,-22.801532745361328,65.17499542236328],[-5.937335968017578,-22.99871253967285,66.9513168334961],[-6.3527703285217285,-23.150495529174805,68.66490936279297],[-6.943526268005371,-23.276784896850586,70.27945709228516],[-7.743257999420166,-23.40144157409668,71.7431869506836],[-7.325510501861572,-11.779275894165039,46.83085632324219],[-7.817852973937988,-12.636629104614258,48.10660934448242],[-7.973307132720947,-13.549391746520996,49.413455963134766],[-7.826013565063477,-14.467228889465332,50.723876953125],[-7.454533100128174,-15.353848457336426,52.04175567626953],[-6.966728210449219,-16.1907958984375,53.394866943359375],[-6.458020210266113,-16.972217559814453,54.81342697143555],[-6.004761695861816,-17.69386100769043,56.320438385009766],[-5.665174961090088,-18.350242614746094,57.926231384277344],[-5.477215766906738,-18.931249618530273,59.62668991088867],[-5.432710647583008,-19.43120002746582,61.394229888916016],[-5.516773223876953,-19.847900390625,63.20028305053711],[-5.714202880859375,-20.18480682373047,65.01500701904297],[-6.027242183685303,-20.452571868896484,66.80643463134766],[-6.47170877456665,-20.668630599975586,68.54161071777344],[-7.077756404876709,-20.85639190673828,70.18690490722656],[-7.878787040710449,-21.040319442749023,71.69615173339844],[-7.352646350860596,-9.45032787322998,47.91729736328125],[-7.606897354125977,-10.347082138061523,49.270809173583984],[-7.5584211349487305,-11.275466918945312,50.62331008911133],[-7.272799491882324,-12.191787719726562,51.97323226928711],[-6.850041389465332,-13.070308685302734,53.34276580810547],[-6.384051322937012,-13.900388717651367,54.763301849365234],[-5.957609176635742,-14.678245544433594,56.26149368286133],[-5.634305953979492,-15.398995399475098,57.85154342651367],[-5.460729598999023,-16.055360794067383,59.53253173828125],[-5.435792446136475,-16.633153915405273,61.2841796875],[-5.548649311065674,-17.1278018951416,63.07929992675781],[-5.7831926345825195,-17.540029525756836,64.88838958740234],[-6.137173652648926,-17.879209518432617,66.67861938476562],[-6.61783504486084,-18.162601470947266,68.41682434082031],[-7.245335102081299,-18.411636352539062,70.07038879394531],[-8.052452087402344,-18.65343475341797,71.59716796875],[-7.256554126739502,-7.177929878234863,49.04911422729492],[-7.304575443267822,-8.102521896362305,50.46357345581055],[-7.106886863708496,-9.037188529968262,51.867549896240234],[-6.756842136383057,-9.94852352142334,53.27738952636719],[-6.342705249786377,-10.821571350097656,54.72005081176758],[-5.946842193603516,-11.649866104125977,56.223628997802734],[-5.639644622802734,-12.429604530334473,57.80689239501953],[-5.474804878234863,-13.154012680053711,59.473392486572266],[-5.462062835693359,-13.810050010681152,61.20600128173828],[-5.596630096435547,-14.383712768554688,62.98408126831055],[-5.863847255706787,-14.87286376953125,64.7790756225586],[-6.258180618286133,-15.283910751342773,66.55757141113281],[-6.779567241668701,-15.633273124694824,68.2847671508789],[-7.438116073608398,-15.943470001220703,69.92816925048828],[-8.257941246032715,-16.240665435791016,71.44894409179688],[-7.072123050689697,-4.956727504730225,50.19084930419922],[-6.960103511810303,-5.900516033172607,51.66869354248047],[-6.683577537536621,-6.837313652038574,53.14091873168945],[-6.326490879058838,-7.746701717376709,54.63048553466797],[-5.966586589813232,-8.620218276977539,56.161441802978516],[-5.675949573516846,-9.452916145324707,57.754150390625],[-5.5162434577941895,-10.239639282226562,59.417808532714844],[-5.5077128410339355,-10.9664945602417,61.1392936706543],[-5.656141757965088,-11.619688034057617,62.900665283203125],[-5.950940132141113,-12.186498641967773,64.67851257324219],[-6.385108947753906,-12.669879913330078,66.43973541259766],[-6.951568126678467,-13.08359146118164,68.148193359375],[-7.650574684143066,-13.450759887695312,69.769775390625],[-8.495077133178711,-13.799842834472656,71.26605224609375],[-6.835171699523926,-2.7872185707092285,51.32911682128906],[-6.630328178405762,-3.7444076538085938,52.883262634277344],[-6.331076622009277,-4.685649871826172,54.441864013671875],[-6.010989665985107,-5.599167346954346,56.026023864746094],[-5.73910665512085,-6.4797868728637695,57.65227508544922],[-5.581659317016602,-7.322477340698242,59.33180618286133],[-5.570501804351807,-8.114204406738281,61.05660629272461],[-5.722008228302002,-8.83950424194336,62.81238555908203],[-6.036343097686768,-9.484112739562988,64.57743835449219],[-6.507612228393555,-10.039336204528809,66.32186126708984],[-7.1227850914001465,-10.515647888183594,68.00919342041016],[-7.871559143066406,-10.935415267944336,69.60420227050781],[-8.755330085754395,-11.32906436920166,71.06721496582031],[-6.597954750061035,-0.6727200746536255,52.459041595458984],[-6.355259895324707,-1.644500732421875,54.10570526123047],[-6.075974941253662,-2.5959279537200928,55.765079498291016],[-5.82521915435791,-3.5204086303710938,57.451534271240234],[-5.668408393859863,-4.414249897003174,59.173004150390625],[-5.647557735443115,-5.264533519744873,60.922279357910156],[-5.791190147399902,-6.056027412414551,62.69005584716797],[-6.110757350921631,-6.771113395690918,64.45701599121094],[-6.610914707183838,-7.396952152252197,66.19348907470703],[-7.274712562561035,-7.932544708251953,67.86381530761719],[-8.081137657165527,-8.399192810058594,69.43275451660156],[-9.018436431884766,-8.828744888305664,70.86054229736328],[-6.387836933135986,1.3801907300949097,53.58794403076172],[-6.15097713470459,0.3901659846305847,55.33946228027344],[-5.924705982208252,-0.5772644281387329,57.10615158081055],[-5.770755767822266,-1.5187349319458008,58.89494323730469],[-5.735447406768799,-2.422988176345825,60.69483947753906],[-5.860124588012695,-3.2746078968048096,62.49658203125],[-6.169255256652832,-4.0547614097595215,64.28495788574219],[-6.679234981536865,-4.744875431060791,66.03138732910156],[-7.382026195526123,-5.3375563621521,67.69782257080078],[-8.24683952331543,-5.845884323120117,69.24858093261719],[-9.248114585876465,-6.3030548095703125,70.64556121826172],[-6.222422122955322,3.3675739765167236,54.722293853759766],[-6.025156497955322,2.3554775714874268,56.582977294921875],[-5.879524230957031,1.3667049407958984,58.45565414428711],[-5.831615924835205,0.41181233525276184,60.32850646972656],[-5.929327964782715,-0.4958021342754364,62.18896484375],[-6.212971210479736,-1.3358659744262695,64.02039337158203],[-6.712515830993652,-2.0864038467407227,65.79747772216797],[-7.43089485168457,-2.7322726249694824,67.48037719726562],[-8.343125343322754,-3.2796878814697266,69.02958679199219],[-9.409056663513184,-3.7583680152893066,70.40696716308594],[-6.111992359161377,5.290092468261719,55.860225677490234],[-5.981600761413574,4.252008438110352,57.826087951660156],[-5.928042411804199,3.2466869354248047,59.78401184082031],[-5.999794006347656,2.2860851287841797,61.721370697021484],[-6.2468647956848145,1.389400601387024,63.61832046508789],[-6.717373371124268,0.5819255113601685,65.44674682617188],[-7.427781105041504,-0.11548207700252533,67.16756439208984],[-8.360965728759766,-0.7014985084533691,68.73733520507812],[-9.479418754577637,-1.1990723609924316,70.1142349243164],[-6.062130928039551,7.1527791023254395,56.990840911865234],[-6.011404514312744,6.095062255859375,59.03824234008789],[-6.06505823135376,5.081543922424316,61.059478759765625],[-6.275537967681885,4.130491733551025,63.035316467285156],[-6.703439712524414,3.2679686546325684,64.93447875976562],[-7.3849616050720215,2.52030611038208,66.71257781982422],[-8.313857078552246,1.894993543624878,68.32437896728516],[-9.456818580627441,1.3753892183303833,69.7237319946289],[-6.066882133483887,8.974912643432617,58.081504821777344],[-6.111353874206543,7.906184196472168,60.18552017211914],[-6.292993068695068,6.900111198425293,62.24165344238281],[-6.676912784576416,5.98321533203125,64.21976470947266],[-7.314536094665527,5.185412406921387,66.07135772705078],[-8.21773910522461,4.520395755767822,67.74275207519531],[-9.360021591186523,3.97686505317688,69.184814453125],[-6.131115913391113,10.77548599243164,59.115333557128906],[-6.293277740478516,9.710944175720215,61.246734619140625],[-6.6403374671936035,8.736852645874023,63.300933837890625],[-7.231119155883789,7.88677453994751,65.23027801513672],[-8.093077659606934,7.180120944976807,66.97464752197266],[-9.21398639678955,6.610290050506592,68.47457885742188],[-6.270813465118408,12.574030876159668,60.07127380371094],[-6.588421821594238,11.536190032958984,62.19357681274414],[-7.136890411376953,10.627330780029297,64.19538116455078],[-7.952680587768555,9.87452220916748,66.01480102539062],[-9.037378311157227,9.277300834655762,67.58321380615234],[-6.520897388458252,14.388419151306152,60.92804718017578],[-7.030388832092285,13.408576011657715,62.992923736572266],[-7.800788879394531,12.598885536193848,64.88151550292969],[-8.842718124389648,11.969826698303223,66.51889038085938],[-6.916469573974609,16.23320960998535,61.65812301635742],[-7.6382036209106445,15.345739364624023,63.60685348510742],[-8.633854866027832,14.67273998260498,65.30714416503906],[-7.480030059814453,18.10887908935547,62.234344482421875],[-8.417737007141113,17.361541748046875,63.99098205566406],[-8.214447021484375,20.014057159423828,62.61272048950195],[-19.231666564941406,-40.82071304321289,74.09799194335938],[-19.47870635986328,-39.354827880859375,74.27490997314453],[-19.831113815307617,-37.94679260253906,74.38028717041016],[-20.305246353149414,-36.64692687988281,74.37586975097656],[-20.907093048095703,-35.47970199584961,74.21858215332031],[-21.63105583190918,-34.454261779785156,73.87547302246094],[-22.467273712158203,-33.565677642822266,73.3495864868164],[-23.41277503967285,-32.799320220947266,72.66512298583984],[-24.46238136291504,-32.119873046875,71.86246490478516],[-25.613662719726562,-31.475589752197266,70.9826889038086],[-26.853717803955078,-30.80764389038086,70.07212829589844],[-28.176624298095703,-30.069774627685547,69.1668701171875],[-29.57813262939453,-29.226673126220703,68.2975845336914],[-31.05205726623535,-28.253782272338867,67.48623657226562],[-32.57994079589844,-27.137939453125,66.7346420288086],[-34.121559143066406,-25.88274383544922,66.01371765136719],[-35.62384033203125,-24.48385238647461,65.28182220458984],[-37.02407455444336,-22.939617156982422,64.49394226074219],[-38.2530403137207,-21.257427215576172,63.60673904418945],[-39.283958435058594,-19.483448028564453,62.600406646728516],[-40.14299011230469,-17.67876434326172,61.47216033935547],[-40.90325164794922,-15.904958724975586,60.22715377807617],[-41.67323684692383,-14.215994834899902,58.8785285949707],[-42.57539367675781,-12.656538009643555,57.45463562011719],[-43.66909408569336,-11.23025894165039,56.01025390625],[-44.95283889770508,-9.918159484863281,54.598876953125],[-46.37378692626953,-8.678420066833496,53.26062774658203],[-47.847572326660156,-7.461951732635498,52.014251708984375],[-49.27510070800781,-6.231618404388428,50.84727478027344],[-50.57486343383789,-4.981011390686035,49.73485565185547],[-51.673736572265625,-3.7345800399780273,48.66328430175781],[-51.80544662475586,-1.7177425622940063,49.13722610473633],[-50.84605407714844,-0.6559711694717407,50.654544830322266],[-49.65015411376953,0.5014315843582153,52.108253479003906],[-48.245513916015625,1.6741470098495483,53.4755973815918],[-46.65718078613281,2.7896170616149902,54.760887145996094],[-44.92601013183594,3.7917819023132324,55.97715759277344],[-43.1064453125,4.663660049438477,57.130958557128906],[-41.24769973754883,5.415600776672363,58.21205139160156],[-39.39330291748047,6.082902908325195,59.19731903076172],[-37.577152252197266,6.718686103820801,60.04587936401367],[-35.814422607421875,7.38224983215332,60.73003387451172],[-34.11130142211914,8.11506462097168,61.22749710083008],[-32.471824645996094,8.940374374389648,61.52735137939453],[-30.900306701660156,9.864201545715332,61.633750915527344],[-29.39940643310547,10.877105712890625,61.57853698730469],[-27.96410369873047,11.95928955078125,61.43190002441406],[-26.59640884399414,13.102033615112305,61.27117156982422],[-25.30999183654785,14.304120063781738,61.177040100097656],[-24.1390380859375,15.566750526428223,61.22159957885742],[-23.102754592895508,16.87050437927246,61.424407958984375],[-22.182903289794922,18.180648803710938,61.7635383605957],[-21.32623291015625,19.456924438476562,62.19828414916992],[-20.45658302307129,20.657438278198242,62.676387786865234],[-19.488380432128906,21.732635498046875,63.13250732421875],[-18.375125885009766,22.650772094726562,63.5048942565918],[-17.107152938842773,23.38550567626953,63.744789123535156],[-15.708996772766113,23.92576026916504,63.821083068847656],[-14.226715087890625,24.268661499023438,63.711997985839844],[-12.724769592285156,24.43376350402832,63.41119384765625],[-11.270390510559082,24.450172424316406,62.916038513183594],[-9.943700790405273,24.35039520263672,62.230403900146484],[-18.212200164794922,-39.48224639892578,74.7837142944336],[-18.403484344482422,-37.9535026550293,74.90702819824219],[-18.71885108947754,-36.550697326660156,74.87816619873047],[-19.166105270385742,-35.29304504394531,74.66161346435547],[-19.75638198852539,-34.19993209838867,74.23792266845703],[-20.490379333496094,-33.26731491088867,73.63494873046875],[-21.356794357299805,-32.46772003173828,72.89105224609375],[-22.345935821533203,-31.753610610961914,72.05723571777344],[-23.451536178588867,-31.061559677124023,71.18608856201172],[-24.669008255004883,-30.338272094726562,70.32691955566406],[-25.994173049926758,-29.544269561767578,69.51764678955078],[-27.428190231323242,-28.65687370300293,68.78943634033203],[-28.97129249572754,-27.66773223876953,68.16232299804688],[-30.610496520996094,-26.57882308959961,67.62640380859375],[-32.29480743408203,-25.38471221923828,67.11621856689453],[-33.97307586669922,-24.068546295166016,66.58772277832031],[-35.579994201660156,-22.611820220947266,65.98709106445312],[-37.04956817626953,-21.005584716796875,65.27080535888672],[-38.317832946777344,-19.268394470214844,64.4002456665039],[-39.38273620605469,-17.455350875854492,63.375953674316406],[-40.29328155517578,-15.630753517150879,62.208587646484375],[-41.138614654541016,-13.856125831604004,60.914485931396484],[-42.033233642578125,-12.184371948242188,59.5208854675293],[-43.06598663330078,-10.647867202758789,58.07695007324219],[-44.26922607421875,-9.238907814025879,56.64250946044922],[-45.61488342285156,-7.927123069763184,55.26678466796875],[-47.03025436401367,-6.665750503540039,53.97720718383789],[-48.425743103027344,-5.414762496948242,52.76437759399414],[-49.72145080566406,-4.156660079956055,51.591339111328125],[-50.85662078857422,-2.9048750400543213,50.40888214111328],[-17.080440521240234,-38.28102111816406,75.26757049560547],[-17.222671508789062,-36.733985900878906,75.24801635742188],[-17.51221466064453,-35.3568229675293,75.00531768798828],[-17.9664249420166,-34.16269302368164,74.53632354736328],[-18.593046188354492,-33.14641189575195,73.88611602783203],[-19.38091278076172,-32.273345947265625,73.11009979248047],[-20.31045150756836,-31.48263168334961,72.26799774169922],[-21.375417709350586,-30.701862335205078,71.42406463623047],[-22.572105407714844,-29.880287170410156,70.63689422607422],[-23.905323028564453,-28.9990234375,69.93999481201172],[-25.37665557861328,-28.046785354614258,69.36187744140625],[-26.985721588134766,-27.028982162475586,68.91190338134766],[-28.716236114501953,-25.95313835144043,68.56605529785156],[-30.51761245727539,-24.80820083618164,68.2500228881836],[-32.332401275634766,-23.56056022644043,67.89722442626953],[-34.099815368652344,-22.180404663085938,67.45732116699219],[-35.74978256225586,-20.64303970336914,66.87933349609375],[-37.220245361328125,-18.955434799194336,66.1289291381836],[-38.47504806518555,-17.153358459472656,65.19352722167969],[-39.537147521972656,-15.29874038696289,64.0866470336914],[-40.47526168823242,-13.456467628479004,62.828826904296875],[-41.39019775390625,-11.6856107711792,61.44756317138672],[-42.37696075439453,-10.026222229003906,59.994239807128906],[-43.500640869140625,-8.499455451965332,58.52817153930664],[-44.76025390625,-7.08457612991333,57.10616683959961],[-46.10291290283203,-5.743941783905029,55.76549530029297],[-47.44661331176758,-4.437173843383789,54.5023078918457],[-48.719303131103516,-3.1441383361816406,53.2752685546875],[-49.8612174987793,-1.8687829971313477,52.02083206176758],[-15.84460163116455,-37.19956970214844,75.44884490966797],[-15.96927547454834,-35.68201446533203,75.22274780273438],[-16.285158157348633,-34.35784149169922,74.75564575195312],[-16.799917221069336,-33.215763092041016,74.1038589477539],[-17.50374412536621,-32.2203254699707,73.33326721191406],[-18.374998092651367,-31.310461044311523,72.51296997070312],[-19.404165267944336,-30.404769897460938,71.7216567993164],[-20.58850860595703,-29.462663650512695,71.02107238769531],[-21.93421173095703,-28.473772048950195,70.45187377929688],[-23.442102432250977,-27.449148178100586,70.02159881591797],[-25.105504989624023,-26.39617919921875,69.73014068603516],[-26.901235580444336,-25.318340301513672,69.54053497314453],[-28.77959632873535,-24.197616577148438,69.37809753417969],[-30.689130783081055,-22.996870040893555,69.17460632324219],[-32.566688537597656,-21.67275047302246,68.86467742919922],[-34.34299087524414,-20.19097137451172,68.39717102050781],[-35.95274353027344,-18.548126220703125,67.73603820800781],[-37.3581657409668,-16.77069854736328,66.8717041015625],[-38.55252456665039,-14.906328201293945,65.80975341796875],[-39.58226776123047,-13.018978118896484,64.57328796386719],[-40.53202438354492,-11.170661926269531,63.19169616699219],[-41.498191833496094,-9.40710735321045,61.72040939331055],[-42.552879333496094,-7.755537509918213,60.218292236328125],[-43.72950744628906,-6.2243547439575195,58.74872589111328],[-44.99568557739258,-4.784290313720703,57.35831832885742],[-46.28318405151367,-3.401484251022339,56.052852630615234],[-47.52244567871094,-2.053546190261841,54.79095458984375],[-48.65641784667969,-0.7418854832649231,53.503440856933594],[-14.555395126342773,-36.23880386352539,75.2801742553711],[-14.728106498718262,-34.76824951171875,74.86640167236328],[-15.127582550048828,-33.47080993652344,74.26506042480469],[-15.744000434875488,-32.31089401245117,73.5489501953125],[-16.556753158569336,-31.235462188720703,72.79322052001953],[-17.557632446289062,-30.17538833618164,72.08580780029297],[-18.737367630004883,-29.09703254699707,71.4919662475586],[-20.097320556640625,-28.000093460083008,71.04637145996094],[-21.63324546813965,-26.897180557250977,70.75558471679688],[-23.331701278686523,-25.800457000732422,70.59584045410156],[-25.16421890258789,-24.702627182006836,70.52803039550781],[-27.082748413085938,-23.580554962158203,70.4798355102539],[-29.039541244506836,-22.396106719970703,70.38435363769531],[-30.9781551361084,-21.105022430419922,70.17485046386719],[-32.82701110839844,-19.66225242614746,69.78636932373047],[-34.520912170410156,-18.058263778686523,69.18525695800781],[-36.017765045166016,-16.31133270263672,68.3619155883789],[-37.305328369140625,-14.460365295410156,67.3242416381836],[-38.407508850097656,-12.557321548461914,66.0938720703125],[-39.39118576049805,-10.663846969604492,64.70245361328125],[-40.350215911865234,-8.826415061950684,63.21013641357422],[-41.35951232910156,-7.076155662536621,61.67700958251953],[-42.46317672729492,-5.427537441253662,60.167991638183594],[-43.66133117675781,-3.8797595500946045,58.74065017700195],[-44.89834213256836,-2.404827833175659,57.4105224609375],[-46.11039733886719,-0.9846127033233643,56.13944625854492],[-47.239768981933594,0.38359737396240234,54.85674285888672],[-13.302260398864746,-35.34754180908203,74.82264709472656],[-13.5831880569458,-33.87828063964844,74.328857421875],[-14.113031387329102,-32.52854919433594,73.72234344482422],[-14.872161865234375,-31.255510330200195,73.08394622802734],[-15.852545738220215,-30.013639450073242,72.50453186035156],[-17.033733367919922,-28.792129516601562,72.0380630493164],[-18.404766082763672,-27.58671760559082,71.71611022949219],[-19.95359230041504,-26.404760360717773,71.53803253173828],[-21.662281036376953,-25.248611450195312,71.48313903808594],[-23.502334594726562,-24.110013961791992,71.50235748291016],[-25.427379608154297,-22.96174430847168,71.5313720703125],[-27.391910552978516,-21.76648712158203,71.5045394897461],[-29.34293556213379,-20.48178482055664,71.35479736328125],[-31.212963104248047,-19.063467025756836,71.01216125488281],[-32.938331604003906,-17.494400024414062,70.43711853027344],[-34.47487258911133,-15.787425994873047,69.6230697631836],[-35.805843353271484,-13.973358154296875,68.5807113647461],[-36.94822311401367,-12.095093727111816,67.33612823486328],[-37.95330047607422,-10.200329780578613,65.92578887939453],[-38.90803527832031,-8.330957412719727,64.4139633178711],[-39.88644027709961,-6.517491817474365,62.86180877685547],[-40.93974685668945,-4.777678489685059,61.335472106933594],[-42.08180236816406,-3.117394208908081,59.89810562133789],[-43.28209686279297,-1.5369187593460083,58.57307434082031],[-44.48047637939453,-0.023200683295726776,57.32648849487305],[-45.62055206298828,1.424586534500122,56.08595275878906],[-12.166763305664062,-34.38848876953125,74.23394012451172],[-12.60989761352539,-32.83845520019531,73.79673767089844],[-13.321249961853027,-31.35700798034668,73.3294906616211],[-14.2874116897583,-29.923049926757812,72.9229736328125],[-15.470157623291016,-28.548358917236328,72.61237335205078],[-16.844112396240234,-27.230825424194336,72.4151611328125],[-18.389915466308594,-25.961421966552734,72.33544158935547],[-20.0875186920166,-24.733068466186523,72.3541488647461],[-21.907278060913086,-23.530351638793945,72.43069458007812],[-23.80994987487793,-22.33301544189453,72.50226593017578],[-25.7502498626709,-21.104507446289062,72.5080795288086],[-27.677339553833008,-19.806058883666992,72.38089752197266],[-29.52519416809082,-18.39837074279785,72.04630279541016],[-31.236055374145508,-16.867361068725586,71.46408081054688],[-32.76983642578125,-15.216058731079102,70.6292495727539],[-34.106712341308594,-13.4678316116333,69.55713653564453],[-35.25975799560547,-11.653730392456055,68.28052520751953],[-36.27206802368164,-9.809042930603027,66.84346771240234],[-37.22202682495117,-7.954177379608154,65.31694793701172],[-38.178714752197266,-6.115750789642334,63.76203155517578],[-39.19636917114258,-4.311783313751221,62.24454116821289],[-40.300235748291016,-2.5534605979919434,60.83125686645508],[-41.473854064941406,-0.8519167304039001,59.55161666870117],[-42.67219161987305,0.7753162384033203,58.368412017822266],[-43.8388671875,2.327941417694092,57.20991897583008],[-11.223896026611328,-33.21516418457031,73.69014739990234],[-11.882166862487793,-31.526147842407227,73.4469223022461],[-12.832418441772461,-29.89980697631836,73.25431060791016],[-14.013782501220703,-28.36376953125,73.131103515625],[-15.38366985321045,-26.91998291015625,73.07847595214844],[-16.915756225585938,-25.552213668823242,73.09609985351562],[-18.58795928955078,-24.238624572753906,73.17616271972656],[-20.371843338012695,-22.95880699157715,73.28456115722656],[-22.228515625,-21.691368103027344,73.37071228027344],[-24.121700286865234,-20.411771774291992,73.37854766845703],[-26.000003814697266,-19.08473777770996,73.24334716796875],[-27.798919677734375,-17.67874526977539,72.88780975341797],[-29.46491813659668,-16.18549156188965,72.27252960205078],[-30.96399688720703,-14.607400894165039,71.39513397216797],[-32.28178024291992,-12.949732780456543,70.27845764160156],[-33.42679977416992,-11.232100486755371,68.96055603027344],[-34.436607360839844,-9.472322463989258,67.494140625],[-35.38079833984375,-7.674250602722168,65.9561996459961],[-36.322113037109375,-5.845559597015381,64.41087341308594],[-37.31423568725586,-4.00387716293335,62.9227294921875],[-38.39027786254883,-2.1640737056732178,61.560977935791016],[-39.54725646972656,-0.34967347979545593,60.35775375366211],[-40.75186538696289,1.4080437421798706,59.27901077270508],[-41.954864501953125,3.0819694995880127,58.23731231689453],[-10.536892890930176,-31.745441436767578,73.34015655517578],[-11.454889297485352,-29.928508758544922,73.40512084960938],[-12.627411842346191,-28.225303649902344,73.50454711914062],[-13.99006175994873,-26.642244338989258,73.6281509399414],[-15.503296852111816,-25.160478591918945,73.76438903808594],[-17.143529891967773,-23.75150489807129,73.90824127197266],[-18.882463455200195,-22.385026931762695,74.03974914550781],[-20.68516731262207,-21.039819717407227,74.12124633789062],[-22.513458251953125,-19.694169998168945,74.10560607910156],[-24.327449798583984,-18.32786750793457,73.93753814697266],[-26.06226348876953,-16.917192459106445,73.54029846191406],[-27.668806076049805,-15.459246635437012,72.87740325927734],[-29.116905212402344,-13.956676483154297,71.94879913330078],[-30.39681053161621,-12.407838821411133,70.78102111816406],[-31.520946502685547,-10.805289268493652,69.42076873779297],[-32.520042419433594,-9.151683807373047,67.92617797851562],[-33.45695495605469,-7.432822227478027,66.37869262695312],[-34.386375427246094,-5.6436381340026855,64.84892272949219],[-35.360469818115234,-3.7885189056396484,63.40275955200195],[-36.417266845703125,-1.8867316246032715,62.11062240600586],[-37.5647087097168,0.0259789377450943,61.0058708190918],[-38.78015899658203,1.9030272960662842,60.05270004272461],[-40.02463912963867,3.708610773086548,59.164573669433594],[-10.137097358703613,-29.99770736694336,73.27215576171875],[-11.277560234069824,-28.121479034423828,73.6346206665039],[-12.625783920288086,-26.387798309326172,73.97276306152344],[-14.121232986450195,-24.778751373291016,74.26546478271484],[-15.729268074035645,-23.262313842773438,74.4991455078125],[-17.42301368713379,-21.804460525512695,74.66194915771484],[-19.169349670410156,-20.37795639038086,74.73572540283203],[-20.93378448486328,-18.964570999145508,74.68682098388672],[-22.67466926574707,-17.550832748413086,74.4690170288086],[-24.340795516967773,-16.12923240661621,74.01911163330078],[-25.8844051361084,-14.69964599609375,73.30455017089844],[-27.278215408325195,-13.263449668884277,72.32728576660156],[-28.514158248901367,-11.814245223999023,71.11499786376953],[-29.606433868408203,-10.332732200622559,69.7172622680664],[-30.58719825744629,-8.79053783416748,68.1990966796875],[-31.512197494506836,-7.161585330963135,66.64427185058594],[-32.43172073364258,-5.4269795417785645,65.12869262695312],[-33.393157958984375,-3.581146001815796,63.7271728515625],[-34.438438415527344,-1.6386271715164185,62.512001037597656],[-35.58313751220703,0.3516310155391693,61.51502227783203],[-36.81296157836914,2.3296706676483154,60.69772720336914],[-38.0969352722168,4.249341011047363,59.969032287597656],[-9.960311889648438,-28.0428466796875,73.4139404296875],[-11.266105651855469,-26.14850616455078,74.0075454711914],[-12.73706340789795,-24.401090621948242,74.50093841552734],[-14.317949295043945,-22.7681884765625,74.87053680419922],[-15.972099304199219,-21.213455200195312,75.0982666015625],[-17.668930053710938,-19.70772933959961,75.18072509765625],[-19.37567710876465,-18.229598999023438,75.1055679321289],[-21.055110931396484,-16.76999282836914,74.84309387207031],[-22.656400680541992,-15.329362869262695,74.34193420410156],[-24.14440155029297,-13.91454792022705,73.5836181640625],[-25.49053382873535,-12.524545669555664,72.57023620605469],[-26.68645477294922,-11.14891242980957,71.32853698730469],[-27.745290756225586,-9.762286186218262,69.90752410888672],[-28.699235916137695,-8.323549270629883,68.37449645996094],[-29.606220245361328,-6.78132438659668,66.81660461425781],[-30.513099670410156,-5.107237339019775,65.31452178955078],[-31.465959548950195,-3.286219835281372,63.94935989379883],[-32.505828857421875,-1.327414631843567,62.80472183227539],[-33.653480529785156,0.7152616381645203,61.910362243652344],[-34.899654388427734,2.76948881149292,61.22282409667969],[-36.21942901611328,4.781207084655762,60.64714050292969],[-9.9332914352417,-25.950401306152344,73.65229797363281],[-11.34808349609375,-24.053070068359375,74.38975524902344],[-12.894936561584473,-22.293846130371094,74.94873809814453],[-14.518115997314453,-20.6361141204834,75.30085754394531],[-16.17744255065918,-19.048337936401367,75.43956756591797],[-17.841434478759766,-17.50769805908203,75.3701400756836],[-19.47458839416504,-16.001598358154297,75.08657836914062],[-21.03206443786621,-14.53256607055664,74.55697631835938],[-22.477855682373047,-13.109074592590332,73.77281188964844],[-23.790077209472656,-11.733465194702148,72.74201202392578],[-24.956531524658203,-10.394067764282227,71.48936462402344],[-25.987869262695312,-9.063128471374512,70.06192779541016],[-26.914470672607422,-7.694580078125,68.52704620361328],[-27.795557022094727,-6.229709625244141,66.97164916992188],[-28.684125900268555,-4.6183671951293945,65.47990417480469],[-29.625614166259766,-2.837017774581909,64.13899993896484],[-30.661405563354492,-0.88820481300354,63.03859329223633],[-31.8111629486084,1.176377534866333,62.21826171875],[-33.06871795654297,3.2804222106933594,61.632511138916016],[-34.413108825683594,5.361211776733398,61.18317413330078],[-9.99859619140625,-23.764999389648438,73.87998962402344],[-11.476592063903809,-21.868759155273438,74.67378997802734],[-13.060402870178223,-20.098535537719727,75.21195983886719],[-14.692307472229004,-18.421178817749023,75.47793579101562],[-16.33011245727539,-16.81214141845703,75.4744644165039],[-17.937349319458008,-15.255382537841797,75.21405792236328],[-19.4721622467041,-13.746981620788574,74.69149017333984],[-20.90078353881836,-12.292281150817871,73.91222381591797],[-22.198575973510742,-10.894706726074219,72.89032745361328],[-23.353164672851562,-9.5496244430542,71.64927673339844],[-24.37029266357422,-8.230567932128906,70.23523712158203],[-25.277103424072266,-6.891720771789551,68.71426391601562],[-26.13167381286621,-5.47570276260376,67.17049407958984],[-26.991931915283203,-3.9249610900878906,65.68783569335938],[-27.912734985351562,-2.1958789825439453,64.35586547851562],[-28.93562889099121,-0.2812913954257965,63.269020080566406],[-30.079666137695312,1.7750517129898071,62.47354507446289],[-31.336654663085938,3.901301860809326,61.93863296508789],[-32.6890983581543,6.029653549194336,61.57059097290039],[-10.117745399475098,-21.519323348999023,74.01854705810547],[-11.625711441040039,-19.62649917602539,74.7904052734375],[-13.220175743103027,-17.848222732543945,75.2506103515625],[-14.842015266418457,-16.158710479736328,75.39180755615234],[-16.44305419921875,-14.538793563842773,75.22395324707031],[-17.978715896606445,-12.978129386901855,74.75982666015625],[-19.414337158203125,-11.473053932189941,74.02623748779297],[-20.72406005859375,-10.025556564331055,73.04598999023438],[-21.891386032104492,-8.632951736450195,71.8477554321289],[-22.91517448425293,-7.282596111297607,70.47097778320312],[-23.81753921508789,-5.932559490203857,68.98243713378906],[-24.652912139892578,-4.531311511993408,67.46195220947266],[-25.4808349609375,-3.021845579147339,65.98971557617188],[-26.36363410949707,-1.3522825241088867,64.65155792236328],[-27.3552303314209,0.5082002878189087,63.54377365112305],[-28.475290298461914,2.531074047088623,62.72108459472656],[-29.71522331237793,4.653249263763428,62.16981887817383],[-31.054351806640625,6.807817459106445,61.81528091430664],[-10.270434379577637,-19.23472785949707,74.02393341064453],[-11.790748596191406,-17.345409393310547,74.72713470458984],[-13.38504409790039,-15.561891555786133,75.08171081542969],[-14.989428520202637,-13.862482070922852,75.0879135131836],[-16.54730224609375,-12.231595993041992,74.75590515136719],[-18.014739990234375,-10.659505844116211,74.12191009521484],[-19.36219596862793,-9.141517639160156,73.22639465332031],[-20.5692081451416,-7.676485061645508,72.10372924804688],[-21.62822151184082,-6.255798816680908,70.79741668701172],[-22.54877471923828,-4.857513904571533,69.36286163330078],[-23.379653930664062,-3.4368321895599365,67.8788070678711],[-24.17898178100586,-1.9413795471191406,66.42027282714844],[-25.01228904724121,-0.31832650303840637,65.06550598144531],[-25.94351577758789,1.4765479564666748,63.9022331237793],[-27.011653900146484,3.4465372562408447,62.998924255371094],[-28.209632873535156,5.543155193328857,62.36286163330078],[-29.514583587646484,7.70210599899292,61.94374465942383],[-10.454485893249512,-16.916248321533203,73.90158081054688],[-11.984920501708984,-15.029036521911621,74.51744079589844],[-13.578927993774414,-13.236542701721191,74.76383209228516],[-15.165931701660156,-11.519250869750977,74.64266204833984],[-16.685808181762695,-9.863192558288574,74.18156433105469],[-18.094728469848633,-8.261587142944336,73.42376708984375],[-19.366722106933594,-6.709192276000977,72.41889190673828],[-20.486995697021484,-5.201862812042236,71.21257781982422],[-21.455163955688477,-3.723790168762207,69.8609390258789],[-22.303186416625977,-2.252495050430298,68.42737579345703],[-23.085695266723633,-0.7405206561088562,66.98638916015625],[-23.868345260620117,0.8619797229766846,65.60904693603516],[-24.720191955566406,2.6039628982543945,64.37090301513672],[-25.69809341430664,4.5095534324646,63.338111877441406],[-26.82143783569336,6.562430381774902,62.55265808105469],[-28.065675735473633,8.706137657165527,61.99201965332031],[-10.676918983459473,-14.564414978027344,73.6852035522461],[-12.221646308898926,-12.67153549194336,74.21373748779297],[-13.817923545837402,-10.858660697937012,74.36038208007812],[-15.389734268188477,-9.108423233032227,74.14146423339844],[-16.875022888183594,-7.4124674797058105,73.5879898071289],[-18.2300968170166,-5.766955375671387,72.74699401855469],[-19.43308448791504,-4.165201663970947,71.67674255371094],[-20.473066329956055,-2.597296714782715,70.43104553222656],[-21.36861801147461,-1.0465582609176636,69.07130432128906],[-22.157413482666016,0.5128194093704224,67.65772247314453],[-22.9031925201416,2.1270158290863037,66.260986328125],[-23.676176071166992,3.8438374996185303,64.94645690917969],[-24.544391632080078,5.6962738037109375,63.77227020263672],[-25.55248260498047,7.691278457641602,62.78870391845703],[-26.70500373840332,9.799591064453125,62.024078369140625],[-10.944061279296875,-12.171258926391602,73.41091918945312],[-12.506511688232422,-10.260276794433594,73.86000061035156],[-14.103114128112793,-8.412419319152832,73.93019104003906],[-15.656306266784668,-6.617509841918945,73.64076232910156],[-17.10380744934082,-4.872321128845215,73.02384948730469],[-18.40350914001465,-3.1739003658294678,72.13003540039062],[-19.53564453125,-1.5105093717575073,71.02198791503906],[-20.50507354736328,0.12894658744335175,69.75729370117188],[-21.33482551574707,1.7650501728057861,68.39317321777344],[-22.071701049804688,3.4229695796966553,66.98886108398438],[-22.784793853759766,5.14773416519165,65.60749053955078],[-23.547809600830078,6.973392486572266,64.30164337158203],[-24.421894073486328,8.91756820678711,63.11909484863281],[-25.440717697143555,10.974002838134766,62.102806091308594],[-11.251075744628906,-9.729743003845215,73.10847473144531],[-12.82408332824707,-7.786881446838379,73.49391174316406],[-14.410506248474121,-5.894280910491943,73.50484466552734],[-15.933978080749512,-4.048122406005859,73.1617660522461],[-17.334423065185547,-2.2478232383728027,72.49796295166016],[-18.57067108154297,-0.486880362033844,71.56407165527344],[-19.636232376098633,1.2474700212478638,70.4255599975586],[-20.539133071899414,2.9703285694122314,69.1361312866211],[-21.309255599975586,4.7018818855285645,67.75004577636719],[-21.99873161315918,6.466724395751953,66.32217407226562],[-22.68292808532715,8.297651290893555,64.90646362304688],[-23.432321548461914,10.214798927307129,63.549217224121094],[-24.2999210357666,12.223503112792969,62.29276657104492],[-11.568320274353027,-7.235694408416748,72.80137634277344],[-13.135238647460938,-5.253201484680176,73.1303939819336],[-14.693841934204102,-3.3109419345855713,73.0870132446289],[-16.17198371887207,-1.4088443517684937,72.69349670410156],[-17.512622833251953,0.45553988218307495,71.98194122314453],[-18.686803817749023,2.2880971431732178,71.00538635253906],[-19.68939208984375,4.105123043060303,69.82415771484375],[-20.533113479614258,5.921253204345703,68.48920440673828],[-21.251079559326172,7.756221771240234,67.04884338378906],[-21.902177810668945,9.623796463012695,65.554931640625],[-22.560678482055664,11.544638633728027,64.05782318115234],[-23.290935516357422,13.5281982421875,62.59943389892578],[-11.849300384521484,-4.698811054229736,72.48736572265625],[-13.388649940490723,-2.673088788986206,72.75453186035156],[-14.900460243225098,-0.6774722337722778,72.64874267578125],[-16.317941665649414,1.2888022661209106,72.19268035888672],[-17.59865379333496,3.2260208129882812,71.42398071289062],[-18.71434783935547,5.142045021057129,70.38997650146484],[-19.662715911865234,7.052175998687744,69.14691162109375],[-20.45797348022461,8.970272064208984,67.73930358886719],[-21.13825798034668,10.905672073364258,66.21385955810547],[-21.761375427246094,12.861777305603027,64.62284851074219],[-22.39668846130371,14.850759506225586,63.01233673095703],[-12.050636291503906,-2.1305899620056152,72.14598083496094],[-13.54335880279541,-0.058902520686388016,72.33577728271484],[-14.99347972869873,1.9968230724334717,72.14766693115234],[-16.350669860839844,4.034724235534668,71.61600494384766],[-17.5752010345459,6.05599308013916,70.77423858642578],[-18.641389846801758,8.066216468811035,69.6658706665039],[-19.54736328125,10.079277038574219,68.33898162841797],[-20.310569763183594,12.098286628723145,66.83769226074219],[-20.96725845336914,14.122870445251465,65.20902252197266],[-21.569942474365234,16.14935302734375,63.50224304199219],[-12.143532752990723,0.46069425344467163,71.74421691894531],[-13.57671070098877,2.5835442543029785,71.83153533935547],[-14.967090606689453,4.70534610748291,71.54724884033203],[-16.268508911132812,6.8243489265441895,70.92411041259766],[-17.44549560546875,8.939682006835938,69.99456024169922],[-18.473281860351562,11.054585456848145,68.79415130615234],[-19.35226821899414,13.171371459960938,67.37002563476562],[-20.097339630126953,15.282735824584961,65.76596069335938],[-20.739768981933594,17.381921768188477,64.02572631835938],[-12.119403839111328,3.0736277103424072,71.23745727539062],[-13.496251106262207,5.252621173858643,71.20976257324219],[-14.832297325134277,7.447817325592041,70.81534576416016],[-16.086320877075195,9.656164169311523,70.08912658691406],[-17.224939346313477,11.875399589538574,69.05821228027344],[-18.22652816772461,14.096697807312012,67.7582015991211],[-19.08936309814453,16.310443878173828,66.2341537475586],[-19.823963165283203,18.502164840698242,64.52570343017578],[-11.996304512023926,5.7124223709106445,70.5945053100586],[-13.322203636169434,7.951943874359131,70.4417724609375],[-14.611434936523438,10.225982666015625,69.93040466308594],[-15.82479190826416,12.531451225280762,69.09237670898438],[-16.932737350463867,14.855762481689453,67.95753479003906],[-17.913650512695312,17.177011489868164,66.55952453613281],[-18.76313591003418,19.477005004882812,64.9383316040039],[-11.80359935760498,8.383030891418457,69.79431915283203],[-13.083854675292969,10.686864852905273,69.51762390136719],[-14.33044719696045,13.045818328857422,68.88790893554688],[-15.506935119628906,15.449056625366211,67.94136810302734],[-16.584787368774414,17.871627807617188,66.70738983154297],[-17.54265022277832,20.281543731689453,65.21559143066406],[-11.564277648925781,11.086958885192871,68.83247375488281],[-12.800200462341309,13.457707405090332,68.43765258789062],[-14.004459381103516,15.901384353637695,67.69851684570312],[-15.140392303466797,18.395761489868164,66.65093231201172],[-16.180660247802734,20.90488624572754,65.3227310180664],[-11.292423248291016,13.816864967346191,67.71761322021484],[-12.481778144836426,16.252159118652344,67.21955108642578],[-13.636669158935547,18.774682998657227,66.38053131103516],[-14.719644546508789,21.348953247070312,65.23655700683594],[-10.995989799499512,16.54999542236328,66.47438049316406],[-12.129775047302246,19.042409896850586,65.88506317138672],[-13.2174711227417,21.633625030517578,64.94851684570312],[-10.677887916564941,19.249616622924805,65.13481140136719],[-11.734977722167969,21.79070472717285,64.45138549804688],[-10.334896087646484,21.870412826538086,63.722145080566406],[-20.08650779724121,-42.487796783447266,73.33333587646484],[-21.289457321166992,-42.85886001586914,72.67788696289062],[-22.620819091796875,-43.306915283203125,71.98538970947266],[-24.056459426879883,-43.817535400390625,71.27747344970703],[-25.572261810302734,-44.37716293334961,70.55390167236328],[-27.133312225341797,-44.96830368041992,69.79926300048828],[-28.700424194335938,-45.57170104980469,68.99354553222656],[-30.2369384765625,-46.169498443603516,68.11453247070312],[-31.706510543823242,-46.743682861328125,67.14119720458984],[-33.0652961730957,-47.27290725708008,66.04801940917969],[-34.28217315673828,-47.74061584472656,64.8297119140625],[-35.33162307739258,-48.1314811706543,63.48890686035156],[-36.19978713989258,-48.432926177978516,62.0401611328125],[-36.8892936706543,-48.637081146240234,60.5087776184082],[-37.4298095703125,-48.7467041015625,58.929771423339844],[-37.88337707519531,-48.783538818359375,57.34074401855469],[-38.31459426879883,-48.7724494934082,55.774200439453125],[-38.792171478271484,-48.743553161621094,54.26469039916992],[-39.390167236328125,-48.73241424560547,52.861854553222656],[-40.15910339355469,-48.7729377746582,51.62519836425781],[-41.112823486328125,-48.884464263916016,50.6255989074707],[-42.224510192871094,-49.065059661865234,49.934452056884766],[-43.430633544921875,-49.29069900512695,49.59033203125],[-44.659934997558594,-49.53176498413086,49.57132339477539],[-45.87360382080078,-49.77555847167969,49.764320373535156],[-47.06642150878906,-50.0272216796875,50.058006286621094],[-48.24800109863281,-50.29924011230469,50.33409881591797],[-49.428436279296875,-50.60445785522461,50.46322250366211],[-50.59969711303711,-50.94111633300781,50.33141326904297],[-51.726478576660156,-51.287498474121094,49.88677215576172],[-52.75466537475586,-51.61237335205078,49.14575958251953],[-52.45132064819336,-4.024357795715332,46.70709228515625],[-52.17109680175781,-5.471813201904297,45.55033874511719],[-51.73883056640625,-6.8176469802856445,44.33735656738281],[-51.29487228393555,-8.080778121948242,43.18505859375],[-51.0078010559082,-9.329378128051758,42.228187561035156],[-51.061195373535156,-10.614029884338379,41.64951705932617],[-51.53107452392578,-11.818052291870117,41.61023712158203],[-52.314697265625,-12.750104904174805,42.095584869384766],[-53.248897552490234,-13.41258430480957,42.91819381713867],[-54.23160934448242,-13.966182708740234,43.889015197753906],[-55.19105529785156,-14.607556343078613,44.83539962768555],[-56.053192138671875,-15.487695693969727,45.61905288696289],[-56.71273422241211,-16.681453704833984,46.12543869018555],[-57.06205368041992,-18.136749267578125,46.298404693603516],[-57.092201232910156,-19.717853546142578,46.17871856689453],[-56.910858154296875,-21.343292236328125,45.871307373046875],[-56.62151336669922,-23.00008773803711,45.46769714355469],[-56.314659118652344,-24.69950294494629,45.064292907714844],[-56.06122970581055,-26.458965301513672,44.775413513183594],[-55.889984130859375,-28.274517059326172,44.70166778564453],[-55.787315368652344,-30.123493194580078,44.888694763183594],[-55.718528747558594,-31.987873077392578,45.31898498535156],[-55.645042419433594,-33.87302017211914,45.92393112182617],[-55.53380584716797,-35.80746078491211,46.61101150512695],[-55.370609283447266,-37.81017303466797,47.290855407714844],[-55.153404235839844,-39.882442474365234,47.9010009765625],[-54.891456604003906,-42.00679397583008,48.394203186035156],[-54.60270690917969,-44.15021514892578,48.72827911376953],[-54.31183624267578,-46.267494201660156,48.87861633300781],[-54.03938293457031,-48.312252044677734,48.83790969848633],[-53.800209045410156,-50.22478485107422,48.60902404785156],[-20.438304901123047,-41.003814697265625,73.47479248046875],[-21.746902465820312,-41.36271667480469,72.77520751953125],[-23.1544246673584,-41.829063415527344,72.03572082519531],[-24.64861297607422,-42.37229919433594,71.26887512207031],[-26.20783233642578,-42.96721649169922,70.47428894042969],[-27.801616668701172,-43.586429595947266,69.64482116699219],[-29.397048950195312,-44.20676803588867,68.76416778564453],[-30.960681915283203,-44.80644989013672,67.81503295898438],[-32.45853042602539,-45.363037109375,66.77700805664062],[-33.84526824951172,-45.857269287109375,65.63298797607422],[-35.08896255493164,-46.27669143676758,64.37550354003906],[-36.16334915161133,-46.61069869995117,63.00732421875],[-37.055118560791016,-46.85108947753906,61.54389953613281],[-37.76936340332031,-46.99542999267578,60.01241683959961],[-38.33837890625,-47.0552978515625,58.44587707519531],[-38.82795715332031,-47.05051040649414,56.880287170410156],[-39.30517578125,-47.006107330322266,55.34699630737305],[-39.842796325683594,-46.95081329345703,53.88326644897461],[-40.50911331176758,-46.92145538330078,52.535648345947266],[-41.347076416015625,-46.948768615722656,51.36525344848633],[-42.360260009765625,-47.04876708984375,50.443817138671875],[-43.51007843017578,-47.217041015625,49.836143493652344],[-44.726932525634766,-47.430145263671875,49.56625747680664],[-45.94837951660156,-47.66550064086914,49.588890075683594],[-47.146751403808594,-47.91253662109375,49.792911529541016],[-48.32225036621094,-48.17831039428711,50.066368103027344],[-49.484771728515625,-48.478538513183594,50.287147521972656],[-50.641658782958984,-48.82990264892578,50.32758712768555],[-51.777137756347656,-49.23454666137695,50.08430862426758],[-52.848480224609375,-49.68844985961914,49.51072692871094],[-20.830219268798828,-39.55834197998047,73.62258911132812],[-22.258848190307617,-39.94326400756836,72.897705078125],[-23.763689041137695,-40.44609451293945,72.1259994506836],[-25.332563400268555,-41.026275634765625,71.31593322753906],[-26.945575714111328,-41.64900588989258,70.46794891357422],[-28.580158233642578,-42.28411102294922,69.57568359375],[-30.209131240844727,-42.90500259399414,68.62777709960938],[-31.802501678466797,-43.48521041870117,67.60653686523438],[-33.32529830932617,-44.00328826904297,66.50021362304688],[-34.732513427734375,-44.443302154541016,65.29357147216797],[-35.99190902709961,-44.796546936035156,63.98166275024414],[-37.07758712768555,-45.05632019042969,62.56957244873047],[-37.978485107421875,-45.22011947631836,61.07623291015625],[-38.70502471923828,-45.29805374145508,59.53128433227539],[-39.29521942138672,-45.30280303955078,57.967166900634766],[-39.81721115112305,-45.25471878051758,56.41650390625],[-40.3423957824707,-45.17809295654297,54.91152572631836],[-40.94057846069336,-45.104129791259766,53.486053466796875],[-41.67631912231445,-45.06680679321289,52.189048767089844],[-42.5841064453125,-45.09245300292969,51.08418273925781],[-43.65509796142578,-45.192657470703125,50.24184036254883],[-44.83898162841797,-45.35932159423828,49.718135833740234],[-46.06525802612305,-45.57090377807617,49.50823211669922],[-47.28224182128906,-45.809104919433594,49.55834197998047],[-48.47216033935547,-46.06853485107422,49.7538948059082],[-49.63890075683594,-46.36179733276367,49.9774169921875],[-50.7928581237793,-46.71155548095703,50.1046142578125],[-51.93363571166992,-47.140689849853516,50.013023376464844],[-53.03319549560547,-47.66486358642578,49.604217529296875],[-21.326602935791016,-38.207218170166016,73.7317886352539],[-22.88512420654297,-38.64067077636719,73.0105972290039],[-24.497800827026367,-39.18757247924805,72.23393249511719],[-26.14923095703125,-39.800411224365234,71.4063720703125],[-27.825502395629883,-40.4418830871582,70.52561950683594],[-29.508323669433594,-41.078426361083984,69.58624267578125],[-31.17629623413086,-41.678855895996094,68.57723236083984],[-32.798248291015625,-42.217037200927734,67.48776245117188],[-34.340396881103516,-42.67413330078125,66.30731201171875],[-35.75759506225586,-43.038421630859375,65.02587890625],[-37.01793670654297,-43.30447769165039,63.643402099609375],[-38.09693908691406,-43.470863342285156,62.17060470581055],[-38.99076461791992,-43.54986572265625,60.633995056152344],[-39.7161979675293,-43.55354309082031,59.063087463378906],[-40.31758117675781,-43.49887466430664,57.49011993408203],[-40.86628723144531,-43.40510940551758,55.945167541503906],[-41.434078216552734,-43.30130386352539,54.45795822143555],[-42.088626861572266,-43.21661376953125,53.06208419799805],[-42.8907356262207,-43.182064056396484,51.810646057128906],[-43.8641242980957,-43.218692779541016,50.76914978027344],[-44.98663330078125,-43.3322639465332,50.00634002685547],[-46.19688415527344,-43.508663177490234,49.55223846435547],[-47.4317512512207,-43.727840423583984,49.38818359375],[-48.64863204956055,-43.97783660888672,49.4468879699707],[-49.837257385253906,-44.262081146240234,49.60675811767578],[-51.0037956237793,-44.60255813598633,49.746063232421875],[-52.152793884277344,-45.029624938964844,49.74448776245117],[-53.26974868774414,-45.576045989990234,49.482765197753906],[-21.951345443725586,-36.97864532470703,73.76557922363281],[-23.644912719726562,-37.46880340576172,73.08098602294922],[-25.36834716796875,-38.057960510253906,72.32804107666016],[-27.11094093322754,-38.69863510131836,71.50823974609375],[-28.85936164855957,-39.3492431640625,70.61566162109375],[-30.59992790222168,-39.97063446044922,69.64285278320312],[-32.309112548828125,-40.530418395996094,68.58274841308594],[-33.958274841308594,-41.004661560058594,67.42655944824219],[-35.51343536376953,-41.37791442871094,66.167724609375],[-36.9285774230957,-41.642791748046875,64.8016586303711],[-38.172889709472656,-41.79945373535156,63.336673736572266],[-39.22990417480469,-41.86330032348633,61.79606246948242],[-40.10196304321289,-41.84835433959961,60.207027435302734],[-40.8135871887207,-41.77211380004883,58.600807189941406],[-41.41545867919922,-41.653053283691406,57.009010314941406],[-41.982303619384766,-41.517051696777344,55.45941162109375],[-42.5850830078125,-41.39191436767578,53.97987365722656],[-43.28907775878906,-41.30525207519531,52.60515594482422],[-44.150150299072266,-41.285552978515625,51.39304733276367],[-45.180458068847656,-41.3480339050293,50.412296295166016],[-46.341060638427734,-41.48613739013672,49.714500427246094],[-47.571407318115234,-41.68175506591797,49.31516647338867],[-48.814414978027344,-41.917137145996094,49.17723846435547],[-50.035247802734375,-42.189910888671875,49.21881103515625],[-51.22838592529297,-42.5155143737793,49.311580657958984],[-52.39613723754883,-42.925533294677734,49.33709716796875],[-53.531166076660156,-43.45878982543945,49.17775344848633],[-22.700763702392578,-35.87841033935547,73.68087005615234],[-24.524927139282227,-36.41816329956055,73.06195068359375],[-26.364139556884766,-37.043907165527344,72.36094665527344],[-28.205875396728516,-37.70491409301758,71.57331085205078],[-30.038928985595703,-38.35280227661133,70.68850708007812],[-31.842294692993164,-38.94288635253906,69.69573974609375],[-33.59635543823242,-39.44382858276367,68.5920639038086],[-35.2720832824707,-39.83403778076172,67.3722152709961],[-36.83414077758789,-40.1013069152832,66.03402709960938],[-38.23497772216797,-40.244876861572266,64.58033752441406],[-39.451663970947266,-40.28411865234375,63.03548812866211],[-40.47410583496094,-40.236732482910156,61.425758361816406],[-41.31277084350586,-40.122650146484375,59.781856536865234],[-41.99893569946289,-39.96101379394531,58.135101318359375],[-42.59279251098633,-39.78104019165039,56.518253326416016],[-43.16925811767578,-39.60760498046875,54.95555877685547],[-43.798160552978516,-39.46804428100586,53.474369049072266],[-44.54188537597656,-39.38971710205078,52.11144256591797],[-45.45088195800781,-39.39976119995117,50.93107604980469],[-46.52123260498047,-39.49930191040039,49.995567321777344],[-47.708621978759766,-39.6720085144043,49.346492767333984],[-48.9530143737793,-39.895286560058594,48.98087692260742],[-50.2032585144043,-40.156402587890625,48.84313201904297],[-51.4304084777832,-40.464908599853516,48.837440490722656],[-52.6278076171875,-40.848777770996094,48.836944580078125],[-53.788604736328125,-41.349403381347656,48.72490692138672],[-23.55289077758789,-34.897212982177734,73.429931640625],[-25.500917434692383,-35.468894958496094,72.90081024169922],[-27.45585060119629,-36.11531066894531,72.27546691894531],[-29.406143188476562,-36.78081130981445,71.5433120727539],[-31.327510833740234,-37.40873336791992,70.68115234375],[-33.19965362548828,-37.950897216796875,69.67977905273438],[-35.00228500366211,-38.37583923339844,68.5408706665039],[-36.70413589477539,-38.66357421875,67.26316833496094],[-38.26683044433594,-38.8072395324707,65.85120391845703],[-39.64655303955078,-38.826324462890625,64.3221664428711],[-40.82752227783203,-38.74395751953125,62.70647430419922],[-41.807945251464844,-38.584632873535156,61.035709381103516],[-42.60487365722656,-38.36978530883789,59.34160232543945],[-43.261756896972656,-38.1307487487793,57.65776062011719],[-43.84300231933594,-37.89765167236328,56.01414108276367],[-44.423030853271484,-37.69487762451172,54.43302536010742],[-45.07029724121094,-37.55099868774414,52.94230270385742],[-45.84370040893555,-37.495113372802734,51.582069396972656],[-46.783912658691406,-37.54555892944336,50.41823196411133],[-47.87965393066406,-37.69178009033203,49.51063537597656],[-49.08252716064453,-37.906700134277344,48.887813568115234],[-50.33449935913086,-38.16569137573242,48.52849197387695],[-51.589759826660156,-38.46213150024414,48.35950469970703],[-52.82084655761719,-38.81915283203125,48.28034210205078],[-54.01487350463867,-39.277320861816406,48.16427230834961],[-24.496395111083984,-34.02767562866211,73.00011444091797],[-26.55350685119629,-34.60427474975586,72.56903839111328],[-28.62103271484375,-35.24242401123047,72.03578186035156],[-30.673250198364258,-35.883460998535156,71.36897277832031],[-32.68407440185547,-36.467079162597656,70.54135131835938],[-34.62748336791992,-36.94015121459961,69.54212951660156],[-36.4797248840332,-37.26939392089844,68.37781524658203],[-38.204349517822266,-37.437965393066406,67.05269622802734],[-39.763362884521484,-37.458038330078125,65.58422088623047],[-41.11680221557617,-37.35307312011719,63.9953727722168],[-42.2579345703125,-37.1540412902832,62.324790954589844],[-43.19160079956055,-36.88731384277344,60.606658935546875],[-43.94860076904297,-36.587188720703125,58.8756103515625],[-44.5781135559082,-36.28553771972656,57.16169738769531],[-45.14702606201172,-36.01308822631836,55.492767333984375],[-45.72913360595703,-35.795501708984375,53.89064025878906],[-46.39030838012695,-35.664154052734375,52.38432312011719],[-47.182525634765625,-35.64292907714844,51.015869140625],[-48.14101791381836,-35.74297332763672,49.85421371459961],[-49.24913024902344,-35.941680908203125,48.954261779785156],[-50.45714569091797,-36.20442581176758,48.330711364746094],[-51.71050262451172,-36.50471115112305,47.94490432739258],[-52.96622848510742,-36.84551239013672,47.71623229980469],[-54.19359588623047,-37.26444625854492,47.539390563964844],[-25.52646827697754,-33.260921478271484,72.39639282226562],[-27.676082611083984,-33.81245803833008,72.05774688720703],[-29.83523178100586,-34.40607452392578,71.60784912109375],[-31.97796630859375,-34.98551559448242,71.00946807861328],[-34.07286834716797,-35.49087142944336,70.22667694091797],[-36.08567428588867,-35.86576843261719,69.24356842041016],[-37.98436737060547,-36.07617950439453,68.06979370117188],[-39.727237701416016,-36.122344970703125,66.71737670898438],[-41.2789306640625,-36.01926803588867,65.21237182617188],[-42.6035270690918,-35.797523498535156,63.584442138671875],[-43.701969146728516,-35.49028396606445,61.878780364990234],[-44.5936279296875,-35.13724136352539,60.13286590576172],[-45.31696701049805,-34.77301025390625,58.37819290161133],[-45.9247932434082,-34.42927932739258,56.64171600341797],[-46.48562240600586,-34.13811111450195,54.94974136352539],[-47.0714111328125,-33.928043365478516,53.32406997680664],[-47.743019104003906,-33.82624053955078,51.79589080810547],[-48.546207427978516,-33.85120391845703,50.408782958984375],[-49.51192855834961,-34.00651931762695,49.23291015625],[-50.621009826660156,-34.2614631652832,48.316314697265625],[-51.82562255859375,-34.573177337646484,47.66090393066406],[-53.07425308227539,-34.91927719116211,47.21937942504883],[-54.322471618652344,-35.31446838378906,46.90511703491211],[-26.642000198364258,-32.57275390625,71.6469497680664],[-28.85785675048828,-33.078208923339844,71.3685302734375],[-31.086214065551758,-33.5947265625,70.98219299316406],[-33.300193786621094,-34.07170867919922,70.44476318359375],[-35.464969635009766,-34.45467758178711,69.71322631835938],[-37.53675842285156,-34.692989349365234,68.76298522949219],[-39.47248840332031,-34.77041244506836,67.60054016113281],[-41.228641510009766,-34.68787384033203,66.2442626953125],[-42.770233154296875,-34.465755462646484,64.72698974609375],[-44.063987731933594,-34.13590621948242,63.08441925048828],[-45.12543487548828,-33.74409866333008,61.366817474365234],[-45.983863830566406,-33.32997512817383,59.6102409362793],[-46.68309020996094,-32.927589416503906,57.843528747558594],[-47.27880859375,-32.569114685058594,56.090904235839844],[-47.83924865722656,-32.288658142089844,54.37692642211914],[-48.43233871459961,-32.10952377319336,52.725223541259766],[-49.11229705810547,-32.05378723144531,51.168617248535156],[-49.92020034790039,-32.133766174316406,49.7518310546875],[-50.88373947143555,-32.34786605834961,48.54279708862305],[-51.9850959777832,-32.65618133544922,47.583404541015625],[-53.179649353027344,-33.01594543457031,46.86886978149414],[-54.41550064086914,-33.4135627746582,46.345550537109375],[-27.837093353271484,-31.923871994018555,70.77667999267578],[-30.0966854095459,-32.37693786621094,70.5194091796875],[-32.36930847167969,-32.79534149169922,70.16447448730469],[-34.62802505493164,-33.13251876831055,69.66793060302734],[-36.83584213256836,-33.344966888427734,68.98445892333984],[-38.94282913208008,-33.416107177734375,68.07784271240234],[-40.901424407958984,-33.33696746826172,66.95075225830078],[-42.663543701171875,-33.11698913574219,65.61927795410156],[-44.19168472290039,-32.77687072753906,64.11995697021484],[-45.45997619628906,-32.3603515625,62.48943328857422],[-46.494728088378906,-31.910205841064453,60.780704498291016],[-47.33238983154297,-31.464313507080078,59.028709411621094],[-48.0213737487793,-31.056406021118164,57.25971221923828],[-48.61855697631836,-30.71982192993164,55.4951286315918],[-49.18850326538086,-30.479997634887695,53.75926971435547],[-49.7924690246582,-30.354816436767578,52.07820510864258],[-50.47949981689453,-30.35950469970703,50.48640060424805],[-51.28664016723633,-30.501487731933594,49.02721405029297],[-52.241241455078125,-30.770191192626953,47.76647186279297],[-53.328834533691406,-31.125823974609375,46.74243927001953],[-54.505638122558594,-31.533472061157227,45.945350646972656],[-29.10234832763672,-31.257190704345703,69.83500671386719],[-31.38620376586914,-31.65639305114746,69.56077575683594],[-33.680667877197266,-31.963212966918945,69.2033462524414],[-35.95570755004883,-32.133636474609375,68.72100830078125],[-38.17372512817383,-32.15571975708008,68.0683822631836],[-40.28620910644531,-32.032466888427734,67.20693969726562],[-42.24409484863281,-31.776268005371094,66.13044738769531],[-43.996822357177734,-31.405460357666016,64.85093688964844],[-45.509822845458984,-30.95981216430664,63.39577102661133],[-46.7608757019043,-30.47948455810547,61.79847717285156],[-47.78232192993164,-29.999954223632812,60.114349365234375],[-48.61602020263672,-29.55661392211914,58.377071380615234],[-49.31306457519531,-29.18363380432129,56.6107177734375],[-49.92671585083008,-28.902175903320312,54.834320068359375],[-50.51435852050781,-28.72970199584961,53.074703216552734],[-51.131996154785156,-28.676494598388672,51.36064529418945],[-51.82417678833008,-28.75220489501953,49.726287841796875],[-52.62629318237305,-28.953458786010742,48.21453857421875],[-53.56798553466797,-29.268802642822266,46.8893928527832],[-54.63623809814453,-29.667266845703125,45.78477096557617],[-30.429035186767578,-30.523303985595703,68.8563461303711],[-32.71559524536133,-30.86630630493164,68.52550506591797],[-35.006465911865234,-31.050643920898438,68.13009643554688],[-37.269386291503906,-31.052471160888672,67.63294982910156],[-39.46550750732422,-30.873023986816406,66.99195861816406],[-41.549896240234375,-30.541988372802734,66.16842651367188],[-43.47536087036133,-30.09014129638672,65.15219116210938],[-45.201995849609375,-29.57246208190918,63.94065856933594],[-46.699520111083984,-29.035324096679688,62.54887390136719],[-47.94486618041992,-28.516050338745117,61.00154113769531],[-48.97123336791992,-28.04069709777832,59.35314178466797],[-49.82311248779297,-27.64229965209961,57.63657760620117],[-50.54708480834961,-27.338367462158203,55.87206268310547],[-51.18940353393555,-27.14016342163086,54.08234786987305],[-51.800682067871094,-27.05403709411621,52.29667663574219],[-52.43281173706055,-27.084529876708984,50.54538345336914],[-53.12741470336914,-27.228313446044922,48.86354064941406],[-53.92184829711914,-27.479860305786133,47.29369354248047],[-54.84687042236328,-27.835372924804688,45.89595413208008],[-31.805932998657227,-29.680248260498047,67.86695861816406],[-34.066287994384766,-29.96204376220703,67.43580627441406],[-36.32703399658203,-30.028202056884766,66.96985626220703],[-38.54847717285156,-29.863439559936523,66.42997741699219],[-40.69009780883789,-29.485580444335938,65.77865600585938],[-42.7076530456543,-28.94108772277832,64.98094177246094],[-44.57232666015625,-28.305286407470703,64.02003479003906],[-46.25831604003906,-27.65276336669922,62.881080627441406],[-47.74143981933594,-27.04076385498047,61.56426239013672],[-48.99696350097656,-26.510480880737305,60.07860565185547],[-50.053123474121094,-26.079814910888672,58.47411346435547],[-50.94538116455078,-25.75934600830078,56.7769660949707],[-51.71244812011719,-25.552152633666992,55.013397216796875],[-52.392822265625,-25.455156326293945,53.20911407470703],[-53.03150939941406,-25.46593475341797,51.395713806152344],[-53.676822662353516,-25.574329376220703,49.60614013671875],[-54.37195587158203,-25.77422332763672,47.8763542175293],[-55.156497955322266,-26.06730842590332,46.247154235839844],[-33.214324951171875,-28.692440032958984,66.88420104980469],[-35.41595458984375,-28.912683486938477,66.31596374511719],[-37.61392593383789,-28.867658615112305,65.74396514892578],[-39.761375427246094,-28.54937744140625,65.13164520263672],[-41.810062408447266,-27.98416519165039,64.44476318359375],[-43.7322883605957,-27.257410049438477,63.65264129638672],[-45.51560974121094,-26.466650009155273,62.7309455871582],[-47.149681091308594,-25.702383041381836,61.656150817871094],[-48.62163162231445,-25.037832260131836,60.4142951965332],[-49.90811538696289,-24.527042388916016,58.99772262573242],[-51.01776885986328,-24.167795181274414,57.43617630004883],[-51.97084426879883,-23.9484806060791,55.76020431518555],[-52.794857025146484,-23.852243423461914,53.99892807006836],[-53.52126693725586,-23.86307144165039,52.181861877441406],[-54.1882209777832,-23.959714889526367,50.343536376953125],[-54.84604263305664,-24.128860473632812,48.51994705200195],[-55.54117965698242,-24.371994018554688,46.74690628051758],[-34.63447189331055,-27.537527084350586,65.9317855834961],[-36.731903076171875,-27.693044662475586,65.18598937988281],[-38.825931549072266,-27.550050735473633,64.4705810546875],[-40.85679626464844,-27.098575592041016,63.750877380371094],[-42.786067962646484,-26.391254425048828,63.00318908691406],[-44.59696960449219,-25.533321380615234,62.191688537597656],[-46.290103912353516,-24.63707733154297,61.283485412597656],[-47.87074279785156,-23.804616928100586,60.24876403808594],[-49.33943176269531,-23.121789932250977,59.066917419433594],[-50.67156219482422,-22.64723014831543,57.708431243896484],[-51.85294723510742,-22.36709213256836,56.19231033325195],[-52.88353729248047,-22.249759674072266,54.54356384277344],[-53.77777862548828,-22.260295867919922,52.792720794677734],[-54.55483627319336,-22.358200073242188,50.9714469909668],[-55.2518424987793,-22.515544891357422,49.11802673339844],[-55.92438507080078,-22.725982666015625,47.27141189575195],[-36.02177810668945,-26.217792510986328,64.9914779663086],[-37.96554946899414,-26.302568435668945,64.04158020019531],[-39.90304183959961,-26.074939727783203,63.147396087646484],[-41.78833770751953,-25.534278869628906,62.29767608642578],[-43.586204528808594,-24.74303436279297,61.4672737121582],[-45.28630828857422,-23.81795310974121,60.612388610839844],[-46.90043258666992,-22.882278442382812,59.690216064453125],[-48.44472122192383,-22.043588638305664,58.66667556762695],[-49.92510223388672,-21.38084602355957,57.51345443725586],[-51.3104248046875,-20.949440002441406,56.19905090332031],[-52.57048034667969,-20.734277725219727,54.72740936279297],[-53.688232421875,-20.69418716430664,53.115936279296875],[-54.65732192993164,-20.772899627685547,51.38875961303711],[-55.488033294677734,-20.919858932495117,49.5777587890625],[-56.21916961669922,-21.10988426208496,47.72454833984375],[-37.32436752319336,-24.737613677978516,64.03802490234375],[-39.053585052490234,-24.751699447631836,62.86187744140625],[-40.798980712890625,-24.473154067993164,61.77486801147461],[-42.52415084838867,-23.899715423583984,60.775917053222656],[-44.194671630859375,-23.09372901916504,59.83990478515625],[-45.80378723144531,-22.176780700683594,58.91546630859375],[-47.36842727661133,-21.27882194519043,57.94914627075195],[-48.90678405761719,-20.48954200744629,56.90650939941406],[-50.412471771240234,-19.874889373779297,55.757713317871094],[-51.85124969482422,-19.481456756591797,54.47222137451172],[-53.18742370605469,-19.296878814697266,53.04532241821289],[-54.38739776611328,-19.27682876586914,51.480857849121094],[-55.43032455444336,-19.367341995239258,49.79304122924805],[-56.31987380981445,-19.5216064453125,48.0117073059082],[-38.472625732421875,-23.110780715942383,63.03131866455078],[-39.95508575439453,-23.077190399169922,61.637962341308594],[-41.49095153808594,-22.79341697692871,60.3524284362793],[-43.05828857421875,-22.252317428588867,59.18620300292969],[-44.62571334838867,-21.50809669494629,58.12067794799805],[-46.182865142822266,-20.681400299072266,57.09770202636719],[-47.74093246459961,-19.877452850341797,56.065643310546875],[-49.299072265625,-19.172544479370117,54.98430633544922],[-50.84048843383789,-18.61504554748535,53.82450485229492],[-52.328880310058594,-18.23857879638672,52.558719635009766],[-53.7260856628418,-18.03092384338379,51.17421340942383],[-54.99461364746094,-17.967496871948242,49.66273880004883],[-56.108455657958984,-18.013795852661133,48.02999496459961],[-39.43626022338867,-21.37461280822754,61.95698165893555],[-40.665306091308594,-21.33106231689453,60.36683654785156],[-41.99293518066406,-21.094432830810547,58.882877349853516],[-43.42360305786133,-20.654386520385742,57.53280258178711],[-44.92981719970703,-20.05232048034668,56.309844970703125],[-46.48436737060547,-19.366378784179688,55.172760009765625],[-48.068843841552734,-18.68912124633789,54.05872344970703],[-49.665260314941406,-18.076852798461914,52.92720031738281],[-51.24728012084961,-17.56103515625,51.748809814453125],[-52.774635314941406,-17.161367416381836,50.495948791503906],[-54.214111328125,-16.882183074951172,49.148170471191406],[-55.53522872924805,-16.723995208740234,47.69217300415039],[-40.21935272216797,-19.590099334716797,60.795745849609375],[-41.22006607055664,-19.582626342773438,59.031944274902344],[-42.37196350097656,-19.443490982055664,57.3590202331543],[-43.7065544128418,-19.16659927368164,55.814353942871094],[-45.19960021972656,-18.740724563598633,54.431121826171875],[-46.78382110595703,-18.216737747192383,53.17010498046875],[-48.4133186340332,-17.664108276367188,51.967918395996094],[-50.05436706542969,-17.122112274169922,50.7818603515625],[-51.670597076416016,-16.605880737304688,49.582000732421875],[-53.22467041015625,-16.144603729248047,48.33708572387695],[-54.69279861450195,-15.763116836547852,47.02178955078125],[-40.8751335144043,-17.820812225341797,59.540103912353516],[-41.70223617553711,-17.89253807067871,57.62514877319336],[-42.73197937011719,-17.89400863647461,55.773555755615234],[-44.01908493041992,-17.79112434387207,54.052947998046875],[-45.523170471191406,-17.547300338745117,52.509986877441406],[-47.1486930847168,-17.173307418823242,51.12372589111328],[-48.82381057739258,-16.71689796447754,49.830440521240234],[-50.498565673828125,-16.19857406616211,48.589603424072266],[-52.135528564453125,-15.64395809173584,47.36539077758789],[-53.70474624633789,-15.098199844360352,46.124000549316406],[-41.50175476074219,-16.121740341186523,58.19202423095703],[-42.22766876220703,-16.305160522460938,56.14632797241211],[-43.19833755493164,-16.441226959228516,54.15029525756836],[-44.45964813232422,-16.495052337646484,52.27289962768555],[-45.97337341308594,-16.40570831298828,50.5791015625],[-47.628108978271484,-16.14748764038086,49.06680679321289],[-49.32809066772461,-15.738519668579102,47.684043884277344],[-51.016414642333984,-15.206557273864746,46.387115478515625],[-52.65852737426758,-14.595263481140137,45.13395690917969],[-42.22193908691406,-14.536699295043945,56.76367950439453],[-42.922908782958984,-14.822763442993164,54.62364196777344],[-43.87158966064453,-15.063050270080566,52.51616668701172],[-45.107330322265625,-15.221003532409668,50.510074615478516],[-46.600799560546875,-15.230687141418457,48.675453186035156],[-48.2472038269043,-15.032387733459473,47.04127883911133],[-49.940330505371094,-14.63337516784668,45.56822204589844],[-51.61851119995117,-14.073370933532715,44.209224700927734],[-43.14847946166992,-13.076363563537598,55.29481506347656],[-43.87205505371094,-13.442178726196289,53.09698486328125],[-44.81981658935547,-13.73442554473877,50.916996002197266],[-46.01597595214844,-13.917520523071289,48.81442642211914],[-47.443748474121094,-13.935905456542969,46.86029052734375],[-49.030521392822266,-13.73908805847168,45.106441497802734],[-50.67549133300781,-13.329424858093262,43.53190231323242],[-44.30113983154297,-11.734167098999023,53.83515930175781],[-45.0633544921875,-12.144649505615234,51.61016082763672],[-46.00870895385742,-12.431940078735352,49.38621139526367],[-47.151039123535156,-12.560997009277344,47.21701431274414],[-48.48685836791992,-12.507822036743164,45.1680908203125],[-49.97312927246094,-12.25671100616455,43.29835510253906],[-45.64927291870117,-10.478192329406738,52.432159423828125],[-46.44363021850586,-10.890812873840332,50.20145797729492],[-47.374813079833984,-11.117118835449219,47.95370101928711],[-48.45830154418945,-11.139445304870605,45.74078369140625],[-49.69487380981445,-10.963006019592285,43.62106704711914],[-47.12158203125,-9.260979652404785,51.11618423461914],[-47.93084716796875,-9.631839752197266,48.88970184326172],[-48.840110778808594,-9.760293960571289,46.63059997558594],[-49.865089416503906,-9.647878646850586,44.3928108215332],[-48.62562561035156,-8.033188819885254,49.8957405090332],[-49.43849182128906,-8.33142375946045,47.67945098876953],[-50.32392883300781,-8.337526321411133,45.423614501953125],[-50.06685256958008,-6.765731334686279,48.75811004638672],[-50.877830505371094,-6.959256649017334,46.56401824951172],[-51.36735534667969,-5.442936420440674,47.68994140625],[-53.976104736328125,-53.00376510620117,47.12598419189453],[-54.33622741699219,-54.205204010009766,45.66230773925781],[-54.64474868774414,-55.393836975097656,43.935462951660156],[-54.882598876953125,-56.530582427978516,42.00773239135742],[-55.03746795654297,-57.58296585083008,39.92671585083008],[-55.1052131652832,-58.51970291137695,37.73989486694336],[-55.09271240234375,-59.31973648071289,35.49092102050781],[-55.00938415527344,-59.96397399902344,33.21172332763672],[-54.869930267333984,-60.4404182434082,30.92864418029785],[-54.692466735839844,-60.73581314086914,28.663806915283203],[-54.50194549560547,-60.866310119628906,26.43158721923828],[-54.32005310058594,-60.84931945800781,24.23978614807129],[-54.16763687133789,-60.70615768432617,22.092342376708984],[-54.067230224609375,-60.459449768066406,19.99135398864746],[-54.04610061645508,-60.132713317871094,17.938705444335938],[-54.126197814941406,-59.74998092651367,15.935152053833008],[-54.33100128173828,-59.32390594482422,13.989009857177734],[-54.678367614746094,-58.860076904296875,12.115196228027344],[-55.181541442871094,-58.355186462402344,10.338871955871582],[-55.822486877441406,-57.80394744873047,8.675008773803711],[-56.56854248046875,-57.20127868652344,7.124978065490723],[-57.3797721862793,-56.545257568359375,5.676235198974609],[-58.21147155761719,-55.83937072753906,4.302241802215576],[-59.01430892944336,-55.09272766113281,2.96535062789917],[-59.74760818481445,-54.321720123291016,1.6241377592086792],[-60.378211975097656,-53.53923034667969,0.2500145435333252],[-60.881839752197266,-52.75523376464844,-1.172774314880371],[-61.239990234375,-51.976715087890625,-2.6461355686187744],[-61.45560836791992,-51.20819091796875,-4.152980804443359],[-61.54600524902344,-50.45464324951172,-5.663015365600586],[-61.53125762939453,-49.72869873046875,-7.12816047668457],[-54.51387023925781,-51.12287521362305,47.385887145996094],[-55.49542236328125,-50.264915466308594,46.31449890136719],[-56.48341751098633,-49.3634147644043,45.09672927856445],[-57.450618743896484,-48.4432487487793,43.77495193481445],[-58.375545501708984,-47.52052307128906,42.3748779296875],[-59.23438262939453,-46.60753631591797,40.916805267333984],[-60.00443649291992,-45.71208953857422,39.417518615722656],[-60.658958435058594,-44.83995819091797,37.888465881347656],[-61.16972732543945,-43.995906829833984,36.34117126464844],[-61.49675369262695,-43.1861572265625,34.789913177490234],[-61.62255096435547,-42.412376403808594,33.254371643066406],[-61.533294677734375,-41.67471694946289,31.75539779663086],[-61.22480010986328,-40.97035598754883,30.31316375732422],[-60.70204162597656,-40.29367446899414,28.943344116210938],[-59.98240661621094,-39.63713073730469,27.650094985961914],[-59.10374450683594,-38.994049072265625,26.418142318725586],[-58.093021392822266,-38.36212158203125,25.229629516601562],[-56.97406005859375,-37.74046325683594,24.068147659301758],[-55.76288604736328,-37.125858306884766,22.92755126953125],[-54.47904968261719,-36.50654602050781,21.817302703857422],[-53.13800048828125,-35.862483978271484,20.762630462646484],[-51.7549934387207,-35.166534423828125,19.798660278320312],[-50.3491325378418,-34.38623046875,18.9627628326416],[-48.946876525878906,-33.48194122314453,18.28855323791504],[-47.57625961303711,-32.432960510253906,17.768230438232422],[-46.2636604309082,-31.222999572753906,17.379602432250977],[-45.03345489501953,-29.848426818847656,17.08335304260254],[-43.913330078125,-28.316082000732422,16.83026123046875],[-42.926849365234375,-26.658693313598633,16.565465927124023],[-42.096923828125,-24.922067642211914,16.247299194335938],[-41.458675384521484,-23.16562271118164,15.850188255310059],[-61.976524353027344,-47.06995391845703,-8.038396835327148],[-62.396453857421875,-44.86467361450195,-7.58139181137085],[-62.602638244628906,-42.63661193847656,-7.133264541625977],[-62.53650665283203,-40.47562026977539,-6.753093242645264],[-62.16727828979492,-38.458251953125,-6.499078750610352],[-61.53668212890625,-36.63726806640625,-6.395038604736328],[-60.755531311035156,-34.99713897705078,-6.393754959106445],[-59.948341369628906,-33.477783203125,-6.399396896362305],[-59.25756072998047,-31.99979019165039,-6.281656742095947],[-58.878273010253906,-30.517383575439453,-5.8962016105651855],[-58.93687438964844,-29.082210540771484,-5.234609603881836],[-59.40950012207031,-27.765892028808594,-4.378233432769775],[-60.173377990722656,-26.590843200683594,-3.391444206237793],[-61.0802001953125,-25.55248260498047,-2.2976434230804443],[-61.96697235107422,-24.650930404663086,-1.0988564491271973],[-62.67759704589844,-23.89716339111328,0.20155800879001617],[-63.04979705810547,-23.33885955810547,1.5906237363815308],[-62.91305160522461,-23.0563907623291,2.9813191890716553],[-62.151790618896484,-23.130643844604492,4.144786834716797],[-60.87700653076172,-23.519927978515625,4.947310447692871],[-59.21035385131836,-24.155376434326172,5.460321426391602],[-57.22669982910156,-24.97744369506836,5.814435005187988],[-54.987274169921875,-25.9156494140625,6.143969535827637],[-52.56214904785156,-26.865436553955078,6.575237274169922],[-50.057037353515625,-27.694887161254883,7.185539245605469],[-47.58061218261719,-28.263160705566406,8.016728401184082],[-45.2607421875,-28.426177978515625,9.07935619354248],[-43.267330169677734,-28.031612396240234,10.358839988708496],[-41.78229522705078,-27.01526641845703,11.778276443481445],[-40.92872619628906,-25.45116424560547,13.202289581298828],[-40.7320442199707,-23.516864776611328,14.462996482849121],[-54.96700668334961,-52.28157043457031,45.958229064941406],[-55.31991958618164,-53.47304153442383,44.296356201171875],[-55.593101501464844,-54.641944885253906,42.430782318115234],[-55.78544235229492,-55.752540588378906,40.403873443603516],[-55.89452362060547,-56.76922607421875,38.2584342956543],[-55.92354965209961,-57.65966033935547,36.03523254394531],[-55.880096435546875,-58.4002685546875,33.77042770385742],[-55.775203704833984,-58.971649169921875,31.4920711517334],[-55.62421798706055,-59.356998443603516,29.226032257080078],[-55.445892333984375,-59.554283142089844,26.98734474182129],[-55.261962890625,-59.580196380615234,24.788429260253906],[-55.09162139892578,-59.45433044433594,22.635461807250977],[-54.95343780517578,-59.19891357421875,20.53189468383789],[-54.86736297607422,-58.83857345581055,18.479124069213867],[-54.85746383666992,-58.40769958496094,16.47244644165039],[-54.9448356628418,-57.925880432128906,14.515422821044922],[-55.15165710449219,-57.40571975708008,12.616530418395996],[-55.49370193481445,-56.84724044799805,10.794248580932617],[-55.98506164550781,-56.250732421875,9.068140029907227],[-56.60890579223633,-55.60596466064453,7.452770233154297],[-57.33319091796875,-54.903907775878906,5.949481964111328],[-58.118675231933594,-54.14161682128906,4.54506254196167],[-58.92030334472656,-53.321231842041016,3.214308500289917],[-59.695404052734375,-52.46882629394531,1.913984775543213],[-60.402244567871094,-51.600852966308594,0.6067788600921631],[-61.00859069824219,-50.73601531982422,-0.7353455424308777],[-61.48925018310547,-49.887962341308594,-2.126030445098877],[-61.82544708251953,-49.07461929321289,-3.5703284740448],[-62.01606750488281,-48.30768585205078,-5.053529262542725],[-62.068870544433594,-47.610801696777344,-6.55019474029541],[-55.93560028076172,-51.457183837890625,44.69970703125],[-56.26383972167969,-52.659584045410156,42.893028259277344],[-56.50108337402344,-53.82756042480469,40.922576904296875],[-56.654388427734375,-54.92474365234375,38.826847076416016],[-56.72888946533203,-55.91404724121094,36.640785217285156],[-56.729434967041016,-56.760799407958984,34.39680480957031],[-56.6661491394043,-57.441802978515625,32.12651443481445],[-56.55134582519531,-57.93306350708008,29.85664176940918],[-56.401611328125,-58.22747802734375,27.60647964477539],[-56.232269287109375,-58.32288360595703,25.390541076660156],[-56.0621223449707,-58.238746643066406,23.21989631652832],[-55.90729904174805,-57.99557876586914,21.100555419921875],[-55.78251647949219,-57.61748123168945,19.035802841186523],[-55.7031135559082,-57.14146041870117,17.021411895751953],[-55.69181442260742,-56.59954833984375,15.055353164672852],[-55.7679557800293,-56.012542724609375,13.140005111694336],[-55.95044708251953,-55.3893928527832,11.286216735839844],[-56.25611114501953,-54.73719024658203,9.50615406036377],[-56.70416259765625,-54.05259323120117,7.819282531738281],[-57.28032302856445,-53.319122314453125,6.240546226501465],[-57.95424270629883,-52.52389144897461,4.771049976348877],[-58.68634033203125,-51.659576416015625,3.3991222381591797],[-59.441123962402344,-50.740013122558594,2.0956976413726807],[-60.17629623413086,-49.789756774902344,0.8229910731315613],[-60.85062026977539,-48.83219909667969,-0.4564390778541565],[-61.43205261230469,-47.89058303833008,-1.7693930864334106],[-61.89677810668945,-46.99144744873047,-3.1348624229431152],[-62.220218658447266,-46.162906646728516,-4.5647101402282715],[-62.389854431152344,-45.43201446533203,-6.051204681396484],[-56.88349151611328,-50.58842086791992,43.36017990112305],[-57.174339294433594,-51.80752182006836,41.457210540771484],[-57.37355041503906,-52.979225158691406,39.42155456542969],[-57.49280548095703,-54.065589904785156,37.28644561767578],[-57.538429260253906,-55.02711868286133,35.07868194580078],[-57.51814651489258,-55.82786178588867,32.826446533203125],[-57.44386291503906,-56.44078063964844,30.559555053710938],[-57.33019256591797,-56.84956359863281,28.29894256591797],[-57.19093704223633,-57.04764938354492,26.06252670288086],[-57.038150787353516,-57.0345458984375,23.865238189697266],[-56.887062072753906,-56.8310661315918,21.718231201171875],[-56.749359130859375,-56.45960235595703,19.627958297729492],[-56.634002685546875,-55.957523345947266,17.59332847595215],[-56.553646087646484,-55.35952377319336,15.612445831298828],[-56.528194427490234,-54.700904846191406,13.682711601257324],[-56.572784423828125,-53.99923324584961,11.807716369628906],[-56.70662307739258,-53.27356719970703,9.99200439453125],[-56.94927215576172,-52.530033111572266,8.245972633361816],[-57.32478332519531,-51.76195526123047,6.588554382324219],[-57.823753356933594,-50.947593688964844,5.034182548522949],[-58.416595458984375,-50.067657470703125,3.5851588249206543],[-59.07807159423828,-49.120079040527344,2.228074789047241],[-59.77189254760742,-48.11384963989258,0.9396497011184692],[-60.45936965942383,-47.076881408691406,-0.3147861361503601],[-61.098731994628906,-46.03803634643555,-1.5715539455413818],[-61.66227340698242,-45.034332275390625,-2.860912799835205],[-62.122642517089844,-44.1035270690918,-4.208288192749023],[-62.444923400878906,-43.287532806396484,-5.63263463973999],[-57.79908752441406,-49.70078659057617,41.960838317871094],[-58.04521179199219,-50.937198638916016,40.00419616699219],[-58.20600891113281,-52.111297607421875,37.936405181884766],[-58.29209518432617,-53.18390655517578,35.78422164916992],[-58.312461853027344,-54.113037109375,33.57015609741211],[-58.276885986328125,-54.85785675048828,31.3208065032959],[-58.20099639892578,-55.39741516113281,29.060598373413086],[-58.09716796875,-55.716224670410156,26.80934715270996],[-57.976531982421875,-55.80937957763672,24.584877014160156],[-57.84718322753906,-55.67704772949219,22.403587341308594],[-57.719486236572266,-55.342254638671875,20.277502059936523],[-57.598018646240234,-54.84156799316406,18.21004295349121],[-57.488582611083984,-54.21024703979492,16.202125549316406],[-57.39999771118164,-53.48622131347656,14.251626014709473],[-57.34674072265625,-52.70241165161133,12.35770320892334],[-57.34300994873047,-51.88766860961914,10.517762184143066],[-57.408790588378906,-51.061275482177734,8.734212875366211],[-57.56498718261719,-50.228599548339844,7.015472412109375],[-57.8407096862793,-49.38261413574219,5.377893924713135],[-58.23017883300781,-48.49617004394531,3.835315227508545],[-58.72488784790039,-47.55093765258789,2.389151096343994],[-59.29997634887695,-46.53608322143555,1.0324503183364868],[-59.92363739013672,-45.458805084228516,-0.2533540725708008],[-60.559295654296875,-44.34768295288086,-1.4976065158843994],[-61.1705322265625,-43.244544982910156,-2.7374565601348877],[-61.728553771972656,-42.197513580322266,-4.00694465637207],[-62.199180603027344,-41.25521469116211,-5.33672571182251],[-58.66558837890625,-48.80815124511719,40.52168273925781],[-58.8633918762207,-50.05855941772461,38.544498443603516],[-58.98223876953125,-51.23095703125,36.469058990478516],[-59.03440856933594,-52.283870697021484,34.31791305541992],[-59.030975341796875,-53.16960906982422,32.11174774169922],[-58.98762893676758,-53.85062026977539,29.87137222290039],[-58.91815185546875,-54.30712127685547,27.62082290649414],[-58.832855224609375,-54.5251579284668,25.38009262084961],[-58.73969268798828,-54.50038146972656,23.1682186126709],[-58.64136505126953,-54.23512268066406,21.003311157226562],[-58.53950500488281,-53.76761245727539,18.895282745361328],[-58.43488693237305,-53.13301086425781,16.849660873413086],[-58.32902145385742,-52.37006378173828,14.86728286743164],[-58.225196838378906,-51.5140380859375,12.947962760925293],[-58.13444137573242,-50.609657287597656,11.085855484008789],[-58.07080078125,-49.685447692871094,9.276468276977539],[-58.05330276489258,-48.760074615478516,7.520371913909912],[-58.10350799560547,-47.84028244018555,5.8225884437561035],[-58.25059127807617,-46.91985321044922,4.1957244873046875],[-58.51500701904297,-45.97633361816406,2.64963698387146],[-58.89349365234375,-44.98119354248047,1.1914526224136353],[-59.37035369873047,-43.91700744628906,-0.17965903878211975],[-59.917259216308594,-42.785606384277344,-1.4749170541763306],[-60.507232666015625,-41.62017059326172,-2.7171945571899414],[-61.10261154174805,-40.472076416015625,-3.9441330432891846],[-61.66962432861328,-39.39830017089844,-5.19262170791626],[-59.4620475769043,-47.919410705566406,39.054725646972656],[-59.60483169555664,-49.178741455078125,37.081634521484375],[-59.67714309692383,-50.342628479003906,35.01826095581055],[-59.69252395629883,-51.36420822143555,32.885215759277344],[-59.67054748535156,-52.196372985839844,30.69573211669922],[-59.62644958496094,-52.80162811279297,28.470399856567383],[-59.5723762512207,-53.1617546081543,26.234052658081055],[-59.51622772216797,-53.2633056640625,24.008207321166992],[-59.46150207519531,-53.10420227050781,21.81372833251953],[-59.40007019042969,-52.703216552734375,19.666690826416016],[-59.32872009277344,-52.09820556640625,17.57939910888672],[-59.243106842041016,-51.32851028442383,15.557445526123047],[-59.13969802856445,-50.43054962158203,13.603574752807617],[-59.01680374145508,-49.451358795166016,11.713136672973633],[-58.883323669433594,-48.43449401855469,9.879410743713379],[-58.752403259277344,-47.40645217895508,8.096715927124023],[-58.6416015625,-46.386024475097656,6.363095760345459],[-58.56791687011719,-45.37986755371094,4.680277347564697],[-58.58000564575195,-44.39276885986328,3.0531437397003174],[-58.704994201660156,-43.39857482910156,1.492473840713501],[-58.9545783996582,-42.36489486694336,0.008824484422802925],[-59.32281494140625,-41.266544342041016,-1.3913750648498535],[-59.79737091064453,-40.100887298583984,-2.707850694656372],[-60.35343933105469,-38.90102767944336,-3.9548799991607666],[-60.94624710083008,-37.72491455078125,-5.170535087585449],[-60.16190719604492,-47.041664123535156,37.57003402709961],[-60.242855072021484,-48.302146911621094,35.620853424072266],[-60.26207733154297,-49.44569778442383,33.58841323852539],[-60.2441291809082,-50.42394256591797,31.483707427978516],[-60.209651947021484,-51.18867492675781,29.318920135498047],[-60.17398452758789,-51.70256042480469,27.11532211303711],[-60.147186279296875,-51.94792938232422,24.900278091430664],[-60.1338005065918,-51.91355514526367,22.697690963745117],[-60.12641906738281,-51.615081787109375,20.526073455810547],[-60.10976791381836,-51.072669982910156,18.403257369995117],[-60.07435989379883,-50.32927703857422,16.341732025146484],[-60.01123046875,-49.42255783081055,14.348947525024414],[-59.91004943847656,-48.40126037597656,12.423223495483398],[-59.76671600341797,-47.31074142456055,10.559335708618164],[-59.58733367919922,-46.191349029541016,8.750619888305664],[-59.38444519042969,-45.068233489990234,6.989816665649414],[-59.1705207824707,-43.95794677734375,5.273134231567383],[-58.97626876831055,-42.875450134277344,3.5954363346099854],[-58.849788665771484,-41.82395553588867,1.9602587223052979],[-58.83073425292969,-40.7809944152832,0.3762085437774658],[-58.942745208740234,-39.71303176879883,-1.1445237398147583],[-59.205509185791016,-38.591548919677734,-2.585543632507324],[-59.617958068847656,-37.40651321411133,-3.9322726726531982],[-60.152347564697266,-36.18759536743164,-5.188745498657227],[-60.736934661865234,-46.179107666015625,36.0760612487793],[-60.74504470825195,-47.42965316772461,34.172088623046875],[-60.712440490722656,-48.54029083251953,32.18217468261719],[-60.665157318115234,-49.46091842651367,30.11549186706543],[-60.626426696777344,-50.14148712158203,27.983766555786133],[-60.611392974853516,-50.5437126159668,25.81087875366211],[-60.62749481201172,-50.651939392089844,23.628009796142578],[-60.668235778808594,-50.473941802978516,21.45676040649414],[-60.719383239746094,-50.02824783325195,19.317913055419922],[-60.756534576416016,-49.34259796142578,17.227628707885742],[-60.765716552734375,-48.45891571044922,15.200267791748047],[-60.72844696044922,-47.42805099487305,13.238092422485352],[-60.631649017333984,-46.29694747924805,11.339128494262695],[-60.46866989135742,-45.10746383666992,9.498826026916504],[-60.24271011352539,-43.8974494934082,7.710317611694336],[-59.9637451171875,-42.68876647949219,5.9655914306640625],[-59.65377426147461,-41.50348663330078,4.2555084228515625],[-59.34298324584961,-40.35141372680664,2.575153112411499],[-59.0830192565918,-39.23778533935547,0.9250699281692505],[-58.91950988769531,-38.14365005493164,-0.6895555853843689],[-58.900733947753906,-37.04132080078125,-2.254913091659546],[-59.06708908081055,-35.90050506591797,-3.7443339824676514],[-59.425540924072266,-34.7045783996582,-5.12898063659668],[-61.15253448486328,-45.334598541259766,34.58787536621094],[-61.08669662475586,-46.562782287597656,32.74213409423828],[-61.0036735534668,-47.6268310546875,30.805992126464844],[-60.933380126953125,-48.47355270385742,28.786781311035156],[-60.90175247192383,-49.049137115478516,26.69782829284668],[-60.92375564575195,-49.31521987915039,24.56720542907715],[-60.995849609375,-49.275856018066406,22.425352096557617],[-61.103965759277344,-48.94374084472656,20.29753875732422],[-61.225563049316406,-48.34682846069336,18.202964782714844],[-61.32992935180664,-47.514625549316406,16.157194137573242],[-61.39041519165039,-46.50343704223633,14.167455673217773],[-61.3843879699707,-45.36212921142578,12.235651016235352],[-61.29632568359375,-44.134010314941406,10.360934257507324],[-61.11673355102539,-42.85847854614258,8.539363861083984],[-60.844730377197266,-41.569393157958984,6.7646484375],[-60.49775695800781,-40.29221725463867,5.025096416473389],[-60.09870910644531,-39.042545318603516,3.312851667404175],[-59.681243896484375,-37.828758239746094,1.6219000816345215],[-59.295928955078125,-36.654693603515625,-0.04954283684492111],[-59.00364685058594,-35.50804138183594,-1.6989315748214722],[-58.869380950927734,-34.367305755615234,-3.311194658279419],[-58.9471435546875,-33.204349517822266,-4.853304386138916],[-61.37908935546875,-44.51321029663086,33.11166000366211],[-61.23578643798828,-45.707740783691406,31.33873748779297],[-61.1042594909668,-46.71181869506836,29.468246459960938],[-61.01901626586914,-47.46640396118164,27.506811141967773],[-61.00946807861328,-47.91304016113281,25.47087287902832],[-61.08180618286133,-48.03064727783203,23.389848709106445],[-61.223670959472656,-47.830196380615234,21.301532745361328],[-61.41254425048828,-47.33641815185547,19.230926513671875],[-61.621517181396484,-46.58123016357422,17.197050094604492],[-61.80353546142578,-45.612953186035156,15.203129768371582],[-61.92555236816406,-44.486141204833984,13.253996849060059],[-61.96097946166992,-43.245758056640625,11.352046012878418],[-61.8906364440918,-41.932437896728516,9.497371673583984],[-61.70112228393555,-40.58183288574219,7.687710285186768],[-61.39352035522461,-39.23028564453125,5.915413856506348],[-60.98914337158203,-37.89628219604492,4.171335697174072],[-60.51411437988281,-36.592708587646484,2.4477500915527344],[-60.00236511230469,-35.32417678833008,0.7382420301437378],[-59.51274108886719,-34.09519958496094,-0.9598047733306885],[-59.11545944213867,-32.89635467529297,-2.6444146633148193],[-58.881587982177734,-31.710811614990234,-4.301745414733887],[-61.39963912963867,-43.7177734375,31.667160034179688],[-61.179630279541016,-44.86762619018555,29.979248046875],[-61.006500244140625,-45.79707336425781,28.183181762695312],[-60.92067337036133,-46.43883514404297,26.28523826599121],[-60.947242736816406,-46.74469757080078,24.303136825561523],[-61.08318328857422,-46.69961166381836,22.279170989990234],[-61.306575775146484,-46.32899475097656,20.25481605529785],[-61.5914306640625,-45.663665771484375,18.257434844970703],[-61.89603042602539,-44.7580680847168,16.29315757751465],[-62.16483688354492,-43.66294860839844,14.35696029663086],[-62.359230041503906,-42.42899703979492,12.451253890991211],[-62.44698715209961,-41.09834671020508,10.577630043029785],[-62.4046745300293,-39.70780563354492,8.73758316040039],[-62.21527862548828,-38.29573440551758,6.928829669952393],[-61.882408142089844,-36.8911018371582,5.14907169342041],[-61.432647705078125,-35.50910186767578,3.3907997608184814],[-60.8935546875,-34.158531188964844,1.646925926208496],[-60.30646514892578,-32.84280776977539,-0.08805869519710541],[-59.735145568847656,-31.564807891845703,-1.8158724308013916],[-59.25292205810547,-30.31534767150879,-3.535539150238037],[-61.20458984375,-42.949607849121094,30.27286148071289],[-60.91322326660156,-44.04434585571289,28.678672790527344],[-60.71184158325195,-44.88408660888672,26.958898544311523],[-60.64071273803711,-45.404205322265625,25.11725616455078],[-60.71647644042969,-45.55646896362305,23.18858528137207],[-60.92652130126953,-45.33955383300781,21.225934982299805],[-61.24402618408203,-44.787567138671875,19.277355194091797],[-61.62870407104492,-43.95763397216797,17.35961151123047],[-62.033260345458984,-42.90848159790039,15.4714994430542],[-62.39724349975586,-41.691471099853516,13.599942207336426],[-62.67521667480469,-40.35516357421875,11.741768836975098],[-62.829833984375,-38.93788146972656,9.896665573120117],[-62.82621765136719,-37.480125427246094,8.063247680664062],[-62.64923858642578,-36.01266860961914,6.246898174285889],[-62.30379867553711,-34.56113815307617,4.4504523277282715],[-61.82155227661133,-33.13616180419922,2.66904354095459],[-61.235591888427734,-31.744617462158203,0.8980249166488647],[-60.59299087524414,-30.387205123901367,-0.8661251068115234],[-59.95844268798828,-29.063913345336914,-2.624973773956299],[-60.79450988769531,-42.2073860168457,28.94480323791504],[-60.443992614746094,-43.23802185058594,27.443838119506836],[-60.231327056884766,-43.9835090637207,25.785682678222656],[-60.188453674316406,-44.37296676635742,23.99087142944336],[-60.32383728027344,-44.36412048339844,22.111108779907227],[-60.61867141723633,-43.96478271484375,20.21417236328125],[-61.030479431152344,-43.23948669433594,18.34223747253418],[-61.51362609863281,-42.25260925292969,16.506406784057617],[-62.01938247680664,-41.06355285644531,14.700364112854004],[-62.4843635559082,-39.725982666015625,12.901876449584961],[-62.85975646972656,-38.28555679321289,11.1007080078125],[-63.09060287475586,-36.7875862121582,9.28348445892334],[-63.140899658203125,-35.26435470581055,7.454099655151367],[-62.991676330566406,-33.74387741088867,5.6239447593688965],[-62.64912796020508,-32.24740219116211,3.803140163421631],[-62.15091323852539,-30.782880783081055,1.9927594661712646],[-61.535831451416016,-29.35365104675293,0.1917382925748825],[-60.85448455810547,-27.9570369720459,-1.6024715900421143],[-60.18085479736328,-41.48847579956055,27.688074111938477],[-59.78905487060547,-42.45542526245117,26.260162353515625],[-59.57852554321289,-43.10376739501953,24.64628791809082],[-59.575016021728516,-43.35886764526367,22.883867263793945],[-59.78050231933594,-43.18040084838867,21.04773712158203],[-60.15903091430664,-42.60858154296875,19.21088409423828],[-60.66047668457031,-41.720489501953125,17.411590576171875],[-61.23787307739258,-40.582611083984375,15.657415390014648],[-61.84212875366211,-39.255741119384766,13.937812805175781],[-62.41295623779297,-37.79291534423828,12.225706100463867],[-62.88691711425781,-36.251312255859375,10.488717079162598],[-63.20787048339844,-34.66905975341797,8.709344863891602],[-63.3304557800293,-33.07714080810547,6.888491153717041],[-63.229888916015625,-31.500225067138672,5.043227672576904],[-62.90863037109375,-29.958324432373047,3.195146083831787],[-62.41191864013672,-28.454509735107422,1.3549143075942993],[-61.784332275390625,-26.987741470336914,-0.47548285126686096],[-59.3887825012207,-40.79338073730469,26.48446273803711],[-58.96770095825195,-41.700355529785156,25.107303619384766],[-58.76996994018555,-42.254241943359375,23.514795303344727],[-58.81694793701172,-42.370323181152344,21.768938064575195],[-59.092857360839844,-42.03322982788086,19.964834213256836],[-59.55034637451172,-41.30232620239258,18.17913818359375],[-60.1357536315918,-40.26118850708008,16.445892333984375],[-60.80141067504883,-38.97836685180664,14.76998233795166],[-61.50155258178711,-37.51235580444336,13.141901969909668],[-62.167213439941406,-35.9302978515625,11.517881393432617],[-62.740142822265625,-34.28289794921875,9.860097885131836],[-63.160369873046875,-32.608924865722656,8.137939453125],[-63.376609802246094,-30.937692642211914,6.34338903427124],[-63.34648895263672,-29.29704475402832,4.492315292358398],[-63.066505432128906,-27.704824447631836,2.622089385986328],[-62.59007263183594,-26.157760620117188,0.7561983466148376],[-58.450721740722656,-40.11741638183594,25.316152572631836],[-58.011837005615234,-40.969757080078125,23.96173667907715],[-57.83918380737305,-41.427459716796875,22.366931915283203],[-57.940704345703125,-41.41282653808594,20.62266731262207],[-58.2847900390625,-40.92985916137695,18.84174346923828],[-58.817413330078125,-40.05121612548828,17.10024070739746],[-59.48252487182617,-38.865840911865234,15.427414894104004],[-60.234962463378906,-37.44019317626953,13.829721450805664],[-61.01919937133789,-35.84696578979492,12.285829544067383],[-61.773277282714844,-34.14720916748047,10.753473281860352],[-62.44020080566406,-32.39220428466797,9.185786247253418],[-62.96365737915039,-30.618040084838867,7.543187141418457],[-63.28181838989258,-28.858840942382812,5.799137115478516],[-63.33721923828125,-27.14511489868164,3.9625613689422607],[-63.11691665649414,-25.493896484375,2.0833306312561035],[-57.391021728515625,-39.46088790893555,24.161251068115234],[-56.94424057006836,-40.26273727416992,22.800661087036133],[-56.803314208984375,-40.6306266784668,21.183528900146484],[-56.95960998535156,-40.49516677856445,19.431779861450195],[-57.36972427368164,-39.87702941894531,17.668474197387695],[-57.97488021850586,-38.860042572021484,15.966280937194824],[-58.720375061035156,-37.53352355957031,14.352949142456055],[-59.55093765258789,-35.97896194458008,12.825274467468262],[-60.415164947509766,-34.26322937011719,11.363945007324219],[-61.25178527832031,-32.44888687133789,9.924765586853027],[-62.00870895385742,-30.583900451660156,8.459360122680664],[-62.62750244140625,-28.708250045776367,6.914093017578125],[-63.043739318847656,-26.856496810913086,5.247220516204834],[-63.194297790527344,-25.059478759765625,3.456045389175415],[-56.22988510131836,-38.82328796386719,23.003368377685547],[-55.78269577026367,-39.5809326171875,21.611845016479492],[-55.67586135864258,-39.865413665771484,19.961551666259766],[-55.886474609375,-39.61705017089844,18.198440551757812],[-56.361351013183594,-38.87227249145508,16.45044708251953],[-57.04136276245117,-37.72001647949219,14.787782669067383],[-57.861141204833984,-36.26642608642578,13.228286743164062],[-58.768463134765625,-34.58843994140625,11.769320487976074],[-59.71014404296875,-32.755287170410156,10.389975547790527],[-60.62728500366211,-30.8276309967041,9.049345970153809],[-61.46404266357422,-28.858301162719727,7.691183567047119],[-62.163597106933594,-26.886293411254883,6.25450325012207],[-62.667884826660156,-24.941783905029297,4.6912922859191895],[-54.98210525512695,-38.2010498046875,21.840831756591797],[-54.535762786865234,-38.92089080810547,20.405067443847656],[-54.46244812011719,-39.128517150878906,18.716636657714844],[-54.72648620605469,-38.774375915527344,16.94139289855957],[-55.26895523071289,-37.90593719482422,15.21035385131836],[-56.01891326904297,-36.63235092163086,13.584218978881836],[-56.913002014160156,-35.05766296386719,12.07831859588623],[-57.89638900756836,-33.26217269897461,10.688277244567871],[-58.91611099243164,-31.314565658569336,9.395647048950195],[-59.906455993652344,-29.282562255859375,8.154300689697266],[-60.81016540527344,-27.219449996948242,6.903689861297607],[-61.57594680786133,-25.159622192382812,5.584693908691406],[-53.66487503051758,-37.57785415649414,20.694974899291992],[-53.220245361328125,-38.261802673339844,19.210098266601562],[-53.180442810058594,-38.39502716064453,17.485090255737305],[-53.50078201293945,-37.93599319458008,15.702337265014648],[-54.106597900390625,-36.95649719238281,13.989225387573242],[-54.92713928222656,-35.567588806152344,12.40176010131836],[-55.895442962646484,-33.8785400390625,10.951910018920898],[-56.95610809326172,-31.970272064208984,9.636887550354004],[-58.047367095947266,-29.92021369934082,8.432374000549316],[-59.099937438964844,-27.79794692993164,7.288425922393799],[-60.05912399291992,-25.65360450744629,6.146424770355225],[-52.29298400878906,-36.92947006225586,19.600177764892578],[-51.851600646972656,-37.57545471191406,18.068191528320312],[-51.848270416259766,-37.631370544433594,16.31285285949707],[-52.22066116333008,-37.076995849609375,14.527660369873047],[-52.88994216918945,-35.99207305908203,12.836447715759277],[-53.780731201171875,-34.49517822265625,11.291730880737305],[-54.824214935302734,-32.69833755493164,9.904935836791992],[-55.95505905151367,-30.692543029785156,8.667048454284668],[-57.1059455871582,-28.55854606628418,7.547696113586426],[-58.208919525146484,-26.36296844482422,6.498571872711182],[-50.88222885131836,-36.224979400634766,18.598785400390625],[-50.44755935668945,-36.82666015625,17.025909423828125],[-50.47743225097656,-36.80895233154297,15.24905776977539],[-50.900691986083984,-36.16340637207031,13.46701717376709],[-51.63203048706055,-34.98047637939453,11.803043365478516],[-52.59308624267578,-33.384071350097656,10.308377265930176],[-53.70354461669922,-31.498159408569336,8.986778259277344],[-54.891136169433594,-29.418012619018555,7.821484565734863],[-56.08804702758789,-27.22287368774414,6.780270576477051],[-49.45302963256836,-35.427860260009766,17.73249053955078],[-49.02524185180664,-35.98141860961914,16.129261016845703],[-49.08634567260742,-35.890811920166016,14.338239669799805],[-49.55760955810547,-35.15989685058594,12.566055297851562],[-50.34935760498047,-33.88848876953125,10.937034606933594],[-51.37102508544922,-32.214332580566406,9.494409561157227],[-52.53321838378906,-30.26719856262207,8.23140811920166],[-53.76173400878906,-28.14148712158203,7.12672758102417],[-48.03181076049805,-34.49724578857422,17.038196563720703],[-47.609764099121094,-34.99882888793945,15.413087844848633],[-47.69823455810547,-34.837337493896484,13.61542797088623],[-48.21376419067383,-34.029048919677734,11.861324310302734],[-49.054420471191406,-32.69219207763672,10.269367218017578],[-50.11900329589844,-30.972137451171875,8.869820594787598],[-51.313865661621094,-28.99879264831543,7.64767599105835],[-46.64652633666992,-33.41182327270508,16.503610610961914],[-46.23112487792969,-33.8560791015625,14.863357543945312],[-46.34568786621094,-33.6248893737793,13.067973136901855],[-46.895111083984375,-32.75737762451172,11.336758613586426],[-47.76637268066406,-31.385095596313477,9.774088859558105],[-48.852989196777344,-29.654695510864258,8.398432731628418],[-45.32382583618164,-32.15635299682617,16.102476119995117],[-44.91712188720703,-32.53778076171875,14.451322555541992],[-45.050819396972656,-32.245460510253906,12.66403865814209],[-45.617103576660156,-31.34121322631836,10.951241493225098],[-46.49712371826172,-29.965192794799805,9.400246620178223],[-44.090145111083984,-30.727880477905273,15.789360046386719],[-43.692237854003906,-31.042926788330078,14.129012107849121],[-43.83332824707031,-30.69718360900879,12.349648475646973],[-44.39685821533203,-29.775150299072266,10.644386291503906],[-42.976863861083984,-29.133981704711914,15.509870529174805],[-42.58839797973633,-29.370664596557617,13.83916187286377],[-42.72650909423828,-28.96346092224121,12.066757202148438],[-42.015594482421875,-27.399473190307617,15.209218978881836],[-41.648197174072266,-27.518321990966797,13.531954765319824],[-41.245269775390625,-25.54016876220703,14.855881690979004],[-40.64945983886719,-21.04643440246582,14.224161148071289],[-40.4859504699707,-20.403182983398438,12.757645606994629],[-40.58030700683594,-19.628814697265625,11.112250328063965],[-40.89531707763672,-18.74894142150879,9.359288215637207],[-41.38931655883789,-17.78450584411621,7.547920227050781],[-42.013343811035156,-16.754587173461914,5.721104621887207],[-42.716800689697266,-15.672369003295898,3.9117560386657715],[-43.4572868347168,-14.540339469909668,2.1424198150634766],[-44.194313049316406,-13.355536460876465,0.4277743995189667],[-44.887271881103516,-12.108250617980957,-1.2209808826446533],[-45.50857162475586,-10.796539306640625,-2.804856300354004],[-46.043174743652344,-9.419652938842773,-4.326109409332275],[-46.48651123046875,-7.979702472686768,-5.788111209869385],[-46.84177017211914,-6.480598449707031,-7.1947736740112305],[-47.11888885498047,-4.928482532501221,-8.552570343017578],[-47.33468246459961,-3.334331750869751,-9.875101089477539],[-47.49848556518555,-1.7066760063171387,-11.1777982711792],[-47.61349105834961,-0.05476848781108856,-12.480944633483887],[-47.670860290527344,1.6108982563018799,-13.811969757080078],[-47.654197692871094,3.2760446071624756,-15.199590682983398],[-47.53834533691406,4.924613952636719,-16.666959762573242],[-47.29115676879883,6.536649227142334,-18.22922134399414],[-46.87723922729492,8.086094856262207,-19.88895606994629],[-46.256431579589844,9.533695220947266,-21.632307052612305],[-45.423213958740234,10.84526538848877,-23.419536590576172],[-44.37645721435547,11.977703094482422,-25.204883575439453],[-43.1303596496582,12.884788513183594,-26.934181213378906],[-41.7111701965332,13.5099515914917,-28.540769577026367],[-40.175537109375,13.823284149169922,-29.962493896484375],[-38.59397888183594,13.832438468933105,-31.158798217773438],[-37.048736572265625,13.57265567779541,-32.102474212646484],[-41.10213088989258,56.604610443115234,6.023226737976074],[-42.35370635986328,54.94084930419922,5.664157867431641],[-43.630043029785156,53.07308578491211,5.35759162902832],[-44.92623519897461,51.05844497680664,5.155004501342773],[-46.24020767211914,48.93675994873047,5.094635963439941],[-47.550621032714844,46.745147705078125,5.188165664672852],[-48.816062927246094,44.51563262939453,5.412149429321289],[-49.98109436035156,42.2711181640625,5.72760009765625],[-50.979759216308594,40.03275680541992,6.078142166137695],[-51.719749450683594,37.8294677734375,6.386529445648193],[-52.136024475097656,35.702022552490234,6.573929786682129],[-52.188636779785156,33.693687438964844,6.582460403442383],[-51.8873291015625,31.817604064941406,6.381350994110107],[-51.28934860229492,30.02979278564453,5.964953899383545],[-50.49465560913086,28.231962203979492,5.37253475189209],[-49.6306037902832,26.323577880859375,4.71697998046875],[-48.80500030517578,24.224178314208984,4.143593788146973],[-48.10572814941406,21.88551139831543,3.8084757328033447],[-47.59638214111328,19.298612594604492,3.8598904609680176],[-47.269775390625,16.51668930053711,4.341111183166504],[-47.07049560546875,13.584859848022461,5.215617656707764],[-46.92291259765625,10.521882057189941,6.405893802642822],[-46.74533462524414,7.32803201675415,7.8082475662231445],[-46.45645523071289,3.997220516204834,9.3020601272583],[-46.013671875,0.5556435585021973,10.76551628112793],[-45.40452575683594,-2.94920015335083,12.103224754333496],[-44.65089416503906,-6.446966171264648,13.241989135742188],[-43.80200958251953,-9.859721183776855,14.130374908447266],[-42.93333435058594,-13.13182544708252,14.766005516052246],[-42.125244140625,-16.22705078125,15.173553466796875],[-41.4673957824707,-19.08211898803711,15.373250961303711],[-40.427391052246094,57.74095153808594,4.4446845054626465],[-41.014591217041016,57.33488464355469,2.297050952911377],[-41.65779113769531,56.73931884765625,0.07061991095542908],[-42.316131591796875,55.95668029785156,-2.172583818435669],[-42.93695831298828,54.9852409362793,-4.389194965362549],[-43.45880889892578,53.829673767089844,-6.53279447555542],[-43.83401107788086,52.506038665771484,-8.554370880126953],[-44.02618408203125,51.02651596069336,-10.394742012023926],[-44.01622772216797,49.41006851196289,-11.989253997802734],[-43.79369354248047,47.68344497680664,-13.25996208190918],[-43.38832473754883,45.899940490722656,-14.200376510620117],[-42.82330322265625,44.10551452636719,-14.852888107299805],[-42.11137771606445,42.33316421508789,-15.30610179901123],[-41.25373458862305,40.601524353027344,-15.672529220581055],[-40.253074645996094,38.916351318359375,-16.05960464477539],[-39.139793395996094,37.262901306152344,-16.51927947998047],[-37.95938491821289,35.60834503173828,-17.049312591552734],[-36.781593322753906,33.9022102355957,-17.611295700073242],[-35.70833206176758,32.08100509643555,-18.151851654052734],[-34.845436096191406,30.105791091918945,-18.639169692993164],[-34.26759719848633,27.971126556396484,-19.08333396911621],[-34.008514404296875,25.694355010986328,-19.524215698242188],[-34.056129455566406,23.308879852294922,-20.017709732055664],[-34.363285064697266,20.86598014831543,-20.632734298706055],[-34.836273193359375,18.44753646850586,-21.428417205810547],[-35.39377212524414,16.16853904724121,-22.47617530822754],[-35.9459114074707,14.196399688720703,-23.84787368774414],[-36.37531280517578,12.779742240905762,-25.58060646057129],[-36.5582160949707,12.108732223510742,-27.53748321533203],[-36.45539474487305,12.116615295410156,-29.486309051513672],[-36.119300842285156,12.560958862304688,-31.27048683166504],[-41.010719299316406,-18.289215087890625,14.119965553283691],[-40.79161071777344,-17.535991668701172,12.636693000793457],[-40.806800842285156,-16.73943328857422,10.995290756225586],[-41.02370834350586,-15.885029792785645,9.255496978759766],[-41.408592224121094,-14.970776557922363,7.464428901672363],[-41.9209098815918,-13.995426177978516,5.661182403564453],[-42.504974365234375,-12.965384483337402,3.877591848373413],[-43.116302490234375,-11.879256248474121,2.1326076984405518],[-43.70382308959961,-10.736763954162598,0.43946725130081177],[-44.24344253540039,-9.528135299682617,-1.1986364126205444],[-44.7072639465332,-8.260419845581055,-2.7808642387390137],[-45.08518600463867,-6.939939975738525,-4.308238983154297],[-45.377410888671875,-5.576358318328857,-5.782345294952393],[-45.59547805786133,-4.181313514709473,-7.2052083015441895],[-45.766571044921875,-2.7541792392730713,-8.580936431884766],[-45.90296173095703,-1.3092434406280518,-9.920384407043457],[-46.01427459716797,0.14617595076560974,-11.236959457397461],[-46.100189208984375,1.593420386314392,-12.548651695251465],[-46.150386810302734,3.040336847305298,-13.880804061889648],[-46.13964080810547,4.47669792175293,-15.260270118713379],[-46.03704071044922,5.886751174926758,-16.707462310791016],[-45.80754470825195,7.252715110778809,-18.23366928100586],[-45.41639709472656,8.54250717163086,-19.833528518676758],[-44.82469940185547,9.752384185791016,-21.49915885925293],[-44.0301399230957,10.833731651306152,-23.188573837280273],[-43.03443145751953,11.744441032409668,-24.85822868347168],[-41.857749938964844,12.430341720581055,-26.451454162597656],[-40.52497863769531,12.853191375732422,-27.915470123291016],[-39.08713150024414,12.997325897216797,-29.206321716308594],[-37.604698181152344,12.879538536071777,-30.308345794677734],[-41.6060676574707,-15.319198608398438,13.925596237182617],[-41.29998016357422,-14.501492500305176,12.475083351135254],[-41.20819091796875,-13.691139221191406,10.883247375488281],[-41.30739974975586,-12.853917121887207,9.204214096069336],[-41.57559585571289,-11.96709156036377,7.475179672241211],[-41.96808624267578,-11.019439697265625,5.733323097229004],[-42.42683410644531,-10.009645462036133,4.008656978607178],[-42.89678955078125,-8.93466567993164,2.32096004486084],[-43.34164047241211,-7.792553424835205,0.6739801168441772],[-43.733951568603516,-6.584754943847656,-0.9299351572990417],[-44.04932403564453,-5.324576377868652,-2.4874494075775146],[-44.28131103515625,-4.0253005027771,-3.9977872371673584],[-44.436954498291016,-2.7037153244018555,-5.461283206939697],[-44.5431022644043,-1.3716280460357666,-6.881349086761475],[-44.62253189086914,-0.03754650428891182,-8.260919570922852],[-44.689083099365234,1.2860177755355835,-9.608604431152344],[-44.7491569519043,2.582484245300293,-10.936637878417969],[-44.801231384277344,3.8460052013397217,-12.262001991271973],[-44.82732009887695,5.083591461181641,-13.60629940032959],[-44.79547882080078,6.286858558654785,-14.991536140441895],[-44.67012405395508,7.442564964294434,-16.433181762695312],[-44.413360595703125,8.52480697631836,-17.934444427490234],[-43.997737884521484,9.536341667175293,-19.490873336791992],[-43.39632034301758,10.463793754577637,-21.090133666992188],[-42.60932159423828,11.2630033493042,-22.69634437561035],[-41.6432991027832,11.883939743041992,-24.267070770263672],[-40.51731491088867,12.291746139526367,-25.760900497436523],[-39.25041580200195,12.466619491577148,-27.137832641601562],[-37.883392333984375,12.398086547851562,-28.370193481445312],[-42.330284118652344,-12.155328750610352,13.58985710144043],[-41.91123580932617,-11.290664672851562,12.234498977661133],[-41.6873893737793,-10.467235565185547,10.749541282653809],[-41.65312957763672,-9.636808395385742,9.174264907836914],[-41.787532806396484,-8.763153076171875,7.544059753417969],[-42.0463752746582,-7.823503494262695,5.893625259399414],[-42.3603401184082,-6.810112953186035,4.258382797241211],[-42.68883514404297,-5.716785907745361,2.645718812942505],[-42.992183685302734,-4.547591686248779,1.0623571872711182],[-43.24455642700195,-3.313163995742798,-0.4900754690170288],[-43.42434310913086,-2.033285617828369,-2.0052342414855957],[-43.53173828125,-0.7283408045768738,-3.481588840484619],[-43.587913513183594,0.5807958841323853,-4.922947406768799],[-43.6142463684082,1.8760548830032349,-6.3309550285339355],[-43.6327018737793,3.1432607173919678,-7.708669662475586],[-43.65475082397461,4.36400032043457,-9.063859939575195],[-43.68461608886719,5.527584075927734,-10.409286499023438],[-43.710296630859375,6.6288676261901855,-11.759527206420898],[-43.70463180541992,7.671093463897705,-13.131180763244629],[-43.62987518310547,8.649109840393066,-14.540139198303223],[-43.443748474121094,9.543351173400879,-15.99439811706543],[-43.11789321899414,10.359661102294922,-17.490097045898438],[-42.63261795043945,11.087411880493164,-19.017086029052734],[-41.97658920288086,11.715121269226074,-20.561233520507812],[-41.15536880493164,12.190924644470215,-22.091337203979492],[-40.18381881713867,12.484007835388184,-23.578716278076172],[-39.080726623535156,12.573724746704102,-24.99667739868164],[-37.86265563964844,12.446484565734863,-26.31793975830078],[-43.09837341308594,-8.806736946105957,13.085169792175293],[-42.5450325012207,-7.888230800628662,11.885077476501465],[-42.17192459106445,-7.043726921081543,10.552050590515137],[-41.98100280761719,-6.213474273681641,9.120709419250488],[-41.95977783203125,-5.345174312591553,7.620784759521484],[-42.05626678466797,-4.402275085449219,6.094236850738525],[-42.217124938964844,-3.367730140686035,4.563414573669434],[-42.39689254760742,-2.2380611896514893,3.041306257247925],[-42.55717849731445,-1.023343801498413,1.5362507104873657],[-42.67498779296875,0.2569723427295685,0.05009385570883751],[-42.734806060791016,1.5750178098678589,-1.4095323085784912],[-42.75070571899414,2.9024972915649414,-2.846477746963501],[-42.73915100097656,4.214323043823242,-4.261624336242676],[-42.72049331665039,5.487168312072754,-5.65730619430542],[-42.712501525878906,6.697464942932129,-7.037147521972656],[-42.722328186035156,7.829376220703125,-8.410163879394531],[-42.74205017089844,8.872444152832031,-9.786993980407715],[-42.74860382080078,9.82045841217041,-11.179603576660156],[-42.704166412353516,10.675057411193848,-12.599091529846191],[-42.56189727783203,11.426148414611816,-14.055228233337402],[-42.288063049316406,12.082737922668457,-15.543105125427246],[-41.860687255859375,12.639869689941406,-17.052711486816406],[-41.27337646484375,13.087457656860352,-18.569093704223633],[-40.527748107910156,13.401260375976562,-20.073787689208984],[-39.64448165893555,13.546796798706055,-21.54550552368164],[-38.644920349121094,13.503683090209961,-22.96544075012207],[-37.54909896850586,13.248438835144043,-24.31442642211914],[-43.84214782714844,-5.282367706298828,12.372430801391602],[-43.149410247802734,-4.283391952514648,11.366510391235352],[-42.60860061645508,-3.398650884628296,10.229722023010254],[-42.23663330078125,-2.5597610473632812,8.981344223022461],[-42.022972106933594,-1.6952075958251953,7.653243541717529],[-41.94194030761719,-0.7434335350990295,6.268402576446533],[-41.93418884277344,0.3189271092414856,4.860175132751465],[-41.954803466796875,1.493194580078125,3.444794178009033],[-41.96723937988281,2.762650728225708,2.0330300331115723],[-41.95619201660156,4.0977067947387695,0.6252761483192444],[-41.92051315307617,5.458809852600098,-0.7770201563835144],[-41.86980438232422,6.812910079956055,-2.1736087799072266],[-41.82028579711914,8.129563331604004,-3.566033124923706],[-41.78939437866211,9.377021789550781,-4.95746374130249],[-41.787620544433594,10.528926849365234,-6.353782653808594],[-41.808448791503906,11.57011604309082,-7.761523246765137],[-41.83107376098633,12.489070892333984,-9.189543724060059],[-41.819725036621094,13.279540061950684,-10.647054672241211],[-41.72201156616211,13.935779571533203,-12.140880584716797],[-41.495758056640625,14.473669052124023,-13.664483070373535],[-41.1136360168457,14.894073486328125,-15.206853866577148],[-40.56681442260742,15.193252563476562,-16.75143051147461],[-39.86042022705078,15.350189208984375,-18.279081344604492],[-39.01786804199219,15.353663444519043,-19.76935577392578],[-38.06892013549805,15.17847728729248,-21.206090927124023],[-37.03703689575195,14.798507690429688,-22.571081161499023],[-44.499412536621094,-1.640233039855957,11.417580604553223],[-43.67102813720703,-0.517728865146637,10.62863540649414],[-42.957515716552734,0.4491080939769745,9.72146987915039],[-42.37603759765625,1.3247348070144653,8.708393096923828],[-41.955650329589844,2.1969194412231445,7.57985258102417],[-41.67763900756836,3.157489776611328,6.363310813903809],[-41.485233306884766,4.244256496429443,5.099164962768555],[-41.33503723144531,5.458887100219727,3.8082334995269775],[-41.19725799560547,6.776779651641846,2.5017268657684326],[-41.07476043701172,8.155996322631836,1.1706278324127197],[-40.96117401123047,9.549171447753906,-0.17677035927772522],[-40.866634368896484,10.91665267944336,-1.5404131412506104],[-40.805641174316406,12.219474792480469,-2.9222657680511475],[-40.78960037231445,13.422157287597656,-4.328038215637207],[-40.81370162963867,14.497213363647461,-5.760649681091309],[-40.85725784301758,15.42849349975586,-7.224902153015137],[-40.8850212097168,16.20392417907715,-8.72800064086914],[-40.84534454345703,16.81033706665039,-10.278326034545898],[-40.68259048461914,17.265777587890625,-11.864812850952148],[-40.359901428222656,17.57945442199707,-13.474528312683105],[-39.862632751464844,17.754850387573242,-15.088909149169922],[-39.19356918334961,17.77979850769043,-16.68768310546875],[-38.37961196899414,17.648231506347656,-18.247316360473633],[-37.45511245727539,17.354982376098633,-19.744199752807617],[-36.451072692871094,16.8691463470459,-21.161388397216797],[-45.015968322753906,2.024177074432373,10.259119987487793],[-44.0619010925293,3.3047876358032227,9.686785697937012],[-43.175994873046875,4.414021015167236,9.037673950195312],[-42.396915435791016,5.386231422424316,8.279247283935547],[-41.762691497802734,6.302303791046143,7.384685516357422],[-41.27486038208008,7.279731750488281,6.36629581451416],[-40.8856201171875,8.382820129394531,5.26913595199585],[-40.5603141784668,9.618871688842773,4.115245819091797],[-40.28862380981445,10.959152221679688,2.90767502784729],[-40.07009506225586,12.35567569732666,1.645728349685669],[-39.89851760864258,13.75191593170166,0.340302973985672],[-39.78266525268555,15.098058700561523,-1.007981538772583],[-39.73290252685547,16.35175323486328,-2.4031171798706055],[-39.74662780761719,17.476503372192383,-3.8468806743621826],[-39.80426025390625,18.442161560058594,-5.339946746826172],[-39.86977005004883,19.23090171813965,-6.886011123657227],[-39.89164352416992,19.82267189025879,-8.49319076538086],[-39.810752868652344,20.22888946533203,-10.152783393859863],[-39.5723991394043,20.46181297302246,-11.847386360168457],[-39.15033721923828,20.534563064575195,-13.555318832397461],[-38.541526794433594,20.444982528686523,-15.254780769348145],[-37.76970672607422,20.198225021362305,-16.918643951416016],[-36.87174606323242,19.795682907104492,-18.52065658569336],[-35.883026123046875,19.22140121459961,-20.031349182128906],[-45.36885452270508,5.615947246551514,8.964325904846191],[-44.29594421386719,7.075511932373047,8.610513687133789],[-43.268489837646484,8.36801528930664,8.203822135925293],[-42.317813873291016,9.507431983947754,7.70725154876709],[-41.482357025146484,10.53671646118164,7.0720319747924805],[-40.782501220703125,11.564099311828613,6.2817511558532715],[-40.194183349609375,12.680683135986328,5.36936616897583],[-39.7115478515625,13.912322044372559,4.34338903427124],[-39.3210563659668,15.237821578979492,3.222616672515869],[-39.02581024169922,16.610210418701172,2.011147975921631],[-38.81690979003906,17.961036682128906,0.723949134349823],[-38.70118713378906,19.239151000976562,-0.6388645172119141],[-38.67570495605469,20.400304794311523,-2.075530529022217],[-38.724857330322266,21.40435028076172,-3.584808588027954],[-38.81391143798828,22.218338012695312,-5.16575813293457],[-38.89084243774414,22.81414794921875,-6.824310302734375],[-38.89255905151367,23.19768714904785,-8.551301956176758],[-38.760108947753906,23.375320434570312,-10.334220886230469],[-38.443458557128906,23.365652084350586,-12.145846366882324],[-37.926414489746094,23.178726196289062,-13.96080493927002],[-37.22495651245117,22.832582473754883,-15.748283386230469],[-36.372657775878906,22.339691162109375,-17.477619171142578],[-35.40656280517578,21.69112777709961,-19.118757247924805],[-45.570396423339844,9.074172973632812,7.644726276397705],[-44.402435302734375,10.690746307373047,7.489048480987549],[-43.26485824584961,12.171270370483398,7.306511878967285],[-42.181312561035156,13.5155611038208,7.055246829986572],[-41.18014144897461,14.731132507324219,6.676870346069336],[-40.289817810058594,15.873144149780273,6.122119426727295],[-39.529598236083984,17.023780822753906,5.379684925079346],[-38.90591049194336,18.236351013183594,4.466721057891846],[-38.41520690917969,19.511240005493164,3.4086179733276367],[-38.06198501586914,20.80660629272461,2.217381715774536],[-37.83706283569336,22.06163787841797,0.9120471477508545],[-37.73446273803711,23.22373390197754,-0.49841275811195374],[-37.739227294921875,24.243762969970703,-2.007871627807617],[-37.822696685791016,25.077756881713867,-3.6126229763031006],[-37.93492126464844,25.681852340698242,-5.313512325286865],[-38.00929641723633,26.055051803588867,-7.099306583404541],[-37.98053741455078,26.198322296142578,-8.958504676818848],[-37.79179000854492,26.126726150512695,-10.870295524597168],[-37.397560119628906,25.859920501708984,-12.802807807922363],[-36.79731369018555,25.43099021911621,-14.719170570373535],[-36.01719284057617,24.864683151245117,-16.58399200439453],[-35.09122848510742,24.16225814819336,-18.363039016723633],[-45.684425354003906,12.354188919067383,6.407588958740234],[-44.44989776611328,14.087364196777344,6.435975074768066],[-43.238948822021484,15.718889236450195,6.450794219970703],[-42.06901550292969,17.24842071533203,6.40548038482666],[-40.95982360839844,18.66795539855957,6.233512878417969],[-39.945621490478516,19.97244644165039,5.855491638183594],[-39.05533981323242,21.20993995666504,5.249577522277832],[-38.31744384765625,22.425331115722656,4.419146537780762],[-37.74365997314453,23.631834030151367,3.389047622680664],[-37.35165786743164,24.816593170166016,2.1766626834869385],[-37.12250518798828,25.93442153930664,0.8158248066902161],[-37.039573669433594,26.93273162841797,-0.677121639251709],[-37.076393127441406,27.759668350219727,-2.2916553020477295],[-37.19099807739258,28.35991668701172,-4.024330139160156],[-37.31576919555664,28.72100067138672,-5.857344627380371],[-37.37873458862305,28.836868286132812,-7.778818130493164],[-37.31237030029297,28.720014572143555,-9.769891738891602],[-37.06006622314453,28.39080047607422,-11.8056001663208],[-36.58596420288086,27.896976470947266,-13.840751647949219],[-35.89996337890625,27.2779541015625,-15.832380294799805],[-35.029518127441406,26.546279907226562,-17.74099349975586],[-45.797119140625,15.469757080078125,5.373808860778809],[-44.52787780761719,17.280221939086914,5.563238143920898],[-43.27980422973633,19.018587112426758,5.735302925109863],[-42.06866455078125,20.68517303466797,5.830943584442139],[-40.91377639770508,22.256826400756836,5.769299507141113],[-39.8410530090332,23.709348678588867,5.482317924499512],[-38.88326644897461,25.048656463623047,4.939414024353027],[-38.07746124267578,26.289539337158203,4.133546352386475],[-37.45536804199219,27.440868377685547,3.08132004737854],[-37.042999267578125,28.506031036376953,1.8084182739257812],[-36.82075881958008,29.459341049194336,0.3570047616958618],[-36.764198303222656,30.253467559814453,-1.249618649482727],[-36.835506439208984,30.828105926513672,-2.9982101917266846],[-36.973411560058594,31.164825439453125,-4.863641738891602],[-37.09968566894531,31.250789642333984,-6.827769756317139],[-37.13599395751953,31.094335556030273,-8.872468948364258],[-37.00956726074219,30.717634201049805,-10.974560737609863],[-36.66758346557617,30.1760311126709,-13.095602035522461],[-36.08489227294922,29.52488136291504,-15.185808181762695],[-35.275177001953125,28.78976058959961,-17.19746208190918],[-45.9932975769043,18.421199798583984,4.627361297607422],[-44.72267150878906,20.270183563232422,4.929678440093994],[-43.47529602050781,22.068355560302734,5.1837968826293945],[-42.26730728149414,23.811180114746094,5.3190836906433105],[-41.11652755737305,25.47445297241211,5.267153739929199],[-40.04576873779297,27.022111892700195,4.969606876373291],[-39.087493896484375,28.43278694152832,4.394010543823242],[-38.27879333496094,29.69071388244629,3.5344603061676025],[-37.65538024902344,30.792848587036133,2.4069535732269287],[-37.25102996826172,31.734779357910156,1.0354667901992798],[-37.05360412597656,32.50229263305664,-0.5360316634178162],[-37.033111572265625,33.045780181884766,-2.2790446281433105],[-37.132423400878906,33.348140716552734,-4.154952526092529],[-37.27692794799805,33.397117614746094,-6.136774063110352],[-37.37702178955078,33.20242691040039,-8.202102661132812],[-37.343170166015625,32.788291931152344,-10.327467918395996],[-37.101505279541016,32.218894958496094,-12.479494094848633],[-36.60955047607422,31.561357498168945,-14.617389678955078],[-35.8509407043457,30.85424041748047,-16.689281463623047],[-46.34761047363281,21.188085556030273,4.212428569793701],[-45.10767364501953,23.035512924194336,4.536220073699951],[-43.89313888549805,24.84705352783203,4.763011932373047],[-42.72370147705078,26.611942291259766,4.8301239013671875],[-41.618526458740234,28.30228614807129,4.681333065032959],[-40.60334777832031,29.8741397857666,4.264171600341797],[-39.7038688659668,31.29228973388672,3.564366340637207],[-38.951255798339844,32.52740478515625,2.581796169281006],[-38.379783630371094,33.55756759643555,1.32826566696167],[-38.0228385925293,34.35883331298828,-0.1744581013917923],[-37.87334060668945,34.905967712402344,-1.8832505941390991],[-37.884735107421875,35.1922492980957,-3.743319272994995],[-37.987510681152344,35.21510696411133,-5.713166236877441],[-38.09379196166992,34.99222183227539,-7.761185169219971],[-38.099220275878906,34.558319091796875,-9.863576889038086],[-37.91081237792969,33.98723220825195,-11.991793632507324],[-37.46751403808594,33.354923248291016,-14.115394592285156],[-36.73332214355469,32.71604919433594,-16.188051223754883],[-46.911651611328125,23.727251052856445,4.114602088928223],[-45.725364685058594,25.541963577270508,4.338603973388672],[-44.56929016113281,27.325952529907227,4.419917106628418],[-43.46625518798828,29.06117820739746,4.307616710662842],[-42.4415397644043,30.710678100585938,3.951934576034546],[-41.51580047607422,32.23249816894531,3.333512783050537],[-40.71188735961914,33.588199615478516,2.446556568145752],[-40.05701446533203,34.73894500732422,1.2906088829040527],[-39.57890319824219,35.646968841552734,-0.12322694808244705],[-39.30125045776367,36.263572692871094,-1.771987795829773],[-39.1971549987793,36.589515686035156,-3.590266227722168],[-39.210941314697266,36.632408142089844,-5.523116588592529],[-39.260398864746094,36.42251205444336,-7.525543212890625],[-39.24114227294922,36.00962829589844,-9.565815925598145],[-39.049095153808594,35.47731399536133,-11.625930786132812],[-38.60560989379883,34.912322998046875,-13.682816505432129],[-37.85609817504883,34.37852478027344,-15.697667121887207],[-47.68301010131836,26.006044387817383,4.271785259246826],[-46.57000732421875,27.763877868652344,4.269102573394775],[-45.49183654785156,29.485158920288086,4.090556621551514],[-44.47760009765625,31.138629913330078,3.6903727054595947],[-43.547760009765625,32.692222595214844,3.0623373985290527],[-42.7236442565918,34.107391357421875,2.199181318283081],[-42.02824020385742,35.342430114746094,1.0925096273422241],[-41.484092712402344,36.352474212646484,-0.2577418386936188],[-41.10846710205078,37.085140228271484,-1.839106798171997],[-40.8937873840332,37.513710021972656,-3.6032533645629883],[-40.79978942871094,37.644691467285156,-5.488626480102539],[-40.75566482543945,37.51346969604492,-7.438667297363281],[-40.66077423095703,37.18315505981445,-9.409658432006836],[-40.410308837890625,36.74838638305664,-11.378629684448242],[-39.918121337890625,36.297760009765625,-13.335700988769531],[-39.11168670654297,35.908199310302734,-15.244461059570312],[-48.597896575927734,28.03984260559082,4.549469470977783],[-47.57355499267578,29.722713470458984,4.218029022216797],[-46.58936309814453,31.345796585083008,3.684020519256592],[-45.668907165527344,32.88445281982422,2.9535582065582275],[-44.834571838378906,34.311641693115234,2.0336780548095703],[-44.110862731933594,35.589630126953125,0.9146082401275635],[-43.51897430419922,36.67498779296875,-0.41543319821357727],[-43.07377624511719,37.515296936035156,-1.957944393157959],[-42.763999938964844,38.083900451660156,-3.675093412399292],[-42.5648193359375,38.35682678222656,-5.520188331604004],[-42.4148063659668,38.36498260498047,-7.430197715759277],[-42.21975326538086,38.17527770996094,-9.34992790222168],[-41.874664306640625,37.88904571533203,-11.24301528930664],[-41.290775299072266,37.600711822509766,-13.090598106384277],[-40.39318084716797,37.379791259765625,-14.867278099060059],[-49.56525421142578,29.8752498626709,4.82550048828125],[-48.64400863647461,31.45886993408203,4.086984157562256],[-47.75596618652344,32.96541213989258,3.179323434829712],[-46.927093505859375,34.3773193359375,2.120378017425537],[-46.18357849121094,35.670013427734375,0.913963258266449],[-45.55097961425781,36.80632400512695,-0.45360901951789856],[-45.044952392578125,37.73993682861328,-2.000943183898926],[-44.65647888183594,38.44224548339844,-3.7043023109436035],[-44.357975006103516,38.89140319824219,-5.5302653312683105],[-44.10169982910156,39.08333969116211,-7.423318862915039],[-43.7965087890625,39.0814208984375,-9.320571899414062],[-43.338722229003906,38.98394012451172,-11.169877052307129],[-42.638179779052734,38.88615036010742,-12.934844970703125],[-41.620147705078125,38.857303619384766,-14.576709747314453],[-50.47602081298828,31.58457374572754,4.986622333526611],[-49.659423828125,33.06158447265625,3.85233211517334],[-48.86631774902344,34.452850341796875,2.5963857173919678],[-48.125728607177734,35.745845794677734,1.2322219610214233],[-47.464786529541016,36.91810989379883,-0.24116408824920654],[-46.90575408935547,37.93081283569336,-1.8464109897613525],[-46.44447326660156,38.75802993774414,-3.577820062637329],[-46.05720520019531,39.374691009521484,-5.417685508728027],[-45.69419479370117,39.778770446777344,-7.322582244873047],[-45.276676177978516,39.99366760253906,-9.228429794311523],[-44.70048904418945,40.11006546020508,-11.069847106933594],[-43.87717056274414,40.21501541137695,-12.792428970336914],[-42.73582077026367,40.37364196777344,-14.340968132019043],[-51.188446044921875,33.28632354736328,5.016651153564453],[-50.475746154785156,34.66900634765625,3.5396924018859863],[-49.77629470825195,35.964786529541016,1.9803571701049805],[-49.11789321899414,37.165771484375,0.3468681275844574],[-48.523616790771484,38.2490348815918,-1.372350811958313],[-47.999366760253906,39.189781188964844,-3.175502300262451],[-47.52894592285156,39.96421813964844,-5.063468933105469],[-47.06911849975586,40.56229019165039,-7.006137847900391],[-46.54081726074219,41.005672454833984,-8.948258399963379],[-45.85439682006836,41.33821487426758,-10.814469337463379],[-44.92281723022461,41.63860321044922,-12.538159370422363],[-43.680912017822266,41.96424102783203,-14.052408218383789],[-51.5947380065918,35.0935173034668,4.90958833694458],[-50.97882843017578,36.4072380065918,3.1589107513427734],[-50.363616943359375,37.639381408691406,1.3537884950637817],[-49.77073669433594,38.783016204833984,-0.5085337162017822],[-49.20725631713867,39.82350540161133,-2.4182233810424805],[-48.670570373535156,40.734046936035156,-4.3789801597595215],[-48.12858963012695,41.50239562988281,-6.377020359039307],[-47.51423645019531,42.13605499267578,-8.3684720993042],[-46.742916107177734,42.67198181152344,-10.284782409667969],[-45.73997497558594,43.14738464355469,-12.050488471984863],[-44.439697265625,43.618167877197266,-13.59311294555664],[-51.6284065246582,37.05514144897461,4.674886703491211],[-51.09018325805664,38.328460693359375,2.723884344100952],[-50.536949157714844,39.526737213134766,0.7324467301368713],[-49.974769592285156,40.64728927612305,-1.2867640256881714],[-49.4046745300293,41.67108154296875,-3.3313777446746826],[-48.81097412109375,42.57801818847656,-5.391169548034668],[-48.14390563964844,43.369468688964844,-7.436306953430176],[-47.33312225341797,44.066986083984375,-9.409400939941406],[-46.30781555175781,44.70401382446289,-11.24484920501709],[-45.002140045166016,45.305728912353516,-12.863929748535156],[-51.273048400878906,39.15400314331055,4.338785648345947],[-50.78623580932617,40.4055061340332,2.2560055255889893],[-50.26165008544922,41.59062576293945,0.15547257661819458],[-49.701263427734375,42.70170593261719,-1.9571304321289062],[-49.09626388549805,43.722660064697266,-4.071193218231201],[-48.41602325439453,44.64313507080078,-6.162493705749512],[-47.606773376464844,45.478271484375,-8.186714172363281],[-46.60590362548828,46.25029373168945,-10.089043617248535],[-45.35057067871094,46.983116149902344,-11.805230140686035],[-50.570770263671875,41.336788177490234,3.9481053352355957],[-50.107547760009766,42.57741928100586,1.8032464981079102],[-49.58958435058594,43.75566101074219,-0.346821665763855],[-49.01179885864258,44.865230560302734,-2.4912121295928955],[-48.35445022583008,45.89612579345703,-4.609549522399902],[-47.579017639160156,46.8497200012207,-6.666563034057617],[-46.63499450683594,47.74374008178711,-8.618380546569824],[-45.46367263793945,48.59414291381836,-10.411961555480957],[-49.58954620361328,43.561668395996094,3.5733067989349365],[-49.134151458740234,44.79461669921875,1.416257381439209],[-48.608787536621094,45.971309661865234,-0.7318493723869324],[-48.000518798828125,47.08901596069336,-2.851937770843506],[-47.28202819824219,48.146297454833984,-4.91635799407959],[-46.413177490234375,49.14738082885742,-6.890791416168213],[-45.34473419189453,50.10587692260742,-8.732336044311523],[-48.43074035644531,45.794769287109375,3.2698957920074463],[-47.9719123840332,47.02344512939453,1.137479305267334],[-47.42685317993164,48.20496368408203,-0.9664007425308228],[-46.775367736816406,49.343048095703125,-3.0166537761688232],[-45.98756408691406,50.437957763671875,-4.987082004547119],[-45.02176284790039,51.49082565307617,-6.845027923583984],[-47.16236877441406,48.01360321044922,3.08463454246521],[-46.6888313293457,49.24040222167969,1.0084726810455322],[-46.108917236328125,50.43476104736328,-1.01638662815094],[-45.39925003051758,51.600894927978516,-2.96443510055542],[-44.528839111328125,52.73473358154297,-4.81121301651001],[-45.83906936645508,50.191619873046875,3.0510928630828857],[-45.33415603637695,51.41978454589844,1.0553162097930908],[-44.69887924194336,52.63153839111328,-0.8652105331420898],[-43.90885925292969,53.82451629638672,-2.684682607650757],[-44.49726486206055,52.295082092285156,3.184464454650879],[-43.93736267089844,53.52477264404297,1.2870923280715942],[-43.21648406982422,54.750831604003906,-0.5036916732788086],[-43.154232025146484,54.28376770019531,3.4693946838378906],[-42.50458908081055,55.51115798950195,1.6969568729400635],[-41.804473876953125,56.11493682861328,3.8831613063812256],[-19.54420280456543,-43.83476638793945,73.32267761230469],[-20.084735870361328,-45.696083068847656,72.7066650390625],[-20.63799476623535,-47.652992248535156,72.11383056640625],[-21.164573669433594,-49.63529586791992,71.55696105957031],[-21.619680404663086,-51.602569580078125,71.01200103759766],[-21.958940505981445,-53.535484313964844,70.43134307861328],[-22.1578369140625,-55.430267333984375,69.7733383178711],[-22.205821990966797,-57.28615188598633,69.0093002319336],[-22.11170768737793,-59.10155487060547,68.12451934814453],[-21.899436950683594,-60.86988830566406,67.10733032226562],[-21.621564865112305,-62.58671569824219,65.96501159667969],[-21.3260440826416,-64.2464599609375,64.69790649414062],[-21.054000854492188,-65.84538269042969,63.29994583129883],[-20.837417602539062,-67.38430786132812,61.75537109375],[-20.69953727722168,-68.876708984375,60.038978576660156],[-20.650550842285156,-70.35664367675781,58.13666534423828],[-20.702898025512695,-71.87049102783203,56.02840805053711],[-20.86760139465332,-73.47203826904297,53.70077896118164],[-21.1524715423584,-75.21514892578125,51.14616394042969],[-21.53248405456543,-77.11152648925781,48.404170989990234],[-21.95758628845215,-79.13316345214844,45.53443145751953],[-22.3608341217041,-81.22947692871094,42.60028839111328],[-22.66748809814453,-83.3397445678711,39.66130447387695],[-22.801494598388672,-85.3993148803711,36.77654266357422],[-22.7351016998291,-87.36363220214844,33.992897033691406],[-22.4697322845459,-89.20608520507812,31.35311508178711],[-22.043075561523438,-90.92096710205078,28.889812469482422],[-21.522661209106445,-92.51819610595703,26.62657928466797],[-20.999412536621094,-94.02264404296875,24.55351448059082],[-20.544530868530273,-95.44374084472656,22.640928268432617],[-20.198938369750977,-96.75284576416016,20.870662689208984],[-4.406631946563721,-47.47993469238281,32.26529312133789],[-4.87652587890625,-50.079105377197266,31.84046173095703],[-5.266265392303467,-52.73096466064453,31.35006332397461],[-5.527684688568115,-55.34561538696289,30.85616683959961],[-5.6619086265563965,-57.86115646362305,30.427364349365234],[-5.739553451538086,-60.24355697631836,30.116710662841797],[-5.869607925415039,-62.497188568115234,29.939401626586914],[-6.153873443603516,-64.63363647460938,29.894622802734375],[-6.657923221588135,-66.65715789794922,29.972097396850586],[-7.395563125610352,-68.55606842041016,30.158042907714844],[-8.286733627319336,-70.34317016601562,30.412242889404297],[-9.231602668762207,-72.04833221435547,30.690902709960938],[-10.123905181884766,-73.70826721191406,30.9538516998291],[-10.855833053588867,-75.34934997558594,31.17660903930664],[-11.328758239746094,-76.97145080566406,31.364803314208984],[-11.51248550415039,-78.551513671875,31.552616119384766],[-11.422940254211426,-80.06422424316406,31.77033233642578],[-11.125164985656738,-81.5026626586914,32.01966094970703],[-10.715577125549316,-82.88899230957031,32.25189208984375],[-10.313432693481445,-84.27759552001953,32.370975494384766],[-10.021530151367188,-85.71702575683594,32.27616882324219],[-9.927809715270996,-87.22582244873047,31.889774322509766],[-10.095760345458984,-88.7791519165039,31.181150436401367],[-10.554966926574707,-90.31473541259766,30.16857147216797],[-11.262800216674805,-91.77621459960938,28.932891845703125],[-12.179781913757324,-93.12586212158203,27.539344787597656],[-13.266674041748047,-94.33816528320312,26.051555633544922],[-14.492615699768066,-95.38851928710938,24.531963348388672],[-15.82253646850586,-96.2667236328125,23.04343605041504],[-17.221515655517578,-96.97305297851562,21.637012481689453],[-18.64350128173828,-97.5050277709961,20.362316131591797],[-18.83808135986328,-96.24999237060547,22.34173583984375],[-19.254676818847656,-94.92066192626953,24.350584030151367],[-19.81743812561035,-93.53255462646484,26.4483642578125],[-20.455902099609375,-92.07743835449219,28.676321029663086],[-21.07110595703125,-90.51526641845703,31.06026840209961],[-21.55499267578125,-88.80519104003906,33.6058349609375],[-21.841236114501953,-86.94083404541016,36.29172897338867],[-21.894062042236328,-84.93659210205078,39.08253479003906],[-21.71445083618164,-82.83082580566406,41.92658233642578],[-21.34571647644043,-80.68728637695312,44.78131866455078],[-20.876096725463867,-78.58015441894531,47.587913513183594],[-20.38963508605957,-76.57344055175781,50.288700103759766],[-19.95860481262207,-74.71234893798828,52.82614517211914],[-19.635122299194336,-73.0076675415039,55.158973693847656],[-19.444442749023438,-71.42439270019531,57.28984832763672],[-19.375303268432617,-69.9043197631836,59.22463607788086],[-19.4157657623291,-68.39486694335938,60.978721618652344],[-19.550905227661133,-66.85460662841797,62.56280517578125],[-19.764387130737305,-65.26225280761719,63.997825622558594],[-20.024547576904297,-63.613868713378906,65.30085754394531],[-20.29319953918457,-61.914146423339844,66.4828872680664],[-20.526811599731445,-60.17073059082031,67.55044555664062],[-20.67941665649414,-58.39161682128906,68.506591796875],[-20.718650817871094,-56.57571029663086,69.35858154296875],[-20.63201332092285,-54.722957611083984,70.11963653564453],[-20.42270851135254,-52.82805252075195,70.80897521972656],[-20.109893798828125,-50.887542724609375,71.45809173583984],[-19.715715408325195,-48.9044075012207,72.09549713134766],[-19.268644332885742,-46.90381622314453,72.74227905273438],[-18.80360984802246,-44.925350189208984,73.3991928100586],[-17.503923416137695,-95.67955780029297,23.88251304626465],[-18.02984046936035,-94.36791229248047,26.11599349975586],[-18.715585708618164,-93.02819061279297,28.39632797241211],[-19.464235305786133,-91.61924743652344,30.762195587158203],[-20.154312133789062,-90.07548522949219,33.23973083496094],[-20.67311668395996,-88.35199737548828,35.841400146484375],[-20.952280044555664,-86.44853973388672,38.545101165771484],[-20.954315185546875,-84.3902816772461,41.30690002441406],[-20.694988250732422,-82.23772430419922,44.07679748535156],[-20.236711502075195,-80.06998443603516,46.810096740722656],[-19.683238983154297,-77.96826934814453,49.44901657104492],[-19.12929916381836,-75.9940414428711,51.94016647338867],[-18.653085708618164,-74.17595672607422,54.24364471435547],[-18.30567741394043,-72.49614715576172,56.36488723754883],[-18.10408592224121,-70.91006469726562,58.30849838256836],[-18.033985137939453,-69.35941314697266,60.08319854736328],[-18.08122444152832,-67.79682159423828,61.69520568847656],[-18.225107192993164,-66.1963119506836,63.163124084472656],[-18.440532684326172,-64.54923248291016,64.50105285644531],[-18.688976287841797,-62.85780715942383,65.721435546875],[-18.928329467773438,-61.13011932373047,66.83556365966797],[-19.114843368530273,-59.375511169433594,67.8529052734375],[-19.219329833984375,-57.59585189819336,68.78752136230469],[-19.220962524414062,-55.783084869384766,69.64464569091797],[-19.120777130126953,-53.929569244384766,70.44112396240234],[-18.931184768676758,-52.023860931396484,71.1987075805664],[-18.669509887695312,-50.057899475097656,71.93865966796875],[-18.34238052368164,-48.0369987487793,72.66897583007812],[-17.966991424560547,-45.98680114746094,73.39109802246094],[-16.22802734375,-94.9930648803711,25.502052307128906],[-16.88071632385254,-93.73359680175781,27.926223754882812],[-17.685379028320312,-92.45228576660156,30.354625701904297],[-18.52291488647461,-91.0792236328125,32.8223876953125],[-19.26371192932129,-89.53832244873047,35.36423110961914],[-19.7863826751709,-87.78440856933594,37.992923736572266],[-20.015953063964844,-85.82636260986328,40.67914962768555],[-19.927085876464844,-83.71344757080078,43.377315521240234],[-19.556358337402344,-81.52542114257812,46.034454345703125],[-18.991073608398438,-79.35479736328125,48.60398864746094],[-18.352336883544922,-77.28361511230469,51.03230667114258],[-17.74651336669922,-75.3582992553711,53.28401565551758],[-17.250288009643555,-73.57473754882812,55.3687744140625],[-16.902328491210938,-71.90081024169922,57.295413970947266],[-16.71197509765625,-70.28819274902344,59.072853088378906],[-16.662487030029297,-68.68389129638672,60.70082092285156],[-16.732376098632812,-67.0577163696289,62.19384002685547],[-16.893186569213867,-65.39827728271484,63.56401443481445],[-17.111984252929688,-63.704898834228516,64.82181549072266],[-17.34544563293457,-61.98350143432617,65.98027801513672],[-17.549869537353516,-60.243465423583984,67.05329895019531],[-17.69518280029297,-58.48802947998047,68.05811309814453],[-17.764188766479492,-56.71184539794922,69.00516510009766],[-17.750017166137695,-54.899051666259766,69.90027618408203],[-17.66383171081543,-53.03499984741211,70.76200103759766],[-17.517122268676758,-51.10270690917969,71.60295104980469],[-17.31125831604004,-49.096214294433594,72.42765808105469],[-17.040008544921875,-47.025264739990234,73.22868347167969],[-15.033459663391113,-94.17141723632812,27.164081573486328],[-15.811076164245605,-92.98145294189453,29.73164176940918],[-16.714305877685547,-91.75270080566406,32.26201629638672],[-17.6160888671875,-90.4018325805664,34.79646682739258],[-18.37378692626953,-88.84598541259766,37.3704948425293],[-18.852561950683594,-87.04385375976562,39.99003219604492],[-18.984664916992188,-85.02852630615234,42.621734619140625],[-18.76708221435547,-82.87347412109375,45.21476745605469],[-18.265056610107422,-80.67649841308594,47.71327590942383],[-17.59478759765625,-78.5363540649414,50.07355880737305],[-16.895538330078125,-76.52165222167969,52.262351989746094],[-16.27295684814453,-74.6424331665039,54.29551696777344],[-15.787557601928711,-72.876953125,56.18678283691406],[-15.466833114624023,-71.1859130859375,57.948848724365234],[-15.314361572265625,-69.52436828613281,59.581260681152344],[-15.303918838500977,-67.8573226928711,61.091976165771484],[-15.406188011169434,-66.17110443115234,62.48927307128906],[-15.586029052734375,-64.46337127685547,63.78277587890625],[-15.803977012634277,-62.73818588256836,64.9841079711914],[-16.014375686645508,-61.00287628173828,66.1089096069336],[-16.184675216674805,-59.26123046875,67.1763687133789],[-16.297409057617188,-57.50929260253906,68.19862365722656],[-16.349205017089844,-55.73408508300781,69.18446350097656],[-16.34422492980957,-53.912418365478516,70.13943481445312],[-16.29355812072754,-52.02375030517578,71.07332611083984],[-16.192838668823242,-50.0536994934082,71.98526763916016],[-16.027755737304688,-48.00352478027344,72.86671447753906],[-13.93964672088623,-93.19557189941406,28.805511474609375],[-14.824413299560547,-92.07086944580078,31.46245574951172],[-15.80376148223877,-90.88141632080078,34.05217742919922],[-16.735973358154297,-89.53279876708984,36.61567687988281],[-17.45917320251465,-87.93998718261719,39.18219757080078],[-17.837970733642578,-86.08235168457031,41.75199890136719],[-17.826622009277344,-84.02193450927734,44.28376770019531],[-17.454971313476562,-81.85568237304688,46.72201919555664],[-16.824087142944336,-79.69245147705078,49.0147705078125],[-16.08009910583496,-77.619140625,51.14076614379883],[-15.36357307434082,-75.66443634033203,53.11884689331055],[-14.760746002197266,-73.8180923461914,54.96843719482422],[-14.318058013916016,-72.04891967773438,56.7058219909668],[-14.054830551147461,-70.3192138671875,58.33301544189453],[-13.959773063659668,-68.60041809082031,59.85562515258789],[-13.99862289428711,-66.87583923339844,61.276329040527344],[-14.135494232177734,-65.14192199707031,62.6020393371582],[-14.329174041748047,-63.401580810546875,63.844757080078125],[-14.536170959472656,-61.66093444824219,65.01863861083984],[-14.720026016235352,-59.9227180480957,66.14290618896484],[-14.861509323120117,-58.18395233154297,67.23056030273438],[-14.957099914550781,-56.433345794677734,68.2902603149414],[-15.014633178710938,-54.650699615478516,69.32791137695312],[-15.039522171020508,-52.80669403076172,70.34085845947266],[-15.027095794677734,-50.883750915527344,71.32764434814453],[-14.9555082321167,-48.87614059448242,72.2769546508789],[-12.970705032348633,-92.0536880493164,30.356143951416016],[-13.945566177368164,-90.97999572753906,33.051605224609375],[-14.971513748168945,-89.8066635131836,35.65510559082031],[-15.884345054626465,-88.43245697021484,38.201141357421875],[-16.511859893798828,-86.787841796875,40.7146110534668],[-16.73703384399414,-84.88410949707031,43.1854133605957],[-16.549802780151367,-82.81229400634766,45.56569290161133],[-16.02255630493164,-80.68482971191406,47.80450439453125],[-15.294986724853516,-78.6005859375,49.8753776550293],[-14.523843765258789,-76.60234069824219,51.8068733215332],[-13.827960014343262,-74.69651794433594,53.619956970214844],[-13.27718734741211,-72.8617172241211,55.33447265625],[-12.907947540283203,-71.0675048828125,56.95500564575195],[-12.720417022705078,-69.29047393798828,58.48655319213867],[-12.691530227661133,-67.5201416015625,59.9288444519043],[-12.780512809753418,-65.75112915039062,61.28534698486328],[-12.945091247558594,-63.985530853271484,62.566253662109375],[-13.140262603759766,-62.228641510009766,63.78679275512695],[-13.329093933105469,-60.48331069946289,64.96334075927734],[-13.489076614379883,-58.746559143066406,66.1082763671875],[-13.615321159362793,-57.00856018066406,67.2298583984375],[-13.716239929199219,-55.250953674316406,68.33197784423828],[-13.801783561706543,-53.447425842285156,69.41107177734375],[-13.862043380737305,-51.57169723510742,70.45662689208984],[-13.87314224243164,-49.61540985107422,71.45813751220703],[-12.162513732910156,-90.76182556152344,31.756553649902344],[-13.206074714660645,-89.71553039550781,34.438148498535156],[-14.236552238464355,-88.52819061279297,37.001197814941406],[-15.069685935974121,-87.10767364501953,39.480770111083984],[-15.543411254882812,-85.41570281982422,41.89259719848633],[-15.575272560119629,-83.49761962890625,44.21725845336914],[-15.202666282653809,-81.4649887084961,46.40997314453125],[-14.54543399810791,-79.42303466796875,48.445072174072266],[-13.765149116516113,-77.42564392089844,50.34384536743164],[-13.002578735351562,-75.49024200439453,52.13312911987305],[-12.357521057128906,-73.61024475097656,53.83346176147461],[-11.887969970703125,-71.7643051147461,55.45257568359375],[-11.607499122619629,-69.93408203125,56.99469757080078],[-11.501380920410156,-68.11386108398438,58.45895767211914],[-11.53677749633789,-66.30403900146484,59.84586715698242],[-11.666459083557129,-64.50558471679688,61.16397476196289],[-11.844298362731934,-62.723209381103516,62.42724609375],[-12.03042221069336,-60.95978927612305,63.65248107910156],[-12.201675415039062,-59.213966369628906,64.84878540039062],[-12.350441932678223,-57.476898193359375,66.0231704711914],[-12.4849853515625,-55.73202133178711,67.17774200439453],[-12.61708927154541,-53.95503234863281,68.30641174316406],[-12.741678237915039,-52.122344970703125,69.39791870117188],[-12.827659606933594,-50.21653747558594,70.43653106689453],[-11.553486824035645,-89.34028625488281,32.94071960449219],[-12.63638687133789,-88.29651641845703,35.545921325683594],[-13.615455627441406,-87.07435607910156,38.01906204223633],[-14.308917999267578,-85.60790252685547,40.3900260925293],[-14.579681396484375,-83.89310455322266,42.66547393798828],[-14.394800186157227,-82.00392150878906,44.822181701660156],[-13.848220825195312,-80.05116271972656,46.83586883544922],[-13.099403381347656,-78.0982666015625,48.72220230102539],[-12.298413276672363,-76.17276000976562,50.503204345703125],[-11.573105812072754,-74.27507019042969,52.20216369628906],[-11.007591247558594,-72.39666748046875,53.82870864868164],[-10.633859634399414,-70.5256576538086,55.38704299926758],[-10.446516036987305,-68.66104888916016,56.87572479248047],[-10.418437957763672,-66.80762481689453,58.2949104309082],[-10.50732135772705,-64.97159576416016,59.65018844604492],[-10.66234016418457,-63.1568717956543,60.95506286621094],[-10.840588569641113,-61.36663818359375,62.22455596923828],[-11.01722240447998,-59.600746154785156,63.46820831298828],[-11.183502197265625,-57.853599548339844,64.68925476074219],[-11.34658432006836,-56.110443115234375,65.88773345947266],[-11.519612312316895,-54.34914016723633,67.05569458007812],[-11.699905395507812,-52.547508239746094,68.18016052246094],[-11.86018180847168,-50.68977737426758,69.24430084228516],[-11.177716255187988,-87.83163452148438,33.833133697509766],[-12.247990608215332,-86.77371215820312,36.31635284423828],[-13.11331844329834,-85.51374816894531,38.66847229003906],[-13.607002258300781,-84.01457214355469,40.91393280029297],[-13.63278579711914,-82.30535125732422,43.04930877685547],[-13.224581718444824,-80.47450256347656,45.057586669921875],[-12.537256240844727,-78.6003646850586,46.947330474853516],[-11.727287292480469,-76.71868896484375,48.73691177368164],[-10.935613632202148,-74.83734130859375,50.44784164428711],[-10.278164863586426,-72.9508285522461,52.0918083190918],[-9.80929183959961,-71.05631256103516,53.67338943481445],[-9.536735534667969,-69.158447265625,55.190879821777344],[-9.439417839050293,-67.26658630371094,56.64422607421875],[-9.478303909301758,-65.39076232910156,58.038719177246094],[-9.605184555053711,-63.53959274291992,59.38494873046875],[-9.770866394042969,-61.71622085571289,60.69740295410156],[-9.948382377624512,-59.922237396240234,61.984222412109375],[-10.128155708312988,-58.15459060668945,63.24838638305664],[-10.317119598388672,-56.40354919433594,64.48575592041016],[-10.528848648071289,-54.64923858642578,65.68677520751953],[-10.76266098022461,-52.870765686035156,66.83731079101562],[-10.992973327636719,-51.05204391479492,67.91919708251953],[-11.04609489440918,-86.29679107666016,34.381744384765625],[-12.040154457092285,-85.21867370605469,36.72526931762695],[-12.721118927001953,-83.91912078857422,38.959754943847656],[-12.9517822265625,-82.39427185058594,41.09579849243164],[-12.702670097351074,-80.70500946044922,43.119510650634766],[-12.095667839050293,-78.92802429199219,45.03107833862305],[-11.295209884643555,-77.11358642578125,46.844364166259766],[-10.456160545349121,-75.27452850341797,48.579864501953125],[-9.7091646194458,-73.40847778320312,50.25123977661133],[-9.14288330078125,-71.51128387451172,51.86341094970703],[-8.780576705932617,-69.59501647949219,53.41499710083008],[-8.609635353088379,-67.67437744140625,54.90559005737305],[-8.593746185302734,-65.76348114013672,56.34030532836914],[-8.685684204101562,-63.87409973144531,57.72955322265625],[-8.835248947143555,-62.01419448852539,59.08453369140625],[-9.010361671447754,-60.1866569519043,60.413307189941406],[-9.199888229370117,-58.391754150390625,61.717262268066406],[-9.41209602355957,-56.6244010925293,62.99137496948242],[-9.661669731140137,-54.87077713012695,64.22251892089844],[-9.949124336242676,-53.11081314086914,65.395751953125],[-10.250242233276367,-51.327064514160156,66.4921875],[-11.10572624206543,-84.79288482666016,34.608848571777344],[-11.941635131835938,-83.67617797851562,36.8369140625],[-12.35755729675293,-82.32454681396484,38.98601531982422],[-12.273971557617188,-80.77705383300781,41.04418182373047],[-11.768851280212402,-79.10782623291016,42.99721145629883],[-10.994972229003906,-77.37158203125,44.84925079345703],[-10.122476577758789,-75.59130096435547,46.62034606933594],[-9.29918098449707,-73.76506805419922,48.32655715942383],[-8.631738662719727,-71.88817596435547,49.97582244873047],[-8.174737930297852,-69.96978759765625,51.56599426269531],[-7.924768924713135,-68.0318603515625,53.09684753417969],[-7.849934101104736,-66.09364318847656,54.573116302490234],[-7.903208255767822,-64.17045593261719,56.00531005859375],[-8.031295776367188,-62.27275085449219,57.40427780151367],[-8.200386047363281,-60.40907669067383,58.774906158447266],[-8.395594596862793,-58.58235168457031,60.118473052978516],[-8.625373840332031,-56.79275131225586,61.4282341003418],[-8.908292770385742,-55.032833099365234,62.69020462036133],[-9.246794700622559,-53.28666305541992,63.886837005615234],[-9.617454528808594,-51.5344352722168,64.99880981445312],[-11.27483081817627,-83.3262939453125,34.58512878417969],[-11.858745574951172,-82.14096069335938,36.74518585205078],[-11.936691284179688,-80.72840881347656,38.84534454345703],[-11.546707153320312,-79.16434478759766,40.85580825805664],[-10.817285537719727,-77.5113525390625,42.76365661621094],[-9.92427921295166,-75.7968521118164,44.5819206237793],[-9.033034324645996,-74.02285766601562,46.33064651489258],[-8.273086547851562,-72.1812744140625,48.02130126953125],[-7.714104175567627,-70.27903747558594,49.65518569946289],[-7.379832744598389,-68.33651733398438,51.229610443115234],[-7.241870403289795,-66.38016510009766,52.74944305419922],[-7.25408935546875,-64.42999267578125,54.22512435913086],[-7.358150959014893,-62.49909210205078,55.66766357421875],[-7.51692533493042,-60.59841537475586,57.08180618286133],[-7.713273048400879,-58.73761749267578,58.4655876159668],[-7.954263687133789,-56.92131805419922,59.81207275390625],[-8.260931015014648,-55.14847183227539,61.10589599609375],[-8.642854690551758,-53.409183502197266,62.328739166259766],[-9.078733444213867,-51.684226989746094,63.459327697753906],[-11.450989723205566,-81.86561584472656,34.40903854370117],[-11.689231872558594,-80.5894775390625,36.54526138305664],[-11.421028137207031,-79.12630462646484,38.617923736572266],[-10.751397132873535,-77.55253601074219,40.593997955322266],[-9.850337982177734,-75.90658569335938,42.47241973876953],[-8.899256706237793,-74.19014739990234,44.27134704589844],[-8.050436019897461,-72.39387512207031,46.00859832763672],[-7.394415855407715,-70.51959228515625,47.68880844116211],[-6.967631816864014,-68.5863265991211,49.311553955078125],[-6.762613296508789,-66.62165832519531,50.87773895263672],[-6.731839179992676,-64.65216827392578,52.398399353027344],[-6.811059951782227,-62.694549560546875,53.8847541809082],[-6.957587242126465,-60.76152038574219,55.34215545654297],[-7.150341510772705,-58.86558151245117,56.76823806762695],[-7.395265579223633,-57.01953887939453,58.152870178222656],[-7.7153096199035645,-55.2277717590332,59.48072052001953],[-8.126191139221191,-53.486236572265625,60.73247528076172],[-8.616881370544434,-51.780941009521484,61.885948181152344],[-11.522801399230957,-80.37034606933594,34.174591064453125],[-11.38545036315918,-79.01334381103516,36.30324935913086],[-10.78697681427002,-77.5158920288086,38.35008239746094],[-9.891282081604004,-75.93507385253906,40.29642868041992],[-8.886734962463379,-74.27943420410156,42.153507232666016],[-7.952451229095459,-72.53347778320312,43.941978454589844],[-7.199436664581299,-70.69527435302734,45.67232894897461],[-6.682529926300049,-68.78026580810547,47.34543228149414],[-6.404018878936768,-66.8172378540039,48.96281814575195],[-6.329103469848633,-64.83609771728516,50.53093338012695],[-6.383993625640869,-62.85858917236328,52.062374114990234],[-6.5186052322387695,-60.8992805480957,53.563316345214844],[-6.70531702041626,-58.972084045410156,55.03190994262695],[-6.946595668792725,-57.09364700317383,56.45730972290039],[-7.268154144287109,-55.277381896972656,57.82133102416992],[-7.692882061004639,-53.524749755859375,59.104957580566406],[-8.219379425048828,-51.82704162597656,60.28508758544922],[-11.426509857177734,-78.8265380859375,33.93864822387695],[-10.912179946899414,-77.41244506835938,36.050086975097656],[-10.03382396697998,-75.8962631225586,38.06339645385742],[-8.986099243164062,-74.30138397216797,39.98079299926758],[-7.967389106750488,-72.61123657226562,41.82426071166992],[-7.117450714111328,-70.81419372558594,43.60758590698242],[-6.508851051330566,-68.92364501953125,45.334503173828125],[-6.158633708953857,-66.96866607666016,47.00516128540039],[-6.036743640899658,-64.98294830322266,48.625640869140625],[-6.069297790527344,-62.99184799194336,50.20452880859375],[-6.194190979003906,-61.01214599609375,51.75027084350586],[-6.37489652633667,-59.05853271484375,53.26194763183594],[-6.607295036315918,-57.14909744262695,54.728946685791016],[-6.917178153991699,-55.30205154418945,56.132328033447266],[-7.338042259216309,-53.52861785888672,57.45061492919922],[-7.880647659301758,-51.8259391784668,58.66090393066406],[-11.100778579711914,-77.23700714111328,33.71397399902344],[-10.256855964660645,-75.7947998046875,35.78749084472656],[-9.18004035949707,-74.26422119140625,37.76089859008789],[-8.086175918579102,-72.63465881347656,39.65752410888672],[-7.137273788452148,-70.88703155517578,41.49546813964844],[-6.43467903137207,-69.02684020996094,43.278533935546875],[-6.009612560272217,-67.08516693115234,45.00617980957031],[-5.841766834259033,-65.09977722167969,46.68134689331055],[-5.851632118225098,-63.100341796875,48.31256103515625],[-5.96980094909668,-61.105247497558594,49.905582427978516],[-6.146657466888428,-59.1295280456543,51.46192932128906],[-6.368592739105225,-57.19145202636719,52.97169876098633],[-6.657497406005859,-55.31108093261719,54.41596221923828],[-7.054906368255615,-53.5054931640625,55.77273941040039],[-7.590238571166992,-51.78327178955078,57.016693115234375],[-10.539105415344238,-75.61956024169922,33.4852409362793],[-9.449454307556152,-74.16529846191406,35.50569152832031],[-8.293922424316406,-72.60455322265625,37.44808578491211],[-7.252286911010742,-70.91598510742188,39.336307525634766],[-6.450733184814453,-69.09609985351562,41.176856994628906],[-5.947423458099365,-67.17353057861328,42.96443557739258],[-5.731392860412598,-65.19251251220703,44.69860076904297],[-5.720282077789307,-63.18864822387695,46.38462829589844],[-5.835051536560059,-61.18178939819336,48.02975845336914],[-6.012337684631348,-59.187374114990234,49.633419036865234],[-6.225292205810547,-57.222713470458984,51.18797302246094],[-6.4885969161987305,-55.30824279785156,52.67475509643555],[-6.84748649597168,-53.46373748779297,54.07203674316406],[-7.3483686447143555,-51.70547866821289,55.35396957397461],[-9.772538185119629,-73.98883819580078,33.23012924194336],[-8.570509910583496,-72.51271057128906,35.20684814453125],[-7.448153018951416,-70.89640808105469,37.135894775390625],[-6.5504374504089355,-69.13069915771484,39.028968811035156],[-5.962657451629639,-67.2380142211914,40.87894821166992],[-5.695478439331055,-65.26683807373047,42.676063537597656],[-5.663049221038818,-63.26184844970703,44.42160415649414],[-5.777663230895996,-61.24635314941406,46.12140655517578],[-5.961759090423584,-59.23493194580078,47.77729034423828],[-6.170358180999756,-57.24480056762695,49.37950134277344],[-6.407327651977539,-55.295494079589844,50.91114044189453],[-6.718499660491943,-53.40813446044922,52.35085678100586],[-7.162181854248047,-51.602577209472656,53.673377990722656],[-8.89208698272705,-72.33732604980469,32.94841384887695],[-7.701915264129639,-70.81389617919922,34.9047966003418],[-6.717636585235596,-69.12033081054688,36.84052276611328],[-6.045971393585205,-67.27409362792969,38.74955749511719],[-5.7231950759887695,-65.32371520996094,40.61408615112305],[-5.669823169708252,-63.32270431518555,42.423851013183594],[-5.7875657081604,-61.30091094970703,44.18316650390625],[-5.98451042175293,-59.274295806884766,45.89384460449219],[-6.196732521057129,-57.257240295410156,47.54887008666992],[-6.409739017486572,-55.27088165283203,49.12845230102539],[-6.666750907897949,-53.33646774291992,50.61299133300781],[-7.035894870758057,-51.47577667236328,51.97831726074219],[-7.990409851074219,-70.64102172851562,32.65739822387695],[-6.930509567260742,-69.04434204101562,34.62199401855469],[-6.180593967437744,-67.2665786743164,36.581199645996094],[-5.800065994262695,-65.35579681396484,38.51211166381836],[-5.722458839416504,-63.37026596069336,40.392086029052734],[-5.844878673553467,-61.34711837768555,42.21613693237305],[-6.060055732727051,-59.30648422241211,43.98661804199219],[-6.285008907318115,-57.26274871826172,45.69721221923828],[-6.482724189758301,-55.234825134277344,47.33015823364258],[-6.685696601867676,-53.249061584472656,48.86271667480469],[-6.968584060668945,-51.32709503173828,50.27338409423828],[-7.16572380065918,-68.86940002441406,32.3879280090332],[-6.344420433044434,-67.18821716308594,34.3842658996582],[-5.9071149826049805,-65.34164428710938,36.374855041503906],[-5.8011274337768555,-63.39170455932617,38.32594299316406],[-5.9270501136779785,-61.37882995605469,40.22159957885742],[-6.164219379425049,-59.328575134277344,42.05738067626953],[-6.41057014465332,-57.257774353027344,43.8287353515625],[-6.606377124786377,-55.18737030029297,45.518104553222656],[-6.763358116149902,-53.14326095581055,47.104244232177734],[-6.956564903259277,-51.1547966003418,48.56343460083008],[-6.512913227081299,-66.99989318847656,32.17403793334961],[-6.020418167114258,-65.24767303466797,34.21332550048828],[-5.8830108642578125,-63.3593635559082,36.23081970214844],[-6.007805824279785,-61.377994537353516,38.200279235839844],[-6.268872261047363,-59.329383850097656,40.10857009887695],[-6.543910980224609,-57.23486328125,41.946258544921875],[-6.750270366668701,-55.11975860595703,43.69747543334961],[-6.879395484924316,-53.01600646972656,45.34049987792969],[-6.988111972808838,-50.95255661010742,46.85371017456055],[-6.113441467285156,-65.02896881103516,32.0443000793457],[-5.94119930267334,-63.23332214355469,34.119380950927734],[-6.058504104614258,-61.31083297729492,36.159236907958984],[-6.339475154876709,-59.28639602661133,38.14258575439453],[-6.648919582366943,-57.178749084472656,40.05360412597656],[-6.877558708190918,-55.021018981933594,41.872127532958984],[-6.99513053894043,-52.85404968261719,43.57743835449219],[-7.042108535766602,-50.71514892578125,45.14775848388672],[-5.9427809715271,-62.96052551269531,32.014041900634766],[-6.044447898864746,-61.12882995605469,34.11697769165039],[-6.336771488189697,-59.15782165527344,36.17201614379883],[-6.678933620452881,-57.06141662597656,38.15789031982422],[-6.940487861633301,-54.87102508544922,40.049476623535156],[-7.062908172607422,-52.64183044433594,41.821495056152344],[-7.06770133972168,-50.42329406738281,43.45337677001953],[-5.942101001739502,-60.786930084228516,32.09309387207031],[-6.231385707855225,-58.90430450439453,34.21238327026367],[-6.596218585968018,-56.85383224487305,36.268211364746094],[-6.893861293792725,-54.66013717651367,38.231754302978516],[-7.0394463539123535,-52.38054275512695,40.07361602783203],[-7.02749490737915,-50.0850944519043,41.76908874511719],[-6.005793571472168,-58.48349380493164,32.28804397583008],[-6.376629829406738,-56.5204963684082,34.404815673828125],[-6.703450679779053,-54.36558532714844,36.43254470825195],[-6.883333683013916,-52.069210052490234,38.339134216308594],[-6.880812168121338,-49.7087287902832,40.0965461730957],[-6.015232086181641,-56.02851104736328,32.59131622314453],[-6.356699466705322,-53.964088439941406,34.67179489135742],[-6.570578098297119,-51.700279235839844,36.63208770751953],[-6.598013401031494,-49.31039047241211,38.440704345703125],[-5.8624653816223145,-53.43077850341797,32.97261047363281],[-6.1025800704956055,-51.263267517089844,34.972694396972656],[-6.167976379394531,-48.897396087646484,36.81693649291992],[-5.518927097320557,-50.74364471435547,33.37213897705078],[-5.622928619384766,-48.47676086425781,35.237998962402344],[-5.017545223236084,-48.03276443481445,33.71382141113281],[-21.459232330322266,-97.38886260986328,19.251529693603516],[-23.13355827331543,-96.72101593017578,19.255146026611328],[-24.883434295654297,-95.90361785888672,19.40642547607422],[-26.654396057128906,-94.9860610961914,19.820297241210938],[-28.389202117919922,-94.01699829101562,20.630529403686523],[-30.002532958984375,-93.04791259765625,21.935916900634766],[-31.41480255126953,-92.1162109375,23.715667724609375],[-32.58598709106445,-91.23135375976562,25.877668380737305],[-33.539913177490234,-90.36693572998047,28.286033630371094],[-34.3493537902832,-89.45842742919922,30.805341720581055],[-35.11792755126953,-88.4346923828125,33.30571365356445],[-35.916534423828125,-87.24494934082031,35.68707275390625],[-36.78474426269531,-85.86691284179688,37.86481475830078],[-37.73494338989258,-84.30624389648438,39.77117156982422],[-38.757877349853516,-82.59452056884766,41.36684036254883],[-39.82865524291992,-80.78187561035156,42.672325134277344],[-40.92387008666992,-78.90587615966797,43.71635437011719],[-42.0200309753418,-76.99687957763672,44.540550231933594],[-43.09318542480469,-75.0772476196289,45.185569763183594],[-44.12446975708008,-73.16212463378906,45.70521545410156],[-45.102386474609375,-71.25871276855469,46.13899230957031],[-46.02109909057617,-69.37045288085938,46.513694763183594],[-46.88067626953125,-67.49891662597656,46.84649658203125],[-47.68636703491211,-65.6458969116211,47.14562225341797],[-48.45448303222656,-63.81074523925781,47.41626739501953],[-49.19971466064453,-61.99445343017578,47.65826416015625],[-49.9364013671875,-60.19851303100586,47.870025634765625],[-50.676334381103516,-58.42658615112305,48.047454833984375],[-51.4256706237793,-56.68351745605469,48.185325622558594],[-52.18125915527344,-54.97959518432617,48.27410125732422],[-52.92653274536133,-53.34492874145508,48.295867919921875],[-21.857345581054688,-96.03340148925781,20.937929153442383],[-23.55579948425293,-95.20396423339844,21.002933502197266],[-25.266220092773438,-94.27294921875,21.235584259033203],[-26.95101547241211,-93.27934265136719,21.775503158569336],[-28.5551815032959,-92.27395629882812,22.75760841369629],[-30.00161361694336,-91.3043212890625,24.246334075927734],[-31.217639923095703,-90.39674377441406,26.18472671508789],[-32.19076919555664,-89.54620361328125,28.450075149536133],[-32.9698486328125,-88.71236419677734,30.898481369018555],[-33.66848373413086,-87.8177490234375,33.40717315673828],[-34.382728576660156,-86.79515075683594,35.864383697509766],[-35.176002502441406,-85.59900665283203,38.176727294921875],[-36.077545166015625,-84.21221923828125,40.26040267944336],[-37.086082458496094,-82.64497375488281,42.0484619140625],[-38.17108917236328,-80.92999267578125,43.52037811279297],[-39.2977180480957,-79.11754608154297,44.698768615722656],[-40.43547058105469,-77.24383544921875,45.61970901489258],[-41.556514739990234,-75.33843231201172,46.32476806640625],[-42.6351203918457,-73.41969299316406,46.868648529052734],[-43.65686798095703,-71.50199890136719,47.30253982543945],[-44.61457824707031,-69.59291076660156,47.66184997558594],[-45.5074462890625,-67.69644927978516,47.97074508666992],[-46.34077453613281,-65.81562805175781,48.242774963378906],[-47.13093948364258,-63.95154571533203,48.49127197265625],[-47.89585876464844,-62.10517883300781,48.716365814208984],[-48.652915954589844,-60.27805709838867,48.91668701171875],[-49.419044494628906,-58.472801208496094,49.086822509765625],[-50.20649719238281,-56.693485260009766,49.21883010864258],[-51.01994705200195,-54.94605255126953,49.298133850097656],[-51.86359405517578,-53.242244720458984,49.29584503173828],[-22.253122329711914,-94.56573486328125,22.728343963623047],[-23.934856414794922,-93.59390258789062,22.857168197631836],[-25.571680068969727,-92.54877471923828,23.191612243652344],[-27.138038635253906,-91.47644805908203,23.86838722229004],[-28.597749710083008,-90.43119812011719,25.002090454101562],[-29.874805450439453,-89.4551010131836,26.634366989135742],[-30.913917541503906,-88.56169128417969,28.672840118408203],[-31.724184036254883,-87.73068237304688,30.97616195678711],[-32.39594268798828,-86.90431213378906,33.4080810546875],[-33.03709411621094,-86.00435638427734,35.86634063720703],[-33.737762451171875,-84.96731567382812,38.24711990356445],[-34.55264663696289,-83.75288391113281,40.45756149291992],[-35.49942398071289,-82.34907531738281,42.4122200012207],[-36.55815887451172,-80.76961517333984,44.061466217041016],[-37.688499450683594,-79.04867553710938,45.38642120361328],[-38.84660720825195,-77.2348403930664,46.41701889038086],[-39.99594497680664,-75.36398315429688,47.18935775756836],[-41.107025146484375,-73.46219635009766,47.762855529785156],[-42.16074752807617,-71.54615020751953,48.19438934326172],[-43.14777374267578,-69.62971496582031,48.53115463256836],[-44.066776275634766,-67.72051239013672,48.8057746887207],[-44.923194885253906,-65.82379150390625,49.0385627746582],[-45.735408782958984,-63.94013595581055,49.249778747558594],[-46.5216064453125,-62.07130432128906,49.44717788696289],[-47.3021240234375,-60.218544006347656,49.62858200073242],[-48.09770965576172,-58.38347625732422,49.7889289855957],[-48.92652130126953,-56.56709671020508,49.91998291015625],[-49.79873275756836,-54.772708892822266,50.00514602661133],[-50.725059509277344,-53.00707244873047,50.01297378540039],[-22.68217658996582,-93.00762939453125,24.66936492919922],[-24.282726287841797,-91.89989471435547,24.882400512695312],[-25.792816162109375,-90.74300384521484,25.334020614624023],[-27.21274185180664,-89.59420013427734,26.13761329650879],[-28.514463424682617,-88.507568359375,27.393465042114258],[-29.631216049194336,-87.52173614501953,29.116857528686523],[-30.520893096923828,-86.63604736328125,31.188491821289062],[-31.232275009155273,-85.8099136352539,33.46626663208008],[-31.85350799560547,-84.97669982910156,35.8338623046875],[-32.485389709472656,-84.05732727050781,38.20011520385742],[-33.2090950012207,-82.99188995361328,40.46133041381836],[-34.067420959472656,-81.74525451660156,42.5211296081543],[-35.05889892578125,-80.31282043457031,44.311912536621094],[-36.15361404418945,-78.71260833740234,45.784244537353516],[-37.304264068603516,-76.98072814941406,46.92942810058594],[-38.460391998291016,-75.16506958007812,47.77507781982422],[-39.58556365966797,-73.29888916015625,48.38095474243164],[-40.6572265625,-71.40550231933594,48.809349060058594],[-41.66345977783203,-69.49935913085938,49.11673355102539],[-42.60145568847656,-67.59300231933594,49.347198486328125],[-43.47686767578125,-65.69482421875,49.52898025512695],[-44.30918502807617,-63.80542755126953,49.690582275390625],[-45.11789321899414,-61.92612075805664,49.84457015991211],[-45.92344284057617,-60.057743072509766,49.996395111083984],[-46.74951934814453,-58.20213317871094,50.13956832885742],[-47.61669158935547,-56.35913848876953,50.266845703125],[-48.53907775878906,-54.529624938964844,50.36328125],[-49.5284538269043,-52.7191276550293,50.400367736816406],[-23.10600471496582,-91.36322021484375,26.80394172668457],[-24.56094741821289,-90.1240005493164,27.122411727905273],[-25.908416748046875,-88.86458587646484,27.6907958984375],[-27.16057586669922,-87.64360046386719,28.605924606323242],[-28.30323028564453,-86.5184326171875,29.946773529052734],[-29.276386260986328,-85.52349090576172,31.702144622802734],[-30.072315216064453,-84.63937377929688,33.74223327636719],[-30.739526748657227,-83.80912017822266,35.94249725341797],[-31.360816955566406,-82.95866394042969,38.19917297363281],[-32.02623748779297,-82.00749206542969,40.424339294433594],[-32.803775787353516,-80.89901733398438,42.509132385253906],[-33.71376419067383,-79.60798645019531,44.37529754638672],[-34.74293899536133,-78.13683319091797,45.95285415649414],[-35.852943420410156,-76.51032257080078,47.20335388183594],[-36.99161911010742,-74.76813507080078,48.1196403503418],[-38.11149978637695,-72.95639038085938,48.75823211669922],[-39.18526840209961,-71.103759765625,49.18391799926758],[-40.198394775390625,-69.22993469238281,49.45765686035156],[-41.14753723144531,-67.34571075439453,49.635948181152344],[-42.037452697753906,-65.46307373046875,49.757591247558594],[-42.88789367675781,-63.583370208740234,49.85942840576172],[-43.718544006347656,-61.70817565917969,49.95966339111328],[-44.55082702636719,-59.837890625,50.067665100097656],[-45.40761947631836,-57.97349548339844,50.184173583984375],[-46.31078338623047,-56.115501403808594,50.300418853759766],[-47.27437210083008,-54.26439666748047,50.40317916870117],[-48.310489654541016,-52.42394256591797,50.46980285644531],[-23.458953857421875,-89.62443542480469,29.159927368164062],[-24.731271743774414,-88.26756286621094,29.590646743774414],[-25.894006729125977,-86.9169692993164,30.271488189697266],[-26.974658966064453,-85.63426971435547,31.279401779174805],[-27.966320037841797,-84.4782943725586,32.66692352294922],[-28.841384887695312,-83.4764404296875,34.39886474609375],[-29.592195510864258,-82.58973693847656,36.35691452026367],[-30.263713836669922,-81.74781799316406,38.431884765625],[-30.929149627685547,-80.86929321289062,40.52639389038086],[-31.663278579711914,-79.87175750732422,42.55051803588867],[-32.507606506347656,-78.70830535888672,44.41333770751953],[-33.46791076660156,-77.36307525634766,46.03083801269531],[-34.51909255981445,-75.84927368164062,47.34279251098633],[-35.61559295654297,-74.20063781738281,48.31300354003906],[-36.71065902709961,-72.4596176147461,48.97604751586914],[-37.769893646240234,-70.6656494140625,49.39517593383789],[-38.7764892578125,-68.84149169921875,49.634708404541016],[-39.72597122192383,-67.00164794921875,49.75517654418945],[-40.623992919921875,-65.15386962890625,49.809268951416016],[-41.489112854003906,-63.3005485534668,49.84357833862305],[-42.34022903442383,-61.44444274902344,49.881591796875],[-43.198272705078125,-59.586151123046875,49.937076568603516],[-44.08649444580078,-57.726715087890625,50.01390838623047],[-45.02384948730469,-55.86542510986328,50.10943603515625],[-46.023956298828125,-54.004150390625,50.20899963378906],[-47.09670639038086,-52.1463737487793,50.2932014465332],[-23.684356689453125,-87.783935546875,31.728612899780273],[-24.757354736328125,-86.32844543457031,32.272499084472656],[-25.738306045532227,-84.90741729736328,33.05766677856445],[-26.65937614440918,-83.58177947998047,34.141117095947266],[-27.542163848876953,-82.40918731689453,35.54024124145508],[-28.360740661621094,-81.40294647216797,37.210540771484375],[-29.10908317565918,-80.50858306884766,39.046146392822266],[-29.825443267822266,-79.6439208984375,40.94947814941406],[-30.568668365478516,-78.72053527832031,42.82583236694336],[-31.383480072021484,-77.66252899169922,44.607383728027344],[-32.293643951416016,-76.43323516845703,46.19473648071289],[-33.28927230834961,-75.03079223632812,47.51148986816406],[-34.334625244140625,-73.48184204101562,48.49766540527344],[-35.38733673095703,-71.82886505126953,49.167213439941406],[-36.41713333129883,-70.10768127441406,49.570953369140625],[-37.403564453125,-68.34899139404297,49.772003173828125],[-38.34201431274414,-66.56812286376953,49.8349609375],[-39.23821258544922,-64.77519989013672,49.81561279296875],[-40.11186599731445,-62.96559524536133,49.775054931640625],[-40.97967529296875,-61.14325714111328,49.743167877197266],[-41.86103820800781,-59.310081481933594,49.737335205078125],[-42.77799606323242,-57.46767044067383,49.76473617553711],[-43.74861526489258,-55.6156120300293,49.82470703125],[-44.782283782958984,-53.75459289550781,49.90774154663086],[-45.88737487792969,-51.889713287353516,49.9935302734375],[-23.739545822143555,-85.84135437011719,34.476783752441406],[-24.626216888427734,-84.31681823730469,35.12874984741211],[-25.448657989501953,-82.85479736328125,36.00963592529297],[-26.261613845825195,-81.51374816894531,37.14458465576172],[-27.080005645751953,-80.33941650390625,38.52862548828125],[-27.882915496826172,-79.33049774169922,40.10719299316406],[-28.665302276611328,-78.41873931884766,41.78466033935547],[-29.455657958984375,-77.51168060302734,43.4710807800293],[-30.283756256103516,-76.52457427978516,45.09874725341797],[-31.17418670654297,-75.39167022705078,46.59220886230469],[-32.13127136230469,-74.09227752685547,47.858543395996094],[-33.13129425048828,-72.64114379882812,48.81899642944336],[-34.13800048828125,-71.07939147949219,49.468868255615234],[-35.12590026855469,-69.44397735595703,49.84402084350586],[-36.080970764160156,-67.76057434082031,50.00191879272461],[-36.99716567993164,-66.04991149902344,50.00574493408203],[-37.88127136230469,-64.32140350341797,49.915077209472656],[-38.75319290161133,-62.57148361206055,49.79359436035156],[-39.63047790527344,-60.797000885009766,49.6835823059082],[-40.529747009277344,-59.00104522705078,49.60712814331055],[-41.47090530395508,-57.18678283691406,49.57379150390625],[-42.469879150390625,-55.35453796386719,49.5848388671875],[-43.53461837768555,-53.50539016723633,49.632041931152344],[-44.66905212402344,-51.643157958984375,49.70016098022461],[-23.6180477142334,-83.81365203857422,37.364742279052734],[-24.35328483581543,-82.25804901123047,38.119693756103516],[-25.079818725585938,-80.79157257080078,39.07630157470703],[-25.838626861572266,-79.46171569824219,40.23954772949219],[-26.639358520507812,-78.29987335205078,41.58186721801758],[-27.464387893676758,-77.28665924072266,43.03961944580078],[-28.307849884033203,-76.34033203125,44.524070739746094],[-29.175701141357422,-75.37006378173828,45.974857330322266],[-30.079025268554688,-74.30142974853516,47.32015609741211],[-31.02191734313965,-73.08677673339844,48.48900604248047],[-31.991456985473633,-71.7244873046875,49.385948181152344],[-32.959598541259766,-70.24885559082031,49.99029541015625],[-33.905941009521484,-68.69686889648438,50.32347106933594],[-34.82130813598633,-67.09513092041016,50.43170928955078],[-35.706974029541016,-65.45828247070312,50.377010345458984],[-36.56942367553711,-63.798858642578125,50.217384338378906],[-37.429325103759766,-62.11238098144531,50.01974105834961],[-38.304290771484375,-60.39696502685547,49.826229095458984],[-39.211795806884766,-58.64900588989258,49.670310974121094],[-40.16856384277344,-56.87269592285156,49.56515121459961],[-41.18785095214844,-55.07001495361328,49.51311111450195],[-42.27557373046875,-53.24266052246094,49.507144927978516],[-43.4339599609375,-51.39457702636719,49.53282928466797],[-23.34271240234375,-81.73636627197266,40.350093841552734],[-23.999340057373047,-80.1919937133789,41.19041061401367],[-24.692663192749023,-78.75494384765625,42.19976043701172],[-25.45218276977539,-77.46125030517578,43.36106872558594],[-26.279932022094727,-76.32286071777344,44.628047943115234],[-27.157655715942383,-75.29737854003906,45.931026458740234],[-28.067047119140625,-74.29924774169922,47.20875549316406],[-29.00124168395996,-73.24945068359375,48.400211334228516],[-29.953947067260742,-72.09220123291016,49.43856430053711],[-30.912376403808594,-70.80177307128906,50.24618911743164],[-31.856115341186523,-69.40088653564453,50.787078857421875],[-32.770633697509766,-67.92217254638672,51.07002258300781],[-33.651004791259766,-66.3926010131836,51.13014221191406],[-34.50261306762695,-64.82763671875,51.02092361450195],[-35.338768005371094,-63.233375549316406,50.80126190185547],[-36.17897415161133,-61.60870361328125,50.53584289550781],[-37.04142761230469,-59.95058059692383,50.26829528808594],[-37.943153381347656,-58.25680160522461,50.03077697753906],[-38.90169906616211,-56.525726318359375,49.84617614746094],[-39.92762756347656,-54.760162353515625,49.719547271728516],[-41.024906158447266,-52.96294021606445,49.644527435302734],[-42.19408416748047,-51.137939453125,49.60757827758789],[-22.978260040283203,-79.6556396484375,43.374332427978516],[-23.62773895263672,-78.1617660522461,44.278221130371094],[-24.350200653076172,-76.7865219116211,45.30854797363281],[-25.161447525024414,-75.55043029785156,46.42805862426758],[-26.052215576171875,-74.43853759765625,47.577674865722656],[-26.992380142211914,-73.39043426513672,48.70806884765625],[-27.959514617919922,-72.3302993774414,49.760154724121094],[-28.935882568359375,-71.1971435546875,50.67721939086914],[-29.902559280395508,-69.95735168457031,51.386043548583984],[-30.84014892578125,-68.61415100097656,51.86039352416992],[-31.739179611206055,-67.19377899169922,52.09555435180664],[-32.59892654418945,-65.7213134765625,52.1168098449707],[-33.427818298339844,-64.21330261230469,51.9692497253418],[-34.24184036254883,-62.67672348022461,51.70543670654297],[-35.06361770629883,-61.10602569580078,51.38980484008789],[-35.909969329833984,-59.50026321411133,51.0639762878418],[-36.7974967956543,-57.856231689453125,50.76050567626953],[-37.74193572998047,-56.17341613769531,50.50009536743164],[-38.755367279052734,-54.449501037597656,50.29521942138672],[-39.84116744995117,-52.68740463256836,50.14193344116211],[-40.99909210205078,-50.89104461669922,50.02741241455078],[-22.593095779418945,-77.62820434570312,46.37413024902344],[-23.299449920654297,-76.2170639038086,47.30986785888672],[-24.101783752441406,-74.92582702636719,48.3179931640625],[-24.999141693115234,-73.75131225585938,49.3464469909668],[-25.962560653686523,-72.65193176269531,50.35203170776367],[-26.960983276367188,-71.56869506835938,51.28771209716797],[-27.967451095581055,-70.44100952148438,52.10026931762695],[-28.95706558227539,-69.22862243652344,52.72690963745117],[-29.90806770324707,-67.92770385742188,53.1401252746582],[-30.811220169067383,-66.55166625976562,53.3376579284668],[-31.66942596435547,-65.1234130859375,53.33390808105469],[-32.49409103393555,-63.65959930419922,53.166107177734375],[-33.30336380004883,-62.16889572143555,52.88055419921875],[-34.11806869506836,-60.64762496948242,52.53485107421875],[-34.95563888549805,-59.089908599853516,52.17035675048828],[-35.830841064453125,-57.49372482299805,51.81840896606445],[-36.75757598876953,-55.856971740722656,51.49997329711914],[-37.74476623535156,-54.17787170410156,51.22465133666992],[-38.799686431884766,-52.453712463378906,50.99496078491211],[-39.9235725402832,-50.687889099121094,50.800716400146484],[-22.250425338745117,-75.70539855957031,49.28141403198242],[-23.063053131103516,-74.39717864990234,50.208892822265625],[-23.976181030273438,-73.19197082519531,51.147239685058594],[-24.963918685913086,-72.05814361572266,52.05671310424805],[-25.995267868041992,-70.95157623291016,52.89727020263672],[-27.03700828552246,-69.82058715820312,53.62685775756836],[-28.060659408569336,-68.62319946289062,54.188873291015625],[-29.041959762573242,-67.34832763671875,54.55886459350586],[-29.970905303955078,-66.00607299804688,54.73168182373047],[-30.84885025024414,-64.61204528808594,54.717979431152344],[-31.690156936645508,-63.18362808227539,54.54674530029297],[-32.515106201171875,-61.73094940185547,54.25798797607422],[-33.34221649169922,-60.252620697021484,53.90270233154297],[-34.186065673828125,-58.742977142333984,53.51750946044922],[-35.05926513671875,-57.194393157958984,53.133338928222656],[-35.97357177734375,-55.60490798950195,52.77104949951172],[-36.93564987182617,-53.9702033996582,52.441043853759766],[-37.95035171508789,-52.28719711303711,52.144344329833984],[-39.02486038208008,-50.553619384765625,51.87699890136719],[-21.999237060546875,-73.92353820800781,52.02710723876953],[-22.94483757019043,-72.71595764160156,52.905086517333984],[-23.966726303100586,-71.56922912597656,53.748592376708984],[-25.037357330322266,-70.44927215576172,54.52192687988281],[-26.12289047241211,-69.31427001953125,55.19020080566406],[-27.19143295288086,-68.12562561035156,55.70780563354492],[-28.217960357666016,-66.86863708496094,56.0517463684082],[-29.190853118896484,-65.54927825927734,56.21596908569336],[-30.111907958984375,-64.18280029296875,56.20827102661133],[-30.99117088317871,-62.78338623046875,56.04908752441406],[-31.85155487060547,-61.36348342895508,55.77244567871094],[-32.70948028564453,-59.9233512878418,55.4228630065918],[-33.57716751098633,-58.458160400390625,55.03301239013672],[-34.46284484863281,-56.95930099487305,54.630184173583984],[-35.37482452392578,-55.41792297363281,54.23571014404297],[-36.318275451660156,-53.82891082763672,53.86155700683594],[-37.298004150390625,-52.18669128417969,53.51117706298828],[-38.31930923461914,-50.48838424682617,53.180484771728516],[-21.864444732666016,-72.28694915771484,54.55303192138672],[-22.934978485107422,-71.14726257324219,55.36150360107422],[-24.055288314819336,-70.02745056152344,56.09788513183594],[-25.194995880126953,-68.89389038085938,56.732460021972656],[-26.322538375854492,-67.71357727050781,57.22768020629883],[-27.409252166748047,-66.4706802368164,57.56473922729492],[-28.44359016418457,-65.16924285888672,57.736820220947266],[-29.425458908081055,-63.82294464111328,57.74884033203125],[-30.365629196166992,-62.448028564453125,57.61804962158203],[-31.27967071533203,-61.0561408996582,57.367183685302734],[-32.18410110473633,-59.6497917175293,57.035953521728516],[-33.08924865722656,-58.224464416503906,56.65333938598633],[-34.00046157836914,-56.771156311035156,56.24414825439453],[-34.92112350463867,-55.278831481933594,55.8275032043457],[-35.854434967041016,-53.735008239746094,55.41814422607422],[-36.80604934692383,-52.13393783569336,55.02265167236328],[-37.78284454345703,-50.47076416015625,54.640262603759766],[-21.83549690246582,-70.75601959228516,56.836639404296875],[-23.01749038696289,-69.65046691894531,57.56739807128906],[-24.221668243408203,-68.52731323242188,58.197357177734375],[-25.420909881591797,-67.35934448242188,58.69609069824219],[-26.58523178100586,-66.1317367553711,59.04793930053711],[-27.697628021240234,-64.84659576416016,59.24555969238281],[-28.757699966430664,-63.51738739013672,59.29230499267578],[-29.773038864135742,-62.16078186035156,59.200992584228516],[-30.759008407592773,-60.79197311401367,58.99085998535156],[-31.722076416015625,-59.413246154785156,58.689483642578125],[-32.673744201660156,-58.021297454833984,58.32447814941406],[-33.61779022216797,-56.60652542114258,57.91878128051758],[-34.55485534667969,-55.15659713745117,57.49044418334961],[-35.4849853515625,-53.656944274902344,57.05430603027344],[-36.41530227661133,-52.095787048339844,56.621639251708984],[-37.35491943359375,-50.4686393737793,56.19563674926758],[-21.901554107666016,-69.27983856201172,58.89215850830078],[-23.178037643432617,-68.17821502685547,59.54434585571289],[-24.456235885620117,-67.02989196777344,60.06999969482422],[-25.708749771118164,-65.82208251953125,60.457252502441406],[-26.91514778137207,-64.55579376220703,60.69895553588867],[-28.066875457763672,-63.24302291870117,60.794315338134766],[-29.17030143737793,-61.90166091918945,60.754493713378906],[-30.23594093322754,-60.54832458496094,60.59352111816406],[-31.269412994384766,-59.189430236816406,60.33595657348633],[-32.27345275878906,-57.82172775268555,59.99906921386719],[-33.25395202636719,-56.436279296875,59.606632232666016],[-34.21026611328125,-55.019779205322266,59.17610549926758],[-35.14185333251953,-53.55702590942383,58.72337341308594],[-36.055564880371094,-52.03513717651367,58.26164627075195],[-36.964759826660156,-50.444740295410156,57.7999267578125],[-22.050186157226562,-67.81021118164062,60.73917007446289],[-23.410409927368164,-66.69255065917969,61.31404113769531],[-24.753711700439453,-65.51239013671875,61.75494384765625],[-26.060543060302734,-64.27074432373047,62.05759048461914],[-27.316503524780273,-62.977699279785156,62.21877670288086],[-28.517139434814453,-61.65058135986328,62.24266052246094],[-29.670129776000977,-60.307945251464844,62.141845703125],[-30.776512145996094,-58.959007263183594,61.935760498046875],[-31.838884353637695,-57.60460662841797,61.64075469970703],[-32.85683059692383,-56.237091064453125,61.271751403808594],[-33.831787109375,-54.84352493286133,60.84840393066406],[-34.76460266113281,-53.4089241027832,60.38818359375],[-35.66411590576172,-51.920677185058594,59.907203674316406],[-36.54550552368164,-50.36882019042969,59.41804504394531],[-22.27484703063965,-66.31097412109375,62.399410247802734],[-23.70583152770996,-65.17003631591797,62.911285400390625],[-25.109418869018555,-63.96163558959961,63.2880973815918],[-26.47019386291504,-62.69487762451172,63.52866744995117],[-27.775327682495117,-61.3848876953125,63.63224411010742],[-29.01952362060547,-60.050537109375,63.60276794433594],[-30.201915740966797,-58.7048454284668,63.45872497558594],[-31.32157325744629,-57.35226058959961,63.21311950683594],[-32.377769470214844,-55.989585876464844,62.88072204589844],[-33.36859130859375,-54.60710144042969,62.474098205566406],[-34.299259185791016,-53.19123077392578,62.015045166015625],[-35.18263626098633,-51.730140686035156,61.52342224121094],[-36.03740310668945,-50.21436309814453,61.01638412475586],[-22.56008529663086,-64.75775909423828,63.89741134643555],[-24.04981803894043,-63.59480667114258,64.36128234863281],[-25.504308700561523,-62.363426208496094,64.69036865234375],[-26.907546997070312,-61.077022552490234,64.88462829589844],[-28.243654251098633,-59.752445220947266,64.94135284423828],[-29.50054168701172,-58.405887603759766,64.86967468261719],[-30.675697326660156,-57.04685974121094,64.68316650390625],[-31.766056060791016,-55.67728805541992,64.39417266845703],[-32.76874923706055,-54.292964935302734,64.01573181152344],[-33.691322326660156,-52.88604736328125,63.56599044799805],[-34.55325698852539,-51.4460563659668,63.071693420410156],[-35.37892532348633,-49.96388244628906,62.555850982666016],[-22.882047653198242,-63.14231872558594,65.25668334960938],[-24.412662506103516,-61.95832824707031,65.68132019042969],[-25.896953582763672,-60.70492172241211,65.9705581665039],[-27.313533782958984,-59.39690399169922,66.12124633789062],[-28.641584396362305,-58.050724029541016,66.13494110107422],[-29.868709564208984,-56.681640625,66.01657104492188],[-30.990463256835938,-55.298030853271484,65.77973175048828],[-32.00210189819336,-53.90257263183594,65.43582916259766],[-32.91254806518555,-52.49473571777344,65.00601959228516],[-33.748966217041016,-51.06938171386719,64.51747131347656],[-34.54253387451172,-49.61738586425781,64.00199890136719],[-23.204153060913086,-61.46326446533203,66.48734283447266],[-24.74826431274414,-60.25544357299805,66.8736801147461],[-26.225997924804688,-58.97476577758789,67.11853790283203],[-27.612628936767578,-57.637237548828125,67.22272491455078],[-28.887033462524414,-56.26030731201172,67.18370819091797],[-30.03733253479004,-54.86077117919922,67.00727081298828],[-31.056995391845703,-53.449188232421875,66.70663452148438],[-31.95663833618164,-52.033203125,66.30441284179688],[-32.76567840576172,-50.614078521728516,65.83357238769531],[-33.52593231201172,-49.186058044433594,65.32896423339844],[-23.47795867919922,-59.72156524658203,67.58794403076172],[-24.995319366455078,-58.4824104309082,67.92465209960938],[-26.422632217407227,-57.16652297973633,68.11642456054688],[-27.73338508605957,-55.79203796386719,68.15988159179688],[-28.908370971679688,-54.38004684448242,68.05400085449219],[-29.93594741821289,-52.95164108276367,67.80563354492188],[-30.827238082885742,-51.522769927978516,67.44184875488281],[-31.61467170715332,-50.10135269165039,66.99930572509766],[-32.3418083190918,-48.68701934814453,66.5206298828125],[-23.645549774169922,-57.91961669921875,68.54598236083984],[-25.094886779785156,-56.64163589477539,68.8198471069336],[-26.428335189819336,-55.28487014770508,68.94100189208984],[-27.621280670166016,-53.8720817565918,68.90814208984375],[-28.656057357788086,-52.43016815185547,68.72306823730469],[-29.542333602905273,-50.985984802246094,68.40943145751953],[-30.31332015991211,-49.55451965332031,68.00938415527344],[-31.015335083007812,-48.14104461669922,67.56961059570312],[-23.658893585205078,-56.06390380859375,69.3554458618164],[-25.001680374145508,-54.7430419921875,69.54682922363281],[-26.204944610595703,-53.34579849243164,69.58177947998047],[-27.245683670043945,-51.90089416503906,69.46342468261719],[-28.129337310791016,-50.441200256347656,69.2132797241211],[-28.888931274414062,-48.992671966552734,68.8704605102539],[-29.571218490600586,-47.56739807128906,68.486328125],[-23.4990177154541,-54.16474151611328,70.02616119384766],[-24.70673942565918,-52.802303314208984,70.1224594116211],[-25.75304412841797,-51.37031555175781,70.06666564941406],[-26.63759994506836,-49.90284729003906,69.88394165039062],[-27.389610290527344,-48.43285369873047,69.61158752441406],[-28.0567684173584,-46.98521041870117,69.29606628417969],[-23.16549301147461,-52.22877502441406,70.58126068115234],[-24.216955184936523,-50.830177307128906,70.58161926269531],[-25.10639190673828,-49.37084197998047,70.46099090576172],[-25.85587501525879,-47.88551330566406,70.26070404052734],[-26.510087966918945,-46.40887451171875,70.02424621582031],[-22.675203323364258,-50.261924743652344,71.06097412109375],[-23.5733642578125,-48.83467102050781,70.99397277832031],[-24.326679229736328,-47.35175323486328,70.85682678222656],[-24.971878051757812,-45.852020263671875,70.69633483886719],[-22.07517433166504,-48.273948669433594,71.53303527832031],[-22.839679718017578,-46.824092864990234,71.4453125],[-23.481433868408203,-45.32134246826172,71.34628295898438],[-21.42417335510254,-46.28730773925781,72.05697631835938],[-22.07205581665039,-44.820274353027344,71.99847412109375],[-20.761417388916016,-44.34162139892578,72.65750122070312],[-20.75806427001953,-98.59931182861328,17.68999481201172],[-21.734481811523438,-99.2991943359375,15.919240951538086],[-22.846923828125,-99.84335327148438,14.10103988647461],[-24.065813064575195,-100.16620635986328,12.282927513122559],[-25.375017166137695,-100.22089385986328,10.50711441040039],[-26.763721466064453,-99.99547576904297,8.821375846862793],[-28.225330352783203,-99.51979064941406,7.263826370239258],[-29.763540267944336,-98.8284683227539,5.866424560546875],[-31.386762619018555,-97.96196746826172,4.6523356437683105],[-33.10874938964844,-96.95147705078125,3.6476545333862305],[-34.91980743408203,-95.8314208984375,2.84420108795166],[-36.79338455200195,-94.61145782470703,2.2254080772399902],[-38.68233108520508,-93.28355407714844,1.7609117031097412],[-40.51926803588867,-91.8239517211914,1.4095393419265747],[-42.217674255371094,-90.20272827148438,1.1224552392959595],[-43.71021270751953,-88.41728973388672,0.8546777963638306],[-44.9527473449707,-86.47843170166016,0.5769291520118713],[-45.947357177734375,-84.41010284423828,0.26988470554351807],[-46.75200271606445,-82.22954559326172,-0.07972553372383118],[-47.49895477294922,-79.94974517822266,-0.4767152667045593],[-48.320648193359375,-77.57794952392578,-0.9261559247970581],[-49.31711196899414,-75.12838745117188,-1.4380760192871094],[-50.5333251953125,-72.62518310546875,-2.026392936706543],[-51.94828796386719,-70.09263610839844,-2.7050819396972656],[-53.46977233886719,-67.53986358642578,-3.464730739593506],[-55.00846862792969,-64.956787109375,-4.2848358154296875],[-56.48461151123047,-62.32667541503906,-5.131959915161133],[-57.83113098144531,-59.6378059387207,-5.9629034996032715],[-59.010353088378906,-56.90204620361328,-6.734285354614258],[-60.01197814941406,-54.15858459472656,-7.417104721069336],[-60.82924270629883,-51.48450469970703,-7.992001056671143],[-22.549610137939453,-98.11308288574219,17.563114166259766],[-23.697450637817383,-98.7397689819336,15.87088394165039],[-24.930068969726562,-99.18165588378906,14.186680793762207],[-26.240779876708984,-99.37345886230469,12.535431861877441],[-27.616239547729492,-99.2742691040039,10.94990348815918],[-29.046926498413086,-98.8907241821289,9.464275360107422],[-30.531375885009766,-98.25917053222656,8.119647026062012],[-32.07635498046875,-97.42362976074219,6.941051483154297],[-33.69038391113281,-96.42526245117188,5.954610347747803],[-35.389427185058594,-95.30973052978516,5.150467872619629],[-37.15761947631836,-94.10223388671875,4.519479751586914],[-38.95848846435547,-92.80615234375,4.0372772216796875],[-40.731327056884766,-91.40729522705078,3.6657204627990723],[-42.39447021484375,-89.8803939819336,3.3535587787628174],[-43.87834548950195,-88.20541381835938,3.0518171787261963],[-45.12268829345703,-86.3880615234375,2.725493907928467],[-46.11348342895508,-84.44709014892578,2.3545827865600586],[-46.8907470703125,-82.40689086914062,1.9256491661071777],[-47.58246612548828,-80.2664794921875,1.4479492902755737],[-48.33013153076172,-78.02804565429688,0.925969123840332],[-49.24676513671875,-75.70176696777344,0.35706451535224915],[-50.39240264892578,-73.30776977539062,-0.2665078043937683],[-51.759307861328125,-70.87149810791016,-0.9561375975608826],[-53.265785217285156,-68.39250946044922,-1.7097716331481934],[-54.81478500366211,-65.87201690673828,-2.5183768272399902],[-56.320335388183594,-63.29631042480469,-3.359194040298462],[-57.70973205566406,-60.65584945678711,-4.199851036071777],[-58.936641693115234,-57.95183181762695,-5.007656097412109],[-59.984825134277344,-55.20680618286133,-5.759356498718262],[-60.85043716430664,-52.45525360107422,-6.451625347137451],[-24.378093719482422,-97.40957641601562,17.631450653076172],[-25.663434982299805,-97.97372436523438,16.06549072265625],[-27.00867462158203,-98.32451629638672,14.55087661743164],[-28.40703582763672,-98.39816284179688,13.096732139587402],[-29.844039916992188,-98.16561126708984,11.716829299926758],[-31.312458038330078,-97.63984680175781,10.447469711303711],[-32.812255859375,-96.86944580078125,9.321860313415527],[-34.348968505859375,-95.90077209472656,8.365577697753906],[-35.9342155456543,-94.79135131835938,7.56816291809082],[-37.582603454589844,-93.58085632324219,6.921513080596924],[-39.27192687988281,-92.2901611328125,6.410378932952881],[-40.954627990722656,-90.91743469238281,6.003829479217529],[-42.55744934082031,-89.44660186767578,5.654356002807617],[-44.01461410522461,-87.86064147949219,5.312361240386963],[-45.258426666259766,-86.14708709716797,4.938894271850586],[-46.254642486572266,-84.3206558227539,4.507548809051514],[-47.023780822753906,-82.40274047851562,4.004462718963623],[-47.676605224609375,-80.40028381347656,3.440290927886963],[-48.356834411621094,-78.29806518554688,2.8341546058654785],[-49.19165802001953,-76.09901428222656,2.192129611968994],[-50.25709915161133,-73.8192138671875,1.5128967761993408],[-51.561676025390625,-71.48136901855469,0.7892161011695862],[-53.03335952758789,-69.08871459960938,0.022746926173567772],[-54.58032989501953,-66.63363647460938,-0.7861268520355225],[-56.107200622558594,-64.1113510131836,-1.6258655786514282],[-57.534236907958984,-61.511810302734375,-2.474552631378174],[-58.808937072753906,-58.83391571044922,-3.3086442947387695],[-59.90679931640625,-56.0866813659668,-4.112666606903076],[-60.819068908691406,-53.28861618041992,-4.885802268981934],[-26.23512840270996,-96.56202697753906,17.93417739868164],[-27.629070281982422,-97.06950378417969,16.561237335205078],[-29.066513061523438,-97.3362045288086,15.262508392333984],[-30.535465240478516,-97.30429077148438,14.024486541748047],[-32.021080017089844,-96.94776916503906,12.863941192626953],[-33.51271057128906,-96.29151916503906,11.811101913452148],[-35.007408142089844,-95.3895263671875,10.898221969604492],[-36.51396942138672,-94.30683135986328,10.115692138671875],[-38.045284271240234,-93.09664154052734,9.455022811889648],[-39.61250305175781,-91.7965087890625,8.90670108795166],[-41.18483352661133,-90.42317962646484,8.449432373046875],[-42.7039680480957,-88.97296905517578,8.043986320495605],[-44.11158752441406,-87.43697357177734,7.646579265594482],[-45.34169387817383,-85.80355834960938,7.216177940368652],[-46.34630584716797,-84.07077026367188,6.7233781814575195],[-47.12221908569336,-82.25770568847656,6.146814346313477],[-47.7596321105957,-80.3711929321289,5.498817443847656],[-48.38874053955078,-78.40152740478516,4.799804210662842],[-49.1456298828125,-76.3316650390625,4.070694446563721],[-50.12491989135742,-74.16985321044922,3.3180999755859375],[-51.352943420410156,-71.93598937988281,2.5398316383361816],[-52.770912170410156,-69.63406372070312,1.7392007112503052],[-54.29387664794922,-67.25938415527344,0.9138375520706177],[-55.82723617553711,-64.7983169555664,0.06629231572151184],[-57.2810173034668,-62.2474479675293,-0.7925605177879333],[-58.59446716308594,-59.6043701171875,-1.6470650434494019],[-59.73716735839844,-56.87599563598633,-2.488048553466797],[-60.6921272277832,-54.072296142578125,-3.3163249492645264],[-28.086549758911133,-95.6241226196289,18.577388763427734],[-29.556198120117188,-96.082763671875,17.450149536132812],[-31.056913375854492,-96.27400207519531,16.3831729888916],[-32.574951171875,-96.14077758789062,15.367323875427246],[-34.08849334716797,-95.66558837890625,14.416289329528809],[-35.57925796508789,-94.88075256347656,13.560983657836914],[-37.046234130859375,-93.86283111572266,12.801319122314453],[-38.500919342041016,-92.67536926269531,12.131515502929688],[-39.95485305786133,-91.3702392578125,11.542055130004883],[-41.411476135253906,-89.98230743408203,11.022355079650879],[-42.83123016357422,-88.52654266357422,10.542930603027344],[-44.16895294189453,-87.00572204589844,10.070418357849121],[-45.36540222167969,-85.41404724121094,9.567238807678223],[-46.37054443359375,-83.74927520751953,9.001250267028809],[-47.16083526611328,-82.01680755615234,8.348506927490234],[-47.800601959228516,-80.22504425048828,7.615419387817383],[-48.40304946899414,-78.36371612548828,6.824217796325684],[-49.095218658447266,-76.41778564453125,5.996864318847656],[-49.98789978027344,-74.37506103515625,5.155162334442139],[-51.12907028198242,-72.24846649169922,4.303879737854004],[-52.475914001464844,-70.04317474365234,3.449235439300537],[-53.953147888183594,-67.75520324707031,2.58836030960083],[-55.47011184692383,-65.37351989746094,1.7192775011062622],[-56.93452072143555,-62.884857177734375,0.8441660404205322],[-58.274600982666016,-60.292789459228516,-0.030231546610593796],[-59.45208740234375,-57.60341262817383,-0.8994315266609192],[-60.444190979003906,-54.82749938964844,-1.7667791843414307],[-29.86456298828125,-94.64659118652344,19.670358657836914],[-31.372955322265625,-95.06523895263672,18.794565200805664],[-32.909915924072266,-95.1832275390625,17.951560974121094],[-34.45432662963867,-94.9477767944336,17.132646560668945],[-35.97202682495117,-94.34812927246094,16.356212615966797],[-37.44144821166992,-93.44482421875,15.627616882324219],[-38.86415100097656,-92.31773376464844,14.951616287231445],[-40.25129699707031,-91.03075408935547,14.323325157165527],[-41.608951568603516,-89.63346862792969,13.732697486877441],[-42.93077087402344,-88.15957641601562,13.165792465209961],[-44.18818283081055,-86.62946319580078,12.59980583190918],[-45.33446502685547,-85.04684448242188,12.004883766174316],[-46.323883056640625,-83.41340637207031,11.350793838500977],[-47.12522506713867,-81.73419952392578,10.609461784362793],[-47.776763916015625,-80.01026153564453,9.787372589111328],[-48.3692626953125,-78.23377227783203,8.90106201171875],[-49.01818084716797,-76.38695526123047,7.974417209625244],[-49.83123016357422,-74.45674896240234,7.030362606048584],[-50.87961959838867,-72.437255859375,6.089024543762207],[-52.14177322387695,-70.33118438720703,5.161891460418701],[-53.55411911010742,-68.1360855102539,4.246694564819336],[-55.03226089477539,-65.84158325195312,3.339256525039673],[-56.48503875732422,-63.43669891357422,2.43599796295166],[-57.83612823486328,-60.91375732421875,1.5371075868606567],[-59.036922454833984,-58.284645080566406,0.6407928466796875],[-60.057594299316406,-55.560302734375,-0.2583615183830261],[-31.481155395507812,-93.67646026611328,21.247482299804688],[-33.00188446044922,-94.05496215820312,20.595348358154297],[-34.55765914916992,-94.09188842773438,19.932315826416016],[-36.111961364746094,-93.73788452148438,19.258974075317383],[-37.61930847167969,-93.01520538330078,18.57729721069336],[-39.05728530883789,-91.99614715576172,17.900676727294922],[-40.428260803222656,-90.76382446289062,17.234888076782227],[-41.73919677734375,-89.38079833984375,16.576032638549805],[-42.9879264831543,-87.89559936523438,15.91197681427002],[-44.17312240600586,-86.34636688232422,15.240013122558594],[-45.26409912109375,-84.7519302368164,14.537518501281738],[-46.224998474121094,-83.12132263183594,13.77998161315918],[-47.0247688293457,-81.46212005615234,12.938711166381836],[-47.686614990234375,-79.7787094116211,12.016169548034668],[-48.27703094482422,-78.0599594116211,11.030813217163086],[-48.89506912231445,-76.28898620605469,10.001224517822266],[-49.64390182495117,-74.44772338867188,8.952567100524902],[-50.59852600097656,-72.52848052978516,7.906271934509277],[-51.76520538330078,-70.52054595947266,6.8888349533081055],[-53.09678649902344,-68.4205322265625,5.901069164276123],[-54.516475677490234,-66.21959686279297,4.937607765197754],[-55.93639373779297,-63.90699005126953,3.991302013397217],[-57.27861404418945,-61.476627349853516,3.0568549633026123],[-58.4895133972168,-58.92754364013672,2.1288833618164062],[-59.53015899658203,-56.27684020996094,1.1974319219589233],[-32.87805938720703,-92.73696899414062,23.250154495239258],[-34.40682601928711,-93.0580062866211,22.76113510131836],[-35.97902297973633,-92.98482513427734,22.21463394165039],[-37.537200927734375,-92.50205993652344,21.604679107666016],[-39.0294075012207,-91.65396881103516,20.94381332397461],[-40.43368911743164,-90.52210998535156,20.24873924255371],[-41.750789642333984,-89.189208984375,19.525653839111328],[-42.98051452636719,-87.71714782714844,18.77039337158203],[-44.1237907409668,-86.15789794921875,17.98434829711914],[-45.17176818847656,-84.54559326171875,17.1650390625],[-46.10265350341797,-82.90203857421875,16.292720794677734],[-46.891693115234375,-81.24040222167969,15.341772079467773],[-47.554744720458984,-79.56916046142578,14.312552452087402],[-48.14213943481445,-77.88323211669922,13.219217300415039],[-48.73503875732422,-76.16363525390625,12.083991050720215],[-49.427120208740234,-74.39096069335938,10.927249908447266],[-50.296390533447266,-72.55133819580078,9.772992134094238],[-51.3595085144043,-70.63525390625,8.649423599243164],[-52.59574890136719,-68.62895965576172,7.571134090423584],[-53.939781188964844,-66.52333068847656,6.534140586853027],[-55.308082580566406,-64.3086929321289,5.5286407470703125],[-56.622894287109375,-61.9782600402832,4.545639991760254],[-57.82797622680664,-59.531898498535156,3.5753867626190186],[-58.879539489746094,-56.97270965576172,2.606832265853882],[-34.044456481933594,-91.81800079345703,25.56237030029297],[-35.59637451171875,-92.04026794433594,25.16466522216797],[-37.18919372558594,-91.83320617675781,24.653371810913086],[-38.750274658203125,-91.21253204345703,24.035598754882812],[-40.22760009765625,-90.24052429199219,23.32918357849121],[-41.59965896606445,-89.00187683105469,22.55289649963379],[-42.863006591796875,-87.57858276367188,21.713064193725586],[-44.01737976074219,-86.03485107421875,20.821788787841797],[-45.057613372802734,-84.41682434082031,19.879255294799805],[-45.975223541259766,-82.75867462158203,18.886093139648438],[-46.756935119628906,-81.08460998535156,17.818973541259766],[-47.41695022583008,-79.40884399414062,16.67891502380371],[-47.99665832519531,-77.73233032226562,15.476410865783691],[-48.56243896484375,-76.04292297363281,14.229520797729492],[-49.19987869262695,-74.31838989257812,12.963567733764648],[-49.98454284667969,-72.54190063476562,11.698430061340332],[-50.94586181640625,-70.6998519897461,10.465601921081543],[-52.07257843017578,-68.78150939941406,9.280986785888672],[-53.323909759521484,-66.7696533203125,8.153281211853027],[-54.62350082397461,-64.65406799316406,7.072623252868652],[-55.89445495605469,-62.42798614501953,6.026862144470215],[-57.07884979248047,-60.08937072753906,5.003365516662598],[-58.13038635253906,-57.64239501953125,3.9877641201019287],[-35.02659606933594,-90.86763763427734,28.04499053955078],[-36.61747360229492,-90.9533920288086,27.659408569335938],[-38.23241424560547,-90.59510040283203,27.115543365478516],[-39.795753479003906,-89.83570861816406,26.428197860717773],[-41.2594108581543,-88.74749755859375,25.619056701660156],[-42.6008415222168,-87.4158935546875,24.709012985229492],[-43.815853118896484,-85.92335510253906,23.721843719482422],[-44.89787673950195,-84.32623291015625,22.66753578186035],[-45.841064453125,-82.66912841796875,21.549602508544922],[-46.636573791503906,-80.98600769042969,20.364028930664062],[-47.302486419677734,-79.30117797851562,19.111539840698242],[-47.87628173828125,-77.62262725830078,17.80108070373535],[-48.41568374633789,-75.94522094726562,16.446523666381836],[-48.99510955810547,-74.25282287597656,15.06912899017334],[-49.69346618652344,-72.52409362792969,13.694395065307617],[-50.548282623291016,-70.74320983886719,12.350643157958984],[-51.56171798706055,-68.89725494384766,11.05740737915039],[-52.702022552490234,-66.9737777709961,9.824544906616211],[-53.914878845214844,-64.955322265625,8.653627395629883],[-55.12629699707031,-62.83332443237305,7.531700134277344],[-56.276451110839844,-60.6046142578125,6.443384647369385],[-57.31707763671875,-58.27105712890625,5.372402667999268],[-35.89339828491211,-89.82398986816406,30.560443878173828],[-37.52865982055664,-89.7459945678711,30.11998748779297],[-39.16275405883789,-89.23111724853516,29.483671188354492],[-40.72584533691406,-88.34152221679688,28.673492431640625],[-42.175193786621094,-87.1546630859375,27.715484619140625],[-43.48918151855469,-85.75528717041016,26.649282455444336],[-44.65818405151367,-84.2151870727539,25.495128631591797],[-45.67262649536133,-82.58728790283203,24.26620864868164],[-46.523902893066406,-80.91484069824219,22.96156883239746],[-47.222198486328125,-79.22930908203125,21.598562240600586],[-47.805328369140625,-77.54950714111328,20.183631896972656],[-48.32644271850586,-75.8780288696289,18.728134155273438],[-48.85341262817383,-74.20539093017578,17.248844146728516],[-49.460330963134766,-72.51468658447266,15.7671537399292],[-50.20301055908203,-70.78438568115234,14.31701374053955],[-51.09391403198242,-69.00128173828125,12.916034698486328],[-52.11565017700195,-67.15238189697266,11.578075408935547],[-53.22193908691406,-65.22584533691406,10.305742263793945],[-54.357154846191406,-63.20509719848633,9.096260070800781],[-55.46052932739258,-61.08411407470703,7.933434009552002],[-56.48097610473633,-58.862918853759766,6.799134254455566],[-36.727943420410156,-88.63033294677734,32.99080276489258],[-38.399559020996094,-88.37997436523438,32.43816375732422],[-40.04266357421875,-87.71896362304688,31.660953521728516],[-41.598289489746094,-86.72132873535156,30.68891143798828],[-43.03046798706055,-85.46525573730469,29.568561553955078],[-44.31374740600586,-84.02214813232422,28.334394454956055],[-45.43492126464844,-82.4583740234375,27.008941650390625],[-46.37983322143555,-80.8245620727539,25.600746154785156],[-47.152523040771484,-79.16014099121094,24.129085540771484],[-47.775455474853516,-77.4898681640625,22.614116668701172],[-48.30101013183594,-75.82785034179688,21.06429100036621],[-48.79326248168945,-74.172119140625,19.493499755859375],[-49.32276916503906,-72.51161193847656,17.918655395507812],[-49.95092010498047,-70.82662963867188,16.368722915649414],[-50.71498107910156,-69.0988540649414,14.867473602294922],[-51.608665466308594,-67.31661987304688,13.427999496459961],[-52.6000862121582,-65.46829223632812,12.05735969543457],[-53.64004898071289,-63.5426139831543,10.753313064575195],[-54.68195343017578,-61.52428436279297,9.508705139160156],[-55.67203903198242,-59.41005325317383,8.305266380310059],[-37.582008361816406,-87.25824737548828,35.244476318359375],[-39.272518157958984,-86.8462905883789,34.5335807800293],[-40.910247802734375,-86.06512451171875,33.581939697265625],[-42.45005416870117,-84.99301147460938,32.4422607421875],[-43.85700988769531,-83.69380187988281,31.154481887817383],[-45.102378845214844,-82.23174285888672,29.75397300720215],[-46.16758728027344,-80.66984558105469,28.258285522460938],[-47.04636001586914,-79.05329895019531,26.694215774536133],[-47.75189208984375,-77.41502380371094,25.083229064941406],[-48.31648635864258,-75.77413940429688,23.44509506225586],[-48.80339431762695,-74.14027404785156,21.791088104248047],[-49.281349182128906,-72.50935363769531,20.135395050048828],[-49.815670013427734,-70.86473083496094,18.501476287841797],[-50.4532356262207,-69.19009399414062,16.909107208251953],[-51.21664047241211,-67.46866607666016,15.377534866333008],[-52.085411071777344,-65.69140625,13.914447784423828],[-53.023216247558594,-63.84685134887695,12.521563529968262],[-53.98747253417969,-61.92441940307617,11.19202995300293],[-54.93563461303711,-59.91084671020508,9.915715217590332],[-38.482078552246094,-85.70770263671875,37.24980545043945],[-40.16928482055664,-85.16302490234375,36.3526611328125],[-41.78831481933594,-84.29951477050781,35.22857666015625],[-43.300445556640625,-83.18099975585938,33.92259216308594],[-44.67047119140625,-81.8641128540039,32.47479248046875],[-45.864200592041016,-80.40875244140625,30.914297103881836],[-46.86857223510742,-78.87105560302734,29.275068283081055],[-47.683868408203125,-77.28923034667969,27.5844669342041],[-48.33065414428711,-75.69135284423828,25.863698959350586],[-48.85028839111328,-74.09088897705078,24.13326072692871],[-49.31169128417969,-72.49506378173828,22.405410766601562],[-49.783931732177734,-70.89142608642578,20.699831008911133],[-50.32081604003906,-69.26677703857422,19.0321044921875],[-50.95789337158203,-67.60603332519531,17.41840934753418],[-51.7050895690918,-65.89505004882812,15.872907638549805],[-52.536190032958984,-64.12503814697266,14.39822769165039],[-53.418148040771484,-62.28506851196289,12.99084758758545],[-54.3123779296875,-60.366004943847656,11.641376495361328],[-39.43459701538086,-84.00491333007812,38.96140670776367],[-41.10017395019531,-83.36911010742188,37.888404846191406],[-42.68587112426758,-82.45337677001953,36.60005569458008],[-44.15582275390625,-81.31465148925781,35.141170501708984],[-45.4708251953125,-80.00541687011719,33.545074462890625],[-46.60202407836914,-78.57792663574219,31.85439682006836],[-47.54102325439453,-77.08076477050781,30.102407455444336],[-48.29397201538086,-75.54730224609375,28.315391540527344],[-48.8890266418457,-74.00071716308594,26.51535987854004],[-49.374183654785156,-72.45082092285156,24.72213363647461],[-49.822505950927734,-70.89398956298828,22.952959060668945],[-50.29411315917969,-69.32084655761719,21.22087860107422],[-50.83412170410156,-67.71891021728516,19.53890609741211],[-51.46790313720703,-66.07566833496094,17.919788360595703],[-52.197296142578125,-64.37663269042969,16.37245750427246],[-52.99637985229492,-62.61397171020508,14.894173622131348],[-53.83448791503906,-60.778133392333984,13.47850227355957],[-40.43662643432617,-82.1955337524414,40.3819694519043],[-42.06428527832031,-81.50088500976562,39.1495246887207],[-43.60133743286133,-80.5599365234375,37.717098236083984],[-45.00935363769531,-79.42594146728516,36.122745513916016],[-46.255332946777344,-78.14422607421875,34.411136627197266],[-47.314640045166016,-76.75939178466797,32.62213134765625],[-48.183692932128906,-75.31515502929688,30.78763198852539],[-48.875850677490234,-73.84011840820312,28.93400001525879],[-49.42600631713867,-72.35454559326172,27.082509994506836],[-49.89073944091797,-70.85460662841797,25.255794525146484],[-50.33610916137695,-69.33893585205078,23.465808868408203],[-50.81563186645508,-67.7979965209961,21.723976135253906],[-51.36648941040039,-66.22179412841797,20.041399002075195],[-52.0056037902832,-64.59711456298828,18.427135467529297],[-52.72974395751953,-62.91038513183594,16.88461685180664],[-53.514041900634766,-61.15577697753906,15.407980918884277],[-41.46961975097656,-80.3194580078125,41.53687286376953],[-43.04553985595703,-79.5943832397461,40.17137908935547],[-44.51586151123047,-78.65327453613281,38.61704635620117],[-45.84909439086914,-77.54312133789062,36.921722412109375],[-47.016197204589844,-76.30226135253906,35.12603759765625],[-47.99722671508789,-74.97089385986328,33.26728057861328],[-48.79554748535156,-73.58812713623047,31.377593994140625],[-49.431549072265625,-72.18020629882812,29.482219696044922],[-49.95196533203125,-70.75294494628906,27.604387283325195],[-50.4095458984375,-69.30320739746094,25.761049270629883],[-50.865230560302734,-67.82853698730469,23.963592529296875],[-51.3664436340332,-66.32167053222656,22.22262191772461],[-51.94194030761719,-64.77159118652344,20.54723358154297],[-52.60114288330078,-63.166194915771484,18.94231605529785],[-53.3369255065918,-61.49400329589844,17.40770149230957],[-42.514976501464844,-78.40904235839844,42.462486267089844],[-44.02385711669922,-77.67851257324219,40.99091720581055],[-45.41759490966797,-76.75609588623047,39.35069274902344],[-46.66823196411133,-75.68226623535156,37.585636138916016],[-47.75063705444336,-74.49197387695312,35.73322296142578],[-48.65212631225586,-73.22169494628906,33.83005905151367],[-49.383155822753906,-71.9085693359375,31.90758514404297],[-49.97921371459961,-70.56394958496094,29.991939544677734],[-50.48469924926758,-69.19441986083984,28.101476669311523],[-50.950965881347656,-67.79391479492188,26.25213050842285],[-51.43428039550781,-66.36189270019531,24.455482482910156],[-51.97373962402344,-64.8894271850586,22.721670150756836],[-52.58867645263672,-63.36689376831055,21.057106018066406],[-53.28303909301758,-61.78504180908203,19.46392822265625],[-43.549583435058594,-76.49031829833984,43.199607849121094],[-44.98548889160156,-75.77298736572266,41.65880584716797],[-46.29814910888672,-74.88121795654297,39.9632453918457],[-47.462833404541016,-73.85264587402344,38.15424346923828],[-48.46066665649414,-72.71978759765625,36.26815414428711],[-49.286354064941406,-71.51824951171875,34.34035110473633],[-49.96787643432617,-70.27041625976562,32.403038024902344],[-50.53997802734375,-68.98808288574219,30.478126525878906],[-51.04810333251953,-67.67475128173828,28.58306884765625],[-51.54218292236328,-66.32508850097656,26.73413848876953],[-52.07073974609375,-64.93597412109375,24.943849563598633],[-52.66187286376953,-63.499755859375,23.221153259277344],[-53.32803726196289,-62.01039505004883,21.570579528808594],[-44.55979537963867,-74.57893371582031,43.7955207824707],[-45.92246627807617,-73.88616180419922,42.215667724609375],[-47.15428924560547,-73.03323364257812,40.489410400390625],[-48.235816955566406,-72.05601501464844,38.657413482666016],[-49.15437698364258,-70.98765563964844,36.7547721862793],[-49.92362594604492,-69.85039520263672,34.817237854003906],[-50.57254409790039,-68.66676330566406,32.87385177612305],[-51.13916015625,-67.44520568847656,30.94586181640625],[-51.6697998046875,-66.18990325927734,29.05133056640625],[-52.20950698852539,-64.8913803100586,27.208450317382812],[-52.79505157470703,-63.547325134277344,25.430017471313477],[-53.44620132446289,-62.153907775878906,23.723962783813477],[-45.53083038330078,-72.68304443359375,44.29354476928711],[-46.82353973388672,-72.0228271484375,42.69630432128906],[-47.97996520996094,-71.21456909179688,40.95697021484375],[-48.98567199707031,-70.29556274414062,39.11571502685547],[-49.8460578918457,-69.2874984741211,37.207862854003906],[-50.577354431152344,-68.21332550048828,35.26696014404297],[-51.21363830566406,-67.09196472167969,33.322052001953125],[-51.79553985595703,-65.932373046875,31.3953914642334],[-52.36688232421875,-64.73416900634766,29.507835388183594],[-52.962528228759766,-63.487335205078125,27.678749084472656],[-53.61002731323242,-62.193302154541016,25.920793533325195],[-46.45322036743164,-70.80640411376953,44.7243766784668],[-47.68268966674805,-70.18437194824219,43.12430953979492],[-48.77199935913086,-69.42752838134766,41.38267517089844],[-49.72317123413086,-68.56304168701172,39.540428161621094],[-50.544342041015625,-67.61421203613281,37.63185501098633],[-51.25825500488281,-66.6009750366211,35.691104888916016],[-51.90300750732422,-65.54243469238281,33.74892807006836],[-52.51890563964844,-64.44235229492188,31.83115005493164],[-53.14109420776367,-63.29930114746094,29.960783004760742],[-53.796234130859375,-62.10651779174805,28.15727424621582],[-47.32333755493164,-68.95011901855469,45.10793685913086],[-48.497947692871094,-68.37263488769531,43.51325607299805],[-49.53999328613281,-67.66394805908203,41.774940490722656],[-50.45475387573242,-66.85298156738281,39.93472671508789],[-51.25673294067383,-65.96095275878906,38.02830505371094],[-51.973854064941406,-65.00833892822266,36.09221267700195],[-52.64582061767578,-64.00835418701172,34.16166305541992],[-53.30613708496094,-62.96311950683594,32.265174865722656],[-53.98244094848633,-61.87419509887695,30.426837921142578],[-48.14176940917969,-67.1163101196289,45.45542526245117],[-49.27853775024414,-66.58039855957031,43.869163513183594],[-50.28952407836914,-65.9188461303711,42.13596725463867],[-51.18610763549805,-65.1585922241211,40.300106048583984],[-51.9879035949707,-64.32176208496094,38.40077590942383],[-52.72620391845703,-63.42322540283203,36.479652404785156],[-53.43582534790039,-62.47407150268555,34.57522201538086],[-54.14391326904297,-61.47904968261719,32.71735382080078],[-48.91924285888672,-65.29827117919922,45.769527435302734],[-50.031246185302734,-64.8027114868164,44.192291259765625],[-51.0263786315918,-64.1848373413086,42.46598434448242],[-51.920867919921875,-63.471900939941406,40.63972091674805],[-52.7382926940918,-62.680755615234375,38.75908660888672],[-53.507232666015625,-61.824798583984375,36.86949157714844],[-54.25751495361328,-60.91729736328125,35.010982513427734],[-49.66697311401367,-63.49773406982422,46.053096771240234],[-50.76469802856445,-63.039642333984375,44.484920501708984],[-51.7559814453125,-62.4613151550293,42.76979446411133],[-52.661109924316406,-61.78403091430664,40.96482467651367],[-53.50225830078125,-61.02378463745117,39.120323181152344],[-54.3047981262207,-60.19758987426758,37.28303909301758],[-50.39720153808594,-61.71437454223633,46.30585861206055],[-51.487789154052734,-61.28976058959961,44.74930953979492],[-52.4840087890625,-60.73772048950195,43.056121826171875],[-53.40545654296875,-60.0779914855957,41.290130615234375],[-54.272056579589844,-59.33168411254883,39.5036506652832],[-51.120155334472656,-59.94971466064453,46.52812957763672],[-52.207672119140625,-59.54538345336914,44.991493225097656],[-53.21160888671875,-58.998748779296875,43.337093353271484],[-54.149105072021484,-58.33497619628906,41.63282012939453],[-51.84373092651367,-58.20028305053711,46.7199592590332],[-52.92679977416992,-57.79420852661133,45.21729278564453],[-53.935028076171875,-57.2251091003418,43.62503433227539],[-52.5695915222168,-56.46446228027344,46.880985260009766],[-53.64134979248047,-56.02338790893555,45.434696197509766],[-53.289100646972656,-54.739871978759766,47.0112190246582],[-53.168609619140625,-2.289069652557373,46.027732849121094],[-53.873741149902344,-1.88433039188385,44.117488861083984],[-54.599090576171875,-1.380990982055664,42.07516098022461],[-55.3561897277832,-0.7954741716384888,39.964786529541016],[-56.145633697509766,-0.1585751473903656,37.82582473754883],[-56.954673767089844,0.47490400075912476,35.681095123291016],[-57.767356872558594,1.04371976852417,33.536163330078125],[-58.572601318359375,1.4921947717666626,31.38766098022461],[-59.36335372924805,1.7765154838562012,29.232580184936523],[-60.13233947753906,1.8570270538330078,27.075475692749023],[-60.870147705078125,1.7331593036651611,24.934404373168945],[-61.559974670410156,1.4093294143676758,22.835994720458984],[-62.176666259765625,0.8933523893356323,20.812856674194336],[-62.6844482421875,0.19155935943126678,18.903034210205078],[-63.034912109375,-0.68932044506073,17.150110244750977],[-63.1881103515625,-1.7252020835876465,15.58554458618164],[-63.097328186035156,-2.8899378776550293,14.250633239746094],[-62.72160720825195,-4.1374382972717285,13.19084358215332],[-62.024452209472656,-5.396831035614014,12.464147567749023],[-61.03023910522461,-6.5980610847473145,12.078512191772461],[-59.783729553222656,-7.719110012054443,12.013891220092773],[-58.327430725097656,-8.779901504516602,12.240625381469727],[-56.697784423828125,-9.824007987976074,12.72301959991455],[-54.924041748046875,-10.902119636535645,13.419211387634277],[-53.04801559448242,-12.04764175415039,14.248533248901367],[-51.10292053222656,-13.278592109680176,15.125547409057617],[-49.12411117553711,-14.600881576538086,15.946002006530762],[-47.15433120727539,-16.011747360229492,16.579631805419922],[-45.25492858886719,-17.485042572021484,16.89507293701172],[-43.51372528076172,-18.96588897705078,16.80060386657715],[-42.06065368652344,-20.36263084411621,16.261499404907227],[-54.87318420410156,-49.18088912963867,47.713035583496094],[-55.93611145019531,-48.19013977050781,46.6264762878418],[-56.973751068115234,-47.209259033203125,45.39903259277344],[-57.970069885253906,-46.23706817626953,44.06092834472656],[-58.90378189086914,-45.28277587890625,42.632080078125],[-59.75264358520508,-44.354225158691406,41.13300704956055],[-60.49534606933594,-43.456573486328125,39.58086395263672],[-61.10599136352539,-42.59531021118164,37.989051818847656],[-61.55356979370117,-41.778175354003906,36.368324279785156],[-61.80701446533203,-41.00676345825195,34.74360275268555],[-61.851600646972656,-40.28046417236328,33.136932373046875],[-61.67790603637695,-39.59550857543945,31.571868896484375],[-61.286224365234375,-38.944801330566406,30.069692611694336],[-60.68767547607422,-38.31726837158203,28.646940231323242],[-59.90802764892578,-37.69805908203125,27.310821533203125],[-58.98280715942383,-37.08232116699219,26.045530319213867],[-57.93869400024414,-36.466678619384766,24.837520599365234],[-56.798805236816406,-35.847023010253906,23.679155349731445],[-55.578277587890625,-35.21431350708008,22.57360076904297],[-54.295169830322266,-34.55380630493164,21.53406524658203],[-52.96623229980469,-33.84292984008789,20.58687973022461],[-51.61008071899414,-33.053749084472656,19.762929916381836],[-50.25371170043945,-32.1519660949707,19.092164993286133],[-48.917606353759766,-31.118717193603516,18.568252563476562],[-47.63192367553711,-29.93649673461914,18.174396514892578],[-46.41998291015625,-28.598432540893555,17.877655029296875],[-45.30662536621094,-27.107784271240234,17.637285232543945],[-44.3050537109375,-25.489070892333984,17.404861450195312],[-43.42537307739258,-23.78386116027832,17.133487701416016],[-42.67841339111328,-22.04572105407715,16.776342391967773],[-55.2125244140625,-47.14229965209961,47.90760803222656],[-56.34627151489258,-46.05284881591797,46.799400329589844],[-57.430362701416016,-45.00394821166992,45.547611236572266],[-58.4508056640625,-43.98905944824219,44.17570877075195],[-59.38906478881836,-43.01167297363281,42.70270538330078],[-60.225364685058594,-42.075225830078125,41.14825439453125],[-60.9405403137207,-41.18321990966797,39.53061294555664],[-61.50759506225586,-40.343101501464844,37.8615608215332],[-61.90383529663086,-39.55781555175781,36.16190719604492],[-62.0984992980957,-38.8275032043457,34.4588623046875],[-62.08134841918945,-38.14771270751953,32.777530670166016],[-61.84702682495117,-37.510475158691406,31.143260955810547],[-61.40166473388672,-36.902984619140625,29.579269409179688],[-60.763023376464844,-36.30614471435547,28.10630226135254],[-59.954383850097656,-35.70655059814453,26.73063850402832],[-59.01226806640625,-35.097679138183594,25.43933868408203],[-57.96349334716797,-34.47272872924805,24.225467681884766],[-56.83006286621094,-33.82289505004883,23.088661193847656],[-55.62458419799805,-33.13814926147461,22.035968780517578],[-54.36688995361328,-32.401512145996094,21.08198356628418],[-53.07720184326172,-31.589893341064453,20.249073028564453],[-51.78213882446289,-30.673954010009766,19.56061553955078],[-50.50142288208008,-29.640281677246094,19.01119613647461],[-49.256893157958984,-28.472126007080078,18.58924674987793],[-48.075416564941406,-27.159637451171875,18.266416549682617],[-46.97941589355469,-25.70040512084961,18.008621215820312],[-45.9774055480957,-24.112014770507812,17.777498245239258],[-45.06875228881836,-22.425045013427734,17.534452438354492],[-44.252864837646484,-20.685522079467773,17.230854034423828],[-55.552921295166016,-45.021690368652344,47.92458724975586],[-56.738548278808594,-43.862239837646484,46.79245376586914],[-57.855674743652344,-42.764366149902344,45.50813674926758],[-58.89154815673828,-41.72063446044922,44.09404754638672],[-59.83000564575195,-40.730499267578125,42.568058013916016],[-60.65245056152344,-39.79548645019531,40.95046615600586],[-61.34011459350586,-38.919979095458984,39.25814437866211],[-61.872283935546875,-38.10679244995117,37.51239013671875],[-62.22846603393555,-37.35685729980469,35.735679626464844],[-62.37964630126953,-36.66783905029297,33.95783615112305],[-62.31977081298828,-36.031070709228516,32.20662307739258],[-62.048641204833984,-35.43278121948242,30.510421752929688],[-61.57795715332031,-34.85161590576172,28.896774291992188],[-60.92427062988281,-34.26874923706055,27.384626388549805],[-60.110877990722656,-33.66938018798828,25.98222541809082],[-59.17582702636719,-33.0432014465332,24.681686401367188],[-58.14418029785156,-32.380592346191406,23.48164176940918],[-57.03651428222656,-31.672237396240234,22.38349723815918],[-55.866302490234375,-30.90709114074707,21.396480560302734],[-54.65679168701172,-30.06787109375,20.532150268554688],[-53.43612289428711,-29.130420684814453,19.80496597290039],[-52.222625732421875,-28.08544921875,19.208518981933594],[-51.03759765625,-26.920433044433594,18.731067657470703],[-49.8983154296875,-25.624916076660156,18.354732513427734],[-48.82969284057617,-24.192596435546875,18.04761505126953],[-47.837093353271484,-22.633974075317383,17.780128479003906],[-46.9163818359375,-20.971017837524414,17.524890899658203],[-46.060760498046875,-19.23595428466797,17.247509002685547],[-55.88740539550781,-42.85206985473633,47.751853942871094],[-57.1050910949707,-41.646392822265625,46.59141159057617],[-58.24183654785156,-40.5176887512207,45.27022171020508],[-59.28594207763672,-39.45781707763672,43.80953598022461],[-60.22127914428711,-38.465232849121094,42.22755432128906],[-61.028709411621094,-37.542327880859375,40.54322052001953],[-61.694183349609375,-36.68873596191406,38.782310485839844],[-62.19926452636719,-35.90534210205078,36.96769714355469],[-62.52607727050781,-35.19042205810547,35.12466049194336],[-62.64786911010742,-34.53886795043945,33.28475570678711],[-62.563541412353516,-33.93574142456055,31.479970932006836],[-62.27772903442383,-33.35878372192383,29.74223518371582],[-61.802154541015625,-32.7861213684082,28.097179412841797],[-61.15381622314453,-32.19718933105469,26.56432342529297],[-60.35722351074219,-31.57421112060547,25.155231475830078],[-59.448760986328125,-30.90544891357422,23.865707397460938],[-58.452144622802734,-30.18179702758789,22.695215225219727],[-57.38923645019531,-29.393409729003906,21.645484924316406],[-56.275672912597656,-28.529094696044922,20.72438621520996],[-55.142215728759766,-27.57074737548828,19.935802459716797],[-54.0078125,-26.51227569580078,19.27009391784668],[-52.89232635498047,-25.344566345214844,18.714580535888672],[-51.81181335449219,-24.0605525970459,18.251644134521484],[-50.78047561645508,-22.65184211730957,17.863492965698242],[-49.80586624145508,-21.124282836914062,17.522647857666016],[-48.88250732421875,-19.491886138916016,17.211538314819336],[-48.00283432006836,-17.775890350341797,16.907670974731445],[-56.19681930541992,-40.674991607666016,47.38972854614258],[-57.429691314697266,-39.4416618347168,46.1970100402832],[-58.57578659057617,-38.295658111572266,44.83671951293945],[-59.62223815917969,-37.229766845703125,43.33000183105469],[-60.55122756958008,-36.2438850402832,41.69373321533203],[-61.34560012817383,-35.33660888671875,39.95376968383789],[-61.993255615234375,-34.50568771362305,38.137840270996094],[-62.47800064086914,-33.74965286254883,36.27153015136719],[-62.78456497192383,-33.063724517822266,34.38272476196289],[-62.89003372192383,-32.4377555847168,32.505760192871094],[-62.79821014404297,-31.84853744506836,30.67521858215332],[-62.5147705078125,-31.272747039794922,28.9212589263916],[-62.05257797241211,-30.686750411987305,27.269041061401367],[-61.430850982666016,-30.06761932373047,25.73939323425293],[-60.67124938964844,-29.39850616455078,24.343830108642578],[-59.80876159667969,-28.668935775756836,23.07846450805664],[-58.867828369140625,-27.869754791259766,21.942487716674805],[-57.872100830078125,-26.991491317749023,20.93471908569336],[-56.84299850463867,-26.021259307861328,20.057355880737305],[-55.80078125,-24.955955505371094,19.296768188476562],[-54.765953063964844,-23.789125442504883,18.637876510620117],[-53.752647399902344,-22.516090393066406,18.06379508972168],[-52.77269744873047,-21.131330490112305,17.556182861328125],[-51.82381820678711,-19.63591957092285,17.10651206970215],[-50.904354095458984,-18.039255142211914,16.69805335998535],[-50.0075569152832,-16.35391616821289,16.317604064941406],[-56.46204376220703,-38.53282928466797,46.8612060546875],[-57.697479248046875,-37.28499984741211,45.6326789855957],[-58.84412384033203,-36.1308708190918,44.23456954956055],[-59.88654327392578,-35.06560134887695,42.686607360839844],[-60.807029724121094,-34.086917877197266,41.010414123535156],[-61.588584899902344,-33.19289016723633,39.23247146606445],[-62.22071838378906,-32.3790283203125,37.38341522216797],[-62.689491271972656,-31.641067504882812,35.49158477783203],[-62.98353958129883,-30.969011306762695,33.588623046875],[-63.084861755371094,-30.34652328491211,31.707561492919922],[-62.99946975708008,-29.748533248901367,29.881996154785156],[-62.735137939453125,-29.150182723999023,28.14048957824707],[-62.30836486816406,-28.526092529296875,26.50807762145996],[-61.73560333251953,-27.85691261291504,25.000606536865234],[-61.0352783203125,-27.128646850585938,23.627613067626953],[-60.24235534667969,-26.330974578857422,22.38488006591797],[-59.381675720214844,-25.455121994018555,21.26859474182129],[-58.48134231567383,-24.490549087524414,20.270645141601562],[-57.54914855957031,-23.434051513671875,19.384864807128906],[-56.60723876953125,-22.280723571777344,18.594894409179688],[-55.67036056518555,-21.0273494720459,17.88328742980957],[-54.747894287109375,-19.670005798339844,17.232545852661133],[-53.835838317871094,-18.210477828979492,16.63456153869629],[-52.92631149291992,-16.65218734741211,16.09343910217285],[-52.017356872558594,-15.004257202148438,15.593839645385742],[-56.67163848876953,-36.454833984375,46.21001434326172],[-57.90053176879883,-35.20109558105469,44.945465087890625],[-59.0391960144043,-34.04395294189453,43.514366149902344],[-60.071834564208984,-32.97780990600586,41.93943786621094],[-60.97983169555664,-32.00146484375,40.241668701171875],[-61.74660873413086,-31.11273193359375,38.448577880859375],[-62.36327362060547,-30.30431365966797,36.59404373168945],[-62.81949234008789,-29.567201614379883,34.710113525390625],[-63.109466552734375,-28.885807037353516,32.826263427734375],[-63.218204498291016,-28.24321746826172,30.97237777709961],[-63.154808044433594,-27.61240577697754,29.180269241333008],[-62.932132720947266,-26.967132568359375,27.477436065673828],[-62.564666748046875,-26.287952423095703,25.87923812866211],[-62.0651741027832,-25.5603084564209,24.396406173706055],[-61.44928741455078,-24.771291732788086,23.036951065063477],[-60.75104904174805,-23.910987854003906,21.79389190673828],[-59.9975700378418,-22.970020294189453,20.65641212463379],[-59.20040512084961,-21.94363784790039,19.613914489746094],[-58.36829376220703,-20.82306480407715,18.663522720336914],[-57.51839065551758,-19.604534149169922,17.789329528808594],[-56.660709381103516,-18.284791946411133,16.973276138305664],[-55.79086685180664,-16.864521026611328,16.209697723388672],[-54.901363372802734,-15.347856521606445,15.50078010559082],[-53.987342834472656,-13.738943099975586,14.851921081542969],[-56.820560455322266,-34.45439529418945,45.48851013183594],[-58.03455352783203,-33.19954299926758,44.19234085083008],[-59.158172607421875,-32.037471771240234,42.74134826660156],[-60.174171447753906,-30.964923858642578,41.15652847290039],[-61.06416320800781,-29.9819393157959,39.45891571044922],[-61.81269454956055,-29.085636138916016,37.677555084228516],[-62.414031982421875,-28.264354705810547,35.84991455078125],[-62.86393356323242,-27.505352020263672,34.003780364990234],[-63.159942626953125,-26.791316986083984,32.16742706298828],[-63.291202545166016,-26.1053466796875,30.365896224975586],[-63.27286911010742,-25.418682098388672,28.629545211791992],[-63.11652374267578,-24.712894439697266,26.97223472595215],[-62.833045959472656,-23.974496841430664,25.402318954467773],[-62.431880950927734,-23.191986083984375,23.926197052001953],[-61.92436981201172,-22.353242874145508,22.54900550842285],[-61.34461212158203,-21.44854164123535,21.2565975189209],[-60.69971466064453,-20.469308853149414,20.043312072753906],[-60.00166320800781,-19.4046688079834,18.902788162231445],[-59.25413513183594,-18.241487503051758,17.8393497467041],[-58.47032928466797,-16.974246978759766,16.837657928466797],[-57.64944076538086,-15.601747512817383,15.892804145812988],[-56.786705017089844,-14.127771377563477,15.007222175598145],[-55.878536224365234,-12.55888843536377,14.180888175964355],[-56.911827087402344,-32.52668762207031,44.76480484008789],[-58.105159759521484,-31.268888473510742,43.44929122924805],[-59.20622634887695,-30.09758758544922,41.99295425415039],[-60.19814682006836,-29.01113510131836,40.4162483215332],[-61.06406784057617,-28.009878158569336,38.741233825683594],[-61.792179107666016,-27.088821411132812,36.998779296875],[-62.38318634033203,-26.23433494567871,35.22080993652344],[-62.83616256713867,-25.432140350341797,33.43406677246094],[-63.15308380126953,-24.664836883544922,31.66227912902832],[-63.32997131347656,-23.91543197631836,29.92688751220703],[-63.38088607788086,-23.16397476196289,28.242101669311523],[-63.313724517822266,-22.398454666137695,26.613819122314453],[-63.135868072509766,-21.609487533569336,25.04454803466797],[-62.8517951965332,-20.788192749023438,23.53567123413086],[-62.469459533691406,-19.922618865966797,22.086149215698242],[-62.00056457519531,-19.00000762939453,20.692598342895508],[-61.45200729370117,-18.0037784576416,19.35603141784668],[-60.82975769042969,-16.916528701782227,18.07945442199707],[-60.134620666503906,-15.718914985656738,16.872106552124023],[-59.372413635253906,-14.405034065246582,15.733394622802734],[-58.54505920410156,-12.978492736816406,14.664022445678711],[-57.65298843383789,-11.447723388671875,13.661519050598145],[-56.96220397949219,-30.646699905395508,44.1358642578125],[-58.128395080566406,-29.384313583374023,42.81227111816406],[-59.19927215576172,-28.199810028076172,41.362674713134766],[-60.15998077392578,-27.09170913696289,39.80812454223633],[-60.99824142456055,-26.058923721313477,38.17229461669922],[-61.7100830078125,-25.096988677978516,36.4802131652832],[-62.299407958984375,-24.191673278808594,34.76225280761719],[-62.769752502441406,-23.329647064208984,33.04002380371094],[-63.129520416259766,-22.494016647338867,31.33263397216797],[-63.373775482177734,-21.67816925048828,29.644725799560547],[-63.51235580444336,-20.868562698364258,27.981952667236328],[-63.54924392700195,-20.057592391967773,26.343793869018555],[-63.486351013183594,-19.238994598388672,24.727256774902344],[-63.32378005981445,-18.40463638305664,23.127349853515625],[-63.046905517578125,-17.535921096801758,21.55872917175293],[-62.666229248046875,-16.610708236694336,20.025672912597656],[-62.18248748779297,-15.603278160095215,18.540924072265625],[-61.59830856323242,-14.487605094909668,17.11440086364746],[-60.910736083984375,-13.241881370544434,15.772085189819336],[-60.131126403808594,-11.867317199707031,14.516916275024414],[-59.26778030395508,-10.374764442443848,13.342405319213867],[-57.002750396728516,-28.787355422973633,43.689659118652344],[-58.13530731201172,-27.519540786743164,42.362815856933594],[-59.16949462890625,-26.318334579467773,40.92301559448242],[-60.09538269042969,-25.180458068847656,39.39277648925781],[-60.910186767578125,-24.105777740478516,37.79264831542969],[-61.613868713378906,-23.090959548950195,36.14678955078125],[-62.21454620361328,-22.123977661132812,34.4794807434082],[-62.72137451171875,-21.193138122558594,32.80620574951172],[-63.141090393066406,-20.29266357421875,31.129627227783203],[-63.46449661254883,-19.422340393066406,29.4476375579834],[-63.69667434692383,-18.572778701782227,27.75882339477539],[-63.835670471191406,-17.73911476135254,26.05760955810547],[-63.87809753417969,-16.915292739868164,24.335514068603516],[-63.80424880981445,-16.084123611450195,22.60662269592285],[-63.60006332397461,-15.216301918029785,20.89398193359375],[-63.269325256347656,-14.279420852661133,19.213674545288086],[-62.809452056884766,-13.237483978271484,17.58670997619629],[-62.220977783203125,-12.061641693115234,16.04051971435547],[-61.509002685546875,-10.741003036499023,14.601736068725586],[-60.69160461425781,-9.286712646484375,13.26421070098877],[-57.06949996948242,-26.943906784057617,43.483909606933594],[-58.160499572753906,-25.668851852416992,42.145851135253906],[-59.15242004394531,-24.44493293762207,40.704166412353516],[-60.045955657958984,-23.269447326660156,39.182167053222656],[-60.84292221069336,-22.144384384155273,37.60084533691406],[-61.54840087890625,-21.06976318359375,35.98023223876953],[-62.17465591430664,-20.036510467529297,34.33539962768555],[-62.72916030883789,-19.044326782226562,32.667877197265625],[-63.21278762817383,-18.09383201599121,30.97254753112793],[-63.61257553100586,-17.188432693481445,29.24323272705078],[-63.926513671875,-16.320964813232422,27.473012924194336],[-64.14615631103516,-15.485557556152344,25.652313232421875],[-64.25244903564453,-14.664918899536133,23.795425415039062],[-64.22691345214844,-13.830288887023926,21.925065994262695],[-64.05247497558594,-12.941767692565918,20.075658798217773],[-63.72845458984375,-11.955107688903809,18.27265167236328],[-63.252685546875,-10.832862854003906,16.553394317626953],[-62.63420104980469,-9.55994701385498,14.944185256958008],[-61.885345458984375,-8.140670776367188,13.457884788513184],[-57.19309616088867,-25.130741119384766,43.52124786376953],[-58.23232650756836,-23.841218948364258,42.148963928222656],[-59.18039321899414,-22.58579444885254,40.68181610107422],[-60.042457580566406,-21.3648738861084,39.142967224121094],[-60.826332092285156,-20.184167861938477,37.55181121826172],[-61.54108810424805,-19.047414779663086,35.91978454589844],[-62.1973876953125,-17.956918716430664,34.24993133544922],[-62.79639434814453,-16.91863250732422,32.536014556884766],[-63.33279037475586,-15.936708450317383,30.767343521118164],[-63.78879928588867,-15.015923500061035,28.936382293701172],[-64.15374755859375,-14.146965026855469,27.03270149230957],[-64.40836334228516,-13.311405181884766,25.07308578491211],[-64.53427124023438,-12.479347229003906,23.08075523376465],[-64.51210021972656,-11.6099214553833,21.09151840209961],[-64.32361602783203,-10.651631355285645,19.148488998413086],[-63.969970703125,-9.56006145477295,17.29200553894043],[-63.457908630371094,-8.31558895111084,15.55363655090332],[-62.8033332824707,-6.920341968536377,13.94613265991211],[-57.3825798034668,-23.36351203918457,43.74335861206055],[-58.362979888916016,-22.048498153686523,42.31070327758789],[-59.2618522644043,-20.753129959106445,40.790008544921875],[-60.0904655456543,-19.48166275024414,39.203556060791016],[-60.86052322387695,-18.24370574951172,37.563011169433594],[-61.582237243652344,-17.0538272857666,35.873085021972656],[-62.258941650390625,-15.92064094543457,34.12782669067383],[-62.884849548339844,-14.85340690612793,32.31537628173828],[-63.447513580322266,-13.85718059539795,30.42375946044922],[-63.92275619506836,-12.933650970458984,28.44637107849121],[-64.29261016845703,-12.060296058654785,26.401649475097656],[-64.53787994384766,-11.20522403717041,24.315582275390625],[-64.64036560058594,-10.325161933898926,22.226428985595703],[-64.58100891113281,-9.365854263305664,20.181926727294922],[-64.34786224365234,-8.279075622558594,18.23411750793457],[-63.95026779174805,-7.041233539581299,16.413246154785156],[-63.40101623535156,-5.652894020080566,14.734440803527832],[-57.613304138183594,-21.645044326782227,44.054412841796875],[-58.523338317871094,-20.297029495239258,42.534088134765625],[-59.36463928222656,-18.9578857421875,40.931541442871094],[-60.15156555175781,-17.635692596435547,39.26060104370117],[-60.90018081665039,-16.3501033782959,37.530487060546875],[-61.614933013916016,-15.121864318847656,35.73856735229492],[-62.29082489013672,-13.963118553161621,33.872467041015625],[-62.91474533081055,-12.8838529586792,31.92028045654297],[-63.46605682373047,-11.885479927062988,29.87315559387207],[-63.919342041015625,-10.955442428588867,27.75733184814453],[-64.25548553466797,-10.057016372680664,25.60068702697754],[-64.45632934570312,-9.144204139709473,23.44542694091797],[-64.50448608398438,-8.159423828125,21.344806671142578],[-64.38905334472656,-7.0533318519592285,19.353273391723633],[-64.10647583007812,-5.803099155426025,17.502412796020508],[-63.67015838623047,-4.407155513763428,15.804550170898438],[-57.81171417236328,-19.9645938873291,44.34162902832031],[-58.640316009521484,-18.58282470703125,42.71070861816406],[-59.412635803222656,-17.203319549560547,40.99517059326172],[-60.15055847167969,-15.843070030212402,39.20966339111328],[-60.865936279296875,-14.527542114257812,37.356754302978516],[-61.556129455566406,-13.28105640411377,35.428714752197266],[-62.2077751159668,-12.116924285888672,33.413482666015625],[-62.79981994628906,-11.04107666015625,31.305011749267578],[-63.31191635131836,-10.03840160369873,29.129531860351562],[-63.7183723449707,-9.080944061279297,26.92216682434082],[-64.000732421875,-8.117944717407227,24.727706909179688],[-64.14190673828125,-7.089286804199219,22.605798721313477],[-64.1328125,-5.945263862609863,20.613561630249023],[-63.96882247924805,-4.665323257446289,18.779041290283203],[-63.648555755615234,-3.251088857650757,17.10716438293457],[-57.88772964477539,-18.320751190185547,44.51120376586914],[-58.62079620361328,-16.916107177734375,42.74104690551758],[-59.3197021484375,-15.515518188476562,40.890262603759766],[-60.00262451171875,-14.14158821105957,38.96675109863281],[-60.67497253417969,-12.822843551635742,36.96892166137695],[-61.32692337036133,-11.58395767211914,34.890655517578125],[-61.93751907348633,-10.433731079101562,32.72821807861328],[-62.48671340942383,-9.357945442199707,30.509502410888672],[-62.95154571533203,-8.325213432312012,28.270830154418945],[-63.306697845458984,-7.294466972351074,26.061697006225586],[-63.535179138183594,-6.202474594116211,23.947643280029297],[-63.62718963623047,-5.002181053161621,21.988046646118164],[-63.57733917236328,-3.6767592430114746,20.207521438598633],[-63.38031005859375,-2.2307653427124023,18.604063034057617],[-57.7380256652832,-16.744924545288086,44.46611404418945],[-58.37879943847656,-15.347068786621094,42.54273986816406],[-59.00995635986328,-13.958194732666016,40.544532775878906],[-59.642784118652344,-12.603912353515625,38.47576141357422],[-60.275611877441406,-11.311245918273926,36.337486267089844],[-60.89181900024414,-10.097082138061523,34.13252639770508],[-61.46907043457031,-8.94777774810791,31.88677978515625],[-61.98318099975586,-7.833777904510498,29.637304306030273],[-62.411033630371094,-6.711480140686035,27.43808937072754],[-62.72732162475586,-5.532951831817627,25.358091354370117],[-62.921321868896484,-4.25504732131958,23.459529876708984],[-62.98466873168945,-2.8673064708709717,21.761638641357422],[-62.908721923828125,-1.3766100406646729,20.255346298217773],[-57.28940200805664,-15.339012145996094,44.12633514404297],[-57.8646125793457,-13.987055778503418,42.05458068847656],[-58.45528030395508,-12.642261505126953,39.922584533691406],[-59.064334869384766,-11.327987670898438,37.736976623535156],[-59.68220901489258,-10.060968399047852,35.5062141418457],[-60.28628158569336,-8.83651351928711,33.254024505615234],[-60.85039520263672,-7.628462314605713,31.01607322692871],[-61.349266052246094,-6.39909553527832,28.848464965820312],[-61.76074981689453,-5.1032304763793945,26.831928253173828],[-62.06202697753906,-3.725151538848877,25.022960662841797],[-62.241756439208984,-2.258646011352539,23.43431854248047],[-62.28535079956055,-0.7116960883140564,22.046308517456055],[-56.58340072631836,-14.216903686523438,43.48356246948242],[-57.14078903198242,-12.918859481811523,41.30128479003906],[-57.73213195800781,-11.609872817993164,39.08464813232422],[-58.353031158447266,-10.303443908691406,36.84653854370117],[-58.98439407348633,-9.000041961669922,34.607994079589844],[-59.599830627441406,-7.687009811401367,32.40183639526367],[-60.17286682128906,-6.33394193649292,30.287187576293945],[-60.67955780029297,-4.909304141998291,28.352048873901367],[-61.097816467285156,-3.410083532333374,26.66000747680664],[-61.39787673950195,-1.8535699844360352,25.199548721313477],[-61.56005096435547,-0.24155186116695404,23.943092346191406],[-55.72782897949219,-13.382318496704102,42.61837387084961],[-56.309837341308594,-12.099493026733398,40.38605880737305],[-56.93804931640625,-10.767660140991211,38.156005859375],[-57.59713363647461,-9.391270637512207,35.94801330566406],[-58.26630401611328,-7.9655303955078125,33.79447937011719],[-58.91698455810547,-6.480952739715576,31.75246810913086],[-59.52494430541992,-4.921672344207764,29.918201446533203],[-60.06031036376953,-3.3060898780822754,28.350276947021484],[-60.48882293701172,-1.6526908874511719,27.03372573852539],[-60.76842498779297,0.02897247113287449,25.91363525390625],[-54.81351089477539,-12.726107597351074,41.65591812133789],[-55.45536422729492,-11.38314151763916,39.447959899902344],[-56.14570236206055,-9.945960998535156,37.28412628173828],[-56.87096405029297,-8.415008544921875,35.200347900390625],[-57.60713195800781,-6.798039436340332,33.25458526611328],[-58.32406997680664,-5.112656593322754,31.5377197265625],[-58.983314514160156,-3.393024206161499,30.100784301757812],[-59.53654098510742,-1.6575236320495605,28.916112899780273],[-59.93593978881836,0.09479227662086487,27.93255043029785],[-53.91270065307617,-12.0730562210083,40.74667739868164],[-54.64216613769531,-10.58963394165039,38.64222717285156],[-55.42998123168945,-8.971452713012695,36.64316177368164],[-56.259586334228516,-7.2431230545043945,34.81178283691406],[-57.098876953125,-5.453864097595215,33.229305267333984],[-57.88795852661133,-3.655686616897583,31.9196834564209],[-58.56695556640625,-1.856248378753662,30.85269546508789],[-59.076778411865234,-0.046350251883268356,29.978084564208984],[-53.09733963012695,-11.239011764526367,40.07009506225586],[-53.96415710449219,-9.561722755432129,38.17665100097656],[-54.90045166015625,-7.765911102294922,36.47139358520508],[-55.8704719543457,-5.921237945556641,35.019962310791016],[-56.795616149902344,-4.078484535217285,33.82377243041992],[-57.596431732177734,-2.2375741004943848,32.84789276123047],[-58.20909881591797,-0.3824147582054138,32.05477523803711],[-52.49601364135742,-10.127323150634766,39.83513259887695],[-53.5529670715332,-8.320850372314453,38.25519943237305],[-54.65346145629883,-6.4739789962768555,36.9113655090332],[-55.70836639404297,-4.6230878829956055,35.79935073852539],[-56.627525329589844,-2.7611851692199707,34.89006805419922],[-57.33480453491211,-0.8739386796951294,34.1510009765625],[-52.24595260620117,-8.861061096191406,40.17611312866211],[-53.47190856933594,-7.062233924865723,38.90913772583008],[-54.642967224121094,-5.237536907196045,37.84720230102539],[-55.66786575317383,-3.378680944442749,36.975250244140625],[-56.46207809448242,-1.4742308855056763,36.2675895690918],[-52.34516525268555,-7.623569488525391,41.004241943359375],[-53.61799240112305,-5.859311103820801,39.961421966552734],[-54.73301315307617,-4.028356552124023,39.098663330078125],[-55.60161209106445,-2.125706672668457,38.400413513183594],[-52.649864196777344,-6.414582252502441,42.130741119384766],[-53.841007232666016,-4.642612457275391,41.24867248535156],[-54.77135467529297,-2.7636070251464844,40.538673400878906],[-52.991912841796875,-5.151020050048828,43.40308380126953],[-53.97872543334961,-3.329453706741333,42.65515899658203],[-53.21380615234375,-3.7756869792938232,44.71757125854492],[-52.630882263183594,-0.8584457039833069,47.51430892944336],[-52.441429138183594,1.0944679975509644,47.211181640625],[-51.91069793701172,3.0944013595581055,46.76374053955078],[-51.10658264160156,5.060891628265381,46.193294525146484],[-50.125614166259766,6.972623825073242,45.529178619384766],[-49.07990646362305,8.850948333740234,44.80350875854492],[-48.06295394897461,10.729921340942383,44.038543701171875],[-47.14160919189453,12.63538932800293,43.240474700927734],[-46.362491607666016,14.581738471984863,42.40509033203125],[-45.76411056518555,16.57586097717285,41.5186882019043],[-45.34769058227539,18.61278533935547,40.57343292236328],[-45.10459518432617,20.688705444335938,39.56412124633789],[-45.01396560668945,22.80192756652832,38.48774337768555],[-45.04267883300781,24.954233169555664,37.34027862548828],[-45.14136505126953,27.15015411376953,36.11528015136719],[-45.25202178955078,29.38984489440918,34.81159591674805],[-45.325958251953125,31.670793533325195,33.42564010620117],[-45.32353210449219,33.983360290527344,31.956165313720703],[-45.2120475769043,36.30895233154297,30.400691986083984],[-44.982696533203125,38.61981964111328,28.765609741210938],[-44.641151428222656,40.88818359375,27.057579040527344],[-44.20235824584961,43.08757781982422,25.283193588256836],[-43.6908073425293,45.1938591003418,23.450532913208008],[-43.14046096801758,47.18199157714844,21.568988800048828],[-42.590538024902344,49.046165466308594,19.652923583984375],[-42.070457458496094,50.77855682373047,17.712764739990234],[-41.599117279052734,52.373695373535156,15.757757186889648],[-41.184608459472656,53.82073974609375,13.79720401763916],[-40.81996154785156,55.115089416503906,11.843113899230957],[-40.493099212646484,56.25238037109375,9.9136381149292],[-40.19683837890625,57.214988708496094,8.047639846801758],[-42.800697326660156,-17.427640914916992,16.13465118408203],[-43.67802429199219,-14.340412139892578,15.697723388671875],[-44.616912841796875,-11.123824119567871,14.97873592376709],[-45.535400390625,-7.816054821014404,13.970614433288574],[-46.3565559387207,-4.460240840911865,12.69575309753418],[-47.03374481201172,-1.096222162246704,11.225220680236816],[-47.54857635498047,2.2221851348876953,9.631963729858398],[-47.9091682434082,5.459420204162598,8.008040428161621],[-48.14952087402344,8.587510108947754,6.462752819061279],[-48.33203125,11.619600296020508,5.129548072814941],[-48.53459930419922,14.54966926574707,4.123790264129639],[-48.832950592041016,17.360763549804688,3.5511722564697266],[-49.28590393066406,20.006685256958008,3.4901978969573975],[-49.90414047241211,22.419429779052734,3.94873309135437],[-50.63434600830078,24.584716796875,4.76899528503418],[-51.38789367675781,26.55173110961914,5.769771099090576],[-52.064002990722656,28.408374786376953,6.7624101638793945],[-52.53824234008789,30.260013580322266,7.59597110748291],[-52.73075866699219,32.19465637207031,8.14318561553955],[-52.591346740722656,34.24992752075195,8.392398834228516],[-52.112464904785156,36.41346740722656,8.37983512878418],[-51.33217239379883,38.644981384277344,8.173864364624023],[-50.310951232910156,40.90598678588867,7.866726875305176],[-49.1359977722168,43.170249938964844,7.550010681152344],[-47.868690490722656,45.41950225830078,7.298011779785156],[-46.56330871582031,47.6339225769043,7.159396171569824],[-45.2625732421875,49.78676986694336,7.163559436798096],[-43.9863166809082,51.849037170410156,7.306848526000977],[-42.7293701171875,53.79193878173828,7.553030490875244],[-41.47468566894531,55.5863037109375,7.839595794677734],[-44.46549606323242,-15.813101768493652,16.397693634033203],[-45.467681884765625,-12.604096412658691,15.653635025024414],[-46.44361114501953,-9.359609603881836,14.589717864990234],[-47.32011032104492,-6.11032772064209,13.240117073059082],[-48.054962158203125,-2.869309186935425,11.680985450744629],[-48.63041305541992,0.34407126903533936,9.994590759277344],[-49.05367660522461,3.502026081085205,8.271592140197754],[-49.349613189697266,6.582065105438232,6.619347095489502],[-49.571041107177734,9.588639259338379,5.160085678100586],[-49.78028869628906,12.522883415222168,4.026937961578369],[-50.05120086669922,15.367849349975586,3.3451218605041504],[-50.44491958618164,18.079212188720703,3.230027675628662],[-50.9760627746582,20.576414108276367,3.736703395843506],[-51.59605026245117,22.81801414489746,4.737142086029053],[-52.230613708496094,24.838727951049805,6.021411895751953],[-52.782073974609375,26.73603630065918,7.3722381591796875],[-53.136802673339844,28.623504638671875,8.592055320739746],[-53.21915054321289,30.59575843811035,9.51994800567627],[-52.99431610107422,32.68943786621094,10.07162094116211],[-52.45460891723633,34.89037322998047,10.274320602416992],[-51.63468551635742,37.15740966796875,10.204934120178223],[-50.5915641784668,39.4509162902832,9.967557907104492],[-49.40744400024414,41.743995666503906,9.671225547790527],[-48.13965606689453,44.02028274536133,9.404308319091797],[-46.839813232421875,46.26377487182617,9.231307029724121],[-45.549503326416016,48.45248031616211,9.191116333007812],[-44.2877311706543,50.56443786621094,9.285841941833496],[-43.044044494628906,52.57951736450195,9.485322952270508],[-41.791954040527344,54.47835159301758,9.729795455932617],[-46.31585693359375,-14.259381294250488,16.17527198791504],[-47.349525451660156,-11.044256210327148,15.110427856445312],[-48.28200912475586,-7.861624717712402,13.74351978302002],[-49.07221984863281,-4.713346004486084,12.14924144744873],[-49.703617095947266,-1.5948371887207031,10.409650802612305],[-50.18171310424805,1.4910943508148193,8.620548248291016],[-50.52748489379883,4.5258684158325195,6.890325546264648],[-50.7852668762207,7.51175594329834,5.3375983238220215],[-51.005523681640625,10.44741439819336,4.08854341506958],[-51.2506103515625,13.32396125793457,3.2911155223846436],[-51.5810661315918,16.09977912902832,3.0893876552581787],[-52.015602111816406,18.685894012451172,3.5819084644317627],[-52.514060974121094,21.013418197631836,4.672119617462158],[-53.01063537597656,23.09456443786621,6.1651506423950195],[-53.43030548095703,25.02393341064453,7.807530879974365],[-53.66452407836914,26.926727294921875,9.37332820892334],[-53.64609909057617,28.909698486328125,10.659514427185059],[-53.339561462402344,31.02001953125,11.554374694824219],[-52.743675231933594,33.2490119934082,12.021262168884277],[-51.88848876953125,35.551666259765625,12.131999015808105],[-50.82792663574219,37.88344192504883,12.000865936279297],[-49.63960266113281,40.21371078491211,11.753952026367188],[-48.378387451171875,42.5257453918457,11.493847846984863],[-47.090476989746094,44.80425262451172,11.299921035766602],[-45.816551208496094,47.0317268371582,11.225297927856445],[-44.573089599609375,49.190093994140625,11.280948638916016],[-43.348079681396484,51.26576614379883,11.442269325256348],[-42.11070251464844,53.244388580322266,11.658711433410645],[-48.241310119628906,-12.812135696411133,15.553267478942871],[-49.233787536621094,-9.671338081359863,14.214765548706055],[-50.0832633972168,-6.5870280265808105,12.633477210998535],[-50.7707633972168,-3.5466299057006836,10.887673377990723],[-51.30063247680664,-0.5330921411514282,9.070140838623047],[-51.690399169921875,2.4539833068847656,7.293319225311279],[-51.981143951416016,5.415045261383057,5.6749372482299805],[-52.213924407958984,8.347904205322266,4.3391804695129395],[-52.43570327758789,11.24605655670166,3.429452657699585],[-52.699867248535156,14.077186584472656,3.1204299926757812],[-53.02643585205078,16.74839210510254,3.547083616256714],[-53.388816833496094,19.166152954101562,4.647358417510986],[-53.73420715332031,21.317001342773438,6.246156215667725],[-54.00380325317383,23.281394958496094,8.101006507873535],[-54.11439514160156,25.18845558166504,9.949941635131836],[-53.998313903808594,27.160486221313477,11.563095092773438],[-53.62030792236328,29.260944366455078,12.790074348449707],[-52.9747428894043,31.49436378479004,13.567501068115234],[-52.09122848510742,33.82146072387695,13.909523010253906],[-51.02052688598633,36.18932342529297,13.9290189743042],[-49.836124420166016,38.56028747558594,13.768610000610352],[-48.590660095214844,40.91397476196289,13.54544448852539],[-47.328189849853516,43.2347297668457,13.352376937866211],[-46.08213424682617,45.504337310791016,13.256696701049805],[-44.867515563964844,47.70806884765625,13.282434463500977],[-43.66901779174805,49.83514404296875,13.413339614868164],[-42.45557403564453,51.87628173828125,13.608060836791992],[-50.17409133911133,-11.491180419921875,14.668502807617188],[-51.08742904663086,-8.454212188720703,13.139653205871582],[-51.834712982177734,-5.474484920501709,11.429747581481934],[-52.41638946533203,-2.5275328159332275,9.627140045166016],[-52.847373962402344,0.4047376811504364,7.84033727645874],[-53.166419982910156,3.3347909450531006,6.1872878074646],[-53.409629821777344,6.257427215576172,4.79164457321167],[-53.612281799316406,9.166160583496094,3.7946646213531494],[-53.807411193847656,12.035724639892578,3.3684327602386475],[-54.01552200317383,14.778520584106445,3.687554121017456],[-54.224937438964844,17.28257179260254,4.726637363433838],[-54.40342712402344,19.50816535949707,6.337949275970459],[-54.510780334472656,21.516502380371094,8.297891616821289],[-54.48224639892578,23.426837921142578,10.356186866760254],[-54.267677307128906,25.374021530151367,12.243904113769531],[-53.822784423828125,27.440614700317383,13.782071113586426],[-53.13685989379883,29.65035629272461,14.86859130859375],[-52.23360824584961,31.975997924804688,15.490793228149414],[-51.16226577758789,34.36626434326172,15.71125602722168],[-49.99256896972656,36.77284622192383,15.68019962310791],[-48.775360107421875,39.1686897277832,15.53006362915039],[-47.55213165283203,41.53447341918945,15.367417335510254],[-46.354225158691406,43.850975036621094,15.271909713745117],[-45.1844482421875,46.100791931152344,15.280394554138184],[-44.025691986083984,48.275909423828125,15.388933181762695],[-42.84431838989258,50.36923599243164,15.566289901733398],[-52.07920837402344,-10.280658721923828,13.676939010620117],[-52.890785217285156,-7.35139799118042,12.037052154541016],[-53.52719497680664,-4.461648941040039,10.285959243774414],[-53.99897384643555,-1.5842416286468506,8.52840518951416],[-54.34351348876953,1.30682373046875,6.875814437866211],[-54.59391784667969,4.212852954864502,5.450264930725098],[-54.77717208862305,7.122664451599121,4.390401363372803],[-54.91114044189453,10.01209545135498,3.863678455352783],[-54.99565887451172,12.803165435791016,4.043472766876221],[-55.04164123535156,15.37995719909668,4.958065509796143],[-55.03882598876953,17.678781509399414,6.497542381286621],[-54.97015380859375,19.738096237182617,8.466383934020996],[-54.78932189941406,21.66080093383789,10.633119583129883],[-54.4599609375,23.578596115112305,12.733516693115234],[-53.945343017578125,25.594938278198242,14.542501449584961],[-53.22154998779297,27.754741668701172,15.927359580993652],[-52.304744720458984,30.049312591552734,16.836191177368164],[-51.241111755371094,32.434295654296875,17.306880950927734],[-50.097015380859375,34.86023712158203,17.45271873474121],[-48.92115783691406,37.289852142333984,17.41588592529297],[-47.75291061401367,39.69758605957031,17.317583084106445],[-46.620548248291016,42.06006622314453,17.249649047851562],[-45.5208854675293,44.35792541503906,17.260229110717773],[-44.420005798339844,46.580047607421875,17.357074737548828],[-43.283992767333984,48.72203063964844,17.522146224975586],[-53.92463684082031,-9.162806510925293,12.701526641845703],[-54.62076187133789,-6.32447624206543,11.03015422821045],[-55.13606262207031,-3.4972190856933594,9.331876754760742],[-55.505924224853516,-0.6467406749725342,7.7141523361206055],[-55.76192092895508,2.2368357181549072,6.2913007736206055],[-55.92674255371094,5.142016410827637,5.196936130523682],[-56.00616455078125,8.03878402709961,4.590354919433594],[-55.98678970336914,10.853389739990234,4.637241840362549],[-55.871368408203125,13.4804048538208,5.378626823425293],[-55.68283462524414,15.843204498291016,6.7745771408081055],[-55.425453186035156,17.955825805664062,8.66649055480957],[-55.07517623901367,19.900806427001953,10.849784851074219],[-54.6109619140625,21.799760818481445,13.071351051330566],[-54.005550384521484,23.758840560913086,15.100950241088867],[-53.23556900024414,25.850805282592773,16.754337310791016],[-52.30278015136719,28.086936950683594,17.9478759765625],[-51.247493743896484,30.43709945678711,18.68065071105957],[-50.13449478149414,32.85395812988281,19.051298141479492],[-49.009429931640625,35.299102783203125,19.17196273803711],[-47.90868377685547,37.73766326904297,19.174802780151367],[-46.85820770263672,40.13983917236328,19.164718627929688],[-45.84709930419922,42.48172378540039,19.20124053955078],[-44.83184051513672,44.75088882446289,19.302858352661133],[-43.759674072265625,46.94009017944336,19.4630069732666],[-55.68239974975586,-8.112268447875977,11.845658302307129],[-56.24632263183594,-5.333503246307373,10.228399276733398],[-56.643951416015625,-2.521554470062256,8.669262886047363],[-56.90580749511719,0.3388265371322632,7.278990745544434],[-57.05257034301758,3.2369701862335205,6.180215835571289],[-57.08519744873047,6.136088848114014,5.520772457122803],[-56.97995376586914,8.960043907165527,5.451577186584473],[-56.736358642578125,11.613273620605469,6.02213716506958],[-56.36993408203125,14.022233963012695,7.218604564666748],[-55.9207763671875,16.181785583496094,8.959997177124023],[-55.3851318359375,18.152864456176758,11.075601577758789],[-54.762630462646484,20.044084548950195,13.331942558288574],[-54.038848876953125,21.9560604095459,15.499571800231934],[-53.19712829589844,23.969430923461914,17.381725311279297],[-52.23518753051758,26.12748146057129,18.838769912719727],[-51.180667877197266,28.415626525878906,19.837535858154297],[-50.093406677246094,30.795028686523438,20.44670867919922],[-49.02165603637695,33.22698974609375,20.768632888793945],[-47.99660110473633,35.676597595214844,20.911909103393555],[-47.040252685546875,38.105133056640625,20.991683959960938],[-46.134735107421875,40.48235321044922,21.080177307128906],[-45.22465515136719,42.79241943359375,21.206546783447266],[-44.246177673339844,45.027706146240234,21.375442504882812],[-57.314697265625,-7.095388412475586,11.198533058166504],[-57.745399475097656,-4.324392795562744,9.712621688842773],[-58.016056060791016,-1.4875205755233765,8.37230110168457],[-58.14740753173828,1.4046034812927246,7.294979095458984],[-58.139549255371094,4.307157039642334,6.611242294311523],[-57.96831130981445,7.137228965759277,6.454530715942383],[-57.62678909301758,9.804758071899414,6.872067928314209],[-57.125370025634766,12.241175651550293,7.872020721435547],[-56.495723724365234,14.433727264404297,9.404387474060059],[-55.770172119140625,16.42562484741211,11.377605438232422],[-54.96865463256836,18.313417434692383,13.586775779724121],[-54.09640121459961,20.18962287902832,15.811596870422363],[-53.14829635620117,22.132949829101562,17.848493576049805],[-52.126487731933594,24.199073791503906,19.53890037536621],[-51.05350112915039,26.405391693115234,20.79001235961914],[-49.978538513183594,28.721698760986328,21.644672393798828],[-48.947906494140625,31.114017486572266,22.181678771972656],[-47.9971809387207,33.54644775390625,22.504108428955078],[-47.1412467956543,35.98080825805664,22.70755958557129],[-46.35304260253906,38.378665924072266,22.87523651123047],[-45.56578826904297,40.71922302246094,23.048376083374023],[-44.70185089111328,42.993038177490234,23.242103576660156],[-58.79631805419922,-6.057490348815918,10.831354141235352],[-59.08023452758789,-3.2506539821624756,9.546674728393555],[-59.19969177246094,-0.36597907543182373,8.501128196716309],[-59.15861129760742,2.544466495513916,7.816086292266846],[-58.93745803833008,5.38633394241333,7.602030277252197],[-58.52934265136719,8.069073677062988,7.898594856262207],[-57.932857513427734,10.52647876739502,8.722017288208008],[-57.17186737060547,12.739519119262695,10.048837661743164],[-56.270381927490234,14.738733291625977,11.819295883178711],[-55.28358459472656,16.615201950073242,13.907020568847656],[-54.23759078979492,18.456966400146484,16.111841201782227],[-53.146995544433594,20.33864402770996,18.22983169555664],[-52.02427673339844,22.31790542602539,20.088726043701172],[-50.895652770996094,24.426530838012695,21.570816040039062],[-49.80720520019531,26.661190032958984,22.661548614501953],[-48.7979736328125,28.990646362304688,23.42066192626953],[-47.9029541015625,31.381872177124023,23.9337100982666],[-47.14263153076172,33.79512023925781,24.29337501525879],[-46.47760772705078,36.192752838134766,24.568012237548828],[-45.82611846923828,38.54786682128906,24.810266494750977],[-45.09617233276367,40.848506927490234,25.04708480834961],[-60.08911895751953,-4.957540035247803,10.780827522277832],[-60.20375061035156,-2.092278242111206,9.765419960021973],[-60.137088775634766,0.8236661553382874,9.08613395690918],[-59.88013458251953,3.6850764751434326,8.841529846191406],[-59.43073272705078,6.392606735229492,9.053266525268555],[-58.779151916503906,8.877267837524414,9.737916946411133],[-57.933692932128906,11.112635612487793,10.882030487060547],[-56.91061019897461,13.115218162536621,12.452072143554688],[-55.75553894042969,14.967668533325195,14.35498046875],[-54.528297424316406,16.766597747802734,16.464710235595703],[-53.26583480834961,18.58674430847168,18.589351654052734],[-52.000633239746094,20.485118865966797,20.54871940612793],[-50.76877212524414,22.498178482055664,22.205669403076172],[-49.62223815917969,24.635488510131836,23.518409729003906],[-48.600582122802734,26.88610076904297,24.494930267333984],[-47.73334503173828,29.216400146484375,25.207324981689453],[-47.04175567626953,31.5883846282959,25.734094619750977],[-46.49079895019531,33.96158218383789,26.14438247680664],[-45.9794921875,36.31145477294922,26.479780197143555],[-45.39678192138672,38.62294006347656,26.7786922454834],[-61.150177001953125,-3.7745065689086914,11.081514358520508],[-61.06609344482422,-0.8682647347450256,10.399826049804688],[-60.782814025878906,2.010788679122925,10.130934715270996],[-60.310123443603516,4.752106666564941,10.288005828857422],[-59.63584899902344,7.277946949005127,10.872071266174316],[-58.75210189819336,9.549610137939453,11.873035430908203],[-57.659873962402344,11.567151069641113,13.266256332397461],[-56.39561080932617,13.399003982543945,14.983665466308594],[-55.00832748413086,15.140301704406738,16.933853149414062],[-53.56670379638672,16.887027740478516,18.99176025390625],[-52.12740707397461,18.70030975341797,20.981611251831055],[-50.74684524536133,20.61906623840332,22.75197982788086],[-49.48915100097656,22.658329010009766,24.23834991455078],[-48.40318298339844,24.815292358398438,25.423158645629883],[-47.52277755737305,27.071516036987305,26.332815170288086],[-46.86517333984375,29.38636589050293,27.03569221496582],[-46.39567947387695,31.71902847290039,27.591781616210938],[-46.01445388793945,34.04158020019531,28.045665740966797],[-45.58479690551758,36.3444938659668,28.42758560180664],[-61.933841705322266,-2.5285305976867676,11.760015487670898],[-61.63209915161133,0.3513007164001465,11.453058242797852],[-61.14577865600586,3.123711347579956,11.561576843261719],[-60.47055435180664,5.700302600860596,12.075945854187012],[-59.58802032470703,8.028533935546875,12.972223281860352],[-58.478389739990234,10.085447311401367,14.22877025604248],[-57.16218566894531,11.917737007141113,15.784008026123047],[-55.678924560546875,13.611328125,17.570138931274414],[-54.08444595336914,15.266314506530762,19.498048782348633],[-52.465065002441406,16.977521896362305,21.448604583740234],[-50.9029426574707,18.79159927368164,23.26831817626953],[-49.485652923583984,20.729293823242188,24.873085021972656],[-48.27687072753906,22.789676666259766,26.224693298339844],[-47.323978424072266,24.9587345123291,27.325891494750977],[-46.65252685546875,27.206748962402344,28.20459747314453],[-46.22454833984375,29.48706817626953,28.9155216217041],[-45.937503814697266,31.76961898803711,29.497514724731445],[-45.652076721191406,34.043060302734375,29.984928131103516],[-62.41124725341797,-1.2891849279403687,12.816618919372559],[-61.917972564697266,1.4960265159606934,12.858150482177734],[-61.25209426879883,4.118875980377197,13.307697296142578],[-60.397796630859375,6.514967441558838,14.129145622253418],[-59.317848205566406,8.640530586242676,15.287250518798828],[-58.006290435791016,10.508805274963379,16.720523834228516],[-56.4889030456543,12.184114456176758,18.365245819091797],[-54.81123733520508,13.762510299682617,20.15534210205078],[-53.04374313354492,15.348808288574219,22.00696563720703],[-51.29617691040039,17.03462028503418,23.812068939208984],[-49.685611724853516,18.853912353515625,25.47728157043457],[-48.30250549316406,20.809528350830078,26.946577072143555],[-47.21284103393555,22.887136459350586,28.203672409057617],[-46.46070098876953,25.057924270629883,29.25510025024414],[-46.02081298828125,27.28008460998535,30.121797561645508],[-45.78508758544922,29.514387130737305,30.840717315673828],[-45.607234954833984,31.747770309448242,31.44243621826172],[-62.604278564453125,-0.12705600261688232,14.188282012939453],[-61.95347595214844,2.5215163230895996,14.550787925720215],[-61.139923095703125,4.97866678237915,15.300662994384766],[-60.123775482177734,7.187585353851318,16.388568878173828],[-58.87129592895508,9.131423950195312,17.737985610961914],[-57.38050842285156,10.834797859191895,19.28110122680664],[-55.685768127441406,12.373798370361328,20.954849243164062],[-53.8455696105957,13.85473918914795,22.697463989257812],[-51.95016098022461,15.385275840759277,24.43343734741211],[-50.14457702636719,17.05643653869629,26.101640701293945],[-48.5527229309082,18.884521484375,27.63703155517578],[-47.271427154541016,20.858610153198242,29.00710678100586],[-46.36821746826172,22.947654724121094,30.20138931274414],[-45.84343719482422,25.104951858520508,31.2232723236084],[-45.602298736572266,27.288787841796875,32.08122253417969],[-45.48848342895508,29.476055145263672,32.80595397949219],[-62.5539665222168,0.910697877407074,15.820226669311523],[-61.783748626708984,3.4045469760894775,16.474082946777344],[-60.845314025878906,5.6870436668396,17.492891311645508],[-59.69138717651367,7.7250752449035645,18.784223556518555],[-58.28602981567383,9.506091117858887,20.262537002563477],[-56.63637924194336,11.06266975402832,21.856733322143555],[-54.79196548461914,12.483929634094238,23.507740020751953],[-52.828765869140625,13.884241104125977,25.161352157592773],[-50.870079040527344,15.378787994384766,26.782522201538086],[-49.070377349853516,17.046415328979492,28.332202911376953],[-47.56357192993164,18.890323638916016,29.770082473754883],[-46.4522590637207,20.8829288482666,31.071386337280273],[-45.76786804199219,22.971111297607422,32.225276947021484],[-45.44490051269531,25.100786209106445,33.22523498535156],[-45.33672332763672,27.241682052612305,34.07707977294922],[-62.30421447753906,1.8001892566680908,17.663299560546875],[-61.445526123046875,4.128209114074707,18.586650848388672],[-60.408042907714844,6.248729228973389,19.819026947021484],[-59.13427734375,8.130743980407715,21.256729125976562],[-57.59328079223633,9.762713432312012,22.808271408081055],[-55.808589935302734,11.188469886779785,24.40239715576172],[-53.8484001159668,12.508882522583008,25.988344192504883],[-51.819847106933594,13.854991912841797,27.547746658325195],[-49.85590362548828,15.332042694091797,29.0669002532959],[-48.12494659423828,17.0106143951416,30.526456832885742],[-46.770320892333984,18.878070831298828,31.896015167236328],[-45.866729736328125,20.882213592529297,33.15263748168945],[-45.38447952270508,22.955245971679688,34.277076721191406],[-45.205421447753906,25.0485782623291,35.26129913330078],[-61.89631652832031,2.5213332176208496,19.683332443237305],[-60.9786491394043,4.692611217498779,20.829021453857422],[-59.85958480834961,6.662623405456543,22.223411560058594],[-58.480133056640625,8.398399353027344,23.755767822265625],[-56.8226318359375,9.893095970153809,25.330474853515625],[-54.93093490600586,11.202719688415527,26.881235122680664],[-52.904788970947266,12.45288372039795,28.391300201416016],[-50.8618049621582,13.769194602966309,29.864364624023438],[-48.94932556152344,15.251750946044922,31.305397033691406],[-47.351036071777344,16.958383560180664,32.702823638916016],[-46.19060516357422,18.850305557250977,34.02992630004883],[-45.4876823425293,20.85354232788086,35.255889892578125],[-45.15973663330078,22.89949607849121,36.359920501708984],[-61.3676643371582,3.069058656692505,21.822772979736328],[-60.41221618652344,5.091588497161865,23.145877838134766],[-59.226036071777344,6.917600154876709,24.656139373779297],[-57.75625991821289,8.514601707458496,26.23653221130371],[-56.004173278808594,9.882217407226562,27.791080474853516],[-54.04731750488281,11.106650352478027,29.283050537109375],[-51.997798919677734,12.314251899719238,30.72106170654297],[-49.98847198486328,13.630250930786133,32.12794494628906],[-48.184043884277344,15.145874977111816,33.51749038696289],[-46.76115036010742,16.892372131347656,34.88088607788086],[-45.7968635559082,18.80171012878418,36.18288803100586],[-45.25883483886719,20.79120445251465,37.38982009887695],[-60.75345230102539,3.4357681274414062,24.036922454833984],[-59.7730827331543,5.313289642333984,25.495336532592773],[-58.52970886230469,6.9998979568481445,27.077341079711914],[-56.98353958129883,8.464204788208008,28.662118911743164],[-55.16956329345703,9.734363555908203,30.175369262695312],[-53.18208312988281,10.903606414794922,31.607200622558594],[-51.14927673339844,12.103425025939941,32.98874282836914],[-49.22233581542969,13.455124855041504,34.35396957397461],[-47.567237854003906,15.026582717895508,35.72117233276367],[-46.329864501953125,16.812498092651367,37.07028579711914],[-45.5380859375,18.726533889770508,38.36058807373047],[-60.07987594604492,3.611929416656494,26.28843116760254],[-59.08116149902344,5.347626686096191,27.8408145904541],[-57.78742980957031,6.898774147033691,29.45226287841797],[-56.187740325927734,8.257773399353027,31.01531219482422],[-54.338775634765625,9.46038818359375,32.48091125488281],[-52.3536262512207,10.612007141113281,33.864044189453125],[-50.37835693359375,11.845678329467773,35.211402893066406],[-48.571868896484375,13.264105796813965,36.56414794921875],[-47.081180572509766,14.897984504699707,37.93051528930664],[-46.016387939453125,16.712060928344727,39.27952194213867],[-59.364891052246094,3.590217351913452,28.544578552246094],[-58.350406646728516,5.187882423400879,30.15137481689453],[-57.018951416015625,6.630008697509766,31.76250648498535],[-55.38526153564453,7.912613868713379,33.29289627075195],[-53.52755355834961,9.086112022399902,34.71760177612305],[-51.578128814697266,10.264925003051758,36.071475982666016],[-49.69403839111328,11.569625854492188,37.41312789916992],[-48.02522277832031,13.06701946258545,38.77566146850586],[-46.694725036621094,14.75503158569336,40.15576171875],[-58.62078094482422,3.3684113025665283,30.780590057373047],[-57.593753814697266,4.855562210083008,32.409847259521484],[-56.23705291748047,6.217583656311035,34.006099700927734],[-54.58934783935547,7.4622907638549805,35.5052604675293],[-52.74985885620117,8.652883529663086,36.90404510498047],[-50.865264892578125,9.899956703186035,38.25502014160156],[-49.09010696411133,11.292238235473633,39.61288070678711],[-47.560218811035156,12.863202095031738,40.99943542480469],[-57.852840423583984,2.972543239593506,32.982177734375],[-56.820716857910156,4.379950523376465,34.61739730834961],[-55.45331573486328,5.701030731201172,36.1953125],[-53.81316375732422,6.95417594909668,37.67207336425781],[-52.016700744628906,8.204585075378418,39.06663513183594],[-50.21376419067383,9.53895092010498,40.434295654296875],[-48.55176544189453,11.015432357788086,41.82085418701172],[-57.071231842041016,2.4460763931274414,35.15692901611328],[-56.042236328125,3.8147695064544678,36.788414001464844],[-54.681087493896484,5.141875267028809,38.349205017089844],[-53.07075881958008,6.446656227111816,39.818382263183594],[-51.33490753173828,7.777044296264648,41.22441101074219],[-49.62236785888672,9.195816993713379,42.618316650390625],[-56.286529541015625,1.8421852588653564,37.313655853271484],[-55.27342224121094,3.2196130752563477,38.93548583984375],[-53.93696212768555,4.594329357147217,40.48590087890625],[-52.3726806640625,5.969271183013916,41.95820999145508],[-50.707462310791016,7.375530242919922,43.381874084472656],[-55.51495361328125,1.2218836545944214,39.456485748291016],[-54.53065490722656,2.6475114822387695,41.066062927246094],[-53.23155212402344,4.084549427032471,42.61114501953125],[-51.7222785949707,5.521270751953125,44.08943176269531],[-54.77056884765625,0.6364083290100098,41.57875442504883],[-53.82124328613281,2.120062828063965,43.17347717285156],[-52.56336975097656,3.6023826599121094,44.71282958984375],[-54.056358337402344,0.11006373912096024,43.65617752075195],[-53.13573455810547,1.624565601348877,45.23265838623047],[-53.357154846191406,-0.3649075925350189,45.65016174316406],[-38.98273849487305,59.06249237060547,5.47330904006958],[-37.811790466308594,60.16085433959961,4.4087347984313965],[-36.47468566894531,61.157127380371094,3.2296950817108154],[-34.990394592285156,62.029014587402344,1.9721297025680542],[-33.365814208984375,62.780738830566406,0.672429621219635],[-31.60597801208496,63.43379211425781,-0.6271553635597229],[-29.720312118530273,64.0081787109375,-1.8924895524978638],[-27.715614318847656,64.5016098022461,-3.102159261703491],[-25.60629653930664,64.88929748535156,-4.246417999267578],[-23.415695190429688,65.11309814453125,-5.319672584533691],[-21.19112777709961,65.12055969238281,-6.323853969573975],[-18.98214340209961,64.8633041381836,-7.252904891967773],[-16.841772079467773,64.3047866821289,-8.093809127807617],[-14.830089569091797,63.41911697387695,-8.827272415161133],[-13.021011352539062,62.20068359375,-9.434326171875],[-11.474367141723633,60.698577880859375,-9.920524597167969],[-10.245804786682129,58.97076416015625,-10.306724548339844],[-9.357830047607422,57.08589553833008,-10.631843566894531],[-8.793002128601074,55.094146728515625,-10.93881893157959],[-8.454593658447266,53.01626968383789,-11.250404357910156],[-8.236261367797852,50.84168243408203,-11.551735877990723],[-8.04203987121582,48.55166244506836,-11.798026084899902],[-7.792852401733398,46.134281158447266,-11.924582481384277],[-7.431752681732178,43.58808517456055,-11.85360336303711],[-6.9510955810546875,40.9332275390625,-11.548757553100586],[-6.364962577819824,38.18002700805664,-10.991558074951172],[-5.702479362487793,35.332427978515625,-10.18944263458252],[-4.9988203048706055,32.3864631652832,-9.170411109924316],[-4.292689800262451,29.34653091430664,-8.005666732788086],[-3.6163010597229004,26.238037109375,-6.786933898925781],[-3.0002188682556152,23.131887435913086,-5.617030620574951],[-2.7617740631103516,19.6640625,-6.284246444702148],[-3.049586296081543,18.953481674194336,-8.136032104492188],[-3.3264074325561523,18.192916870117188,-10.051675796508789],[-3.5961012840270996,17.430105209350586,-11.969532012939453],[-3.8849430084228516,16.699951171875,-13.842754364013672],[-4.240285396575928,16.021686553955078,-15.625675201416016],[-4.713911056518555,15.397422790527344,-17.277210235595703],[-5.357318878173828,14.828177452087402,-18.746801376342773],[-6.204970359802246,14.32217025756836,-19.972620010375977],[-7.259525299072266,13.89950942993164,-20.87139129638672],[-8.449596405029297,13.551043510437012,-21.442790985107422],[-9.714559555053711,13.23604965209961,-21.75311279296875],[-11.02735710144043,12.904882431030273,-21.910165786743164],[-12.387649536132812,12.521035194396973,-22.0264835357666],[-13.801607131958008,12.068656921386719,-22.193416595458984],[-15.26516342163086,11.553794860839844,-22.448986053466797],[-16.773216247558594,10.98910140991211,-22.794252395629883],[-18.319366455078125,10.395766258239746,-23.20880126953125],[-19.894813537597656,9.802424430847168,-23.666139602661133],[-21.48067855834961,9.239058494567871,-24.142337799072266],[-23.052459716796875,8.728796005249023,-24.630508422851562],[-24.581180572509766,8.292444229125977,-25.141136169433594],[-26.034473419189453,7.954509258270264,-25.702667236328125],[-27.373760223388672,7.759403228759766,-26.36383056640625],[-28.581119537353516,7.754593849182129,-27.154361724853516],[-29.655014038085938,7.9949564933776855,-28.070114135742188],[-30.629547119140625,8.503236770629883,-29.063232421875],[-31.569992065429688,9.257257461547852,-30.059221267700195],[-32.542938232421875,10.181565284729004,-30.980064392089844],[-33.574459075927734,11.195085525512695,-31.76736831665039],[-34.64801025390625,12.218782424926758,-32.37590789794922],[-39.431610107421875,58.920616149902344,3.195363998413086],[-39.99479675292969,58.526397705078125,0.8911330103874207],[-40.60719680786133,57.920249938964844,-1.4239428043365479],[-41.21125411987305,57.11042022705078,-3.7212064266204834],[-41.742794036865234,56.09376525878906,-5.961702346801758],[-42.14516830444336,54.87615966796875,-8.097623825073242],[-42.376197814941406,53.47328186035156,-10.073934555053711],[-42.414241790771484,51.90079116821289,-11.825419425964355],[-42.25499725341797,50.18009567260742,-13.278351783752441],[-41.9298210144043,48.35707092285156,-14.395444869995117],[-41.47267150878906,46.483673095703125,-15.208211898803711],[-40.903831481933594,44.59843826293945,-15.796778678894043],[-40.22868347167969,42.7235221862793,-16.2752685546875],[-39.44246292114258,40.86833953857422,-16.763504028320312],[-38.533451080322266,39.04172134399414,-17.32546615600586],[-37.52570343017578,37.22149658203125,-17.972774505615234],[-36.45463943481445,35.37574005126953,-18.6656494140625],[-35.38575744628906,33.455204010009766,-19.34248924255371],[-34.402626037597656,31.435583114624023,-19.927734375],[-33.609779357910156,29.2979793548584,-20.40184211730957],[-33.084564208984375,27.043182373046875,-20.78596305847168],[-32.86429214477539,24.689668655395508,-21.12858009338379],[-32.9424934387207,22.269405364990234,-21.49259376525879],[-33.27136993408203,19.82823944091797,-21.982074737548828],[-33.75771713256836,17.440460205078125,-22.673450469970703],[-34.311397552490234,15.22231674194336,-23.659502029418945],[-34.82293701171875,13.356619834899902,-25.021297454833984],[-35.15532302856445,12.0960111618042,-26.76528549194336],[-35.20934295654297,11.578813552856445,-28.698436737060547],[-34.999656677246094,11.690701484680176,-30.601726531982422],[-38.25047302246094,60.021209716796875,1.9602556228637695],[-38.79158401489258,59.6310920715332,-0.45822015404701233],[-39.36159896850586,59.01803207397461,-2.8422975540161133],[-39.88908386230469,58.18560791015625,-5.170149326324463],[-40.3095588684082,57.12748336791992,-7.406325817108154],[-40.56892395019531,55.84709167480469,-9.49917984008789],[-40.638885498046875,54.363468170166016,-11.387028694152832],[-40.51123046875,52.6943244934082,-12.991629600524902],[-40.22462844848633,50.88142395019531,-14.2730131149292],[-39.819610595703125,48.97364044189453,-15.229970932006836],[-39.32843017578125,47.019351959228516,-15.934836387634277],[-38.76356506347656,45.0471305847168,-16.49872589111328],[-38.12373352050781,43.06956481933594,-17.05128288269043],[-37.39515686035156,41.098045349121094,-17.683202743530273],[-36.56708526611328,39.13153076171875,-18.424358367919922],[-35.65797424316406,37.1427116394043,-19.248308181762695],[-34.704254150390625,35.088340759277344,-20.09182357788086],[-33.756690979003906,32.94205856323242,-20.863914489746094],[-32.891456604003906,30.702497482299805,-21.48566246032715],[-32.20770263671875,28.373031616210938,-21.943126678466797],[-31.779523849487305,25.967988967895508,-22.264833450317383],[-31.644948959350586,23.510528564453125,-22.50371551513672],[-31.7882022857666,21.036148071289062,-22.75128936767578],[-32.163795471191406,18.582740783691406,-23.129413604736328],[-32.679298400878906,16.217700958251953,-23.74264144897461],[-33.23347854614258,14.06737995147705,-24.707962036132812],[-33.69538116455078,12.330831527709961,-26.111038208007812],[-33.92168426513672,11.257633209228516,-27.901636123657227],[-33.854061126708984,10.929248809814453,-29.847835540771484],[-36.9011116027832,61.01144027709961,0.6919058561325073],[-37.40516662597656,60.62697219848633,-1.7878552675247192],[-37.90705108642578,60.011680603027344,-4.199347972869873],[-38.33397674560547,59.15928649902344,-6.5225419998168945],[-38.62074279785156,58.057403564453125,-8.718393325805664],[-38.7230339050293,56.70976638793945,-10.727027893066406],[-38.62455368041992,55.13768005371094,-12.471435546875],[-38.36014175415039,53.379146575927734,-13.901529312133789],[-37.97777557373047,51.482704162597656,-15.006991386413574],[-37.520179748535156,49.497154235839844,-15.826852798461914],[-37.0124626159668,47.4623908996582,-16.467876434326172],[-36.4601936340332,45.39657211303711,-17.062435150146484],[-35.85449981689453,43.313045501708984,-17.720975875854492],[-35.18174362182617,41.21620559692383,-18.50323486328125],[-34.4310302734375,39.098941802978516,-19.40658187866211],[-33.62321853637695,36.92015075683594,-20.380342483520508],[-32.785255432128906,34.64984130859375,-21.33205795288086],[-31.966115951538086,32.27368927001953,-22.168283462524414],[-31.23941421508789,29.806442260742188,-22.807703018188477],[-30.69594383239746,27.27429962158203,-23.235219955444336],[-30.406736373901367,24.70557403564453,-23.480331420898438],[-30.38770866394043,22.142009735107422,-23.618989944458008],[-30.62609100341797,19.607948303222656,-23.759946823120117],[-31.072237014770508,17.138370513916016,-24.05246925354004],[-31.633758544921875,14.800259590148926,-24.632423400878906],[-32.19111251831055,12.733367919921875,-25.643348693847656],[-32.59579086303711,11.15608024597168,-27.140687942504883],[-32.71235275268555,10.304803848266602,-29.002899169921875],[-35.38621520996094,61.88167190551758,-0.6016396880149841],[-35.82633972167969,61.5040168762207,-3.0940282344818115],[-36.23426055908203,60.88426208496094,-5.494282245635986],[-36.53715515136719,60.0054817199707,-7.777708530426025],[-36.67653274536133,58.85084915161133,-9.89648723602295],[-36.61621856689453,57.42317199707031,-11.77248764038086],[-36.380794525146484,55.76394271850586,-13.350518226623535],[-36.015663146972656,53.92082595825195,-14.604604721069336],[-35.57184982299805,51.94548416137695,-15.55944538116455],[-35.08730697631836,49.88088607788086,-16.289369583129883],[-34.580413818359375,47.756221771240234,-16.92700958251953],[-34.04940414428711,45.58909225463867,-17.59445571899414],[-33.48417663574219,43.38658905029297,-18.373023986816406],[-32.87100601196289,41.14870071411133,-19.292598724365234],[-32.203365325927734,38.854095458984375,-20.32768440246582],[-31.494680404663086,36.471824645996094,-21.397985458374023],[-30.772741317749023,33.980342864990234,-22.408798217773438],[-30.08938217163086,31.375444412231445,-23.26715087890625],[-29.517261505126953,28.687454223632812,-23.889989852905273],[-29.144601821899414,25.958778381347656,-24.256305694580078],[-29.012184143066406,23.24759292602539,-24.412757873535156],[-29.135820388793945,20.587194442749023,-24.451196670532227],[-29.495615005493164,17.999435424804688,-24.505165100097656],[-30.038185119628906,15.519086837768555,-24.755422592163086],[-30.65898323059082,13.217580795288086,-25.374114990234375],[-31.219661712646484,11.255491256713867,-26.498708724975586],[-31.559165954589844,9.873708724975586,-28.125703811645508],[-33.700523376464844,62.631683349609375,-1.895000696182251],[-34.04906463623047,62.252376556396484,-4.365296840667725],[-34.33795928955078,61.61497497558594,-6.723614692687988],[-34.501529693603516,60.6937370300293,-8.937748908996582],[-34.487003326416016,59.46592712402344,-10.941142082214355],[-34.29463577270508,57.95160675048828,-12.668621063232422],[-33.95998764038086,56.20415496826172,-14.082608222961426],[-33.533058166503906,54.27729415893555,-15.18748664855957],[-33.06128692626953,52.21970748901367,-16.03999900817871],[-32.576141357421875,50.06532287597656,-16.743263244628906],[-32.08747100830078,47.8416862487793,-17.427371978759766],[-31.59109115600586,45.55976104736328,-18.18853759765625],[-31.076108932495117,43.223060607910156,-19.080188751220703],[-30.53223419189453,40.81840515136719,-20.108787536621094],[-29.947818756103516,38.33135986328125,-21.220672607421875],[-29.337886810302734,35.73759460449219,-22.33120346069336],[-28.73542022705078,33.024497985839844,-23.34625244140625],[-28.196104049682617,30.20149803161621,-24.17276954650879],[-27.798982620239258,27.311111450195312,-24.724777221679688],[-27.603361129760742,24.42638397216797,-24.997182846069336],[-27.64765739440918,21.599021911621094,-25.049036026000977],[-27.936922073364258,18.861492156982422,-24.99476432800293],[-28.4472599029541,16.232410430908203,-24.996856689453125],[-29.106786727905273,13.749021530151367,-25.27464485168457],[-29.797388076782227,11.49479866027832,-26.00782585144043],[-30.360692977905273,9.66550064086914,-27.300247192382812],[-31.848934173583984,63.269065856933594,-3.1640446186065674],[-32.078697204589844,62.865577697753906,-5.5909318923950195],[-32.2305793762207,62.184043884277344,-7.888044834136963],[-32.2451286315918,61.18846893310547,-10.007274627685547],[-32.103515625,59.86940383911133,-11.888386726379395],[-31.815942764282227,58.25878143310547,-13.473893165588379],[-31.42377471923828,56.41825866699219,-14.7516450881958],[-30.9749698638916,54.40144348144531,-15.755266189575195],[-30.511058807373047,52.25026321411133,-16.569671630859375],[-30.051395416259766,49.99748229980469,-17.301855087280273],[-29.60166358947754,47.66274642944336,-18.06033706665039],[-29.155534744262695,45.253639221191406,-18.915836334228516],[-28.704151153564453,42.761783599853516,-19.897682189941406],[-28.231569290161133,40.17897033691406,-20.983686447143555],[-27.729799270629883,37.49296188354492,-22.115510940551758],[-27.22006607055664,34.68706512451172,-23.20737648010254],[-26.741954803466797,31.76178741455078,-24.16470718383789],[-26.362260818481445,28.739580154418945,-24.890094757080078],[-26.140453338623047,25.69390869140625,-25.32073211669922],[-26.134735107421875,22.69099235534668,-25.464202880859375],[-26.371946334838867,19.780426025390625,-25.40182113647461],[-26.852859497070312,16.988563537597656,-25.27590560913086],[-27.533571243286133,14.330658912658691,-25.28752326965332],[-28.325056076049805,11.850638389587402,-25.668529510498047],[-29.094253540039062,9.66152572631836,-26.58361053466797],[-29.842803955078125,63.79866027832031,-4.388301849365234],[-29.934186935424805,63.33531951904297,-6.763617515563965],[-29.93692970275879,62.565914154052734,-8.98666000366211],[-29.825300216674805,61.46598815917969,-11.0123291015625],[-29.590688705444336,60.036190032958984,-12.780699729919434],[-29.249799728393555,58.31837844848633,-14.250557899475098],[-28.8435001373291,56.37583541870117,-15.43679141998291],[-28.414806365966797,54.258033752441406,-16.40043067932129],[-27.990564346313477,52.0069580078125,-17.233684539794922],[-27.581974029541016,49.6462287902832,-18.027454376220703],[-27.190732955932617,47.19144058227539,-18.867704391479492],[-26.810991287231445,44.63943862915039,-19.801124572753906],[-26.426288604736328,41.98569107055664,-20.827680587768555],[-26.023700714111328,39.22118377685547,-21.917766571044922],[-25.60418701171875,36.33659362792969,-23.0120792388916],[-25.197040557861328,33.32730484008789,-24.02306365966797],[-24.85578155517578,30.206491470336914,-24.849449157714844],[-24.63512420654297,27.02984619140625,-25.418519973754883],[-24.599546432495117,23.867572784423828,-25.68303680419922],[-24.79662322998047,20.783782958984375,-25.67628288269043],[-25.24954605102539,17.81898307800293,-25.508127212524414],[-25.937179565429688,14.99034595489502,-25.363359451293945],[-26.800796508789062,12.310750961303711,-25.456518173217773],[-27.736244201660156,9.847057342529297,-26.013574600219727],[-27.697500228881836,64.2053451538086,-5.558081150054932],[-27.637489318847656,63.628379821777344,-7.880716323852539],[-27.512008666992188,62.73200225830078,-10.038686752319336],[-27.30605697631836,61.49903869628906,-11.983927726745605],[-27.01919937133789,59.94086837768555,-13.664247512817383],[-26.669567108154297,58.10383987426758,-15.05839729309082],[-26.294334411621094,56.048919677734375,-16.20806312561035],[-25.919536590576172,53.8272705078125,-17.184982299804688],[-25.56285285949707,51.470420837402344,-18.069332122802734],[-25.226591110229492,48.99683380126953,-18.934772491455078],[-24.911436080932617,46.4118537902832,-19.844255447387695],[-24.600887298583984,43.714935302734375,-20.81505584716797],[-24.28049087524414,40.8989372253418,-21.836889266967773],[-23.94517707824707,37.95466995239258,-22.876375198364258],[-23.607118606567383,34.87971115112305,-23.87250328063965],[-23.310749053955078,31.68100357055664,-24.728811264038086],[-23.105607986450195,28.405330657958984,-25.370349884033203],[-23.054712295532227,25.10959243774414,-25.735193252563477],[-23.21865463256836,21.86678695678711,-25.806529998779297],[-23.642013549804688,18.731962203979492,-25.64911651611328],[-24.32474708557129,15.731409072875977,-25.42231559753418],[-25.229623794555664,12.872780799865723,-25.327880859375],[-26.29068946838379,10.180362701416016,-25.57575798034668],[-25.43515968322754,64.44623565673828,-6.670130729675293],[-25.244625091552734,63.712310791015625,-8.954776763916016],[-25.0218505859375,62.65436553955078,-11.063405990600586],[-24.7609806060791,61.265281677246094,-12.951022148132324],[-24.465723037719727,59.563804626464844,-14.577016830444336],[-24.152729034423828,57.59824752807617,-15.941893577575684],[-23.8413028717041,55.4323616027832,-17.101226806640625],[-23.547094345092773,53.10490036010742,-18.119792938232422],[-23.27763557434082,50.64182662963867,-19.064346313476562],[-23.030534744262695,48.050537109375,-19.990041732788086],[-22.79227066040039,45.337425231933594,-20.93132209777832],[-22.547019958496094,42.497684478759766,-21.892974853515625],[-22.286603927612305,39.52216339111328,-22.858369827270508],[-22.01557159423828,36.40483856201172,-23.789775848388672],[-21.763776779174805,33.14970016479492,-24.616371154785156],[-21.57830238342285,29.796571731567383,-25.268171310424805],[-21.52077865600586,26.396942138671875,-25.678415298461914],[-21.655061721801758,23.01500701904297,-25.811710357666016],[-22.044343948364258,19.720111846923828,-25.68580436706543],[-22.70926856994629,16.551799774169922,-25.424039840698242],[-23.631261825561523,13.52049732208252,-25.208763122558594],[-24.768177032470703,10.638020515441895,-25.238876342773438],[-23.1142520904541,64.47986602783203,-7.729264259338379],[-22.824562072753906,63.55119323730469,-9.993759155273438],[-22.543088912963867,62.304595947265625,-12.074796676635742],[-22.2694091796875,60.7415657043457,-13.932767868041992],[-22.008769989013672,58.88801574707031,-15.540964126586914],[-21.76181983947754,56.79927062988281,-16.913463592529297],[-21.53703498840332,54.52417755126953,-18.104272842407227],[-21.338930130004883,52.09463882446289,-19.169397354125977],[-21.16962242126465,49.52555847167969,-20.16067886352539],[-21.008602142333984,46.82284164428711,-21.109695434570312],[-20.840917587280273,43.98670959472656,-22.037090301513672],[-20.65497589111328,41.00834274291992,-22.93923568725586],[-20.449983596801758,37.87888717651367,-23.79309844970703],[-20.24615478515625,34.59418487548828,-24.548812866210938],[-20.08188247680664,31.187026977539062,-25.161083221435547],[-20.0199031829834,27.704713821411133,-25.56572151184082],[-20.127965927124023,24.209943771362305,-25.719940185546875],[-20.47685432434082,20.76819610595703,-25.618202209472656],[-21.109447479248047,17.437955856323242,-25.34319305419922],[-22.02542495727539,14.239429473876953,-25.049705505371094],[-23.201677322387695,11.180931091308594,-24.921539306640625],[-20.793067932128906,64.26648712158203,-8.73347282409668],[-20.44354820251465,63.12133026123047,-10.993496894836426],[-20.144657135009766,61.67230224609375,-13.066123962402344],[-19.898643493652344,59.93104553222656,-14.91919994354248],[-19.697952270507812,57.937076568603516,-16.535539627075195],[-19.53428077697754,55.731101989746094,-17.93117904663086],[-19.40503692626953,53.35340118408203,-19.155445098876953],[-19.309307098388672,50.82438659667969,-20.252573013305664],[-19.230484008789062,48.1568603515625,-21.254955291748047],[-19.144489288330078,45.347476959228516,-22.182743072509766],[-19.038490295410156,42.390708923339844,-23.046722412109375],[-18.906204223632812,39.27568435668945,-23.83572006225586],[-18.759944915771484,35.992347717285156,-24.513534545898438],[-18.628610610961914,32.56039047241211,-25.054500579833984],[-18.569944381713867,29.020706176757812,-25.416793823242188],[-18.656023025512695,25.434804916381836,-25.557559967041016],[-18.964956283569336,21.870254516601562,-25.45989418029785],[-19.55057144165039,18.38634490966797,-25.180152893066406],[-20.435728073120117,15.024109840393066,-24.838607788085938],[-21.614837646484375,11.79789924621582,-24.597766876220703],[-18.528505325317383,63.77372360229492,-9.672779083251953],[-18.160568237304688,62.40380096435547,-11.94008731842041],[-17.883163452148438,60.753074645996094,-14.018928527832031],[-17.687591552734375,58.85184860229492,-15.8826265335083],[-17.55998992919922,56.72731399536133,-17.516313552856445],[-17.48387908935547,54.412960052490234,-18.934555053710938],[-17.451465606689453,51.93646240234375,-20.177427291870117],[-17.44402503967285,49.3154296875,-21.273880004882812],[-17.440898895263672,46.55317306518555,-22.245676040649414],[-17.41860580444336,43.637943267822266,-23.104537963867188],[-17.367359161376953,40.56013488769531,-23.853023529052734],[-17.291831970214844,37.30527114868164,-24.466899871826172],[-17.211654663085938,33.88254165649414,-24.933948516845703],[-17.174152374267578,30.31828498840332,-25.230985641479492],[-17.249650955200195,26.668846130371094,-25.334054946899414],[-17.522397994995117,23.00340461730957,-25.222721099853516],[-18.05678367614746,19.387800216674805,-24.937185287475586],[-18.88762092590332,15.866765975952148,-24.568584442138672],[-20.034379959106445,12.47618293762207,-24.250452041625977],[-16.3754825592041,62.97821044921875,-10.528867721557617],[-16.027732849121094,61.390235900878906,-12.808920860290527],[-15.793436050415039,59.56305694580078,-14.899808883666992],[-15.659056663513184,57.51613998413086,-16.77692413330078],[-15.605701446533203,55.27252197265625,-18.424917221069336],[-15.614850997924805,52.854164123535156,-19.851852416992188],[-15.662948608398438,50.28571319580078,-21.085580825805664],[-15.727396011352539,47.57450866699219,-22.145219802856445],[-15.787419319152832,44.715919494628906,-23.043935775756836],[-15.821210861206055,41.69216537475586,-23.785951614379883],[-15.827520370483398,38.48802185058594,-24.361787796020508],[-15.816069602966309,35.10384750366211,-24.771337509155273],[-15.82327651977539,31.553466796875,-25.00539207458496],[-15.908224105834961,27.876585006713867,-25.057388305664062],[-16.1556396484375,24.139188766479492,-24.920818328857422],[-16.63848114013672,20.412879943847656,-24.625991821289062],[-17.404556274414062,16.75341033935547,-24.2438907623291],[-18.485898971557617,13.202150344848633,-23.877838134765625],[-14.391413688659668,61.869197845458984,-11.274860382080078],[-14.08548641204834,60.09526062011719,-13.5646333694458],[-13.9039945602417,58.110836029052734,-15.663857460021973],[-13.829961776733398,55.93324661254883,-17.54814910888672],[-13.845715522766113,53.5760498046875,-19.197973251342773],[-13.922682762145996,51.06012725830078,-20.612205505371094],[-14.034394264221191,48.3995361328125,-21.80887794494629],[-14.157941818237305,45.5938606262207,-22.798004150390625],[-14.273244857788086,42.633174896240234,-23.585119247436523],[-14.3648681640625,39.49314498901367,-24.162607192993164],[-14.433448791503906,36.169578552246094,-24.54517936706543],[-14.503284454345703,32.66454315185547,-24.736812591552734],[-14.620975494384766,29.0019474029541,-24.745038986206055],[-14.859293937683105,25.229801177978516,-24.57844352722168],[-15.296463966369629,21.421537399291992,-24.27210807800293],[-15.99148941040039,17.64407730102539,-23.882465362548828],[-16.99044418334961,13.952532768249512,-23.49158477783203],[-12.6329927444458,60.466712951660156,-11.884178161621094],[-12.379125595092773,58.53217315673828,-14.173484802246094],[-12.248485565185547,56.4101676940918,-16.27069091796875],[-12.22659969329834,54.109920501708984,-18.149723052978516],[-12.291903495788574,51.64635467529297,-19.786226272583008],[-12.418083190917969,49.03124237060547,-21.169702529907227],[-12.578910827636719,46.27107620239258,-22.307849884033203],[-12.75167465209961,43.360931396484375,-23.201648712158203],[-12.920171737670898,40.2852897644043,-23.844894409179688],[-13.067950248718262,37.029945373535156,-24.249500274658203],[-13.207012176513672,33.58919143676758,-24.43565559387207],[-13.370341300964355,29.971664428710938,-24.424041748046875],[-13.617339134216309,26.207324981689453,-24.23682403564453],[-14.01789665222168,22.354841232299805,-23.918540954589844],[-14.642043113708496,18.489669799804688,-23.52411651611328],[-15.546777725219727,14.680253028869629,-23.1197509765625],[-11.146995544433594,58.81126403808594,-12.359418869018555],[-10.942427635192871,56.74031448364258,-14.635616302490234],[-10.851738929748535,54.49163818359375,-16.717554092407227],[-10.859607696533203,52.07745361328125,-18.579025268554688],[-10.952518463134766,49.50545120239258,-20.190217971801758],[-11.109590530395508,46.781585693359375,-21.529922485351562],[-11.304948806762695,43.90793991088867,-22.595165252685547],[-11.518125534057617,40.87434387207031,-23.374008178710938],[-11.7296142578125,37.67666244506836,-23.874366760253906],[-11.93185806274414,34.29960250854492,-24.109304428100586],[-12.143232345581055,30.741474151611328,-24.11634063720703],[-12.408440589904785,27.015207290649414,-23.93111801147461],[-12.78742790222168,23.163496017456055,-23.608945846557617],[-13.345829963684082,19.250686645507812,-23.211360931396484],[-14.154821395874023,15.355863571166992,-22.800371170043945],[-9.973920822143555,56.95646667480469,-12.721611976623535],[-9.803933143615723,54.76056671142578,-14.970457077026367],[-9.726912498474121,52.392967224121094,-17.02489471435547],[-9.738093376159668,49.86096954345703,-18.857057571411133],[-9.834006309509277,47.16832733154297,-20.431472778320312],[-10.000033378601074,44.31825637817383,-21.716535568237305],[-10.211679458618164,41.30671310424805,-22.69537925720215],[-10.447193145751953,38.137359619140625,-23.36217498779297],[-10.690786361694336,34.804725646972656,-23.725099563598633],[-10.940960884094238,31.300052642822266,-23.807588577270508],[-11.224733352661133,27.624427795410156,-23.663442611694336],[-11.590436935424805,23.804752349853516,-23.359909057617188],[-12.096678733825684,19.890602111816406,-22.969112396240234],[-12.811022758483887,15.950377464294434,-22.55794906616211],[-9.121746063232422,54.9541130065918,-13.009064674377441],[-8.956366539001465,52.637516021728516,-15.218449592590332],[-8.864568710327148,50.14408493041992,-17.231945037841797],[-8.851664543151855,47.479042053222656,-19.01935386657715],[-8.923355102539062,44.64528274536133,-20.540876388549805],[-9.071276664733887,41.64098358154297,-21.75337028503418],[-9.275076866149902,38.47779083251953,-22.641664505004883],[-9.514758110046387,35.158111572265625,-23.196596145629883],[-9.777223587036133,31.683460235595703,-23.433860778808594],[-10.06956958770752,28.05086898803711,-23.387670516967773],[-10.422663688659668,24.275279998779297,-23.14269256591797],[-10.885581970214844,20.389822006225586,-22.783781051635742],[-11.518732070922852,16.447246551513672,-22.38860511779785],[-8.558858871459961,52.84392547607422,-13.266569137573242],[-8.369505882263184,50.396568298339844,-15.421407699584961],[-8.237136840820312,47.760074615478516,-17.373979568481445],[-8.174592018127441,44.94026184082031,-19.091890335083008],[-8.193277359008789,41.936767578125,-20.528980255126953],[-8.296998977661133,38.766658782958984,-21.648900985717773],[-8.46802043914795,35.439537048339844,-22.432241439819336],[-8.691171646118164,31.9654541015625,-22.874732971191406],[-8.95942497253418,28.351675033569336,-23.000757217407227],[-9.287541389465332,24.61079978942871,-22.870981216430664],[-9.706571578979492,20.76234245300293,-22.587554931640625],[-10.26694393157959,16.841211318969727,-22.24108123779297],[-8.194406509399414,50.63579559326172,-13.51333999633789],[-7.960048675537109,48.042198181152344,-15.59270191192627],[-7.769879341125488,45.24494934082031,-17.456785202026367],[-7.639322757720947,42.24755859375,-19.06568145751953],[-7.591098785400391,39.07070541381836,-20.385547637939453],[-7.632311820983887,35.72999954223633,-21.380592346191406],[-7.7518229484558105,32.24208450317383,-22.038625717163086],[-7.941913604736328,28.621843338012695,-22.365673065185547],[-8.206341743469238,24.89083480834961,-22.414241790771484],[-8.566612243652344,21.06611442565918,-22.260658264160156],[-9.053116798400879,17.16781997680664,-22.01055145263672],[-7.932655334472656,48.31867980957031,-13.727827072143555],[-7.642427921295166,45.567081451416016,-15.703547477722168],[-7.385472297668457,42.5945930480957,-17.438032150268555],[-7.186332702636719,39.42579650878906,-18.904556274414062],[-7.066314220428467,36.07973861694336,-20.06938362121582],[-7.0374755859375,32.579132080078125,-20.909339904785156],[-7.094839096069336,28.94429588317871,-21.425168991088867],[-7.244801998138428,25.202178955078125,-21.658279418945312],[-7.50076961517334,21.37574005126953,-21.68235969543457],[-7.892593860626221,17.483301162719727,-21.577499389648438],[-7.689638137817383,45.88050842285156,-13.858628273010254],[-7.342529773712158,42.96464538574219,-15.689955711364746],[-7.027116775512695,39.8306884765625,-17.265064239501953],[-6.764822959899902,36.5015983581543,-18.554079055786133],[-6.5774078369140625,33.00277328491211,-19.534812927246094],[-6.478976726531982,29.359832763671875,-20.199649810791016],[-6.47674560546875,25.603330612182617,-20.59044075012207],[-6.588086128234863,21.759872436523438,-20.77750015258789],[-6.8353118896484375,17.850093841552734,-20.84534454345703],[-7.39833402633667,43.31587600708008,-13.83082103729248],[-7.009239673614502,40.2541618347168,-15.492748260498047],[-6.647921562194824,36.97349548339844,-16.8781795501709],[-6.334733486175537,33.502235412597656,-17.966094970703125],[-6.089783191680908,29.867639541625977,-18.747087478637695],[-5.9338226318359375,26.104522705078125,-19.257856369018555],[-5.882786750793457,22.243471145629883,-19.57366180419922],[-5.962085247039795,18.307968139648438,-19.78176498413086],[-7.015816688537598,40.643455505371094,-13.58637809753418],[-6.603531837463379,37.452178955078125,-15.054608345031738],[-6.214483261108398,34.041744232177734,-16.232666015625],[-5.866522312164307,30.441036224365234,-17.10887336730957],[-5.581530570983887,26.685577392578125,-17.71613883972168],[-5.3848395347595215,22.81256866455078,-18.127382278442383],[-5.298603057861328,18.850990295410156,-18.437881469726562],[-6.533292770385742,37.876285552978516,-13.09066104888916],[-6.116207122802734,34.56831359863281,-14.35377311706543],[-5.71634578704834,31.03499984741211,-15.318695068359375],[-5.3505635261535645,27.31206512451172,-16.012157440185547],[-5.041910648345947,23.439498901367188,-16.502994537353516],[-4.819654941558838,19.456443786621094,-16.8879451751709],[-5.9626264572143555,35.02241897583008,-12.336806297302246],[-5.557374477386475,31.60213851928711,-13.392993927001953],[-5.161476135253906,27.94841957092285,-14.173711776733398],[-4.791449069976807,24.103004455566406,-14.739197731018066],[-4.472779750823975,20.11128807067871,-15.183987617492676],[-5.330443859100342,32.0807991027832,-11.341594696044922],[-4.948215484619141,28.549779891967773,-12.219904899597168],[-4.565387725830078,24.773784637451172,-12.866364479064941],[-4.201117992401123,20.804088592529297,-13.366939544677734],[-4.665627956390381,29.050724029541016,-10.162083625793457],[-4.311150550842285,25.41005516052246,-10.907624244689941],[-3.946659803390503,21.511844635009766,-11.470897674560547],[-4.000255107879639,25.941936492919922,-8.881704330444336],[-3.6724166870117188,22.195571899414062,-9.531577110290527],[-3.361076831817627,22.786630630493164,-7.578064918518066],[-61.6349983215332,-47.14161682128906,-9.4942626953125],[-61.80359649658203,-44.90716552734375,-10.644458770751953],[-61.94367218017578,-42.495391845703125,-11.806357383728027],[-62.057403564453125,-39.95096969604492,-12.951400756835938],[-62.141414642333984,-37.2964973449707,-14.069835662841797],[-62.18635940551758,-34.553810119628906,-15.165946006774902],[-62.18055725097656,-31.747957229614258,-16.254947662353516],[-62.10812759399414,-28.900503158569336,-17.357402801513672],[-61.95111846923828,-26.033903121948242,-18.49740219116211],[-61.683250427246094,-23.17115020751953,-19.705318450927734],[-61.29076385498047,-20.33245086669922,-21.001432418823242],[-60.760494232177734,-17.530441284179688,-22.400070190429688],[-60.081886291503906,-14.771940231323242,-23.907182693481445],[-59.245155334472656,-12.059409141540527,-25.5190486907959],[-58.24365997314453,-9.391762733459473,-27.21600341796875],[-57.08991241455078,-6.763221740722656,-28.957096099853516],[-55.79536437988281,-4.171097278594971,-30.69469451904297],[-54.378047943115234,-1.6153255701065063,-32.372413635253906],[-52.85722351074219,0.8972301483154297,-33.92106246948242],[-51.262027740478516,3.3554723262786865,-35.284446716308594],[-49.61500549316406,5.7400360107421875,-36.42493438720703],[-47.9327278137207,8.020628929138184,-37.318538665771484],[-46.228904724121094,10.15361499786377,-37.95250701904297],[-44.519107818603516,12.06908130645752,-38.30964279174805],[-42.82551574707031,13.70729923248291,-38.395835876464844],[-41.18388748168945,14.984640121459961,-38.19179916381836],[-39.65542221069336,15.801420211791992,-37.68388366699219],[-38.341678619384766,16.042016983032227,-36.89605712890625],[-37.31939697265625,15.72043228149414,-35.93779754638672],[-36.574886322021484,14.994085311889648,-34.89903259277344],[-36.048736572265625,14.056886672973633,-33.82015609741211],[-23.210552215576172,-56.672149658203125,-14.445066452026367],[-24.643508911132812,-53.9183349609375,-15.564680099487305],[-25.922544479370117,-50.916893005371094,-16.8792724609375],[-26.990997314453125,-47.779300689697266,-18.39581871032715],[-27.83568000793457,-44.588783264160156,-20.0988712310791],[-28.491802215576172,-41.40953063964844,-21.930797576904297],[-29.02373695373535,-38.27885437011719,-23.813724517822266],[-29.484359741210938,-35.21906280517578,-25.679914474487305],[-29.90816879272461,-32.24480056762695,-27.47444725036621],[-30.300662994384766,-29.368690490722656,-29.153369903564453],[-30.642925262451172,-26.58559799194336,-30.705455780029297],[-30.903377532958984,-23.888408660888672,-32.13262176513672],[-31.051143646240234,-21.269990921020508,-33.44511032104492],[-31.063640594482422,-18.726396560668945,-34.656898498535156],[-30.936309814453125,-16.257448196411133,-35.78421401977539],[-30.695659637451172,-13.859018325805664,-36.84575653076172],[-30.37322235107422,-11.528316497802734,-37.848304748535156],[-30.004873275756836,-9.257176399230957,-38.78746032714844],[-29.62478256225586,-7.031472206115723,-39.636962890625],[-29.261627197265625,-4.828035354614258,-40.35546112060547],[-28.93659210205078,-2.630497932434082,-40.89204406738281],[-28.672780990600586,-0.43520689010620117,-41.19621276855469],[-28.502458572387695,1.7461704015731812,-41.2305793762207],[-28.478946685791016,3.8823437690734863,-40.97315979003906],[-28.647998809814453,5.933950424194336,-40.45917892456055],[-29.057722091674805,7.848291397094727,-39.720985412597656],[-29.7393798828125,9.5601806640625,-38.79681396484375],[-30.700769424438477,10.982757568359375,-37.72178649902344],[-31.884403228759766,12.049625396728516,-36.53748321533203],[-33.191524505615234,12.74144172668457,-35.281044006347656],[-34.50714874267578,13.077409744262695,-33.99382019042969],[-22.742900848388672,-59.94093322753906,-13.752405166625977],[-23.73370361328125,-60.937198638916016,-14.088237762451172],[-24.673625946044922,-61.865928649902344,-14.555458068847656],[-25.547142028808594,-62.66181945800781,-15.174060821533203],[-26.36134147644043,-63.28010177612305,-15.953060150146484],[-27.15491485595703,-63.724876403808594,-16.868499755859375],[-28.00033950805664,-64.03409576416016,-17.871990203857422],[-28.981609344482422,-64.22795104980469,-18.913681030273438],[-30.164825439453125,-64.31130981445312,-19.93546485900879],[-31.58737564086914,-64.27920532226562,-20.86473846435547],[-33.213523864746094,-64.14196014404297,-21.643186569213867],[-34.99188995361328,-63.90394592285156,-22.227798461914062],[-36.86259078979492,-63.56576156616211,-22.586681365966797],[-38.76152038574219,-63.1270751953125,-22.69428253173828],[-40.62062454223633,-62.59486389160156,-22.53915023803711],[-42.3896598815918,-61.992881774902344,-22.155479431152344],[-44.04066467285156,-61.344017028808594,-21.58951759338379],[-45.57229232788086,-60.66850662231445,-20.90509033203125],[-47.005428314208984,-59.98014450073242,-20.170541763305664],[-48.383209228515625,-59.28948974609375,-19.44354248046875],[-49.738380432128906,-58.60361099243164,-18.746320724487305],[-51.08732986450195,-57.9219856262207,-18.072193145751953],[-52.43107604980469,-57.2302131652832,-17.39373779296875],[-53.75511932373047,-56.49769592285156,-16.670936584472656],[-55.03821563720703,-55.700233459472656,-15.874761581420898],[-56.256919860839844,-54.82745361328125,-14.988080978393555],[-57.39203643798828,-53.88551330566406,-14.007122993469238],[-58.42817306518555,-52.89274215698242,-12.938163757324219],[-59.361572265625,-51.878761291503906,-11.804352760314941],[-60.18989562988281,-50.874359130859375,-10.638250350952148],[-60.89694595336914,-49.91594314575195,-9.485044479370117],[-34.75688552856445,14.026204109191895,-35.35283660888672],[-35.274070739746094,14.812902450561523,-36.621421813964844],[-36.113460540771484,15.247434616088867,-37.80611801147461],[-37.31547927856445,15.162643432617188,-38.83244323730469],[-38.828922271728516,14.504426002502441,-39.57105255126953],[-40.52842712402344,13.356961250305176,-39.966835021972656],[-42.325347900390625,11.823481559753418,-40.03712463378906],[-44.166839599609375,9.988466262817383,-39.80331039428711],[-46.025997161865234,7.918449401855469,-39.267520904541016],[-47.8624153137207,5.676429748535156,-38.438201904296875],[-49.65929412841797,3.315004825592041,-37.336204528808594],[-51.39704895019531,0.8677473068237305,-35.988006591796875],[-53.053165435791016,-1.643997073173523,-34.43307113647461],[-54.59819030761719,-4.208691596984863,-32.728511810302734],[-56.00490951538086,-6.818902015686035,-30.94893455505371],[-57.260536193847656,-9.471064567565918,-29.155330657958984],[-58.352935791015625,-12.16565990447998,-27.399213790893555],[-59.2718505859375,-14.906669616699219,-25.72322654724121],[-60.018272399902344,-17.693483352661133,-24.154687881469727],[-60.60469055175781,-20.523719787597656,-22.70036506652832],[-61.04391098022461,-23.39206314086914,-21.355974197387695],[-61.349884033203125,-26.288145065307617,-20.10871696472168],[-61.53654098510742,-29.194854736328125,-18.93912696838379],[-61.627784729003906,-32.08784866333008,-17.81660270690918],[-61.643165588378906,-34.94426727294922,-16.71273422241211],[-61.598777770996094,-37.740543365478516,-15.60263729095459],[-61.50693130493164,-40.45116424560547,-14.464627265930176],[-61.38095474243164,-43.05152130126953,-13.285360336303711],[-61.231441497802734,-45.520729064941406,-12.06380844116211],[-61.06500244140625,-47.82923889160156,-10.801554679870605],[-33.427284240722656,13.555154800415039,-36.80840301513672],[-34.02192306518555,14.088857650756836,-38.23074722290039],[-35.038047790527344,14.164216995239258,-39.504852294921875],[-36.45652770996094,13.696514129638672,-40.508941650390625],[-38.157230377197266,12.728025436401367,-41.152835845947266],[-40.01936340332031,11.340642929077148,-41.427581787109375],[-41.964820861816406,9.625856399536133,-41.364227294921875],[-43.95136260986328,7.652131080627441,-40.969581604003906],[-45.936038970947266,5.4883880615234375,-40.25836944580078],[-47.88015365600586,3.1785459518432617,-39.23833465576172],[-49.76199722290039,0.7649850845336914,-37.94343185424805],[-51.55678939819336,-1.7287365198135376,-36.41477584838867],[-53.23536682128906,-4.2905144691467285,-34.710540771484375],[-54.769317626953125,-6.913134574890137,-32.90658950805664],[-56.13633346557617,-9.590848922729492,-31.071025848388672],[-57.32861328125,-12.319713592529297,-29.26152801513672],[-58.334354400634766,-15.101444244384766,-27.525758743286133],[-59.15656280517578,-17.932302474975586,-25.893999099731445],[-59.802860260009766,-20.805959701538086,-24.38081169128418],[-60.28901672363281,-23.71686553955078,-22.984500885009766],[-60.63141632080078,-26.656076431274414,-21.69330406188965],[-60.84480667114258,-29.608644485473633,-20.488414764404297],[-60.955135345458984,-32.55207824707031,-19.338285446166992],[-60.98076629638672,-35.46174621582031,-18.21320343017578],[-60.939029693603516,-38.31533432006836,-17.08319854736328],[-60.84236145019531,-41.08679962158203,-15.920621871948242],[-60.70488357543945,-43.753299713134766,-14.704239845275879],[-60.541160583496094,-46.29350662231445,-13.424635887145996],[-60.36366271972656,-48.681827545166016,-12.074967384338379],[-32.189205169677734,12.637020111083984,-38.18059158325195],[-32.94612503051758,12.851593971252441,-39.694034576416016],[-34.182090759277344,12.575218200683594,-40.968955993652344],[-35.79868698120117,11.812784194946289,-41.89691925048828],[-37.66592788696289,10.615971565246582,-42.43187713623047],[-39.67310333251953,9.058929443359375,-42.5848388671875],[-41.75520706176758,7.218391418457031,-42.3763542175293],[-43.857757568359375,5.16331148147583,-41.822898864746094],[-45.94109344482422,2.9444079399108887,-40.93792724609375],[-47.96399688720703,0.5929632782936096,-39.73773956298828],[-49.8994140625,-1.859419345855713,-38.270591735839844],[-51.715721130371094,-4.399855613708496,-36.595829010009766],[-53.38360595703125,-7.0211501121521,-34.79182434082031],[-54.878013610839844,-9.717540740966797,-32.92975997924805],[-56.18040084838867,-12.481219291687012,-31.076126098632812],[-57.28240203857422,-15.309520721435547,-29.28582000732422],[-58.185665130615234,-18.194421768188477,-27.59522819519043],[-58.89992904663086,-21.126670837402344,-26.021770477294922],[-59.4368896484375,-24.094928741455078,-24.57084846496582],[-59.816287994384766,-27.089588165283203,-23.232481002807617],[-60.055198669433594,-30.097198486328125,-21.988018035888672],[-60.18225860595703,-33.09577941894531,-20.805038452148438],[-60.21728515625,-36.06367111206055,-19.652128219604492],[-60.17795944213867,-38.975616455078125,-18.497392654418945],[-60.07717514038086,-41.80791473388672,-17.307390213012695],[-59.92963409423828,-44.537078857421875,-16.05589485168457],[-59.75035858154297,-47.14408874511719,-14.727787971496582],[-59.55488967895508,-49.60324478149414,-13.313755989074707],[-31.152992248535156,11.292057991027832,-39.43508529663086],[-32.12425231933594,11.186653137207031,-40.96006774902344],[-33.565269470214844,10.627944946289062,-42.17301559448242],[-35.351890563964844,9.64217472076416,-42.99931716918945],[-37.358272552490234,8.281822204589844,-43.418785095214844],[-39.490394592285156,6.607433795928955,-43.43632888793945],[-41.675880432128906,4.6948089599609375,-43.080665588378906],[-43.86569595336914,2.5944712162017822,-42.36456298828125],[-46.01832580566406,0.34425482153892517,-41.30850601196289],[-48.08888626098633,-2.037712812423706,-39.94035339355469],[-50.04244613647461,-4.53192138671875,-38.3267822265625],[-51.846214294433594,-7.131301403045654,-36.549495697021484],[-53.47284698486328,-9.829788208007812,-34.68410873413086],[-54.89997100830078,-12.619318008422852,-32.801666259765625],[-56.10750198364258,-15.492086410522461,-30.96714210510254],[-57.10066604614258,-18.434267044067383,-29.224624633789062],[-57.888301849365234,-21.431610107421875,-27.596948623657227],[-58.48399353027344,-24.470394134521484,-26.091840744018555],[-58.904388427734375,-27.533546447753906,-24.705047607421875],[-59.16996765136719,-30.6068058013916,-23.4188289642334],[-59.31330108642578,-33.66838073730469,-22.19956398010254],[-59.356483459472656,-36.69780731201172,-21.014789581298828],[-59.31855010986328,-39.672813415527344,-19.83035659790039],[-59.21356201171875,-42.56568145751953,-18.61098861694336],[-59.05653381347656,-45.35551071166992,-17.326129913330078],[-58.86277770996094,-48.022972106933594,-15.958541870117188],[-58.647071838378906,-50.5457878112793,-14.497265815734863],[-30.390697479248047,9.588905334472656,-40.52036666870117],[-31.569849014282227,9.21660327911377,-41.99237060546875],[-33.186798095703125,8.435730934143066,-43.10523986816406],[-35.10894775390625,7.2855305671691895,-43.812782287597656],[-37.22709274291992,5.810449600219727,-44.096736907958984],[-39.44748306274414,4.0696024894714355,-43.97092056274414],[-41.70585632324219,2.1195342540740967,-43.45698165893555],[-43.95249557495117,-0.002903364598751068,-42.57205581665039],[-46.14204406738281,-2.2739622592926025,-41.346534729003906],[-48.22248840332031,-4.690612316131592,-39.82689666748047],[-50.1568489074707,-7.240655899047852,-38.10505676269531],[-51.913028717041016,-9.917938232421875,-36.26198196411133],[-53.4655876159668,-12.713757514953613,-34.37453079223633],[-54.78969192504883,-15.61959171295166,-32.51347732543945],[-55.87969207763672,-18.614259719848633,-30.73251724243164],[-56.74798583984375,-21.677125930786133,-29.0609130859375],[-57.40740203857422,-24.78920555114746,-27.5106143951416],[-57.87620162963867,-27.931316375732422,-26.07880973815918],[-58.17264175415039,-31.080808639526367,-24.75177001953125],[-58.33403778076172,-34.214141845703125,-23.495580673217773],[-58.386024475097656,-37.31159591674805,-22.277027130126953],[-58.350006103515625,-40.35200119018555,-21.06108856201172],[-58.24106216430664,-43.31059265136719,-19.810508728027344],[-58.07590103149414,-46.161705017089844,-18.494577407836914],[-57.869441986083984,-48.88930892944336,-17.094148635864258],[-57.63603210449219,-51.47205352783203,-15.59892749786377],[-29.909786224365234,7.633667945861816,-41.39676284790039],[-31.272239685058594,7.041877746582031,-42.767311096191406],[-33.028228759765625,6.090936660766602,-43.74982833862305],[-35.05422592163086,4.821759223937988,-44.308441162109375],[-37.2463264465332,3.281217098236084,-44.441368103027344],[-39.52480697631836,1.50836980342865,-44.152801513671875],[-41.826053619384766,-0.4550611674785614,-43.46488571166992],[-44.09666442871094,-2.587681293487549,-42.40243148803711],[-46.28308868408203,-4.882991790771484,-41.01412582397461],[-48.33243179321289,-7.349380970001221,-39.37628936767578],[-50.20707702636719,-9.975503921508789,-37.582069396972656],[-51.876644134521484,-12.75206470489502,-35.715206146240234],[-53.31256866455078,-15.66917610168457,-33.853355407714844],[-54.505645751953125,-18.70313835144043,-32.05543899536133],[-55.458560943603516,-21.824268341064453,-30.357402801513672],[-56.187068939208984,-25.007183074951172,-28.7761287689209],[-56.708805084228516,-28.227367401123047,-27.311487197875977],[-57.0433235168457,-31.460315704345703,-25.950355529785156],[-57.2276496887207,-34.673553466796875,-24.660606384277344],[-57.291770935058594,-37.8460693359375,-23.40992546081543],[-57.26049041748047,-40.957679748535156,-22.1634464263916],[-57.151161193847656,-43.98505783081055,-20.884143829345703],[-56.9810791015625,-46.9056282043457,-19.540786743164062],[-56.76618194580078,-49.69827651977539,-18.115386962890625],[-56.519676208496094,-52.34618377685547,-16.59772491455078],[-29.68562889099121,5.509234428405762,-42.03453063964844],[-31.19765853881836,4.7422661781311035,-43.26224899291992],[-33.061134338378906,3.6641273498535156,-44.0739631652832],[-35.15532684326172,2.325869560241699,-44.462677001953125],[-37.395050048828125,0.7558241486549377,-44.419525146484375],[-39.705299377441406,-1.0227265357971191,-43.9461555480957],[-42.01919174194336,-2.9849791526794434,-43.068599700927734],[-44.27457046508789,-5.129495620727539,-41.82890319824219],[-46.41629409790039,-7.465510845184326,-40.30832290649414],[-48.391300201416016,-10.004485130310059,-38.588443756103516],[-50.163421630859375,-12.730960845947266,-36.76664352416992],[-51.69853973388672,-15.633411407470703,-34.92866134643555],[-52.98577880859375,-18.684350967407227,-33.139949798583984],[-54.02529525756836,-21.85001564025879,-31.439289093017578],[-54.82453155517578,-25.09491729736328,-29.84673309326172],[-55.4031982421875,-28.38853645324707,-28.365867614746094],[-55.78020477294922,-31.701250076293945,-26.98519515991211],[-55.99490737915039,-34.99958801269531,-25.671472549438477],[-56.077117919921875,-38.25414276123047,-24.394750595092773],[-56.05569076538086,-41.44384002685547,-23.12255096435547],[-55.951148986816406,-44.547203063964844,-21.819869995117188],[-55.78254318237305,-47.54366683959961,-20.456995010375977],[-55.565181732177734,-50.41564178466797,-19.016273498535156],[-55.31240463256836,-53.13992691040039,-17.488323211669922],[-29.677770614624023,3.2824416160583496,-42.39997863769531],[-31.313003540039062,2.3794734477996826,-43.434688568115234],[-33.25175094604492,1.225833535194397,-44.051841735839844],[-35.393436431884766,-0.14287780225276947,-44.243865966796875],[-37.660194396972656,-1.712934136390686,-44.00002670288086],[-39.97635269165039,-3.4794185161590576,-43.322906494140625],[-42.2666130065918,-5.440423011779785,-42.25273513793945],[-44.467247009277344,-7.615730285644531,-40.865867614746094],[-46.52070236206055,-10.019868850708008,-39.24953079223633],[-48.37662124633789,-12.660914421081543,-37.494571685791016],[-49.99435806274414,-15.519611358642578,-35.7015266418457],[-51.360260009765625,-18.563373565673828,-33.944114685058594],[-52.47400665283203,-21.752288818359375,-32.265621185302734],[-53.341514587402344,-25.04587745666504,-30.686979293823242],[-53.97618865966797,-28.403297424316406,-29.211130142211914],[-54.39801025390625,-31.78997230529785,-27.829689025878906],[-54.64717102050781,-35.16847229003906,-26.50855255126953],[-54.75462341308594,-38.50990295410156,-25.21863555908203],[-54.749542236328125,-41.78544235229492,-23.930213928222656],[-54.65599060058594,-44.97381591796875,-22.613033294677734],[-54.49543380737305,-48.05705642700195,-21.240564346313477],[-54.28356170654297,-51.01933670043945,-19.796701431274414],[-54.03228759765625,-53.841529846191406,-18.273468017578125],[-29.846302032470703,1.004094123840332,-42.45320129394531],[-31.576387405395508,0.017613181844353676,-43.27119827270508],[-33.57533264160156,-1.170624017715454,-43.6700325012207],[-35.75092697143555,-2.538134813308716,-43.64365768432617],[-38.025569915771484,-4.088743209838867,-43.18140411376953],[-40.31651306152344,-5.843376159667969,-42.297569274902344],[-42.54740524291992,-7.8266282081604,-41.065879821777344],[-44.65156936645508,-10.066773414611816,-39.56894302368164],[-46.57225036621094,-12.577072143554688,-37.905330657958984],[-48.25490951538086,-15.360209465026855,-36.17401885986328],[-49.682247161865234,-18.37132453918457,-34.46448516845703],[-50.853187561035156,-21.562088012695312,-32.8265495300293],[-51.774322509765625,-24.88482093811035,-31.283933639526367],[-52.45896911621094,-28.29350471496582,-29.83855438232422],[-52.92283248901367,-31.744373321533203,-28.47818946838379],[-53.20773696899414,-35.19706726074219,-27.169702529907227],[-53.34425735473633,-38.62040328979492,-25.884506225585938],[-53.36240005493164,-41.98777389526367,-24.595386505126953],[-53.286651611328125,-45.27109909057617,-23.27626609802246],[-53.1410026550293,-48.45291519165039,-21.90606689453125],[-52.94214630126953,-51.51919937133789,-20.471742630004883],[-52.70163345336914,-54.45230484008789,-18.966997146606445],[-30.139911651611328,-1.2709873914718628,-42.193058013916016],[-31.95541000366211,-2.300990581512451,-42.77676773071289],[-34.0078010559082,-3.4931130409240723,-42.94269561767578],[-36.20587158203125,-4.841739177703857,-42.6858024597168],[-38.464385986328125,-6.376492500305176,-42.00461959838867],[-40.69923782348633,-8.148933410644531,-40.945716857910156],[-42.83198165893555,-10.196789741516113,-39.588600158691406],[-44.795894622802734,-12.550135612487793,-38.02956771850586],[-46.52763366699219,-15.2181978225708,-36.37843322753906],[-47.9989013671875,-18.171066284179688,-34.7283821105957],[-49.2081298828125,-21.343528747558594,-33.14374542236328],[-50.16371154785156,-24.67770004272461,-31.652677536010742],[-50.881561279296875,-28.120346069335938,-30.257822036743164],[-51.378814697265625,-31.62394905090332,-28.944137573242188],[-51.69557571411133,-35.14151382446289,-27.670948028564453],[-51.862125396728516,-38.641395568847656,-26.41182518005371],[-51.907691955566406,-42.09614944458008,-25.14094352722168],[-51.857452392578125,-45.48188018798828,-23.837379455566406],[-51.735069274902344,-48.7735481262207,-22.48428726196289],[-51.55826950073242,-51.956111907958984,-21.07367515563965],[-51.33880615234375,-55.01295852661133,-19.60209846496582],[-30.517393112182617,-3.5237770080566406,-41.65422821044922],[-32.411773681640625,-4.570023059844971,-42.00083541870117],[-34.50893783569336,-5.753045082092285,-41.93192672729492],[-36.70981979370117,-7.091960906982422,-41.44982147216797],[-38.924896240234375,-8.647132873535156,-40.58342742919922],[-41.06795120239258,-10.487675666809082,-39.385528564453125],[-43.060489654541016,-12.657726287841797,-37.9510612487793],[-44.82732009887695,-15.186311721801758,-36.390625],[-46.330570220947266,-18.04669952392578,-34.813568115234375],[-47.562889099121094,-21.180021286010742,-33.28959655761719],[-48.535430908203125,-24.509462356567383,-31.858718872070312],[-49.26856994628906,-27.971328735351562,-30.525775909423828],[-49.783634185791016,-31.512187957763672,-29.275104522705078],[-50.12457275390625,-35.084049224853516,-28.060569763183594],[-50.3191032409668,-38.65113067626953,-26.847911834716797],[-50.39494705200195,-42.187103271484375,-25.614635467529297],[-50.376380920410156,-45.66809844970703,-24.3429012298584],[-50.2874641418457,-49.07309341430664,-23.022584915161133],[-50.14381408691406,-52.3770637512207,-21.6484432220459],[-49.95738220214844,-55.561279296875,-20.221534729003906],[-30.9475040435791,-5.756061553955078,-40.887996673583984],[-32.91127014160156,-6.810133457183838,-41.004146575927734],[-35.03434371948242,-7.997271537780762,-40.71133041381836],[-37.21086883544922,-9.365464210510254,-40.03977584838867],[-39.34809494018555,-10.995102882385254,-39.023685455322266],[-41.35778045654297,-12.96682071685791,-37.73410415649414],[-43.15182876586914,-15.329355239868164,-36.28279113769531],[-44.67913818359375,-18.073650360107422,-34.78615951538086],[-45.92424011230469,-21.13945198059082,-33.33197021484375],[-46.89915466308594,-24.447965621948242,-31.965227127075195],[-47.630577087402344,-27.916345596313477,-30.699451446533203],[-48.14678192138672,-31.481792449951172,-29.519123077392578],[-48.49827575683594,-35.09288787841797,-28.375431060791016],[-48.71521759033203,-38.715919494628906,-27.229618072509766],[-48.821929931640625,-42.32162857055664,-26.051315307617188],[-48.840736389160156,-45.88786315917969,-24.82767105102539],[-48.79374313354492,-49.39237594604492,-23.552297592163086],[-48.696083068847656,-52.8133544921875,-22.22757339477539],[-48.55608367919922,-56.12068176269531,-20.855545043945312],[-31.40302276611328,-7.988836765289307,-39.95238494873047],[-33.41534423828125,-9.065384864807129,-39.85401153564453],[-35.53430938720703,-10.293746948242188,-39.37479019165039],[-37.65142822265625,-11.743719100952148,-38.54926681518555],[-39.668941497802734,-13.511480331420898,-37.43001937866211],[-41.48591613769531,-15.68919563293457,-36.10832214355469],[-43.035743713378906,-18.289438247680664,-34.70778274536133],[-44.29108810424805,-21.264741897583008,-33.32673645019531],[-45.2585334777832,-24.53015899658203,-32.0284309387207],[-45.973636627197266,-27.993133544921875,-30.829578399658203],[-46.47449493408203,-31.573307037353516,-29.719947814941406],[-46.82126235961914,-35.21181869506836,-28.64937400817871],[-47.049007415771484,-38.87485122680664,-27.57716941833496],[-47.18364715576172,-42.53691101074219,-26.469682693481445],[-47.242733001708984,-46.17292404174805,-25.306983947753906],[-47.24477767944336,-49.76158905029297,-24.08841896057129],[-47.20124816894531,-53.278839111328125,-22.82008171081543],[-47.1201286315918,-56.69704818725586,-21.51226806640625],[-31.85091209411621,-10.25709342956543,-38.904727935791016],[-33.87744903564453,-11.387274742126465,-38.62974166870117],[-35.95536804199219,-12.702845573425293,-37.999149322509766],[-37.970314025878906,-14.292184829711914,-37.06477355957031],[-39.80851745605469,-16.271028518676758,-35.899627685546875],[-41.384498596191406,-18.702259063720703,-34.613365173339844],[-42.65462875366211,-21.55796241760254,-33.31633758544922],[-43.61637496948242,-24.759218215942383,-32.084083557128906],[-44.30445861816406,-28.201539993286133,-30.950321197509766],[-44.77439498901367,-31.78919219970703,-29.90528678894043],[-45.09964370727539,-35.44766616821289,-28.902507781982422],[-45.3233757019043,-39.1395378112793,-27.900230407714844],[-45.47500228881836,-42.8410530090332,-26.863941192626953],[-45.572265625,-46.53141784667969,-25.77205467224121],[-45.62542724609375,-50.18609619140625,-24.61777114868164],[-45.6407470703125,-53.78131103515625,-23.412826538085938],[-45.621978759765625,-57.286705017089844,-22.170780181884766],[-32.24812698364258,-12.592611312866211,-37.80253219604492],[-34.24957275390625,-13.811566352844238,-37.38323211669922],[-36.242549896240234,-15.260177612304688,-36.64266586303711],[-38.09649658203125,-17.052053451538086,-35.65134048461914],[-39.706302642822266,-19.28672218322754,-34.503482818603516],[-41.00362014770508,-21.990764617919922,-33.30270767211914],[-41.969818115234375,-25.098953247070312,-32.1400032043457],[-42.63496780395508,-28.503847122192383,-31.061969757080078],[-43.06047821044922,-32.09154510498047,-30.072959899902344],[-43.34608459472656,-35.767547607421875,-29.12626838684082],[-43.54707717895508,-39.483787536621094,-28.183059692382812],[-43.69902420043945,-43.215423583984375,-27.208728790283203],[-43.82083511352539,-46.9446907043457,-26.18182373046875],[-43.91943359375,-50.65129089355469,-25.09564208984375],[-43.99015426635742,-54.30788040161133,-23.956218719482422],[-44.03105163574219,-57.88420867919922,-22.782127380371094],[-32.558265686035156,-15.011249542236328,-36.66239929199219],[-34.489768981933594,-16.35228729248047,-36.13279342651367],[-36.340354919433594,-17.984760284423828,-35.32538986206055],[-37.98447799682617,-20.01815414428711,-34.332054138183594],[-39.326847076416016,-22.528783798217773,-33.245826721191406],[-40.31868362426758,-25.5048770904541,-32.1581916809082],[-40.975975036621094,-28.84374237060547,-31.132902145385742],[-41.36141586303711,-32.419090270996094,-30.18628692626953],[-41.5897216796875,-36.11148452758789,-29.284025192260742],[-41.7462043762207,-39.85347366333008,-28.386333465576172],[-41.8760986328125,-43.61370849609375,-27.461238861083984],[-42.00161361694336,-47.37546920776367,-26.487585067749023],[-42.12687683105469,-51.122215270996094,-25.460105895996094],[-42.241180419921875,-54.830657958984375,-24.38552474975586],[-42.33121871948242,-58.466217041015625,-23.27704429626465],[-32.74403381347656,-17.520322799682617,-35.48815155029297],[-34.55278778076172,-19.021907806396484,-34.880001068115234],[-36.21569061279297,-20.870773315429688,-34.04930877685547],[-37.612831115722656,-23.16655731201172,-33.08879089355469],[-38.659149169921875,-25.957876205444336,-32.085453033447266],[-39.33642578125,-29.189105987548828,-31.111116409301758],[-39.69767379760742,-32.72727966308594,-30.19918441772461],[-39.87015914916992,-36.42747116088867,-29.3273983001709],[-39.958702087402344,-40.198768615722656,-28.46380615234375],[-40.04062271118164,-43.991363525390625,-27.575523376464844],[-40.14385223388672,-47.7861213684082,-26.6433048248291],[-40.27153396606445,-51.56888961791992,-25.66277503967285],[-40.407012939453125,-55.32041549682617,-24.641984939575195],[-40.52919387817383,-59.00950622558594,-23.59527015686035],[-32.77098846435547,-20.127727508544922,-34.26744842529297],[-34.41825485229492,-21.81593894958496,-33.61188507080078],[-35.86161422729492,-23.902132034301758,-32.78224563598633],[-36.9852294921875,-26.47124481201172,-31.86748695373535],[-37.72318649291992,-29.534992218017578,-30.943233489990234],[-38.09281539916992,-32.9952507019043,-30.057924270629883],[-38.22338104248047,-36.682125091552734,-29.207326889038086],[-38.24092483520508,-40.47637176513672,-28.366477966308594],[-38.24546813964844,-44.30712890625,-27.506994247436523],[-38.29645538330078,-48.139469146728516,-26.607730865478516],[-38.39769744873047,-51.959651947021484,-25.66526222229004],[-38.52802276611328,-55.75119400024414,-24.687931060791016],[-38.65814971923828,-59.486656188964844,-23.691364288330078],[-32.63031768798828,-22.82863998413086,-32.980018615722656],[-34.09497833251953,-24.721820831298828,-32.28921890258789],[-35.30111312866211,-27.060087203979492,-31.46294593811035],[-36.14167404174805,-29.90543556213379,-30.583147048950195],[-36.573123931884766,-33.22705078125,-29.712234497070312],[-36.695404052734375,-36.86441421508789,-28.869632720947266],[-36.650543212890625,-40.664146423339844,-28.042509078979492],[-36.56779479980469,-44.5274772644043,-27.205215454101562],[-36.530113220214844,-48.40358352661133,-26.337121963500977],[-36.570457458496094,-52.26580047607422,-25.429656982421875],[-36.66361999511719,-56.09885025024414,-24.49072265625],[-36.77309799194336,-59.87757873535156,-23.536176681518555],[-32.34297180175781,-25.621871948242188,-31.59681510925293],[-33.616661071777344,-27.738677978515625,-30.86785888671875],[-34.58221435546875,-30.34200668334961,-30.031784057617188],[-35.14091491699219,-33.464115142822266,-29.162578582763672],[-35.32050704956055,-36.99481964111328,-28.307781219482422],[-35.247886657714844,-40.76740264892578,-27.478504180908203],[-35.0810432434082,-44.6470947265625,-26.65570831298828],[-34.93732833862305,-48.56068801879883,-25.81673812866211],[-34.87318801879883,-52.47074890136719,-24.94835090637207],[-34.89064025878906,-56.349525451660156,-24.04949188232422],[-34.9451904296875,-60.17227554321289,-23.135475158691406],[-31.942909240722656,-28.51333999633789,-30.093618392944336],[-33.02934265136719,-30.872745513916016,-29.313495635986328],[-33.758766174316406,-33.75568389892578,-28.445945739746094],[-34.08386993408203,-37.116004943847656,-27.561132431030273],[-34.05913543701172,-40.81230545043945,-26.703062057495117],[-33.842742919921875,-44.67975616455078,-25.876253128051758],[-33.59023666381836,-48.61512756347656,-25.0588436126709],[-33.39754867553711,-52.56599807739258,-24.22920799255371],[-33.288604736328125,-56.49657440185547,-23.37737464904785],[-33.24579620361328,-60.36722183227539,-22.50815200805664],[-31.4709415435791,-31.510929107666016,-28.454015731811523],[-32.37959289550781,-34.13575744628906,-27.604677200317383],[-32.9136848449707,-37.27277374267578,-26.69112777709961],[-33.045223236083984,-40.833248138427734,-25.78266716003418],[-32.86216354370117,-44.6496467590332,-24.921180725097656],[-32.534584045410156,-48.58194351196289,-24.10470199584961],[-32.20561599731445,-52.55830001831055,-23.3050537109375],[-31.941696166992188,-56.533390045166016,-22.499134063720703],[-31.744400024414062,-60.45842361450195,-21.68198585510254],[-30.96150779724121,-34.626197814941406,-26.674358367919922],[-31.723936080932617,-37.50251007080078,-25.75242805480957],[-32.09252166748047,-40.865421295166016,-24.795658111572266],[-32.065574645996094,-44.58122634887695,-23.876014709472656],[-31.749889373779297,-48.48229217529297,-23.02909278869629],[-31.31802749633789,-52.4622802734375,-22.238155364990234],[-30.889013290405273,-56.467041015625,-21.4679012298584],[-30.507484436035156,-60.43904495239258,-20.699604034423828],[-30.441734313964844,-37.832801818847656,-24.78554344177246],[-31.075166702270508,-40.94359588623047,-23.802288055419922],[-31.29637908935547,-44.496063232421875,-22.824934005737305],[-31.120864868164062,-48.33066940307617,-21.9237003326416],[-30.67214584350586,-52.2952880859375,-21.11341667175293],[-30.11103057861328,-56.310237884521484,-20.35993003845215],[-29.53570556640625,-60.31398391723633,-19.630107879638672],[-29.883995056152344,-41.11898422241211,-22.844791412353516],[-30.38428497314453,-44.43844985961914,-21.83072280883789],[-30.445682525634766,-48.145660400390625,-20.870864868164062],[-30.107582092285156,-52.069252014160156,-20.01666259765625],[-29.49889373779297,-56.07950210571289,-19.25594711303711],[-28.766822814941406,-60.09554672241211,-18.549419403076172],[-29.235136032104492,-44.46037292480469,-20.922889709472656],[-29.569368362426758,-47.96139907836914,-19.921903610229492],[-29.43860626220703,-51.786399841308594,-19.01467514038086],[-28.90349578857422,-55.769893646240234,-18.22219467163086],[-28.093921661376953,-59.782894134521484,-17.519012451171875],[-28.41718292236328,-47.82818603515625,-19.10140609741211],[-28.538471221923828,-51.468505859375,-18.1562442779541],[-28.173376083374023,-55.36764907836914,-17.32016372680664],[-27.399261474609375,-59.353599548339844,-16.595680236816406],[-27.361848831176758,-51.156734466552734,-17.458999633789062],[-27.22567367553711,-54.878623962402344,-16.594175338745117],[-26.582416534423828,-58.779151916503906,-15.835321426391602],[-26.04949378967285,-54.358642578125,-16.032337188720703],[-25.615846633911133,-58.0803337097168,-15.25163745880127],[-24.49880027770996,-57.332916259765625,-14.812033653259277],[-18.960651397705078,-98.64009094238281,18.277097702026367],[-17.842466354370117,-99.33598327636719,16.970354080200195],[-16.70948600769043,-99.85769653320312,15.425600051879883],[-15.609038352966309,-100.19215393066406,13.689371109008789],[-14.583660125732422,-100.34953308105469,11.811972618103027],[-13.676946640014648,-100.34961700439453,9.845930099487305],[-12.922391891479492,-100.20733642578125,7.833552360534668],[-12.347784042358398,-99.91940307617188,5.805788516998291],[-11.961760520935059,-99.477783203125,3.7971065044403076],[-11.747283935546875,-98.86896514892578,1.8567607402801514],[-11.626348495483398,-98.10594177246094,0.028594523668289185],[-11.508469581604004,-97.19784545898438,-1.6557586193084717],[-11.306938171386719,-96.14897918701172,-3.172114372253418],[-10.960206985473633,-94.95687866210938,-4.494231700897217],[-10.462699890136719,-93.61834716796875,-5.595386981964111],[-9.884706497192383,-92.1489028930664,-6.479412078857422],[-9.323690414428711,-90.5686264038086,-7.1542649269104],[-8.884317398071289,-88.91075897216797,-7.6356353759765625],[-8.665579795837402,-87.21955871582031,-7.933935165405273],[-8.706769943237305,-85.53955841064453,-8.081928253173828],[-9.002401351928711,-83.88702392578125,-8.127556800842285],[-9.530513763427734,-82.24857330322266,-8.13576889038086],[-10.266854286193848,-80.58779907226562,-8.183079719543457],[-11.198507308959961,-78.85133361816406,-8.34820556640625],[-12.300298690795898,-76.99476623535156,-8.667252540588379],[-13.559781074523926,-74.97613525390625,-9.146052360534668],[-14.957043647766113,-72.75750732421875,-9.762020111083984],[-16.457246780395508,-70.30064392089844,-10.476411819458008],[-17.989944458007812,-67.60379028320312,-11.240572929382324],[-19.46308135986328,-64.71700286865234,-12.020866394042969],[-20.768783569335938,-61.75291061401367,-12.797296524047852],[-60.064388275146484,-52.73676300048828,-9.06929874420166],[-59.08245849609375,-55.57136535644531,-8.47451400756836],[-57.935646057128906,-58.38604736328125,-7.751589298248291],[-56.62577438354492,-61.15045166015625,-6.938157558441162],[-55.1799201965332,-63.85301971435547,-6.083060264587402],[-53.654571533203125,-66.50708770751953,-5.2422099113464355],[-52.12507629394531,-69.13604736328125,-4.4611945152282715],[-50.67673110961914,-71.7554931640625,-3.7720117568969727],[-49.39885711669922,-74.36563873291016,-3.1959750652313232],[-48.32721710205078,-76.93510437011719,-2.7221033573150635],[-47.43083190917969,-79.43739318847656,-2.3314411640167236],[-46.622276306152344,-81.85319519042969,-2.0063514709472656],[-45.777950286865234,-84.17182159423828,-1.7337448596954346],[-44.76841735839844,-86.37866973876953,-1.4989373683929443],[-43.52470016479492,-88.44827270507812,-1.2758750915527344],[-42.03004837036133,-90.35935974121094,-1.0463331937789917],[-40.316917419433594,-92.09400177001953,-0.7824578881263733],[-38.44352340698242,-93.64859008789062,-0.44475382566452026],[-36.49430847167969,-95.04072570800781,0.01095610111951828],[-34.5406494140625,-96.29940032958984,0.6233205795288086],[-32.634864807128906,-97.44096374511719,1.424848198890686],[-30.810895919799805,-98.46499633789062,2.4362776279449463],[-29.08515167236328,-99.34866333007812,3.6703174114227295],[-27.461185455322266,-100.07025909423828,5.102028846740723],[-25.92912483215332,-100.5962142944336,6.709590911865234],[-24.486122131347656,-100.89347839355469,8.465049743652344],[-23.136198043823242,-100.93023681640625,10.340231895446777],[-21.889001846313477,-100.69798278808594,12.291617393493652],[-20.75493049621582,-100.21730041503906,14.27725887298584],[-19.758480072021484,-99.52255249023438,16.27303695678711],[-59.19626998901367,-53.89203643798828,-10.181049346923828],[-58.06101989746094,-56.84907913208008,-9.535503387451172],[-56.77267074584961,-59.731048583984375,-8.75687313079834],[-55.349185943603516,-62.53493118286133,-7.902581214904785],[-53.836910247802734,-65.2781753540039,-7.038316249847412],[-52.30150604248047,-67.99110412597656,-6.225263595581055],[-50.82486343383789,-70.69942474365234,-5.508426666259766],[-49.49494171142578,-73.41006469726562,-4.92104434967041],[-48.351680755615234,-76.0981674194336,-4.46282434463501],[-47.38179016113281,-78.72706604003906,-4.114011287689209],[-46.50893020629883,-81.27509307861328,-3.8499088287353516],[-45.61854934692383,-83.72737884521484,-3.6488852500915527],[-44.584930419921875,-86.06863403320312,-3.487980604171753],[-43.33515167236328,-88.27517700195312,-3.3321056365966797],[-41.84053039550781,-90.31666564941406,-3.151569366455078],[-40.12257766723633,-92.17594909667969,-2.920417070388794],[-38.231998443603516,-93.84172821044922,-2.6012418270111084],[-36.24824523925781,-95.32772827148438,-2.1559290885925293],[-34.241363525390625,-96.65308380126953,-1.5495615005493164],[-32.2660026550293,-97.83936309814453,-0.7516065835952759],[-30.358688354492188,-98.8932876586914,0.26039010286331177],[-28.53911590576172,-99.79911804199219,1.5024683475494385],[-26.8115177154541,-100.54238891601562,2.95348858833313],[-25.183053970336914,-101.09565734863281,4.594162464141846],[-23.651599884033203,-101.43124389648438,6.399263381958008],[-22.224342346191406,-101.51603698730469,8.346299171447754],[-20.912311553955078,-101.3387680053711,10.403690338134766],[-19.728635787963867,-100.90544128417969,12.536601066589355],[-18.690610885620117,-100.23139953613281,14.724305152893066],[-58.22600173950195,-55.00852966308594,-11.275848388671875],[-56.947242736816406,-58.042049407958984,-10.561057090759277],[-55.535308837890625,-60.975074768066406,-9.72603702545166],[-54.02994918823242,-63.829833984375,-8.846381187438965],[-52.48727798461914,-66.64241027832031,-7.995814800262451],[-50.9828987121582,-69.44610595703125,-7.238284111022949],[-49.60298156738281,-72.25920867919922,-6.6205339431762695],[-48.39426803588867,-75.0595703125,-6.153648376464844],[-47.34978485107422,-77.8155746459961,-5.825508117675781],[-46.411380767822266,-80.49278259277344,-5.6074018478393555],[-45.47160720825195,-83.07504272460938,-5.469470024108887],[-44.408790588378906,-85.54496765136719,-5.379924297332764],[-43.146968841552734,-87.88145446777344,-5.296176910400391],[-41.65125274658203,-90.05645751953125,-5.180078029632568],[-39.932090759277344,-92.04228973388672,-4.995581150054932],[-38.03327941894531,-93.82684326171875,-4.708460807800293],[-36.03114700317383,-95.4179916381836,-4.2839202880859375],[-33.99314880371094,-96.83392333984375,-3.6922967433929443],[-31.97285270690918,-98.08827209472656,-2.9043235778808594],[-30.007122039794922,-99.19245147705078,-1.8985722064971924],[-28.115455627441406,-100.13651275634766,-0.657163679599762],[-26.299638748168945,-100.909423828125,0.8018417954444885],[-24.564464569091797,-101.4880142211914,2.46266508102417],[-22.925315856933594,-101.84689331054688,4.30269718170166],[-21.392499923706055,-101.95625305175781,6.3027663230896],[-19.985408782958984,-101.80366516113281,8.436165809631348],[-18.721342086791992,-101.39509582519531,10.677742004394531],[-17.620328903198242,-100.74016571044922,13.009466171264648],[-57.156070709228516,-56.08515167236328,-12.319536209106445],[-55.75032043457031,-59.16377258300781,-11.530152320861816],[-54.245880126953125,-62.1457405090332,-10.652353286743164],[-52.69295120239258,-65.07194519042969,-9.7699613571167],[-51.159297943115234,-67.98257446289062,-8.962918281555176],[-49.7289924621582,-70.90275573730469,-8.299251556396484],[-48.454586029052734,-73.81723022460938,-7.803237438201904],[-47.338504791259766,-76.69425964355469,-7.470867156982422],[-46.330108642578125,-79.50285339355469,-7.278591156005859],[-45.33766555786133,-82.2130126953125,-7.190216064453125],[-44.24148941040039,-84.80806732177734,-7.16532039642334],[-42.96274185180664,-87.267822265625,-7.153134346008301],[-41.461334228515625,-89.56737518310547,-7.108639240264893],[-39.740421295166016,-91.68038177490234,-6.988324165344238],[-37.8353385925293,-93.58269500732422,-6.749423980712891],[-35.82016372680664,-95.28250122070312,-6.362063407897949],[-33.76231002807617,-96.7946548461914,-5.799576282501221],[-31.714670181274414,-98.13422393798828,-5.036907196044922],[-29.713130950927734,-99.30671691894531,-4.050063610076904],[-27.775495529174805,-100.30607604980469,-2.8206706047058105],[-25.89816665649414,-101.1244125366211,-1.3640785217285156],[-24.08067512512207,-101.73970794677734,0.3061603605747223],[-22.332820892333984,-102.12759399414062,2.1701712608337402],[-20.683414459228516,-102.25664520263672,4.210347652435303],[-19.159074783325195,-102.11711120605469,6.401366233825684],[-17.789276123046875,-101.71625518798828,8.719728469848633],[-16.597835540771484,-101.06681823730469,11.152225494384766],[-55.994285583496094,-57.107269287109375,-13.29090690612793],[-54.490028381347656,-60.221622467041016,-12.437511444091797],[-52.92558670043945,-63.266780853271484,-11.537443161010742],[-51.362884521484375,-66.29042053222656,-10.682645797729492],[-49.88072204589844,-69.32548522949219,-9.96035385131836],[-48.53927993774414,-72.35773468017578,-9.41738224029541],[-47.34965133666992,-75.35797882080078,-9.059038162231445],[-46.27129364013672,-78.29288482666016,-8.866850852966309],[-45.21926498413086,-81.13504028320312,-8.807950973510742],[-44.08428955078125,-83.85441589355469,-8.834568977355957],[-42.783023834228516,-86.43399810791016,-8.88785457611084],[-41.269927978515625,-88.85074615478516,-8.915175437927246],[-39.541622161865234,-91.08071899414062,-8.86677360534668],[-37.626747131347656,-93.0988540649414,-8.694129943847656],[-35.59613800048828,-94.90274047851562,-8.360732078552246],[-33.51864242553711,-96.50961303710938,-7.845498561859131],[-31.449460983276367,-97.93376922607422,-7.125430107116699],[-29.425800323486328,-99.1843490600586,-6.1790008544921875],[-27.464677810668945,-100.25138092041016,-4.98042631149292],[-25.556005477905273,-101.12936401367188,-3.5417354106903076],[-23.690528869628906,-101.79727172851562,-1.8747503757476807],[-21.869319915771484,-102.22960662841797,0.001953437924385071],[-20.113052368164062,-102.39309692382812,2.072354793548584],[-18.468032836914062,-102.27283477783203,4.309317111968994],[-16.974950790405273,-101.87919616699219,6.687386989593506],[-15.671576499938965,-101.2282485961914,9.191436767578125],[-54.757957458496094,-58.066375732421875,-14.18384838104248],[-53.18571472167969,-61.227272033691406,-13.285215377807617],[-51.5978889465332,-64.36085510253906,-12.393436431884766],[-50.067665100097656,-67.51074981689453,-11.609777450561523],[-48.65821075439453,-70.66674041748047,-11.00350570678711],[-47.39370346069336,-73.7935562133789,-10.59898567199707],[-46.242374420166016,-76.85771179199219,-10.383110046386719],[-45.127723693847656,-79.82870483398438,-10.325758934020996],[-43.94400405883789,-82.67902374267578,-10.3818359375],[-42.61162567138672,-85.37936401367188,-10.48592758178711],[-41.0781364440918,-87.9106674194336,-10.577791213989258],[-39.33355712890625,-90.25041198730469,-10.600335121154785],[-37.3998908996582,-92.37391662597656,-10.499671936035156],[-35.34517288208008,-94.2775650024414,-10.236045837402344],[-33.240516662597656,-95.97125244140625,-9.783167839050293],[-31.144765853881836,-97.47376251220703,-9.123746871948242],[-29.099843978881836,-98.7961196899414,-8.236533164978027],[-27.126787185668945,-99.93394470214844,-7.095542907714844],[-25.21175765991211,-100.87930297851562,-5.698879241943359],[-23.334808349609375,-101.6114273071289,-4.0550947189331055],[-21.484201431274414,-102.1042251586914,-2.1819372177124023],[-19.668642044067383,-102.3219223022461,-0.0953635424375534],[-17.923173904418945,-102.24485778808594,2.1766984462738037],[-16.30964469909668,-101.87501525878906,4.603320121765137],[-14.880644798278809,-101.2320556640625,7.164501190185547],[-53.46656799316406,-58.9656867980957,-15.001591682434082],[-51.8618049621582,-62.20027542114258,-14.089776992797852],[-50.292198181152344,-65.45623779296875,-13.252164840698242],[-48.82119369506836,-68.73286437988281,-12.576045036315918],[-47.481361389160156,-71.99188995361328,-12.10592269897461],[-46.255699157714844,-75.18912506103516,-11.843561172485352],[-45.07413864135742,-78.2936019897461,-11.761085510253906],[-43.835670471191406,-81.27471160888672,-11.81513786315918],[-42.45961380004883,-84.10557556152344,-11.944197654724121],[-40.89426803588867,-86.75473022460938,-12.08277416229248],[-39.122161865234375,-89.20344543457031,-12.166072845458984],[-37.158321380615234,-91.42671203613281,-12.132840156555176],[-35.06764221191406,-93.42086791992188,-11.939943313598633],[-32.922489166259766,-95.19583129882812,-11.560674667358398],[-30.788684844970703,-96.76724243164062,-10.973248481750488],[-28.713342666625977,-98.15255737304688,-10.161421775817871],[-26.72524642944336,-99.3514404296875,-9.097277641296387],[-24.81458282470703,-100.36346435546875,-7.773488998413086],[-22.9541015625,-101.1644515991211,-6.181396484375],[-21.116729736328125,-101.72722625732422,-4.336065292358398],[-19.295269012451172,-102.01490020751953,-2.254199743270874],[-17.507265090942383,-102.00369262695312,0.03426681458950043],[-15.80129337310791,-101.68849182128906,2.4956936836242676],[-14.253243446350098,-101.07730102539062,5.102609157562256],[-52.14451599121094,-59.817752838134766,-15.761297225952148],[-50.54667663574219,-63.165802001953125,-14.883316040039062],[-49.02484130859375,-66.55166625976562,-14.141347885131836],[-47.616703033447266,-69.93940734863281,-13.595885276794434],[-46.316558837890625,-73.27659606933594,-13.26522159576416],[-45.067020416259766,-76.51994323730469,-13.132292747497559],[-43.76942443847656,-79.63915252685547,-13.153926849365234],[-42.34287643432617,-82.60357666015625,-13.272159576416016],[-40.73239517211914,-85.38365173339844,-13.426259994506836],[-38.920066833496094,-87.94701385498047,-13.548027038574219],[-36.91328430175781,-90.27133178710938,-13.567377090454102],[-34.77360534667969,-92.35224914550781,-13.435479164123535],[-32.57365798950195,-94.20039367675781,-13.124485969543457],[-30.383838653564453,-95.83341217041016,-12.615318298339844],[-28.26280403137207,-97.27069091796875,-11.887205123901367],[-26.246570587158203,-98.5201187133789,-10.915986061096191],[-24.333526611328125,-99.5877914428711,-9.685978889465332],[-22.500600814819336,-100.45531463623047,-8.18110466003418],[-20.708707809448242,-101.09130096435547,-6.396514415740967],[-18.931499481201172,-101.45747375488281,-4.348158836364746],[-17.163616180419922,-101.5281753540039,-2.068953514099121],[-15.431623458862305,-101.29222869873047,0.4036315679550171],[-13.797900199890137,-100.74871063232422,3.038198471069336],[-50.818111419677734,-60.65019989013672,-16.49513816833496],[-49.257423400878906,-64.12869262695312,-15.697617530822754],[-47.79182815551758,-67.63333129882812,-15.078017234802246],[-46.42406463623047,-71.10802459716797,-14.66728401184082],[-45.107574462890625,-74.49890899658203,-14.459976196289062],[-43.751338958740234,-77.763916015625,-14.420814514160156],[-42.27164840698242,-80.87225341796875,-14.493579864501953],[-40.61131286621094,-83.78985595703125,-14.622611999511719],[-38.7470817565918,-86.48481750488281,-14.745220184326172],[-36.68581771850586,-88.91905975341797,-14.789393424987793],[-34.48479080200195,-91.09077453613281,-14.698442459106445],[-32.21664810180664,-93.01073455810547,-14.4402437210083],[-29.954471588134766,-94.69872283935547,-13.997152328491211],[-27.765146255493164,-96.17915344238281,-13.35461711883545],[-25.700605392456055,-97.46722412109375,-12.48323917388916],[-23.76725959777832,-98.57957458496094,-11.36479663848877],[-21.949783325195312,-99.50263977050781,-9.970749855041504],[-20.21413230895996,-100.2095947265625,-8.287010192871094],[-18.51786994934082,-100.6572494506836,-6.309364318847656],[-16.82759666442871,-100.81809997558594,-4.072286605834961],[-15.140473365783691,-100.67779541015625,-1.6183303594589233],[-13.49462604522705,-100.22761535644531,1.0160391330718994],[-49.500240325927734,-61.4697380065918,-17.234827041625977],[-47.98781967163086,-65.07481384277344,-16.547828674316406],[-46.562591552734375,-68.67668151855469,-16.05608558654785],[-45.186946868896484,-72.21460723876953,-15.761261940002441],[-43.776668548583984,-75.63658905029297,-15.634557723999023],[-42.248741149902344,-78.89955139160156,-15.6289644241333],[-40.540924072265625,-81.96884155273438,-15.692218780517578],[-38.626102447509766,-84.80632781982422,-15.769182205200195],[-36.504032135009766,-87.37245178222656,-15.793493270874023],[-34.23355484008789,-89.6478042602539,-15.71021556854248],[-31.8862361907959,-91.64651489257812,-15.479486465454102],[-29.537818908691406,-93.3901138305664,-15.081417083740234],[-27.260501861572266,-94.90763854980469,-14.506351470947266],[-25.11821174621582,-96.223388671875,-13.734681129455566],[-23.137266159057617,-97.36709594726562,-12.73691463470459],[-21.31032943725586,-98.33476257324219,-11.476053237915039],[-19.611854553222656,-99.10262298583984,-9.9210844039917],[-18.006572723388672,-99.6307601928711,-8.058932304382324],[-16.436635971069336,-99.88578033447266,-5.9055023193359375],[-14.860984802246094,-99.85084533691406,-3.507086753845215],[-13.282894134521484,-99.51226806640625,-0.9064980745315552],[-48.18991470336914,-62.2846794128418,-18.005287170410156],[-46.715599060058594,-65.99797058105469,-17.437395095825195],[-45.28952407836914,-69.67342376708984,-17.05388641357422],[-43.83460998535156,-73.25262451171875,-16.82701301574707],[-42.268043518066406,-76.6831283569336,-16.71518898010254],[-40.52424240112305,-79.917236328125,-16.678203582763672],[-38.569740295410156,-82.91516876220703,-16.666677474975586],[-36.399105072021484,-85.62969970703125,-16.623476028442383],[-34.062557220458984,-88.03726196289062,-16.50181007385254],[-31.635059356689453,-90.13392639160156,-16.2652645111084],[-29.19359016418457,-91.94591522216797,-15.885856628417969],[-26.815080642700195,-93.50568389892578,-15.3538236618042],[-24.570926666259766,-94.8443603515625,-14.658488273620605],[-22.503999710083008,-96.00648498535156,-13.77946662902832],[-20.629169464111328,-97.00370025634766,-12.66118049621582],[-18.92994499206543,-97.82069396972656,-11.258728981018066],[-17.382661819458008,-98.418701171875,-9.540365219116211],[-15.93721866607666,-98.76642608642578,-7.516171932220459],[-14.516947746276855,-98.84053039550781,-5.215517997741699],[-13.078230857849121,-98.62349700927734,-2.68520450592041],[-46.86749267578125,-63.09029006958008,-18.810529708862305],[-45.39712905883789,-66.88871002197266,-18.342363357543945],[-43.906219482421875,-70.61579895019531,-18.015396118164062],[-42.313873291015625,-74.21399688720703,-17.7863712310791],[-40.55101776123047,-77.62745666503906,-17.6208553314209],[-38.576786041259766,-80.80146026611328,-17.4862117767334],[-36.37892532348633,-83.68669891357422,-17.332921981811523],[-33.999420166015625,-86.24897766113281,-17.128131866455078],[-31.50357437133789,-88.47889709472656,-16.84247589111328],[-28.97313690185547,-90.384033203125,-16.451459884643555],[-26.48870086669922,-92.00316619873047,-15.937200546264648],[-24.128129959106445,-93.3723373413086,-15.291648864746094],[-21.945865631103516,-94.5470199584961,-14.503883361816406],[-19.97511863708496,-95.55690002441406,-13.525858879089355],[-18.22496223449707,-96.40499877929688,-12.285664558410645],[-16.683517456054688,-97.05955505371094,-10.734122276306152],[-15.315617561340332,-97.48751831054688,-8.863850593566895],[-14.050847053527832,-97.6681900024414,-6.7047834396362305],[-12.798698425292969,-97.57719421386719,-4.2860918045043945],[-45.49531555175781,-63.87872314453125,-19.627452850341797],[-43.973453521728516,-67.739501953125,-19.20511817932129],[-42.36505126953125,-71.49512481689453,-18.861677169799805],[-40.600685119628906,-75.0875244140625,-18.559499740600586],[-38.632083892822266,-78.4537582397461,-18.27436065673828],[-36.43618392944336,-81.52840423583984,-17.978225708007812],[-34.04413986206055,-84.27251434326172,-17.650625228881836],[-31.51164436340332,-86.66395568847656,-17.276214599609375],[-28.910120010375977,-88.7034912109375,-16.835922241210938],[-26.32685089111328,-90.4109115600586,-16.31382179260254],[-23.84564208984375,-91.83025360107422,-15.694602966308594],[-21.532176971435547,-93.02531433105469,-14.969696044921875],[-19.4320011138916,-94.0390396118164,-14.101083755493164],[-17.573945999145508,-94.8965835571289,-13.020981788635254],[-15.975604057312012,-95.58646392822266,-11.644757270812988],[-14.618998527526855,-96.07948303222656,-9.946441650390625],[-13.45059871673584,-96.351318359375,-7.94655179977417],[-12.383340835571289,-96.38310241699219,-5.679734706878662],[-44.02189254760742,-64.64065551757812,-20.3974666595459],[-42.40300369262695,-68.53878021240234,-19.946447372436523],[-40.64901351928711,-72.2982406616211,-19.514183044433594],[-38.709022521972656,-75.85576629638672,-19.074020385742188],[-36.54911804199219,-79.13819122314453,-18.609893798828125],[-34.18149948120117,-82.08665466308594,-18.12929344177246],[-31.649616241455078,-84.67172241210938,-17.62982940673828],[-29.01483154296875,-86.87918090820312,-17.105504989624023],[-26.35404396057129,-88.72036743164062,-16.544315338134766],[-23.760805130004883,-90.2208251953125,-15.930292129516602],[-21.312259674072266,-91.45600128173828,-15.246017456054688],[-19.06659698486328,-92.47977447509766,-14.456991195678711],[-17.064979553222656,-93.33357238769531,-13.504433631896973],[-15.344554901123047,-94.0320816040039,-12.301902770996094],[-13.924056053161621,-94.56634521484375,-10.779934883117676],[-12.773715019226074,-94.91223907470703,-8.948537826538086],[-11.823136329650879,-95.04817962646484,-6.842455863952637],[-42.41310501098633,-65.36129760742188,-21.043428421020508],[-40.676483154296875,-69.27117919921875,-20.491701126098633],[-38.77922821044922,-73.00609588623047,-19.908018112182617],[-36.6832160949707,-76.49504089355469,-19.27544403076172],[-34.38131332397461,-79.66929626464844,-18.618436813354492],[-31.892921447753906,-82.47504425048828,-17.965110778808594],[-29.2669677734375,-84.8876724243164,-17.322351455688477],[-26.57070541381836,-86.90082550048828,-16.689926147460938],[-23.888866424560547,-88.53018951416016,-16.054296493530273],[-21.315187454223633,-89.83638000488281,-15.39183235168457],[-18.92171287536621,-90.88845825195312,-14.660140991210938],[-16.762405395507812,-91.74158477783203,-13.80395793914795],[-14.884298324584961,-92.42991638183594,-12.743062019348145],[-13.326929092407227,-92.97440338134766,-11.396052360534668],[-12.107989311218262,-93.36831665039062,-9.730119705200195],[-11.186092376708984,-93.58879089355469,-7.783027648925781],[-40.66935348510742,-66.0272216796875,-21.50165557861328],[-38.8199348449707,-69.91999816894531,-20.790605545043945],[-36.800907135009766,-73.59867095947266,-20.00629997253418],[-34.594383239746094,-76.99652099609375,-19.174663543701172],[-32.194976806640625,-80.04708862304688,-18.343229293823242],[-29.62438201904297,-82.69585418701172,-17.550994873046875],[-26.93836784362793,-84.92304992675781,-16.81053352355957],[-24.213645935058594,-86.72402954101562,-16.119033813476562],[-21.540138244628906,-88.15074920654297,-15.451181411743164],[-19.011320114135742,-89.26239013671875,-14.755828857421875],[-16.695518493652344,-90.13225555419922,-13.970561027526855],[-14.650318145751953,-90.81034088134766,-13.018381118774414],[-12.92237663269043,-91.34056091308594,-11.81773567199707],[-11.554522514343262,-91.74755859375,-10.316019058227539],[-10.564715385437012,-92.02310943603516,-8.517372131347656],[-38.81608581542969,-66.61670684814453,-21.72228240966797],[-36.87858581542969,-70.46266174316406,-20.806320190429688],[-34.7808952331543,-74.06492614746094,-19.818904876708984],[-32.50381851196289,-77.35826110839844,-18.809982299804688],[-30.039588928222656,-80.27166748046875,-17.840383529663086],[-27.414390563964844,-82.74903106689453,-16.956478118896484],[-24.695144653320312,-84.76910400390625,-16.168426513671875],[-21.969497680664062,-86.3630142211914,-15.457354545593262],[-19.33091163635254,-87.58456420898438,-14.769319534301758],[-16.872732162475586,-88.50220489501953,-14.030899047851562],[-14.665178298950195,-89.18590545654297,-13.159174919128418],[-12.761938095092773,-89.69801330566406,-12.073283195495605],[-11.211219787597656,-90.08821105957031,-10.713747024536133],[-10.064555168151855,-90.38018035888672,-9.060705184936523],[-36.9005126953125,-67.10802459716797,-21.67171859741211],[-34.91618728637695,-70.88927459716797,-20.55082130432129],[-32.7764778137207,-74.40398406982422,-19.383405685424805],[-30.4569149017334,-77.58112335205078,-18.234010696411133],[-27.949085235595703,-80.34262084960938,-17.173763275146484],[-25.28907585144043,-82.6241226196289,-16.24858856201172],[-22.560379028320312,-84.43741607666016,-15.450188636779785],[-19.859872817993164,-85.81917572021484,-14.72835636138916],[-17.284143447875977,-86.83563232421875,-14.005019187927246],[-14.929930686950684,-87.55606079101562,-13.185901641845703],[-12.859992980957031,-88.0644302368164,-12.184894561767578],[-11.125395774841309,-88.43000793457031,-10.940095901489258],[-9.784266471862793,-88.7029800415039,-9.417743682861328],[-34.98686599731445,-67.49014282226562,-21.359325408935547],[-32.99198913574219,-71.19856262207031,-20.056386947631836],[-30.8367919921875,-74.61739349365234,-18.744991302490234],[-28.491357803344727,-77.6657485961914,-17.502073287963867],[-25.95183563232422,-80.24996185302734,-16.402164459228516],[-23.274267196655273,-82.33081817626953,-15.47321605682373],[-20.55883026123047,-83.92840576171875,-14.672614097595215],[-17.910982131958008,-85.09615325927734,-13.922399520874023],[-15.433006286621094,-85.90462493896484,-13.122027397155762],[-13.213329315185547,-86.44014739990234,-12.175314903259277],[-11.306480407714844,-86.793212890625,-11.01593017578125],[-9.7704496383667,-87.03430938720703,-9.602811813354492],[-33.13566589355469,-67.7658920288086,-20.817398071289062],[-31.153850555419922,-71.39549255371094,-19.36742401123047],[-28.9945011138916,-74.70759582519531,-17.958717346191406],[-26.62591552734375,-77.60163879394531,-16.675037384033203],[-24.0618896484375,-79.99784088134766,-15.576493263244629],[-21.383617401123047,-81.86363220214844,-14.65478515625],[-18.706754684448242,-83.240234375,-13.835332870483398],[-16.146249771118164,-84.1903305053711,-13.01406192779541],[-13.797091484069824,-84.80464172363281,-12.087496757507324],[-11.73595142364502,-85.17620849609375,-10.981985092163086],[-10.019063949584961,-85.39521026611328,-9.651664733886719],[-31.39926528930664,-67.93807220458984,-20.083538055419922],[-29.438064575195312,-71.48087310791016,-18.533185958862305],[-27.268604278564453,-74.66329193115234,-17.082496643066406],[-24.871376037597656,-77.38780975341797,-15.8050537109375],[-22.290191650390625,-79.57498931884766,-14.726051330566406],[-19.631752014160156,-81.21454620361328,-13.800406455993652],[-17.025920867919922,-82.36302185058594,-12.922837257385254],[-14.583623886108398,-83.10887145996094,-11.981816291809082],[-12.385883331298828,-83.549560546875,-10.897575378417969],[-10.507098197937012,-83.77665710449219,-9.619747161865234],[-29.820846557617188,-68.0050048828125,-19.202865600585938],[-27.866716384887695,-71.44330596923828,-17.610342025756836],[-25.667455673217773,-74.47935485839844,-16.17112159729004],[-23.2359561920166,-77.00828552246094,-14.927495956420898],[-20.649730682373047,-78.9674301147461,-13.866582870483398],[-18.03908920288086,-80.3674545288086,-12.905267715454102],[-15.534347534179688,-81.2987060546875,-11.923608779907227],[-13.232173919677734,-81.85967254638672,-10.832141876220703],[-11.207489013671875,-82.1436538696289,-9.577290534973145],[-28.426429748535156,-67.95579528808594,-18.232709884643555],[-26.44434356689453,-71.2750015258789,-16.657474517822266],[-24.194242477416992,-74.13666534423828,-15.266701698303223],[-21.7282657623291,-76.44347381591797,-14.067419052124023],[-19.157751083374023,-78.1526870727539,-13.00456428527832],[-16.623613357543945,-79.31971740722656,-11.966763496398926],[-14.24190902709961,-80.0513687133789,-10.851892471313477],[-12.100651741027832,-80.4418716430664,-9.598456382751465],[-27.220949172973633,-67.78242492675781,-17.234342575073242],[-25.171682357788086,-70.95703125,-15.722013473510742],[-22.854230880737305,-73.61266326904297,-14.403136253356934],[-20.36376190185547,-75.66539764404297,-13.24352741241455],[-17.835081100463867,-77.12427520751953,-12.146893501281738],[-15.399439811706543,-78.0730972290039,-11.007099151611328],[-13.161347389221191,-78.61653137207031,-9.750480651855469],[-26.161657333374023,-67.47398376464844,-16.26543617248535],[-24.015411376953125,-70.46619415283203,-14.847038269042969],[-21.633304595947266,-72.87319946289062,-13.606256484985352],[-19.146366119384766,-74.66304779052734,-12.460270881652832],[-16.686521530151367,-75.88426971435547,-11.303606986999512],[-14.374086380004883,-76.62571716308594,-10.052104949951172],[-25.19811248779297,-67.00910186767578,-15.370849609375],[-22.95107078552246,-69.76689147949219,-14.063332557678223],[-20.53510284423828,-71.90550231933594,-12.881763458251953],[-18.08495330810547,-73.43964385986328,-11.723421096801758],[-15.723930358886719,-74.4306640625,-10.496149063110352],[-24.28115463256836,-66.35053253173828,-14.589418411254883],[-21.970012664794922,-68.84333038330078,-13.380549430847168],[-19.56216049194336,-70.71257781982422,-12.232022285461426],[-17.1866455078125,-71.9909439086914,-11.048919677734375],[-23.390316009521484,-65.48373413085938,-13.938281059265137],[-21.067251205444336,-67.70237731933594,-12.802664756774902],[-18.714649200439453,-69.28807830810547,-11.674362182617188],[-22.50555992126465,-64.42892456054688,-13.419733047485352],[-20.228605270385742,-66.34207916259766,-12.340763092041016],[-21.62093734741211,-63.20223617553711,-13.03282642364502],[-18.85321617126465,-62.66267395019531,-11.921096801757812],[-17.418777465820312,-65.58380126953125,-10.985357284545898],[-15.909811019897461,-68.3271255493164,-10.058960914611816],[-14.405128479003906,-70.83919525146484,-9.162969589233398],[-12.98060131072998,-73.11216735839844,-8.346925735473633],[-11.685432434082031,-75.18128204345703,-7.665495872497559],[-10.549149513244629,-77.08843994140625,-7.146141529083252],[-9.588224411010742,-78.87705993652344,-6.799349784851074],[-8.82716178894043,-80.59172058105469,-6.6017842292785645],[-8.276021957397461,-82.2760238647461,-6.505710601806641],[-7.95384407043457,-83.96414947509766,-6.428573131561279],[-7.877616882324219,-85.66908264160156,-6.299046516418457],[-8.046960830688477,-87.37654113769531,-6.058409214019775],[-8.418766021728516,-89.04496002197266,-5.655757904052734],[-8.904542922973633,-90.63191986083984,-5.053559303283691],[-9.401673316955566,-92.10088348388672,-4.231958389282227],[-9.815184593200684,-93.42823791503906,-3.184765577316284],[-10.069635391235352,-94.59614562988281,-1.9201189279556274],[-10.177331924438477,-95.61931610107422,-0.46933549642562866],[-10.1993408203125,-96.5127182006836,1.13986337184906],[-10.223186492919922,-97.2834701538086,2.8882029056549072],[-10.343570709228516,-97.93206787109375,4.753481864929199],[-10.642712593078613,-98.45375061035156,6.699784278869629],[-11.15167236328125,-98.84869384765625,8.68878173828125],[-11.85670280456543,-99.11972045898438,10.681784629821777],[-12.730620384216309,-99.26533508300781,12.649215698242188],[-13.743490219116211,-99.27490234375,14.55227279663086],[-14.864791870117188,-99.11762237548828,16.337387084960938],[-16.064226150512695,-98.76789855957031,17.942371368408203],[-17.320911407470703,-98.22129821777344,19.30587387084961],[-16.999719619750977,-63.22673797607422,-10.956283569335938],[-15.530402183532715,-66.06961059570312,-9.848917961120605],[-14.050337791442871,-68.67933654785156,-8.762870788574219],[-12.627765655517578,-71.04388427734375,-7.736718654632568],[-11.315508842468262,-73.19316101074219,-6.829707622528076],[-10.155193328857422,-75.1717529296875,-6.0872650146484375],[-9.171989440917969,-77.03089904785156,-5.525359153747559],[-8.394890785217285,-78.8184814453125,-5.138581275939941],[-7.832198143005371,-80.5756607055664,-4.894222736358643],[-7.497602462768555,-82.32383728027344,-4.740016937255859],[-7.400146484375,-84.07363891601562,-4.59580659866333],[-7.530683994293213,-85.81015014648438,-4.391406536102295],[-7.838812351226807,-87.4931869506836,-4.0567498207092285],[-8.237098693847656,-89.08187866210938,-3.5323503017425537],[-8.637248992919922,-90.54088592529297,-2.7764787673950195],[-8.946260452270508,-91.84391784667969,-1.7840576171875],[-9.092218399047852,-92.97206115722656,-0.5692201256752014],[-9.087288856506348,-93.9457778930664,0.8243125081062317],[-9.00324535369873,-94.79798889160156,2.3699657917022705],[-8.925965309143066,-95.546875,4.0512261390686035],[-8.949686050415039,-96.2020034790039,5.851937294006348],[-9.159709930419922,-96.76519775390625,7.74426794052124],[-9.587820053100586,-97.24101257324219,9.691560745239258],[-10.231599807739258,-97.61862182617188,11.663053512573242],[-11.059152603149414,-97.89374542236328,13.62820816040039],[-12.043888092041016,-98.05384826660156,15.552669525146484],[-13.163926124572754,-98.07403564453125,17.387046813964844],[-14.405705451965332,-97.91293334960938,19.063865661621094],[-15.757390975952148,-97.54410552978516,20.505695343017578],[-15.2871732711792,-63.55140686035156,-9.864349365234375],[-13.868526458740234,-66.28609466552734,-8.592782020568848],[-12.485679626464844,-68.77442932128906,-7.363452434539795],[-11.190428733825684,-71.03738403320312,-6.229974746704102],[-10.029587745666504,-73.11629486083984,-5.245513439178467],[-9.038997650146484,-75.06578826904297,-4.448244571685791],[-8.256916046142578,-76.94395446777344,-3.841045379638672],[-7.691623687744141,-78.7907485961914,-3.412384510040283],[-7.352061748504639,-80.62443542480469,-3.1247398853302],[-7.238614559173584,-82.44056701660156,-2.921844959259033],[-7.333059310913086,-84.2232666015625,-2.7171671390533447],[-7.578727722167969,-85.93206787109375,-2.4199631214141846],[-7.888609409332275,-87.52595520019531,-1.9516985416412354],[-8.17624568939209,-88.96781921386719,-1.2558972835540771],[-8.364897727966309,-90.23457336425781,-0.31505802273750305],[-8.3841552734375,-91.3071060180664,0.8508040904998779],[-8.255268096923828,-92.216064453125,2.191758394241333],[-8.049803733825684,-93.0039291381836,3.6770756244659424],[-7.863697528839111,-93.70772552490234,5.298337936401367],[-7.787888050079346,-94.344970703125,7.043753623962402],[-7.906144142150879,-94.9235610961914,8.890908241271973],[-8.250568389892578,-95.44903564453125,10.804834365844727],[-8.818337440490723,-95.9129638671875,12.75595474243164],[-9.587568283081055,-96.29837036132812,14.71876049041748],[-10.528547286987305,-96.59398651123047,16.661643981933594],[-11.625197410583496,-96.77607727050781,18.538684844970703],[-12.874439239501953,-96.80948638916016,20.285541534423828],[-14.276805877685547,-96.64749908447266,21.81614875793457],[-13.816600799560547,-63.68954849243164,-8.64798641204834],[-12.523663520812988,-66.32194519042969,-7.237534523010254],[-11.292451858520508,-68.72659301757812,-5.897737979888916],[-10.174245834350586,-70.9363021850586,-4.681216716766357],[-9.209178924560547,-73.0032730102539,-3.63800311088562],[-8.443886756896973,-74.98910522460938,-2.7990167140960693],[-7.888402462005615,-76.939697265625,-2.1634774208068848],[-7.547274589538574,-78.87022399902344,-1.7118779420852661],[-7.41261625289917,-80.77299499511719,-1.3965415954589844],[-7.462676525115967,-82.61885833740234,-1.1429202556610107],[-7.637965679168701,-84.36724853515625,-0.837425172328949],[-7.855010032653809,-85.9753646850586,-0.385437548160553],[-8.026662826538086,-87.40238189697266,0.2807219624519348],[-8.077817916870117,-88.62245178222656,1.1833856105804443],[-7.956898212432861,-89.6264877319336,2.305812358856201],[-7.690147399902344,-90.4559555053711,3.5944230556488037],[-7.356598377227783,-91.16719055175781,5.022562503814697],[-7.049267768859863,-91.80611419677734,6.584690093994141],[-6.867142677307129,-92.40689086914062,8.279647827148438],[-6.889820575714111,-92.98223114013672,10.088841438293457],[-7.146324634552002,-93.53693389892578,11.977274894714355],[-7.633831024169922,-94.06147766113281,13.915793418884277],[-8.329263687133789,-94.54108428955078,15.88011646270752],[-9.212903022766113,-94.95441436767578,17.84209632873535],[-10.26656723022461,-95.28315734863281,19.75931739807129],[-11.493904113769531,-95.49440002441406,21.570011138916016],[-12.904593467712402,-95.5466537475586,23.192644119262695],[-12.702859878540039,-63.717411041259766,-7.334515571594238],[-11.597620010375977,-66.28693389892578,-5.824616432189941],[-10.581024169921875,-68.65557098388672,-4.4115214347839355],[-9.697476387023926,-70.86866760253906,-3.150378704071045],[-8.99158000946045,-72.98574829101562,-2.089383363723755],[-8.467557907104492,-75.05118560791016,-1.2522004842758179],[-8.128668785095215,-77.0848617553711,-0.6238358020782471],[-7.963932514190674,-79.07740020751953,-0.16524800658226013],[-7.947971820831299,-80.9992446899414,0.19779923558235168],[-8.033541679382324,-82.79891204833984,0.5701098442077637],[-8.142775535583496,-84.43075561523438,1.0602322816848755],[-8.18966293334961,-85.84832000732422,1.7431252002716064],[-8.097981452941895,-87.02189636230469,2.642364978790283],[-7.820335388183594,-87.94546508789062,3.7369425296783447],[-7.406435966491699,-88.68531036376953,4.979668140411377],[-6.935642719268799,-89.30936431884766,6.352776527404785],[-6.50430965423584,-89.87552642822266,7.860670566558838],[-6.205966949462891,-90.42526245117188,9.507173538208008],[-6.1265130043029785,-90.98404693603516,11.283027648925781],[-6.290253639221191,-91.55412292480469,13.152680397033691],[-6.6918864250183105,-92.12322235107422,15.086150169372559],[-7.308120250701904,-92.67452239990234,17.058908462524414],[-8.117317199707031,-93.19102478027344,19.045705795288086],[-9.11121654510498,-93.64749145507812,21.004947662353516],[-10.292131423950195,-94.01917266845703,22.87941551208496],[-11.676782608032227,-94.26622009277344,24.591323852539062],[-12.057580947875977,-63.75577163696289,-5.972177505493164],[-11.212933540344238,-66.31324005126953,-4.418347358703613],[-10.47501277923584,-68.70069122314453,-2.999577760696411],[-9.883199691772461,-70.97187042236328,-1.7725670337677002],[-9.424766540527344,-73.16575622558594,-0.7630013227462769],[-9.098945617675781,-75.302001953125,0.03201524540781975],[-8.900341033935547,-77.37970733642578,0.6513683199882507],[-8.808741569519043,-79.37208557128906,1.1623356342315674],[-8.779762268066406,-81.2282943725586,1.6685386896133423],[-8.759745597839355,-82.89041137695312,2.2586207389831543],[-8.66495132446289,-84.30352783203125,3.0131075382232666],[-8.421024322509766,-85.43392181396484,3.9530062675476074],[-7.983174800872803,-86.27957153320312,5.052920341491699],[-7.40951681137085,-86.92242431640625,6.267735481262207],[-6.796930313110352,-87.45545196533203,7.59758996963501],[-6.236778736114502,-87.9439926147461,9.059247970581055],[-5.822957992553711,-88.43888854980469,10.66580581665039],[-5.634503364562988,-88.97137451171875,12.412249565124512],[-5.7003021240234375,-89.54747772216797,14.267699241638184],[-6.011543273925781,-90.14991760253906,16.201698303222656],[-6.542721748352051,-90.75822448730469,18.18902015686035],[-7.271195888519287,-91.35450744628906,20.20547866821289],[-8.185249328613281,-91.92083740234375,22.2132625579834],[-9.297971725463867,-92.42872619628906,24.154382705688477],[-10.626053810119629,-92.84760284423828,25.95829963684082],[-11.967376708984375,-63.932003021240234,-4.654213905334473],[-11.432135581970215,-66.52266693115234,-3.1490910053253174],[-10.999459266662598,-68.96674346923828,-1.8255009651184082],[-10.64786434173584,-71.30072021484375,-0.6984225511550903],[-10.367169380187988,-73.54407501220703,0.238435298204422],[-10.154990196228027,-75.70074462890625,1.0125259160995483],[-9.999582290649414,-77.75460815429688,1.6871587038040161],[-9.863945960998535,-79.65898132324219,2.356386423110962],[-9.698415756225586,-81.3541030883789,3.104156494140625],[-9.446294784545898,-82.76872253417969,3.9820914268493652],[-9.03770637512207,-83.86210632324219,5.008098602294922],[-8.434913635253906,-84.6375732421875,6.151965618133545],[-7.701936721801758,-85.1917724609375,7.373795509338379],[-6.9385223388671875,-85.6313247680664,8.683975219726562],[-6.247788429260254,-86.04219818115234,10.116386413574219],[-5.7168049812316895,-86.48037719726562,11.694743156433105],[-5.423868179321289,-86.984619140625,13.421273231506348],[-5.388700008392334,-87.55950927734375,15.266153335571289],[-5.607004642486572,-88.1871109008789,17.203296661376953],[-6.0502190589904785,-88.84088134765625,19.20786476135254],[-6.69271183013916,-89.49991607666016,21.256933212280273],[-7.519488334655762,-90.14685821533203,23.314498901367188],[-8.539308547973633,-90.76478576660156,25.3288631439209],[-9.782796859741211,-91.32221984863281,27.227375030517578],[-12.421368598937988,-64.31763458251953,-3.52311110496521],[-12.187231063842773,-66.95321655273438,-2.162907123565674],[-11.982658386230469,-69.43901824951172,-0.9721733331680298],[-11.79548168182373,-71.7988510131836,0.060244206339120865],[-11.615886688232422,-74.0391616821289,0.9624252915382385],[-11.435461044311523,-76.15045166015625,1.784507393836975],[-11.224090576171875,-78.09640502929688,2.614795684814453],[-10.938667297363281,-79.82103729248047,3.5279269218444824],[-10.52407455444336,-81.243408203125,4.568804740905762],[-9.943800926208496,-82.30960845947266,5.71841287612915],[-9.171735763549805,-83.02630615234375,6.942352771759033],[-8.280542373657227,-83.50463104248047,8.207778930664062],[-7.369929313659668,-83.86188507080078,9.534564018249512],[-6.542813777923584,-84.19559478759766,10.964836120605469],[-5.895467281341553,-84.57909393310547,12.534209251403809],[-5.499870300292969,-85.05551147460938,14.253628730773926],[-5.3718366622924805,-85.62818145751953,16.095613479614258],[-5.498293876647949,-86.2763442993164,18.03774070739746],[-5.853731155395508,-86.96794128417969,20.059555053710938],[-6.4087629318237305,-87.67609405517578,22.140775680541992],[-7.142705917358398,-88.38116455078125,24.24812126159668],[-8.059798240661621,-89.07068634033203,26.333538055419922],[-9.185903549194336,-89.7285385131836,28.334606170654297],[-13.279052734375,-64.85912322998047,-2.66291880607605],[-13.264473915100098,-67.51447296142578,-1.4521576166152954],[-13.220250129699707,-70.00590515136719,-0.3685549199581146],[-13.134302139282227,-72.3453369140625,0.6158352494239807],[-12.989635467529297,-74.52572631835938,1.549122929573059],[-12.757266998291016,-76.51769256591797,2.5073959827423096],[-12.398262977600098,-78.27461242675781,3.563129425048828],[-11.863053321838379,-79.71503448486328,4.751570701599121],[-11.12044620513916,-80.77256774902344,6.042414665222168],[-10.185233116149902,-81.45140838623047,7.369407653808594],[-9.14101791381836,-81.8729476928711,8.707637786865234],[-8.089897155761719,-82.16437530517578,10.083905220031738],[-7.13306999206543,-82.43281555175781,11.5453462600708],[-6.366713047027588,-82.76388549804688,13.132113456726074],[-5.871445655822754,-83.21536254882812,14.861583709716797],[-5.654694080352783,-83.78749084472656,16.71068000793457],[-5.699325084686279,-84.45555877685547,18.660797119140625],[-5.970470428466797,-85.1817626953125,20.697349548339844],[-6.4393463134765625,-85.93006134033203,22.80623435974121],[-7.078811168670654,-86.67511749267578,24.95877456665039],[-7.885988235473633,-87.40589141845703,27.111618041992188],[-8.881609916687012,-88.1141586303711,29.20875358581543],[-14.319737434387207,-65.40586853027344,-1.9976921081542969],[-14.47028636932373,-68.05105590820312,-0.9000873565673828],[-14.536734580993652,-70.51152038574219,0.12494947761297226],[-14.499543190002441,-72.78538513183594,1.121535062789917],[-14.3200101852417,-74.84588623046875,2.161552667617798],[-13.956039428710938,-76.65293884277344,3.3104841709136963],[-13.362098693847656,-78.13323974609375,4.601937294006348],[-12.51629638671875,-79.21784973144531,5.997622966766357],[-11.44787883758545,-79.90143585205078,7.425485134124756],[-10.273152351379395,-80.30186462402344,8.847787857055664],[-9.098355293273926,-80.55474853515625,10.294278144836426],[-8.02577018737793,-80.77823638916016,11.81187629699707],[-7.150917053222656,-81.06983184814453,13.441167831420898],[-6.555927276611328,-81.500732421875,15.200220108032227],[-6.25412654876709,-82.07658386230469,17.067142486572266],[-6.220642566680908,-82.76708221435547,19.02874755859375],[-6.415691375732422,-83.52682495117188,21.07602310180664],[-6.799787521362305,-84.3108901977539,23.20355796813965],[-7.343203544616699,-85.08270263671875,25.39139747619629],[-8.035043716430664,-85.82901000976562,27.60281753540039],[-8.887859344482422,-86.5462417602539,29.78908348083496],[-15.354605674743652,-65.78199005126953,-1.3934235572814941],[-15.631235122680664,-68.39024353027344,-0.3608786463737488],[-15.766338348388672,-70.78673553466797,0.6622040867805481],[-15.719365119934082,-72.95024108886719,1.73850679397583],[-15.43494987487793,-74.84473419189453,2.92928409576416],[-14.864110946655273,-76.4054183959961,4.265361785888672],[-13.993992805480957,-77.5702133178711,5.713017463684082],[-12.869258880615234,-78.32500457763672,7.2018890380859375],[-11.612564086914062,-78.76754760742188,8.698500633239746],[-10.348289489746094,-79.02711486816406,10.217411994934082],[-9.184070587158203,-79.23703002929688,11.800169944763184],[-8.21771240234375,-79.5093994140625,13.48334789276123],[-7.5324811935424805,-79.92973327636719,15.282737731933594],[-7.142273426055908,-80.51091003417969,17.1756591796875],[-7.028870582580566,-81.22332000732422,19.15058135986328],[-7.145525932312012,-82.01456451416016,21.205013275146484],[-7.446842670440674,-82.8298110961914,23.340946197509766],[-7.890198707580566,-83.62139129638672,25.549440383911133],[-8.462028503417969,-84.3679428100586,27.803997039794922],[-9.166267395019531,-85.06671905517578,30.06349754333496],[-16.195825576782227,-65.84304809570312,-0.7206135988235474],[-16.563032150268555,-68.38407135009766,0.29731079936027527],[-16.71721076965332,-70.68307495117188,1.3747262954711914],[-16.600740432739258,-72.71055603027344,2.5604166984558105],[-16.155866622924805,-74.41105651855469,3.8835840225219727],[-15.36474895477295,-75.7232437133789,5.325521469116211],[-14.284165382385254,-76.62775421142578,6.829657554626465],[-13.036439895629883,-77.1928939819336,8.365690231323242],[-11.747885704040527,-77.533935546875,9.942091941833496],[-10.535476684570312,-77.78063201904297,11.583226203918457],[-9.506275177001953,-78.06676483154297,13.317688941955566],[-8.747350692749023,-78.4943618774414,15.155900001525879],[-8.274260520935059,-79.08538055419922,17.075098037719727],[-8.072644233703613,-79.81647491455078,19.063617706298828],[-8.103466033935547,-80.63298797607422,21.122451782226562],[-8.313769340515137,-81.47222900390625,23.26034927368164],[-8.65461540222168,-82.2765121459961,25.477149963378906],[-9.098397254943848,-83.01485443115234,27.757471084594727],[-9.647594451904297,-83.6806640625,30.070205688476562],[-16.635995864868164,-65.5395278930664,0.12198062986135483],[-17.04397964477539,-67.97721862792969,1.1657018661499023],[-17.16868019104004,-70.16327667236328,2.309427499771118],[-16.957578659057617,-72.04932403564453,3.5745890140533447],[-16.379213333129883,-73.5768051147461,4.960168838500977],[-15.470001220703125,-74.70288848876953,6.437150001525879],[-14.347393035888672,-75.4715576171875,7.9783220291137695],[-13.134204864501953,-75.97462463378906,9.582573890686035],[-11.951509475708008,-76.33642578125,11.263489723205566],[-10.908400535583496,-76.68648529052734,13.035207748413086],[-10.105429649353027,-77.150634765625,14.901225090026855],[-9.564325332641602,-77.76356506347656,16.839136123657227],[-9.277547836303711,-78.5115966796875,18.837255477905273],[-9.21098518371582,-79.34459686279297,20.897653579711914],[-9.31988525390625,-80.19696807861328,23.03386688232422],[-9.547478675842285,-81.00410461425781,25.25229835510254],[-9.86058521270752,-81.72850799560547,27.544673919677734],[-10.245235443115234,-82.35472106933594,29.889892578125],[-16.51344871520996,-64.98897552490234,1.1519391536712646],[-16.91349983215332,-67.29913330078125,2.223798990249634],[-17.00285530090332,-69.35408782958984,3.4082632064819336],[-16.74875259399414,-71.09883117675781,4.71173095703125],[-16.155006408691406,-72.48095703125,6.130271911621094],[-15.290789604187012,-73.5032730102539,7.648801803588867],[-14.275542259216309,-74.23590087890625,9.255931854248047],[-13.226222038269043,-74.7825698852539,10.952710151672363],[-12.255105972290039,-75.26866149902344,12.742254257202148],[-11.46020793914795,-75.81224060058594,14.620203971862793],[-10.882000923156738,-76.469970703125,16.564788818359375],[-10.525814056396484,-77.24191284179688,18.564924240112305],[-10.366021156311035,-78.08661651611328,20.62310218811035],[-10.361701011657715,-78.94112396240234,22.754430770874023],[-10.465633392333984,-79.74037170410156,24.970176696777344],[-10.637422561645508,-80.4430923461914,27.265907287597656],[-10.858007431030273,-81.03028869628906,29.625173568725586],[-15.854745864868164,-64.35618591308594,2.3087949752807617],[-16.228029251098633,-66.5113525390625,3.403822422027588],[-16.308021545410156,-68.40748596191406,4.623574733734131],[-16.08948516845703,-69.99372863769531,5.974042892456055],[-15.596675872802734,-71.26029968261719,7.4520392417907715],[-14.894319534301758,-72.2375259399414,9.045120239257812],[-14.092665672302246,-73.00833892822266,10.741847038269043],[-13.293929100036621,-73.67682647705078,12.534424781799316],[-12.596315383911133,-74.35491943359375,14.411401748657227],[-12.036134719848633,-75.09063720703125,16.352306365966797],[-11.644448280334473,-75.9046859741211,18.347015380859375],[-11.410329818725586,-76.76766967773438,20.398317337036133],[-11.300576210021973,-77.6233139038086,22.521154403686523],[-11.27132797241211,-78.4092788696289,24.727718353271484],[-11.295068740844727,-79.08782196044922,27.01650619506836],[-11.346870422363281,-79.63903045654297,29.372507095336914],[-14.812932014465332,-63.65916442871094,3.561058282852173],[-15.162250518798828,-65.64873504638672,4.691532611846924],[-15.266351699829102,-67.37289428710938,5.969978332519531],[-15.139558792114258,-68.81965637207031,7.3971710205078125],[-14.807971954345703,-70.00730895996094,8.963323593139648],[-14.327292442321777,-70.98705291748047,10.65090560913086],[-13.787778854370117,-71.84590911865234,12.441025733947754],[-13.272651672363281,-72.67691040039062,14.31515884399414],[-12.815690040588379,-73.52729797363281,16.250051498413086],[-12.444178581237793,-74.40927124023438,18.23680305480957],[-12.17279052734375,-75.3086929321289,20.277996063232422],[-11.982586860656738,-76.17859649658203,22.387340545654297],[-11.837944030761719,-76.9626235961914,24.575748443603516],[-11.716632843017578,-77.62619018554688,26.842517852783203],[-11.610418319702148,-78.15498352050781,29.17624282836914],[-13.509177207946777,-62.88258361816406,4.919898509979248],[-13.849939346313477,-64.71187591552734,6.107928276062012],[-14.005195617675781,-66.29528045654297,7.466814041137695],[-13.9933443069458,-67.64385986328125,8.98745059967041],[-13.839644432067871,-68.7955322265625,10.651634216308594],[-13.586973190307617,-69.81538391113281,12.432981491088867],[-13.303265571594238,-70.78546142578125,14.304168701171875],[-13.010887145996094,-71.74906921386719,16.237308502197266],[-12.732842445373535,-72.71890258789062,18.21900177001953],[-12.478279113769531,-73.67485809326172,20.24985122680664],[-12.25048542022705,-74.57928466796875,22.341197967529297],[-12.029153823852539,-75.3827133178711,24.502750396728516],[-11.801202774047852,-76.05420684814453,26.734699249267578],[-11.56438159942627,-76.58152770996094,29.027950286865234],[-12.059205055236816,-62.02429962158203,6.400914192199707],[-12.407289505004883,-63.73308563232422,7.656670570373535],[-12.621988296508789,-65.22415924072266,9.098418235778809],[-12.72107982635498,-66.52454376220703,10.707559585571289],[-12.724112510681152,-67.68411254882812,12.457091331481934],[-12.661092758178711,-68.7706527709961,14.312905311584473],[-12.549806594848633,-69.83145141601562,16.239471435546875],[-12.401793479919434,-70.88072967529297,18.2169189453125],[-12.222602844238281,-71.90292358398438,20.23843765258789],[-12.011509895324707,-72.85737609863281,22.310861587524414],[-11.767020225524902,-73.69949340820312,24.44281768798828],[-11.487831115722656,-74.40013122558594,26.63672637939453],[-11.179325103759766,-74.94776916503906,28.88608169555664],[-10.570436477661133,-61.11457824707031,8.006141662597656],[-10.926344871520996,-62.750701904296875,9.319270133972168],[-11.188080787658691,-64.20039367675781,10.825532913208008],[-11.369181632995605,-65.50106048583984,12.497539520263672],[-11.482467651367188,-66.70629119873047,14.301398277282715],[-11.52642822265625,-67.85903930664062,16.197290420532227],[-11.508381843566895,-68.98257446289062,18.155248641967773],[-11.427305221557617,-70.06710815429688,20.161088943481445],[-11.281647682189941,-71.07799530029297,22.21351432800293],[-11.067106246948242,-71.96797180175781,24.319766998291016],[-10.793402671813965,-72.70838165283203,26.48261260986328],[-10.472840309143066,-73.28653717041016,28.69801902770996],[-9.131501197814941,-60.17958450317383,9.719551086425781],[-9.484637260437012,-61.78404998779297,11.068540573120117],[-9.77083969116211,-63.23440933227539,12.610675811767578],[-9.999103546142578,-64.57304382324219,14.311184883117676],[-10.164322853088379,-65.8341064453125,16.13397789001465],[-10.259031295776367,-67.0407943725586,18.044076919555664],[-10.279004096984863,-68.19373321533203,20.0162296295166],[-10.218456268310547,-69.26403045654297,22.042322158813477],[-10.074056625366211,-70.20834350585938,24.123884201049805],[-9.848621368408203,-70.9931640625,26.26364517211914],[-9.560522079467773,-71.60502624511719,28.45643424987793],[-7.8001604080200195,-59.23690414428711,11.528937339782715],[-8.134237289428711,-60.83906173706055,12.890494346618652],[-8.420783996582031,-62.317901611328125,14.438950538635254],[-8.660636901855469,-63.701805114746094,16.139720916748047],[-8.843984603881836,-65.0092544555664,17.96038818359375],[-8.955819129943848,-66.2425308227539,19.871719360351562],[-8.98669719696045,-67.3819580078125,21.854097366333008],[-8.929360389709473,-68.38714599609375,23.903892517089844],[-8.78518009185791,-69.22482299804688,26.018667221069336],[-8.56251049041748,-69.87545013427734,28.1928653717041],[-6.619809150695801,-58.29395294189453,13.430730819702148],[-6.920053958892822,-59.908607482910156,14.78560733795166],[-7.189981460571289,-61.41590881347656,16.323423385620117],[-7.425644874572754,-62.83234786987305,18.011150360107422],[-7.612314224243164,-64.15910339355469,19.822406768798828],[-7.730714321136475,-65.37802124023438,21.73436737060547],[-7.768766403198242,-66.45455932617188,23.732851028442383],[-7.720669746398926,-67.35447692871094,25.81077766418457],[-7.592221260070801,-68.05564880371094,27.957483291625977],[-5.6278910636901855,-57.34721374511719,15.426921844482422],[-5.894012451171875,-58.967613220214844,16.771364212036133],[-6.14763879776001,-60.48679733276367,18.29448699951172],[-6.381639003753662,-61.90761184692383,19.968311309814453],[-6.577916622161865,-63.21332550048828,21.77229881286621],[-6.7124433517456055,-64.36947631835938,23.69088363647461],[-6.771153450012207,-65.3428955078125,25.707752227783203],[-6.750242710113525,-66.10760498046875,27.80817413330078],[-4.868709564208984,-56.38079071044922,17.524391174316406],[-5.11598014831543,-57.989463806152344,18.863788604736328],[-5.372457981109619,-59.49392318725586,20.3775577545166],[-5.628465175628662,-60.881935119628906,22.041887283325195],[-5.858307361602783,-62.121700286865234,23.84335708618164],[-6.030478000640869,-63.17655944824219,25.767375946044922],[-6.1303911209106445,-64.01802062988281,27.791975021362305],[-4.336585998535156,-55.376949310302734,19.70005226135254],[-4.5946173667907715,-56.95610046386719,21.041845321655273],[-4.888645172119141,-58.41804504394531,22.551101684570312],[-5.199368000030518,-59.736488342285156,24.209850311279297],[-5.4878644943237305,-60.87580490112305,26.00722312927246],[-5.716915130615234,-61.80164337158203,27.926225662231445],[-4.019651889801025,-54.31237030029297,21.924482345581055],[-4.327406406402588,-55.84388732910156,23.27204704284668],[-4.694491863250732,-57.23505783081055,24.779399871826172],[-5.08438777923584,-58.45282745361328,26.432125091552734],[-5.4476318359375,-59.463134765625,28.217777252197266],[-3.8939948081970215,-53.16276931762695,24.157167434692383],[-4.285716533660889,-54.627384185791016,25.510881423950195],[-4.746360778808594,-55.91880416870117,27.017667770385742],[-5.2255659103393555,-57.003108978271484,28.661808013916016],[-3.9234023094177246,-51.90824890136719,26.34943389892578],[-4.4144673347473145,-53.28080749511719,27.71082878112793],[-4.971224784851074,-54.43235397338867,29.22060775756836],[-4.053793907165527,-50.54755401611328,28.45307159423828],[-4.638552188873291,-51.78091812133789,29.828777313232422],[-4.235204219818115,-49.0855598449707,30.43268394470215],[-33.282291412353516,11.873141288757324,-33.59498977661133],[-31.946826934814453,11.292939186096191,-34.782257080078125],[-30.696109771728516,10.40776252746582,-35.905128479003906],[-29.612951278686523,9.208246231079102,-36.93968963623047],[-28.767196655273438,7.726195812225342,-37.863136291503906],[-28.184553146362305,6.018576145172119,-38.64794158935547],[-27.84644317626953,4.153693199157715,-39.25650405883789],[-27.71121597290039,2.181058883666992,-39.65419006347656],[-27.723100662231445,0.14410565793514252,-39.811180114746094],[-27.841014862060547,-1.9472880363464355,-39.71525955200195],[-28.026622772216797,-4.069367408752441,-39.39124298095703],[-28.2601375579834,-6.2147674560546875,-38.87763214111328],[-28.526742935180664,-8.385476112365723,-38.220279693603516],[-28.81021499633789,-10.59143352508545,-37.457725524902344],[-29.090538024902344,-12.84823226928711,-36.60415267944336],[-29.328550338745117,-15.158615112304688,-35.67515182495117],[-29.49051856994629,-17.525373458862305,-34.66645431518555],[-29.546680450439453,-19.944602966308594,-33.56930160522461],[-29.48499870300293,-22.426136016845703,-32.363494873046875],[-29.313064575195312,-24.972686767578125,-31.042770385742188],[-29.052154541015625,-27.58818244934082,-29.603416442871094],[-28.72774887084961,-30.278385162353516,-28.04558753967285],[-28.35988426208496,-33.041595458984375,-26.380756378173828],[-27.949981689453125,-35.89548873901367,-24.623903274536133],[-27.482149124145508,-38.820579528808594,-22.82361602783203],[-26.91974639892578,-41.80529022216797,-21.033599853515625],[-26.2160701751709,-44.82392883300781,-19.320493698120117],[-25.328632354736328,-47.857017517089844,-17.738920211791992],[-24.241989135742188,-50.85988235473633,-16.320722579956055],[-22.97539710998535,-53.77955627441406,-15.064077377319336],[-32.22303009033203,10.592900276184082,-32.924537658691406],[-30.958362579345703,9.778374671936035,-34.01616668701172],[-29.833038330078125,8.707188606262207,-35.023189544677734],[-28.90655517578125,7.389127731323242,-35.93314743041992],[-28.20896339416504,5.858998775482178,-36.732994079589844],[-27.745296478271484,4.15988826751709,-37.392822265625],[-27.48177719116211,2.3429272174835205,-37.87997055053711],[-27.367027282714844,0.4471767246723175,-38.159889221191406],[-27.343873977661133,-1.5095924139022827,-38.224090576171875],[-27.386003494262695,-3.52401065826416,-38.06913375854492],[-27.473695755004883,-5.580160617828369,-37.72566223144531],[-27.599695205688477,-7.672908782958984,-37.23151397705078],[-27.7568302154541,-9.802630424499512,-36.62395477294922],[-27.93906593322754,-11.978290557861328,-35.92046356201172],[-28.120105743408203,-14.205606460571289,-35.12546920776367],[-28.259735107421875,-16.480504989624023,-34.2443962097168],[-28.321327209472656,-18.798086166381836,-33.27235412597656],[-28.287641525268555,-21.158946990966797,-32.2005729675293],[-28.153820037841797,-23.5750675201416,-31.01465606689453],[-27.92792510986328,-26.049461364746094,-29.71407699584961],[-27.6274356842041,-28.58587074279785,-28.301605224609375],[-27.26758575439453,-31.183298110961914,-26.78704833984375],[-26.860734939575195,-33.850341796875,-25.179183959960938],[-26.40283203125,-36.59267807006836,-23.49791145324707],[-25.87143325805664,-39.3934440612793,-21.7945499420166],[-25.23194122314453,-42.24001693725586,-20.124704360961914],[-24.45571517944336,-45.12794494628906,-18.535564422607422],[-23.518714904785156,-48.05857467651367,-17.057485580444336],[-22.411632537841797,-51.01141357421875,-15.703165054321289],[-31.31077766418457,9.314559936523438,-32.05849838256836],[-30.205846786499023,8.263387680053711,-33.05583190917969],[-29.27615737915039,7.014798164367676,-33.96283721923828],[-28.547338485717773,5.59033727645874,-34.7730712890625],[-28.029298782348633,4.015244960784912,-35.46723175048828],[-27.702470779418945,2.3210809230804443,-36.016117095947266],[-27.524560928344727,0.5441721677780151,-36.38594436645508],[-27.43166160583496,-1.2977862358093262,-36.5611572265625],[-27.38211441040039,-3.195319175720215,-36.537635803222656],[-27.360828399658203,-5.14932918548584,-36.32190704345703],[-27.365602493286133,-7.149243354797363,-35.949039459228516],[-27.399150848388672,-9.192310333251953,-35.453739166259766],[-27.46304702758789,-11.282720565795898,-34.86042404174805],[-27.54383087158203,-13.4216890335083,-34.17820358276367],[-27.614416122436523,-15.609371185302734,-33.405975341796875],[-27.629899978637695,-17.833023071289062,-32.54524612426758],[-27.565555572509766,-20.089698791503906,-31.593198776245117],[-27.40902328491211,-22.380287170410156,-30.54840660095215],[-27.16183853149414,-24.718185424804688,-29.401823043823242],[-26.83211898803711,-27.109098434448242,-28.154277801513672],[-26.42698097229004,-29.55303382873535,-26.813976287841797],[-25.966337203979492,-32.061981201171875,-25.379962921142578],[-25.454326629638672,-34.63444137573242,-23.86355972290039],[-24.887563705444336,-37.2716178894043,-22.286195755004883],[-24.23820686340332,-39.95397186279297,-20.70610809326172],[-23.490537643432617,-42.686805725097656,-19.16510772705078],[-22.633756637573242,-45.483787536621094,-17.691646575927734],[-21.653072357177734,-48.3597412109375,-16.300018310546875],[-30.534664154052734,8.107349395751953,-31.04839324951172],[-29.659082412719727,6.821216583251953,-31.956645965576172],[-28.96588897705078,5.407555103302002,-32.779579162597656],[-28.468603134155273,3.8793115615844727,-33.503116607666016],[-28.152326583862305,2.2565643787384033,-34.104583740234375],[-27.984968185424805,0.5578799843788147,-34.55032730102539],[-27.900501251220703,-1.1992812156677246,-34.8231201171875],[-27.849565505981445,-3.009066581726074,-34.911376953125],[-27.803974151611328,-4.868257522583008,-34.81727981567383],[-27.758268356323242,-6.780205726623535,-34.55126953125],[-27.72405242919922,-8.740066528320312,-34.148712158203125],[-27.708498001098633,-10.750791549682617,-33.636661529541016],[-27.707014083862305,-12.811575889587402,-33.030303955078125],[-27.701040267944336,-14.91950798034668,-32.334957122802734],[-27.656097412109375,-17.066341400146484,-31.549606323242188],[-27.539154052734375,-19.239473342895508,-30.67924690246582],[-27.329721450805664,-21.43280792236328,-29.72771453857422],[-27.01742935180664,-23.644603729248047,-28.699899673461914],[-26.60703468322754,-25.88783836364746,-27.59481430053711],[-26.10060691833496,-28.167875289916992,-26.416915893554688],[-25.522010803222656,-30.5047607421875,-25.16312599182129],[-24.883752822875977,-32.908145904541016,-23.83148193359375],[-24.193927764892578,-35.37761688232422,-22.428483963012695],[-23.45064926147461,-37.9062614440918,-20.979116439819336],[-22.64238739013672,-40.48369598388672,-19.532577514648438],[-21.77239227294922,-43.127845764160156,-18.118125915527344],[-20.837493896484375,-45.85911178588867,-16.754072189331055],[-29.84187889099121,7.066232204437256,-29.947898864746094],[-29.225818634033203,5.555882453918457,-30.7678279876709],[-28.797773361206055,3.9763412475585938,-31.50761604309082],[-28.55113410949707,2.3393986225128174,-32.14691162109375],[-28.4608097076416,0.656134843826294,-32.65592956542969],[-28.456621170043945,-1.0654361248016357,-33.01433563232422],[-28.485374450683594,-2.8256168365478516,-33.20935821533203],[-28.507781982421875,-4.6269402503967285,-33.235572814941406],[-28.50783920288086,-6.471565246582031,-33.09857940673828],[-28.48741340637207,-8.36677360534668,-32.807682037353516],[-28.461544036865234,-10.314261436462402,-32.390480041503906],[-28.435094833374023,-12.314837455749512,-31.864377975463867],[-28.398019790649414,-14.365614891052246,-31.239595413208008],[-28.3230037689209,-16.458189010620117,-30.51972198486328],[-28.179014205932617,-18.581697463989258,-29.708362579345703],[-27.939191818237305,-20.720142364501953,-28.815845489501953],[-27.58502960205078,-22.862871170043945,-27.850460052490234],[-27.106779098510742,-25.003576278686523,-26.8214054107666],[-26.49985122680664,-27.144285202026367,-25.735015869140625],[-25.78473663330078,-29.30409049987793,-24.596332550048828],[-24.97521209716797,-31.503137588500977,-23.406545639038086],[-24.089181900024414,-33.763729095458984,-22.164560317993164],[-23.13913345336914,-36.093509674072266,-20.878732681274414],[-22.161033630371094,-38.502296447753906,-19.56071662902832],[-21.165372848510742,-40.98046112060547,-18.246055603027344],[-20.162900924682617,-43.543678283691406,-16.95710563659668],[-29.118515014648438,6.294790267944336,-28.825624465942383],[-28.77177619934082,4.563843727111816,-29.536705017089844],[-28.613140106201172,2.8146770000457764,-30.17758560180664],[-28.62991714477539,1.0532933473587036,-30.715600967407227],[-28.754079818725586,-0.707756757736206,-31.131946563720703],[-28.921436309814453,-2.4778921604156494,-31.409358978271484],[-29.086156845092773,-4.270125389099121,-31.541305541992188],[-29.21857452392578,-6.094354152679443,-31.52705192565918],[-29.310510635375977,-7.958783149719238,-31.373416900634766],[-29.356603622436523,-9.872142791748047,-31.080997467041016],[-29.375059127807617,-11.837822914123535,-30.66598129272461],[-29.36607551574707,-13.856000900268555,-30.13864517211914],[-29.313304901123047,-15.921731948852539,-29.50604820251465],[-29.187789916992188,-18.023921966552734,-28.772293090820312],[-28.961139678955078,-20.14712905883789,-27.943822860717773],[-28.611980438232422,-22.27326774597168,-27.034912109375],[-28.123624801635742,-24.38725471496582,-26.05620002746582],[-27.480548858642578,-26.473514556884766,-25.018766403198242],[-26.6923885345459,-28.533634185791016,-23.930448532104492],[-25.768543243408203,-30.577682495117188,-22.800676345825195],[-24.720842361450195,-32.626434326171875,-21.63633918762207],[-23.558300018310547,-34.70260238647461,-20.446792602539062],[-22.318567276000977,-36.84588623046875,-19.244678497314453],[-21.079051971435547,-39.102012634277344,-18.03753662109375],[-19.875289916992188,-41.45886993408203,-16.846033096313477],[-28.276634216308594,5.821523189544678,-27.74409294128418],[-28.179407119750977,3.8842928409576416,-28.31366729736328],[-28.281494140625,1.9583549499511719,-28.821247100830078],[-28.52596092224121,0.06557147949934006,-29.243505477905273],[-28.848960876464844,-1.795287847518921,-29.56004524230957],[-29.1883602142334,-3.643141269683838,-29.757591247558594],[-29.506797790527344,-5.501972198486328,-29.833091735839844],[-29.78179931640625,-7.388141632080078,-29.7889347076416],[-29.996868133544922,-9.309854507446289,-29.628320693969727],[-30.14390754699707,-11.275420188903809,-29.34288787841797],[-30.23624038696289,-13.290191650390625,-28.93886947631836],[-30.270145416259766,-15.3552827835083,-28.421720504760742],[-30.22197723388672,-17.4620418548584,-27.795211791992188],[-30.06442642211914,-19.597126007080078,-27.063005447387695],[-29.771190643310547,-21.741971969604492,-26.23171043395996],[-29.327098846435547,-23.877046585083008,-25.31760597229004],[-28.71268653869629,-25.980648040771484,-24.331979751586914],[-27.9263973236084,-28.03453254699707,-23.285186767578125],[-26.96814727783203,-30.02828598022461,-22.187063217163086],[-25.847562789916992,-31.96661376953125,-21.05124282836914],[-24.56869888305664,-33.860565185546875,-19.891382217407227],[-23.154541015625,-35.7440071105957,-18.725317001342773],[-21.65825080871582,-37.68058776855469,-17.573205947875977],[-20.17365074157715,-39.74594497680664,-16.450468063354492],[-27.257150650024414,5.634923458099365,-26.755674362182617],[-27.374568939208984,3.5064868927001953,-27.14032554626465],[-27.677692413330078,1.4179999828338623,-27.49392318725586],[-28.10788345336914,-0.6154781579971313,-27.786636352539062],[-28.601320266723633,-2.598588466644287,-27.998353958129883],[-29.101207733154297,-4.556304454803467,-28.115800857543945],[-29.575786590576172,-6.519716262817383,-28.136335372924805],[-29.995620727539062,-8.50064754486084,-28.061357498168945],[-30.349987030029297,-10.511831283569336,-27.886003494262695],[-30.621471405029297,-12.559467315673828,-27.598970413208008],[-30.818267822265625,-14.65349006652832,-27.200361251831055],[-30.92186737060547,-16.789329528808594,-26.691875457763672],[-30.907838821411133,-18.958303451538086,-26.07645034790039],[-30.747859954833984,-21.1466007232666,-25.356334686279297],[-30.41480827331543,-23.332971572875977,-24.534738540649414],[-29.897951126098633,-25.495399475097656,-23.626468658447266],[-29.186046600341797,-27.605627059936523,-22.639219284057617],[-28.27483367919922,-29.639354705810547,-21.584033966064453],[-27.162776947021484,-31.57659149169922,-20.47281265258789],[-25.857234954833984,-33.41215133666992,-19.324356079101562],[-24.376018524169922,-35.15888214111328,-18.159658432006836],[-22.755268096923828,-36.860450744628906,-17.004091262817383],[-21.05330467224121,-38.58816146850586,-15.885538101196289],[-26.057344436645508,5.6710028648376465,-25.869354248046875],[-26.3165225982666,3.3879504203796387,-26.05997657775879],[-26.758386611938477,1.148614764213562,-26.249223709106445],[-27.31985092163086,-1.0310131311416626,-26.409317016601562],[-27.939815521240234,-3.1567859649658203,-26.519569396972656],[-28.56538200378418,-5.25389289855957,-26.564861297607422],[-29.159696578979492,-7.343845844268799,-26.53877830505371],[-29.70220184326172,-9.443778038024902,-26.430984497070312],[-30.180423736572266,-11.565903663635254,-26.230154037475586],[-30.578121185302734,-13.719284057617188,-25.921031951904297],[-30.88463592529297,-15.907214164733887,-25.503416061401367],[-31.0787410736084,-18.126476287841797,-24.980133056640625],[-31.13442039489746,-20.370033264160156,-24.356243133544922],[-31.018394470214844,-22.624086380004883,-23.636154174804688],[-30.696460723876953,-24.86594581604004,-22.821151733398438],[-30.15566062927246,-27.066267013549805,-21.918397903442383],[-29.384218215942383,-29.19306182861328,-20.932161331176758],[-28.379064559936523,-31.214963912963867,-19.87088966369629],[-27.135496139526367,-33.09956359863281,-18.74736976623535],[-25.675682067871094,-34.839149475097656,-17.586341857910156],[-24.03285026550293,-36.45207595825195,-16.41649055480957],[-22.25244140625,-37.984344482421875,-15.27035903930664],[-24.681360244750977,5.884600639343262,-25.099018096923828],[-25.01661491394043,3.469986915588379,-25.101821899414062],[-25.529191970825195,1.090295433998108,-25.134143829345703],[-26.155794143676758,-1.2399946451187134,-25.173809051513672],[-26.838476181030273,-3.5242156982421875,-25.20332908630371],[-27.525081634521484,-5.769935131072998,-25.20362091064453],[-28.185396194458008,-8.001439094543457,-25.152326583862305],[-28.800537109375,-10.233135223388672,-25.028369903564453],[-29.360647201538086,-12.480620384216309,-24.810745239257812],[-29.841379165649414,-14.74298095703125,-24.4765682220459],[-30.228437423706055,-17.025697708129883,-24.0236759185791],[-30.50078582763672,-19.32733726501465,-23.454668045043945],[-30.633106231689453,-21.641002655029297,-22.77608871459961],[-30.5953369140625,-23.95321273803711,-21.9946346282959],[-30.340869903564453,-26.239221572875977,-21.127853393554688],[-29.85047149658203,-28.47293472290039,-20.186656951904297],[-29.09807014465332,-30.61935043334961,-19.176950454711914],[-28.0683536529541,-32.63798904418945,-18.10252571105957],[-26.752357482910156,-34.48360061645508,-16.96974754333496],[-25.19257354736328,-36.14617156982422,-15.801900863647461],[-23.440216064453125,-37.644779205322266,-14.633072853088379],[-23.187824249267578,6.207319259643555,-24.402755737304688],[-23.547218322753906,3.668227195739746,-24.24237632751465],[-24.071155548095703,1.1478582620620728,-24.14481544494629],[-24.6976261138916,-1.3396542072296143,-24.09803009033203],[-25.377134323120117,-3.7789783477783203,-24.08702850341797],[-26.068164825439453,-6.176492691040039,-24.077228546142578],[-26.742488861083984,-8.551030158996582,-24.033967971801758],[-27.38467025756836,-10.91926097869873,-23.925020217895508],[-27.981489181518555,-13.285466194152832,-23.715763092041016],[-28.508800506591797,-15.64980697631836,-23.37188720703125],[-28.94680404663086,-18.01934242248535,-22.888648986816406],[-29.272275924682617,-20.39168357849121,-22.266149520874023],[-29.461204528808594,-22.757713317871094,-21.506202697753906],[-29.478124618530273,-25.09964370727539,-20.625263214111328],[-29.28420639038086,-27.397903442382812,-19.646587371826172],[-28.85919952392578,-29.63010597229004,-18.591976165771484],[-28.17489242553711,-31.76447296142578,-17.476577758789062],[-27.20317268371582,-33.76673889160156,-16.321826934814453],[-25.906280517578125,-35.58930587768555,-15.149023056030273],[-24.325212478637695,-37.202571868896484,-13.966927528381348],[-21.616146087646484,6.6021952629089355,-23.7616024017334],[-21.954206466674805,3.932155132293701,-23.47469139099121],[-22.434579849243164,1.262001872062683,-23.291011810302734],[-23.006736755371094,-1.377082347869873,-23.206199645996094],[-23.633296966552734,-3.968752384185791,-23.194683074951172],[-24.282804489135742,-6.512182235717773,-23.210887908935547],[-24.929615020751953,-9.02703857421875,-23.209449768066406],[-25.56290054321289,-11.517524719238281,-23.139070510864258],[-26.167818069458008,-13.989699363708496,-22.95203971862793],[-26.718780517578125,-16.4446964263916,-22.604248046875],[-27.188796997070312,-18.887855529785156,-22.087472915649414],[-27.55227279663086,-21.313732147216797,-21.39609718322754],[-27.778528213500977,-23.707725524902344,-20.54155921936035],[-27.834653854370117,-26.054906845092773,-19.543737411499023],[-27.682838439941406,-28.336641311645508,-18.432029724121094],[-27.306333541870117,-30.5296688079834,-17.229421615600586],[-26.678367614746094,-32.608882904052734,-15.96534538269043],[-25.773181915283203,-34.55232620239258,-14.673380851745605],[-24.5521240234375,-36.32930374145508,-13.39301872253418],[-19.997892379760742,7.037066459655762,-23.174718856811523],[-20.271892547607422,4.221182823181152,-22.812088012695312],[-20.66891860961914,1.4037224054336548,-22.596649169921875],[-21.149059295654297,-1.3839151859283447,-22.51730728149414],[-21.687625885009766,-4.118875026702881,-22.541494369506836],[-22.260465621948242,-6.800906181335449,-22.614912033081055],[-22.852039337158203,-9.436716079711914,-22.671213150024414],[-23.45162582397461,-12.032853126525879,-22.643735885620117],[-24.041584014892578,-14.596968650817871,-22.474273681640625],[-24.594900131225586,-17.128023147583008,-22.109542846679688],[-25.077821731567383,-19.627254486083984,-21.534496307373047],[-25.459335327148438,-22.082035064697266,-20.75298500061035],[-25.70909309387207,-24.480684280395508,-19.78289031982422],[-25.79414176940918,-26.809598922729492,-18.65264892578125],[-25.678037643432617,-29.049285888671875,-17.39386558532715],[-25.34186553955078,-31.180206298828125,-16.042224884033203],[-24.76011848449707,-33.18332290649414,-14.633893013000488],[-23.913917541503906,-35.03993225097656,-13.201051712036133],[-18.35818099975586,7.481440544128418,-22.662601470947266],[-18.540300369262695,4.5182204246521,-22.282604217529297],[-18.82819366455078,1.554542064666748,-22.08192253112793],[-19.19399070739746,-1.3727850914001465,-22.044599533081055],[-19.6198787689209,-4.242311477661133,-22.132675170898438],[-20.098276138305664,-7.041623592376709,-22.27239227294922],[-20.61509895324707,-9.78031063079834,-22.38226890563965],[-21.15833282470703,-12.467355728149414,-22.384044647216797],[-21.708335876464844,-15.108896255493164,-22.20890235900879],[-22.236509323120117,-17.698945999145508,-21.792539596557617],[-22.706220626831055,-20.22887420654297,-21.12838363647461],[-23.084930419921875,-22.68793296813965,-20.22846221923828],[-23.34267234802246,-25.065834045410156,-19.1213321685791],[-23.44839859008789,-27.349807739257812,-17.84049415588379],[-23.36403465270996,-29.526870727539062,-16.43307113647461],[-23.067724227905273,-31.583513259887695,-14.941912651062012],[-22.536216735839844,-33.50088882446289,-13.400954246520996],[-16.72853660583496,7.921338081359863,-22.2525577545166],[-16.80337142944336,4.810154438018799,-21.90309715270996],[-16.971471786499023,1.70854914188385,-21.752971649169922],[-17.21002197265625,-1.3497593402862549,-21.782384872436523],[-17.517822265625,-4.332674503326416,-21.937349319458008],[-17.891483306884766,-7.231682300567627,-22.132165908813477],[-18.316497802734375,-10.059602737426758,-22.274463653564453],[-18.78045082092285,-12.82498836517334,-22.274566650390625],[-19.261096954345703,-15.529703140258789,-22.050487518310547],[-19.736730575561523,-18.154834747314453,-21.54364013671875],[-20.16761589050293,-20.69097137451172,-20.755813598632812],[-20.52276039123535,-23.127416610717773,-19.711170196533203],[-20.774438858032227,-25.455053329467773,-18.445411682128906],[-20.892446517944336,-27.670522689819336,-17.010982513427734],[-20.83595848083496,-29.770469665527344,-15.46381950378418],[-20.581315994262695,-31.742176055908203,-13.844239234924316],[-15.126757621765137,8.33285903930664,-21.95534896850586],[-15.090636253356934,5.08326530456543,-21.666711807250977],[-15.134397506713867,1.8532376289367676,-21.585063934326172],[-15.249805450439453,-1.3147408962249756,-21.676883697509766],[-15.43918228149414,-4.393983840942383,-21.88119125366211],[-15.700810432434082,-7.380432605743408,-22.104238510131836],[-16.02057456970215,-10.28742504119873,-22.242380142211914],[-16.38363265991211,-13.120661735534668,-22.191734313964844],[-16.777122497558594,-15.867676734924316,-21.874412536621094],[-17.180517196655273,-18.50519371032715,-21.238544464111328],[-17.556184768676758,-21.021169662475586,-20.298297882080078],[-17.87554168701172,-23.404891967773438,-19.086223602294922],[-18.114023208618164,-25.65741729736328,-17.659910202026367],[-18.239273071289062,-27.78835678100586,-16.08262062072754],[-18.208946228027344,-29.79842758178711,-14.40812873840332],[-13.569083213806152,8.70766544342041,-21.770042419433594],[-13.421600341796875,5.332586288452148,-21.549787521362305],[-13.348661422729492,1.9979931116104126,-21.521873474121094],[-13.345208168029785,-1.2609211206436157,-21.65070152282715],[-13.414838790893555,-4.4235358238220215,-21.87158966064453],[-13.55794620513916,-7.487945556640625,-22.081809997558594],[-13.758444786071777,-10.466136932373047,-22.162736892700195],[-14.014009475708008,-13.348904609680176,-22.014358520507812],[-14.310072898864746,-16.11829376220703,-21.563106536865234],[-14.632476806640625,-18.74336051940918,-20.768627166748047],[-14.946085929870605,-21.209659576416016,-19.653533935546875],[-15.227838516235352,-23.515499114990234,-18.274553298950195],[-15.451261520385742,-25.676719665527344,-16.701547622680664],[-15.581673622131348,-27.70956802368164,-14.996479988098145],[-12.062713623046875,9.039153099060059,-21.667333602905273],[-11.811792373657227,5.568018436431885,-21.486709594726562],[-11.627819061279297,2.1519229412078857,-21.47687339782715],[-11.507566452026367,-1.1815234422683716,-21.602394104003906],[-11.456753730773926,-4.416134357452393,-21.793560028076172],[-11.47516918182373,-7.550917148590088,-21.934249877929688],[-11.560598373413086,-10.5830717086792,-21.90980339050293],[-11.708536148071289,-13.497055053710938,-21.622438430786133],[-11.909199714660645,-16.265352249145508,-21.008140563964844],[-12.15239143371582,-18.849506378173828,-20.03443145751953],[-12.410305976867676,-21.24095916748047,-18.74863052368164],[-12.658883094787598,-23.45311164855957,-17.220727920532227],[-12.868552207946777,-25.51009750366211,-15.519830703735352],[-10.617731094360352,9.341318130493164,-21.568885803222656],[-10.269892692565918,5.806023597717285,-21.37789535522461],[-9.979764938354492,2.332566738128662,-21.334941864013672],[-9.74734878540039,-1.0582847595214844,-21.40353775024414],[-9.578588485717773,-4.354414939880371,-21.50403594970703],[-9.48686408996582,-7.541729927062988,-21.526729583740234],[-9.467643737792969,-10.609748840332031,-21.35608673095703],[-9.52010440826416,-13.531804084777832,-20.902347564697266],[-9.636822700500488,-16.270713806152344,-20.107440948486328],[-9.815385818481445,-18.788089752197266,-18.962797164916992],[-10.028509140014648,-21.088701248168945,-17.5289363861084],[-10.249506950378418,-23.195056915283203,-15.87548542022705],[-9.226911544799805,9.632546424865723,-21.36764907836914],[-8.790175437927246,6.065930366516113,-21.1072998046875],[-8.404417037963867,2.558596134185791,-20.974180221557617],[-8.071629524230957,-0.8758771419525146,-20.925201416015625],[-7.809401512145996,-4.215814590454102,-20.89154624938965],[-7.627744674682617,-7.437604904174805,-20.759946823120117],[-7.5250468254089355,-10.517367362976074,-20.41990089416504],[-7.501206398010254,-13.417110443115234,-19.785804748535156],[-7.554660320281982,-16.09658432006836,-18.82181167602539],[-7.6844072341918945,-18.527679443359375,-17.5319881439209],[-7.862560272216797,-20.724184036254883,-15.976757049560547],[-7.897348403930664,9.947553634643555,-20.951175689697266],[-7.389688491821289,6.377124786376953,-20.566450119018555],[-6.929577827453613,2.8502843379974365,-20.289165496826172],[-6.527987957000732,-0.6135029792785645,-20.090957641601562],[-6.1991753578186035,-3.981382369995117,-19.896387100219727],[-5.953699588775635,-7.214181900024414,-19.59433364868164],[-5.79049825668335,-10.274016380310059,-19.075359344482422],[-5.712640762329102,-13.11668586730957,-18.273584365844727],[-5.719814300537109,-15.710524559020996,-17.165407180786133],[-5.811551570892334,-18.0369873046875,-15.756725311279297],[-6.669089317321777,10.323713302612305,-20.22723388671875],[-6.120122909545898,6.760019302368164,-19.678058624267578],[-5.619436264038086,3.2204387187957764,-19.24260902404785],[-5.177597999572754,-0.2612207531929016,-18.88206672668457],[-4.808711528778076,-3.6356053352355957,-18.520137786865234],[-4.52245569229126,-6.847359657287598,-18.043182373046875],[-4.319661617279053,-9.848933219909668,-17.35790252685547],[-4.204033851623535,-12.602466583251953,-16.410106658935547],[-4.176064968109131,-15.085256576538086,-15.179893493652344],[-5.608926296234131,10.776084899902344,-19.156688690185547],[-5.047385215759277,7.215144634246826,-18.449705123901367],[-4.529959201812744,3.6684253215789795,-17.85770606994629],[-4.069027423858643,0.1875881552696228,-17.338516235351562],[-3.678626537322998,-3.1609175205230713,-16.809642791748047],[-3.3684792518615723,-6.31052303314209,-16.169313430786133],[-3.1402173042297363,-9.217392921447754,-15.335217475891113],[-2.9980437755584717,-11.851360321044922,-14.258399963378906],[-4.770569324493408,11.297493934631348,-17.78482437133789],[-4.209342956542969,7.7392473220825195,-16.934894561767578],[-3.6870627403259277,4.201451301574707,-16.1982479095459],[-3.2183403968811035,0.7540444731712341,-15.524361610412598],[-2.817382335662842,-2.524995803833008,-14.838152885437012],[-2.4940314292907715,-5.5722246170043945,-14.047439575195312],[-2.2507541179656982,-8.349857330322266,-13.076086044311523],[-4.134152412414551,11.87703800201416,-16.19024658203125],[-3.573610305786133,8.333525657653809,-15.213008880615234],[-3.0494165420532227,4.834741115570068,-14.337272644042969],[-2.5773959159851074,1.4642587900161743,-13.51590347290039],[-2.1717963218688965,-1.7028777599334717,-12.680706024169922],[-1.8424652814865112,-4.610308647155762,-11.746563911437988],[-3.6599321365356445,12.520293235778809,-14.43262004852295],[-3.0973966121673584,9.017964363098145,-13.33700942993164],[-2.571859359741211,5.600083351135254,-12.32927131652832],[-2.0993621349334717,2.3507957458496094,-11.365936279296875],[-1.6939431428909302,-0.6624685525894165,-10.384603500366211],[-3.2974088191986084,13.23829460144043,-12.558369636535645],[-2.731137752532959,9.814790725708008,-11.354333877563477],[-2.2053472995758057,6.52316427230835,-10.21948528289795],[-1.7356170415878296,3.44343900680542,-9.114445686340332],[-2.999293565750122,14.037178039550781,-10.61305046081543],[-2.4301681518554688,10.736331939697266,-9.309610366821289],[-1.9071366786956787,7.6287760734558105,-8.048065185546875],[-2.7242324352264404,14.903958320617676,-8.64256477355957],[-2.157249927520752,11.793013572692871,-7.242720127105713],[-2.4523234367370605,15.834569931030273,-6.689304351806641],[-9.333996772766113,26.484399795532227,60.55707931518555],[-9.907445907592773,29.059783935546875,59.45600891113281],[-10.53874397277832,31.73208236694336,58.16958236694336],[-11.202107429504395,34.419925689697266,56.71131134033203],[-11.879202842712402,37.06378173828125,55.079341888427734],[-12.555789947509766,39.61228942871094,53.27865219116211],[-13.225439071655273,42.033226013183594,51.33352279663086],[-13.890121459960938,44.305885314941406,49.27259063720703],[-14.559591293334961,46.42215347290039,47.13246154785156],[-15.252113342285156,48.374977111816406,44.95124053955078],[-15.985217094421387,50.177268981933594,42.7674446105957],[-16.771930694580078,51.832786560058594,40.60629653930664],[-17.61888313293457,53.33893966674805,38.48480224609375],[-18.526302337646484,54.685997009277344,36.41404724121094],[-19.48726463317871,55.86078643798828,34.400142669677734],[-20.487632751464844,56.86667251586914,32.44089889526367],[-21.51734161376953,57.70484924316406,30.535770416259766],[-22.570085525512695,58.38310241699219,28.685123443603516],[-23.64636993408203,58.90980911254883,26.893856048583984],[-24.751380920410156,59.31190490722656,25.162940979003906],[-25.893497467041016,59.61570739746094,23.49169158935547],[-27.081090927124023,59.84474563598633,21.87628936767578],[-28.319414138793945,60.01963424682617,20.307161331176758],[-29.608800888061523,60.153987884521484,18.767833709716797],[-30.937759399414062,60.25261688232422,17.234922409057617],[-32.293907165527344,60.3028564453125,15.690080642700195],[-33.66300582885742,60.27801513671875,14.12080192565918],[-35.028343200683594,60.13508224487305,12.52283000946045],[-36.36958694458008,59.83393859863281,10.906639099121094],[-37.664039611816406,59.35558319091797,9.298314094543457],[-38.878692626953125,58.7061882019043,7.746132850646973],[-37.5982780456543,59.94725036621094,6.8893561363220215],[-36.219844818115234,61.015350341796875,5.82009220123291],[-34.726314544677734,61.928253173828125,4.617694854736328],[-33.1243896484375,62.70551300048828,3.3320064544677734],[-31.42477035522461,63.38407516479492,2.0146734714508057],[-29.631235122680664,64.00141143798828,0.7164807319641113],[-27.748310089111328,64.57135009765625,-0.5279284715652466],[-25.780292510986328,65.07976531982422,-1.6991150379180908],[-23.74336814880371,65.48506164550781,-2.7855188846588135],[-21.642641067504883,65.70803833007812,-3.7887115478515625],[-19.51925277709961,65.68758392333984,-4.707130432128906],[-17.42015266418457,65.37151336669922,-5.532620906829834],[-15.404552459716797,64.72193908691406,-6.2516984939575195],[-13.549163818359375,63.71833419799805,-6.853156566619873],[-11.931374549865723,62.38467788696289,-7.347522258758545],[-10.624103546142578,60.790672302246094,-7.754850387573242],[-9.6690092086792,59.014339447021484,-8.111857414245605],[-9.065177917480469,57.129371643066406,-8.462430953979492],[-8.725725173950195,55.164764404296875,-8.829827308654785],[-8.533397674560547,53.114803314208984,-9.204585075378418],[-8.378641128540039,50.95753860473633,-9.548298835754395],[-8.168177604675293,48.67298889160156,-9.800690650939941],[-7.831752300262451,46.255958557128906,-9.890448570251465],[-7.353334903717041,43.707252502441406,-9.75812816619873],[-6.750772953033447,41.04644775390625,-9.383694648742676],[-6.057298183441162,38.27729797363281,-8.763211250305176],[-5.310455799102783,35.395538330078125,-7.915266036987305],[-4.553048133850098,32.38775634765625,-6.882565498352051],[-3.819309711456299,29.252304077148438,-5.742321968078613],[-3.135110378265381,25.989521026611328,-4.59495735168457],[-36.18684387207031,60.57105255126953,8.403975486755371],[-34.64164352416992,61.58034896850586,7.296420097351074],[-33.023128509521484,62.42267990112305,6.053911209106445],[-31.34344482421875,63.15159225463867,4.742278099060059],[-29.610429763793945,63.821048736572266,3.423912525177002],[-27.821290969848633,64.46217346191406,2.1500186920166016],[-25.976486206054688,65.07640075683594,0.9519660472869873],[-24.079139709472656,65.63101959228516,-0.15106117725372314],[-22.124094009399414,66.05722045898438,-1.1583443880081177],[-20.11073112487793,66.26366424560547,-2.0706498622894287],[-18.078899383544922,66.18702697753906,-2.884368896484375],[-16.08233070373535,65.77452087402344,-3.5912692546844482],[-14.19678020477295,64.99342346191406,-4.186088562011719],[-12.505329132080078,63.85443115234375,-4.684544563293457],[-11.10302734375,62.40496063232422,-5.108172416687012],[-10.051750183105469,60.7381591796875,-5.491495609283447],[-9.372939109802246,58.942115783691406,-5.876359462738037],[-8.995392799377441,57.0739631652832,-6.289372444152832],[-8.805644035339355,55.132286071777344,-6.724588394165039],[-8.678600311279297,53.09387969970703,-7.149506092071533],[-8.50472640991211,50.93226623535156,-7.50878381729126],[-8.197701454162598,48.633235931396484,-7.73238468170166],[-7.730772018432617,46.19757843017578,-7.762727737426758],[-7.118167400360107,43.62803649902344,-7.556051254272461],[-6.398521900177002,40.93532943725586,-7.107442378997803],[-5.613674163818359,38.11079025268555,-6.423896312713623],[-4.8076677322387695,35.1353759765625,-5.540111541748047],[-4.017038345336914,31.985820770263672,-4.508338928222656],[-3.269073963165283,28.63766860961914,-3.4154791831970215],[-34.75071334838867,60.97884750366211,9.95060920715332],[-33.087158203125,61.92561340332031,8.794861793518066],[-31.393123626708984,62.73548889160156,7.522125720977783],[-29.681793212890625,63.47560501098633,6.20801305770874],[-27.955219268798828,64.19304656982422,4.91600227355957],[-26.205970764160156,64.90312957763672,3.6938695907592773],[-24.430618286132812,65.58769226074219,2.571331739425659],[-22.607831954956055,66.180419921875,1.5532240867614746],[-20.724166870117188,66.60037231445312,0.6397446990013123],[-18.780916213989258,66.75179290771484,-0.1688576191663742],[-16.82569694519043,66.57191467285156,-0.8688203692436218],[-14.929515838623047,66.01322174072266,-1.4599658250808716],[-13.17764949798584,65.07612609863281,-1.9612518548965454],[-11.671531677246094,63.79375076293945,-2.3972127437591553],[-10.503292083740234,62.24285125732422,-2.801081895828247],[-9.717582702636719,60.530765533447266,-3.212873935699463],[-9.266806602478027,58.737342834472656,-3.659400463104248],[-9.047175407409668,56.8865966796875,-4.141578674316406],[-8.931173324584961,54.95402145385742,-4.632569313049316],[-8.789897918701172,52.90668487548828,-5.08188533782959],[-8.518564224243164,50.721588134765625,-5.421580791473389],[-8.07526969909668,48.39378356933594,-5.590336799621582],[-7.466080188751221,45.92626953125,-5.5445556640625],[-6.7303361892700195,43.31452560424805,-5.256067752838135],[-5.916166305541992,40.55446243286133,-4.731350898742676],[-5.071713924407959,37.623046875,-3.9959964752197266],[-4.233242988586426,34.49320983886719,-3.0957441329956055],[-3.430107355117798,31.129365921020508,-2.0932462215423584],[-33.30966567993164,61.210323333740234,11.49969482421875],[-31.57975959777832,62.128082275390625,10.306499481201172],[-29.85894203186035,62.958797454833984,9.028912544250488],[-28.157276153564453,63.761802673339844,7.7417120933532715],[-26.472705841064453,64.56649017333984,6.505188941955566],[-24.7922306060791,65.3652114868164,5.364419937133789],[-23.084882736206055,66.10157775878906,4.331974506378174],[-21.319616317749023,66.69632720947266,3.410348415374756],[-19.483192443847656,67.06303405761719,2.5994696617126465],[-17.589197158813477,67.10540771484375,1.8995800018310547],[-15.703217506408691,66.76638793945312,1.3068361282348633],[-13.909843444824219,66.03339385986328,0.8001284003257751],[-12.312016487121582,64.92768096923828,0.3534628450870514],[-11.01321792602539,63.51251983642578,-0.06683438271284103],[-10.097436904907227,61.88685607910156,-0.49889737367630005],[-9.54218578338623,60.159278869628906,-0.9699292182922363],[-9.261313438415527,58.37675857543945,-1.484468698501587],[-9.131904602050781,56.535430908203125,-2.025211811065674],[-9.01590633392334,54.59486770629883,-2.548086166381836],[-8.786079406738281,52.52135467529297,-2.987431764602661],[-8.380325317382812,50.30241394042969,-3.2785019874572754],[-7.7924346923828125,47.93703079223633,-3.3722176551818848],[-7.057013988494873,45.42185974121094,-3.2396886348724365],[-6.225927352905273,42.738059997558594,-2.865530014038086],[-5.353957176208496,39.86838150024414,-2.2766830921173096],[-4.480142593383789,36.784828186035156,-1.5113515853881836],[-3.632798433303833,33.45499038696289,-0.6235376596450806],[-31.888696670532227,61.31855392456055,13.043960571289062],[-30.138702392578125,62.256385803222656,11.83835220336914],[-28.431636810302734,63.154151916503906,10.584883689880371],[-26.774179458618164,64.0531234741211,9.35435962677002],[-25.157970428466797,64.95830535888672,8.204170227050781],[-23.540184020996094,65.8190689086914,7.1592488288879395],[-21.87830352783203,66.56480407714844,6.227325439453125],[-20.14106559753418,67.1093978881836,5.409026145935059],[-18.326358795166016,67.36451721191406,4.703182220458984],[-16.47034454345703,67.23884582519531,4.103226184844971],[-14.655759811401367,66.71112823486328,3.586848258972168],[-12.984663009643555,65.78839874267578,3.1278374195098877],[-11.565462112426758,64.52122497558594,2.693141460418701],[-10.501876831054688,62.998207092285156,2.2454333305358887],[-9.818740844726562,61.334693908691406,1.7574814558029175],[-9.449124336242676,59.60913848876953,1.2212103605270386],[-9.281411170959473,57.83749008178711,0.6477994918823242],[-9.177597045898438,55.994197845458984,0.06974128633737564],[-8.993823051452637,54.03111267089844,-0.4526550769805908],[-8.640495300292969,51.92331314086914,-0.8511257171630859],[-8.093859672546387,49.66474151611328,-1.0705511569976807],[-7.379745960235596,47.25011444091797,-1.0756686925888062],[-6.549161911010742,44.66292190551758,-0.8504591584205627],[-5.662491798400879,41.87260818481445,-0.4024672210216522],[-4.764583587646484,38.859188079833984,0.22787049412727356],[-3.885256767272949,35.59268569946289,0.9953271746635437],[-30.503286361694336,61.35498809814453,14.586620330810547],[-28.76949119567871,62.35420227050781,13.396940231323242],[-27.107511520385742,63.3466796875,12.197370529174805],[-25.51760482788086,64.34970092773438,11.055672645568848],[-23.960355758666992,65.32331085205078,10.007258415222168],[-22.37946891784668,66.19989013671875,9.068349838256836],[-20.73073959350586,66.90043640136719,8.242693901062012],[-18.993680953979492,67.33565521240234,7.528792381286621],[-17.188121795654297,67.42047119140625,6.918595790863037],[-15.373563766479492,67.098388671875,6.389651298522949],[-13.6500883102417,66.36627960205078,5.916512489318848],[-12.128408432006836,65.25920104980469,5.467533111572266],[-10.923686981201172,63.8531608581543,5.00686502456665],[-10.091901779174805,62.26529312133789,4.507143020629883],[-9.611478805541992,60.59141540527344,3.957491874694824],[-9.383000373840332,58.877113342285156,3.363647937774658],[-9.273759841918945,57.11166000366211,2.7500343322753906],[-9.135336875915527,55.25477981567383,2.1639983654022217],[-8.849565505981445,53.26093673706055,1.6732209920883179],[-8.365991592407227,51.11384582519531,1.3404115438461304],[-7.6964111328125,48.80625915527344,1.2084498405456543],[-6.887494087219238,46.3216552734375,1.2996470928192139],[-6.002383232116699,43.63352966308594,1.606142282485962],[-5.092016696929932,40.70949172973633,2.1049492359161377],[-4.190787315368652,37.52921676635742,2.7498035430908203],[-29.16208839416504,61.354393005371094,16.134794235229492],[-27.4716739654541,62.4398307800293,14.991728782653809],[-25.875198364257812,63.532920837402344,13.879400253295898],[-24.34209442138672,64.60623931884766,12.843273162841797],[-22.817180633544922,65.60108947753906,11.90660285949707],[-21.24050521850586,66.43892669677734,11.07834243774414],[-19.577110290527344,67.0362548828125,10.359046936035156],[-17.82802963256836,67.30552673339844,9.740473747253418],[-16.037315368652344,67.19424438476562,9.200052261352539],[-14.285232543945312,66.66108703613281,8.71346664428711],[-12.68260383605957,65.72926330566406,8.251012802124023],[-11.351926803588867,64.45772552490234,7.778759956359863],[-10.372247695922852,62.95973205566406,7.270025253295898],[-9.756744384765625,61.343719482421875,6.712432384490967],[-9.445006370544434,59.67787170410156,6.107149600982666],[-9.31045913696289,57.97652053833008,5.471818923950195],[-9.205096244812012,56.207916259765625,4.84375],[-8.995553016662598,54.32681655883789,4.279460906982422],[-8.597122192382812,52.295265197753906,3.8456220626831055],[-7.997363090515137,50.099525451660156,3.5957834720611572],[-7.233701705932617,47.723854064941406,3.5603957176208496],[-6.369462490081787,45.1434211730957,3.7371702194213867],[-5.460760116577148,42.33076477050781,4.102074146270752],[-4.547666549682617,39.25302505493164,4.625180244445801],[-27.872129440307617,61.3284912109375,17.702709197998047],[-26.24350357055664,62.505714416503906,16.640586853027344],[-24.70220184326172,63.66712951660156,15.634002685546875],[-23.200328826904297,64.76518249511719,14.713765144348145],[-21.675832748413086,65.72872924804688,13.892965316772461],[-20.075685501098633,66.47236633300781,13.175078392028809],[-18.384828567504883,66.91297912597656,12.554044723510742],[-16.630268096923828,66.99263763427734,12.00794792175293],[-14.87452507019043,66.6713638305664,11.51318645477295],[-13.214343070983887,65.93000793457031,11.04103946685791],[-11.775626182556152,64.81336212158203,10.559971809387207],[-10.656550407409668,63.42363357543945,10.044158935546875],[-9.898672103881836,61.87537384033203,9.48117733001709],[-9.476689338684082,60.25759506225586,8.870157241821289],[-9.294339179992676,58.60796356201172,8.222824096679688],[-9.205543518066406,56.913421630859375,7.567791938781738],[-9.064584732055664,55.128623962402344,6.952138900756836],[-8.768795013427734,53.21320724487305,6.433138370513916],[-8.266132354736328,51.13341522216797,6.073729515075684],[-7.574542045593262,48.870880126953125,5.916975021362305],[-6.753623008728027,46.40364074707031,5.968820095062256],[-5.863687038421631,43.706268310546875,6.209261894226074],[-4.950948715209961,40.7517204284668,6.607136249542236],[-26.63930320739746,61.27309799194336,19.31171417236328],[-25.064062118530273,62.513397216796875,18.35103416442871],[-23.55494499206543,63.70065689086914,17.461252212524414],[-22.054447174072266,64.77404022216797,16.66098976135254],[-20.50347900390625,65.65420532226562,15.95589828491211],[-18.866281509399414,66.25348663330078,15.341708183288574],[-17.15422248840332,66.51519775390625,14.799076080322266],[-15.412659645080566,66.39179229736328,14.305360794067383],[-13.719362258911133,65.86116027832031,13.83275318145752],[-12.192797660827637,64.92066955566406,13.349169731140137],[-10.945305824279785,63.66158676147461,12.830096244812012],[-10.044710159301758,62.196922302246094,12.263547897338867],[-9.496143341064453,60.63041305541992,11.648768424987793],[-9.23646068572998,59.02585220336914,10.995126724243164],[-9.14120864868164,57.39018249511719,10.323575973510742],[-9.055121421813965,55.68783187866211,9.672210693359375],[-8.858881950378418,53.873756408691406,9.089620590209961],[-8.478039741516113,51.91127014160156,8.63232421875],[-7.889216423034668,49.7655029296875,8.358000755310059],[-7.138482570648193,47.414794921875,8.287042617797852],[-6.2881951332092285,44.83708190917969,8.405961990356445],[-5.390909671783447,42.00735092163086,8.686193466186523],[-25.452428817749023,61.152862548828125,20.972270965576172],[-23.911951065063477,62.41794967651367,20.124967575073242],[-22.408889770507812,63.585792541503906,19.3568058013916],[-20.884681701660156,64.58663177490234,18.67729949951172],[-19.292783737182617,65.33708190917969,18.083417892456055],[-17.622915267944336,65.77130889892578,17.556608200073242],[-15.90462875366211,65.8411865234375,17.076828002929688],[-14.198962211608887,65.51331329345703,16.61635398864746],[-12.604633331298828,64.77559661865234,16.143314361572266],[-11.240532875061035,63.67047882080078,15.629176139831543],[-10.198124885559082,62.30858612060547,15.063223838806152],[-9.513100624084473,60.80259704589844,14.445674896240234],[-9.151951789855957,59.23817443847656,13.786585807800293],[-9.019364356994629,57.64960479736328,13.103872299194336],[-8.967055320739746,56.01374053955078,12.427396774291992],[-8.861705780029297,54.28879928588867,11.7960786819458],[-8.605860710144043,52.430946350097656,11.259922981262207],[-8.150856018066406,50.40388870239258,10.874201774597168],[-7.50299596786499,48.17317199707031,10.679885864257812],[-6.718515396118164,45.7182502746582,10.677206039428711],[-5.855698585510254,43.01731872558594,10.841909408569336],[-24.302940368652344,60.94612121582031,22.69308853149414],[-22.775325775146484,62.195335388183594,21.965417861938477],[-21.25537109375,63.29948806762695,21.320730209350586],[-19.692413330078125,64.18399810791016,20.75925064086914],[-18.06191635131836,64.78372192382812,20.262483596801758],[-16.37200355529785,65.03857421875,19.810161590576172],[-14.667832374572754,64.91215515136719,19.376426696777344],[-13.030330657958984,64.37609100341797,18.928123474121094],[-11.564577102661133,63.457176208496094,18.433929443359375],[-10.383476257324219,62.222625732421875,17.8768310546875],[-9.551960945129395,60.793052673339844,17.25979995727539],[-9.067839622497559,59.271549224853516,16.59501838684082],[-8.863421440124512,57.717891693115234,15.901272773742676],[-8.809714317321777,56.13315963745117,15.205463409423828],[-8.771798133850098,54.480926513671875,14.537519454956055],[-8.633989334106445,52.71693420410156,13.937978744506836],[-8.320545196533203,50.79743576049805,13.458059310913086],[-7.810959815979004,48.688838958740234,13.142038345336914],[-7.126195430755615,46.35924530029297,13.014104843139648],[-6.323614120483398,43.788612365722656,13.061466217041016],[-23.181865692138672,60.628807067871094,24.478395462036133],[-21.64725685119629,61.821876525878906,23.87435531616211],[-20.095544815063477,62.82146072387695,23.352720260620117],[-18.493906021118164,63.56856918334961,22.89722442626953],[-16.83442497253418,64.00222778320312,22.487239837646484],[-15.141386985778809,64.07075500488281,22.09467887878418],[-13.477897644042969,63.739463806152344,21.687397003173828],[-11.936172485351562,63.01277160644531,21.228609085083008],[-10.622068405151367,61.93994903564453,20.697019577026367],[-9.636883735656738,60.60872268676758,20.08852767944336],[-9.009744644165039,59.140296936035156,19.42022132873535],[-8.702759742736816,57.61764144897461,18.714019775390625],[-8.605630874633789,56.066932678222656,17.99922752380371],[-8.598627090454102,54.47062301635742,17.30120086669922],[-8.555821418762207,52.78495788574219,16.65162467956543],[-8.380637168884277,50.96411895751953,16.092533111572266],[-8.021692276000977,48.967552185058594,15.6693696975708],[-7.475514888763428,46.765602111816406,15.413588523864746],[-6.7679572105407715,44.32719039916992,15.337526321411133],[-22.082088470458984,60.177284240722656,26.330453872680664],[-20.5269718170166,61.27672576904297,25.852645874023438],[-18.94173240661621,62.151065826416016,25.444259643554688],[-17.308433532714844,62.745025634765625,25.08674430847168],[-15.633514404296875,63.003875732421875,24.750972747802734],[-13.95837116241455,62.87412643432617,24.400344848632812],[-12.359602928161621,62.34821701049805,23.995243072509766],[-10.936518669128418,61.450164794921875,23.50617027282715],[-9.792153358459473,60.25032043457031,22.923839569091797],[-9.004838943481445,58.852012634277344,22.259355545043945],[-8.566659927368164,57.36410903930664,21.541683197021484],[-8.388716697692871,55.83854293823242,20.805950164794922],[-8.365205764770508,54.27777099609375,20.0791015625],[-8.38095760345459,52.653324127197266,19.387048721313477],[-8.32275676727295,50.916866302490234,18.76314926147461],[-8.115067481994629,49.02495193481445,18.2467041015625],[-7.7240190505981445,46.94126892089844,17.874557495117188],[-7.153158664703369,44.63750076293945,17.66863441467285],[-21.000503540039062,59.56775665283203,28.249479293823242],[-19.42218017578125,60.55412292480469,27.891141891479492],[-17.80868148803711,61.28800964355469,27.590566635131836],[-16.154415130615234,61.71946716308594,27.320926666259766],[-14.480121612548828,61.789642333984375,27.04399871826172],[-12.842326164245605,61.46635818481445,26.710466384887695],[-11.32851791381836,60.75735092163086,26.284818649291992],[-10.043728828430176,59.707149505615234,25.747562408447266],[-9.079183578491211,58.40719223022461,25.104541778564453],[-8.484004020690918,56.96462631225586,24.38165855407715],[-8.19117546081543,55.462745666503906,23.62495994567871],[-8.1093111038208,53.92496871948242,22.867219924926758],[-8.133014678955078,52.33932876586914,22.13523292541504],[-8.156454086303711,50.670345306396484,21.455156326293945],[-8.081320762634277,48.86989212036133,20.860078811645508],[-7.849748611450195,46.8984260559082,20.383594512939453],[-7.4360857009887695,44.72069549560547,20.055679321289062],[-19.9400577545166,58.78942108154297,30.225196838378906],[-18.343046188354492,59.648990631103516,29.983936309814453],[-16.710025787353516,60.233489990234375,29.7838191986084],[-15.04704761505127,60.4882926940918,29.589794158935547],[-13.388238906860352,60.37110900878906,29.34747314453125],[-11.804000854492188,59.859535217285156,29.006399154663086],[-10.393675804138184,58.97852325439453,28.538171768188477],[-9.262394905090332,57.797157287597656,27.937278747558594],[-8.48304271697998,56.421424865722656,27.225934982299805],[-8.044103622436523,54.9481201171875,26.453123092651367],[-7.86636209487915,53.42787551879883,25.6636905670166],[-7.853343963623047,51.86588668823242,24.890117645263672],[-7.906039714813232,50.24038314819336,24.158174514770508],[-7.929530143737793,48.51451110839844,23.493995666503906],[-7.841132164001465,46.642906188964844,22.927574157714844],[-7.592513561248779,44.586517333984375,22.487571716308594],[-18.90569496154785,57.83832550048828,32.25574493408203],[-17.29651641845703,58.56221008300781,32.125946044921875],[-15.65330982208252,58.98329162597656,32.01605224609375],[-13.993188858032227,59.060508728027344,31.873687744140625],[-12.363000869750977,58.7567138671875,31.639577865600586],[-10.850192070007324,58.061614990234375,31.264867782592773],[-9.563167572021484,57.02424621582031,30.7330322265625],[-8.60152530670166,55.73609161376953,30.055206298828125],[-7.982075214385986,54.30733108520508,29.282371520996094],[-7.672870635986328,52.80592346191406,28.465885162353516],[-7.582265853881836,51.25944519042969,27.650501251220703],[-7.616769790649414,49.66008758544922,26.866695404052734],[-7.684680461883545,47.982818603515625,26.14031219482422],[-7.705905437469482,46.193016052246094,25.494829177856445],[-7.607373237609863,44.24516677856445,24.957258224487305],[-17.90567970275879,56.7115478515625,34.336875915527344],[-16.291149139404297,57.28692626953125,34.310699462890625],[-14.645644187927246,57.54259490966797,34.268165588378906],[-12.99742603302002,57.44045639038086,34.15104293823242],[-11.409607887268066,56.949405670166016,33.89680862426758],[-9.98763370513916,56.07931900024414,33.46253204345703],[-8.846661567687988,54.905059814453125,32.84713363647461],[-8.040801048278809,53.53909683227539,32.09645462036133],[-7.5616326332092285,52.06686782836914,31.2674503326416],[-7.356252193450928,50.534400939941406,30.41438865661621],[-7.330960750579834,48.951271057128906,29.578920364379883],[-7.395172119140625,47.303646087646484,28.791738510131836],[-7.471331596374512,45.5677490234375,28.07586669921875],[-7.4901885986328125,43.709590911865234,27.45193862915039],[-16.94968605041504,55.40450668334961,36.466434478759766],[-15.333624839782715,55.828609466552734,36.52162170410156],[-13.690780639648438,55.915428161621094,36.52022933959961],[-12.06329345703125,55.629581451416016,36.39897918701172],[-10.533726692199707,54.95277786254883,36.09450912475586],[-9.22775650024414,53.91971969604492,35.573604583740234],[-8.230488777160645,52.64086151123047,34.874366760253906],[-7.568807601928711,51.212562561035156,34.0545539855957],[-7.208357334136963,49.700096130371094,33.17669677734375],[-7.085881233215332,48.129783630371094,32.29358673095703],[-7.10512113571167,46.5006217956543,31.446630477905273],[-7.188039779663086,44.798118591308594,30.663211822509766],[-7.269235134124756,42.999610900878906,29.962984085083008],[-16.04695701599121,53.922569274902344,38.630680084228516],[-14.429810523986816,54.19127655029297,38.741493225097656],[-12.792668342590332,54.102752685546875,38.75209045410156],[-11.194916725158691,53.628971099853516,38.59431838989258],[-9.745343208312988,52.768882751464844,38.205570220947266],[-8.561466217041016,51.60314178466797,37.59095001220703],[-7.704897403717041,50.238250732421875,36.807918548583984],[-7.172428131103516,48.75638961791992,35.92535400390625],[-6.9131669998168945,47.20180130004883,35.00577163696289],[-6.851880073547363,45.58654022216797,34.10309600830078],[-6.9018754959106445,43.9054069519043,33.253997802734375],[-6.99788236618042,42.144649505615234,32.48154067993164],[-15.199690818786621,52.27568817138672,40.817970275878906],[-13.579222679138184,52.38006591796875,40.95366668701172],[-11.951169967651367,52.107643127441406,40.94133377075195],[-10.39969539642334,51.44026184082031,40.706748962402344],[-9.042442321777344,50.422813415527344,40.21808624267578],[-7.98704195022583,49.14570617675781,39.50526428222656],[-7.263899803161621,47.70991516113281,38.644187927246094],[-6.847507953643799,46.17835235595703,37.70729446411133],[-6.667396545410156,44.57807540893555,36.759674072265625],[-6.650487422943115,42.91286849975586,35.84994125366211],[-6.722729682922363,41.17649459838867,35.00864028930664],[-14.404938697814941,50.46846008300781,43.01243591308594],[-12.778703689575195,50.39674377441406,43.136138916015625],[-11.169074058532715,49.92858123779297,43.05626678466797],[-9.6775484085083,49.0871696472168,42.72089767456055],[-8.426265716552734,47.9325065612793,42.121116638183594],[-7.500644207000732,46.563602447509766,41.313697814941406],[-6.904195308685303,45.0663948059082,40.38363265991211],[-6.583573341369629,43.485992431640625,39.409423828125],[-6.4642229080200195,41.83653259277344,38.44981384277344],[-6.480957984924316,40.11833190917969,37.545753479003906],[-13.655535697937012,48.500396728515625,45.19111633300781],[-12.025225639343262,48.23652267456055,45.255584716796875],[-10.445701599121094,47.58608627319336,45.07744216918945],[-9.030545234680176,46.58668899536133,44.62235641479492],[-7.8948893547058105,45.31596374511719,43.91044616699219],[-7.100279808044434,43.86933517456055,43.01678466796875],[-6.614431858062744,42.316646575927734,42.03800964355469],[-6.37127161026001,40.68614196777344,41.0462760925293],[-6.300739765167236,38.98508834838867,40.09054183959961],[-12.941339492797852,46.36320877075195,47.31829833984375],[-11.315037727355957,45.915733337402344,47.288063049316406],[-9.781301498413086,45.094757080078125,46.98591995239258],[-8.457785606384277,43.95724105834961,46.40345764160156],[-7.448040008544922,42.58766174316406,45.5850830078125],[-6.775027275085449,41.07453536987305,44.628379821777344],[-6.38342809677124,39.4681396484375,43.62484359741211],[-6.205906391143799,37.786231994628906,42.634769439697266],[-12.253857612609863,44.06835174560547,49.36614990234375],[-10.643864631652832,43.446144104003906,49.21018600463867],[-9.172503471374512,42.47195053100586,48.76938247680664],[-7.958303451538086,41.213897705078125,48.05973815917969],[-7.074407577514648,39.76132583618164,47.15945816040039],[-6.511414051055908,38.186981201171875,46.16783905029297],[-6.204530239105225,36.527130126953125,45.16265869140625],[-11.58276081085205,41.62494659423828,51.30103302001953],[-10.008153915405273,40.844913482666016,50.99998474121094],[-8.623371124267578,39.735984802246094,50.41586685180664],[-7.529250144958496,38.377811431884766,49.604644775390625],[-6.766251564025879,36.85228729248047,48.65639114379883],[-6.3057756423950195,35.21940994262695,47.658390045166016],[-10.925589561462402,39.05118179321289,53.09796905517578],[-9.412601470947266,38.13233947753906,52.64198303222656],[-8.133797645568848,36.91065216064453,51.938079833984375],[-7.163481712341309,35.46501541137695,51.063194274902344],[-6.519130706787109,33.87104034423828,50.101234436035156],[-10.288374900817871,36.372371673583984,54.73635482788086],[-8.862428665161133,35.338172912597656,54.14509963989258],[-7.701992511749268,34.016944885253906,53.36141586303711],[-6.860565662384033,32.488258361816406,52.4632568359375],[-9.679285049438477,33.62825012207031,56.21956253051758],[-8.359573364257812,32.49240493774414,55.53152847290039],[-7.33096170425415,31.07170867919922,54.714046478271484],[-9.10953426361084,30.86265754699707,57.560821533203125],[-7.918035507202148,29.619239807128906,56.826805114746094],[-8.60177230834961,28.11372184753418,58.776512145996094],[-39.107940673828125,57.89651870727539,9.818315505981445],[-37.93873596191406,58.452003479003906,11.555758476257324],[-36.70825958251953,58.841514587402344,13.278992652893066],[-35.43021011352539,59.06171798706055,14.972515106201172],[-34.11450958251953,59.12931823730469,16.616708755493164],[-32.7764892578125,59.07957458496094,18.206865310668945],[-31.437578201293945,58.94738006591797,19.753910064697266],[-30.115856170654297,58.757991790771484,21.27515983581543],[-28.829010009765625,58.521400451660156,22.79069709777832],[-27.591867446899414,58.24805450439453,24.330570220947266],[-26.407724380493164,57.926063537597656,25.91046142578125],[-25.27214813232422,57.535858154296875,27.53810691833496],[-24.17624855041504,57.05190658569336,29.213863372802734],[-23.110607147216797,56.44535446166992,30.935331344604492],[-22.068920135498047,55.69341278076172,32.71078109741211],[-21.053382873535156,54.78466033935547,34.53632736206055],[-20.073413848876953,53.71372604370117,36.41804122924805],[-19.14499282836914,52.48125457763672,38.35974884033203],[-18.28229331970215,51.092262268066406,40.37830352783203],[-17.490577697753906,49.56040573120117,42.467926025390625],[-16.76645278930664,47.89426040649414,44.614952087402344],[-16.097627639770508,46.093971252441406,46.799102783203125],[-15.464795112609863,44.152610778808594,48.98966598510742],[-14.834550857543945,42.048316955566406,51.14314270019531],[-14.189151763916016,39.78669357299805,53.2150993347168],[-13.517629623413086,37.37626647949219,55.16570281982422],[-12.818333625793457,34.842445373535156,56.963008880615234],[-12.09891128540039,32.21992492675781,58.581180572509766],[-11.376022338867188,29.560535430908203,60.011634826660156],[-10.660943031311035,26.919574737548828,61.24394989013672],[-39.43043518066406,56.86228942871094,11.85214614868164],[-38.3128662109375,57.33564376831055,13.72529411315918],[-37.1413459777832,57.64512634277344,15.547057151794434],[-35.9151725769043,57.79118728637695,17.305789947509766],[-34.635982513427734,57.7902717590332,18.987937927246094],[-33.32177734375,57.66994094848633,20.596261978149414],[-31.99726104736328,57.46242904663086,22.147905349731445],[-30.685396194458008,57.188987731933594,23.663755416870117],[-29.405330657958984,56.870059967041016,25.169818878173828],[-28.1733455657959,56.514041900634766,26.6926212310791],[-26.99297332763672,56.110477447509766,28.245464324951172],[-25.858652114868164,55.6379280090332,29.83149528503418],[-24.759809494018555,55.06821060180664,31.4461727142334],[-23.687685012817383,54.37774658203125,33.094356536865234],[-22.64105796813965,53.54278564453125,34.786067962646484],[-21.625730514526367,52.55490493774414,36.525901794433594],[-20.657108306884766,51.41017150878906,38.324947357177734],[-19.75409507751465,50.11844253540039,40.204750061035156],[-18.93281364440918,48.687007904052734,42.185306549072266],[-18.195741653442383,47.12872314453125,44.257835388183594],[-17.533891677856445,45.44983673095703,46.404640197753906],[-16.928970336914062,43.64717483520508,48.599082946777344],[-16.34463882446289,41.705604553222656,50.80434036254883],[-15.745001792907715,39.60136413574219,52.96953582763672],[-15.10960865020752,37.33797836303711,55.04685974121094],[-14.426734924316406,34.926265716552734,56.993255615234375],[-13.694391250610352,32.39231872558594,58.776920318603516],[-12.920580863952637,29.770366668701172,60.371849060058594],[-12.115303039550781,27.108158111572266,61.76182556152344],[-39.808895111083984,55.64838790893555,13.872995376586914],[-38.75484848022461,56.037757873535156,15.835145950317383],[-37.64298629760742,56.26802062988281,17.72495460510254],[-36.462364196777344,56.344058990478516,19.529794692993164],[-35.2159538269043,56.27729415893555,21.241628646850586],[-33.924049377441406,56.09202575683594,22.8675479888916],[-32.61674118041992,55.815948486328125,24.429813385009766],[-31.317546844482422,55.47613525390625,25.95383071899414],[-30.04722023010254,55.089813232421875,27.464160919189453],[-28.820693969726562,54.662662506103516,28.98093605041504],[-27.639598846435547,54.18238830566406,30.51222038269043],[-26.495758056640625,53.62449264526367,32.05450439453125],[-25.379562377929688,52.96624755859375,33.60712432861328],[-24.286623001098633,52.18342590332031,35.17557907104492],[-23.221874237060547,51.25761413574219,36.778282165527344],[-22.196321487426758,50.181739807128906,38.426876068115234],[-21.231382369995117,48.962921142578125,40.15349578857422],[-20.348608016967773,47.61244201660156,41.985801696777344],[-19.565608978271484,46.13835144042969,43.943607330322266],[-18.880292892456055,44.55175018310547,46.01367950439453],[-18.277830123901367,42.855316162109375,48.170928955078125],[-17.7230224609375,41.03973388671875,50.381134033203125],[-17.175979614257812,39.08585739135742,52.59923553466797],[-16.595191955566406,36.968849182128906,54.76990509033203],[-15.958268165588379,34.6923713684082,56.84163284301758],[-15.251873016357422,32.26934814453125,58.771629333496094],[-14.475120544433594,29.726837158203125,60.52937316894531],[-13.632110595703125,27.09941864013672,62.08477020263672],[-40.2420654296875,54.270259857177734,15.878669738769531],[-39.257259368896484,54.57452392578125,17.892051696777344],[-38.20130920410156,54.729225158691406,19.82253646850586],[-37.06353759765625,54.737274169921875,21.658140182495117],[-35.84817123413086,54.60918045043945,23.39354705810547],[-34.58050537109375,54.364845275878906,25.039886474609375],[-33.291236877441406,54.03508377075195,26.623321533203125],[-32.006256103515625,53.642024993896484,28.168346405029297],[-30.745283126831055,53.19910430908203,29.69478416442871],[-29.52021026611328,52.7064323425293,31.21359634399414],[-28.329071044921875,52.14798355102539,32.72511291503906],[-27.163969039916992,51.50360107421875,34.2252082824707],[-26.018848419189453,50.75002670288086,35.712947845458984],[-24.89480972290039,49.868282318115234,37.19923400878906],[-23.802797317504883,48.84303283691406,38.70866775512695],[-22.761362075805664,47.680137634277344,40.276466369628906],[-21.795482635498047,46.38887405395508,41.944515228271484],[-20.928585052490234,44.980342864990234,43.743408203125],[-20.1788330078125,43.46270751953125,45.69175338745117],[-19.53954315185547,41.84339904785156,47.76852798461914],[-18.98080062866211,40.12104797363281,49.9398193359375],[-18.462444305419922,38.281036376953125,52.16188049316406],[-17.93868637084961,36.30263900756836,54.38434600830078],[-17.36408042907715,34.16239929199219,56.547306060791016],[-16.713478088378906,31.866926193237305,58.599281311035156],[-15.974543571472168,29.431995391845703,60.49961853027344],[-15.145366668701172,26.887022018432617,62.2153434753418],[-40.73380661010742,52.73571014404297,17.861873626708984],[-39.814964294433594,52.95895004272461,19.8990478515625],[-38.81147766113281,53.04065704345703,21.850725173950195],[-37.71294021606445,52.985206604003906,23.70570945739746],[-36.52829360961914,52.80089569091797,25.46224594116211],[-35.28324508666992,52.51027297973633,27.135173797607422],[-34.0120735168457,52.13817596435547,28.75005340576172],[-32.74024200439453,51.701778411865234,30.327152252197266],[-31.484926223754883,51.20835876464844,31.879039764404297],[-30.253311157226562,50.650840759277344,33.40536117553711],[-29.042396545410156,50.01512908935547,34.90140151977539],[-27.84688377380371,49.28007888793945,36.361183166503906],[-26.665443420410156,48.42673873901367,37.78636932373047],[-25.504199981689453,47.43844985961914,39.1904296875],[-24.38300323486328,46.31542205810547,40.618804931640625],[-23.323707580566406,45.0674934387207,42.11972427368164],[-22.353317260742188,43.70463562011719,43.741600036621094],[-21.496431350708008,42.2377815246582,45.517417907714844],[-20.771474838256836,40.672855377197266,47.46167755126953],[-20.1611385345459,39.01504898071289,49.54517364501953],[-19.62969207763672,37.256473541259766,51.72273254394531],[-19.131101608276367,35.380619049072266,53.944278717041016],[-18.61601448059082,33.36779022216797,56.153812408447266],[-18.035425186157227,31.2005558013916,58.291744232177734],[-17.364347457885742,28.88960075378418,60.309120178222656],[-16.589826583862305,26.45395278930664,62.16385269165039],[-41.27960205078125,51.05637741088867,19.820024490356445],[-40.421817779541016,51.202049255371094,21.86263656616211],[-39.464454650878906,51.21613311767578,23.822078704833984],[-38.401607513427734,51.10249328613281,25.68956756591797],[-37.24293518066406,50.87376403808594,27.468645095825195],[-36.01887893676758,50.546661376953125,29.174362182617188],[-34.76412582397461,50.140865325927734,30.82895278930664],[-33.50218963623047,49.66716003417969,32.44664764404297],[-32.245906829833984,49.12541580200195,34.03059387207031],[-30.999469757080078,48.50562286376953,35.569557189941406],[-29.761375427246094,47.79144287109375,37.05522918701172],[-28.530120849609375,46.964195251464844,38.48114776611328],[-27.308786392211914,46.00568771362305,39.84898376464844],[-26.11254119873047,44.91392517089844,41.1865119934082],[-24.964811325073242,43.69574737548828,42.550209045410156],[-23.888315200805664,42.36355209350586,43.99755859375],[-22.91057777404785,40.92864990234375,45.582359313964844],[-22.05611228942871,39.400177001953125,47.33668899536133],[-21.339767456054688,37.78489685058594,49.27299499511719],[-20.740205764770508,36.08032989501953,51.350643157958984],[-20.21677589416504,34.275814056396484,53.517276763916016],[-19.720415115356445,32.35497283935547,55.71599578857422],[-19.19991111755371,30.305152893066406,57.890869140625],[-18.60640525817871,28.11613655090332,59.98604965209961],[-17.913660049438477,25.802227020263672,61.951560974121094],[-41.868167877197266,49.24333190917969,21.750009536743164],[-41.06282424926758,49.31779861450195,23.78669548034668],[-40.14536666870117,49.270538330078125,25.745853424072266],[-39.11098861694336,49.11103057861328,27.625356674194336],[-37.97541046142578,48.84743118286133,29.430452346801758],[-36.770416259765625,48.49188232421875,31.174768447875977],[-35.52949905395508,48.05820083618164,32.87577438354492],[-34.27230453491211,47.549964904785156,34.53993225097656],[-33.008121490478516,46.962589263916016,36.159671783447266],[-31.740463256835938,46.280418395996094,37.71612548828125],[-30.470598220825195,45.487586975097656,39.19804000854492],[-29.200746536254883,44.56459045410156,40.59737777709961],[-27.94329071044922,43.50522994995117,41.923805236816406],[-26.717647552490234,42.313812255859375,43.21263122558594],[-25.548128128051758,41.00202560424805,44.527130126953125],[-24.4565372467041,39.58544158935547,45.93196487426758],[-23.46841049194336,38.07514953613281,47.481319427490234],[-22.605459213256836,36.483970642089844,49.209720611572266],[-21.88177490234375,34.81204605102539,51.1229362487793],[-21.274106979370117,33.05302047729492,53.174400329589844],[-20.739652633666992,31.19466209411621,55.303951263427734],[-20.229839324951172,29.22763442993164,57.45474624633789],[-19.69542121887207,27.146961212158203,59.57453918457031],[-19.086793899536133,24.948810577392578,61.60796356201172],[-42.47696304321289,47.30503463745117,23.646934509277344],[-41.71659851074219,47.315101623535156,25.669553756713867],[-40.83063888549805,47.219757080078125,27.628005981445312],[-39.82168197631836,47.024658203125,29.521875381469727],[-38.70797348022461,46.73480987548828,31.35744285583496],[-37.5208854675293,46.35749816894531,33.14609909057617],[-36.29084396362305,45.900123596191406,34.89930725097656],[-35.03321075439453,45.3602294921875,36.612648010253906],[-33.75630569458008,44.72800827026367,38.272647857666016],[-32.4636344909668,43.98395538330078,39.85285949707031],[-31.159433364868164,43.11019515991211,41.33946228027344],[-29.8546142578125,42.095664978027344,42.726295471191406],[-28.56696128845215,40.939781188964844,44.028106689453125],[-27.31800079345703,39.651065826416016,45.28427505493164],[-26.131378173828125,38.24614334106445,46.5622444152832],[-25.025447845458984,36.74165344238281,47.927833557128906],[-24.021732330322266,35.15629196166992,49.43937683105469],[-23.13881492614746,33.49689483642578,51.126434326171875],[-22.391357421875,31.761566162109375,52.994266510009766],[-21.756572723388672,29.940570831298828,54.990150451660156],[-21.195175170898438,28.027603149414062,57.05494689941406],[-20.66261863708496,26.020816802978516,59.13544464111328],[-20.110734939575195,23.921741485595703,61.178993225097656],[-43.07819366455078,45.24980926513672,25.502016067504883],[-42.35385513305664,45.209449768066406,27.511493682861328],[-41.49689865112305,45.077110290527344,29.471742630004883],[-40.513511657714844,44.856117248535156,31.384292602539062],[-39.42268753051758,44.54801940917969,33.255889892578125],[-38.25322723388672,44.154754638671875,35.094932556152344],[-37.0309944152832,43.67689514160156,36.90281295776367],[-35.76994705200195,43.106529235839844,38.669097900390625],[-34.4777946472168,42.42982482910156,40.374229431152344],[-33.15822982788086,41.621944427490234,41.98611831665039],[-31.822786331176758,40.669952392578125,43.48793029785156],[-30.488399505615234,39.56740951538086,44.8757438659668],[-29.17626953125,38.31748580932617,46.16689682006836],[-27.90900993347168,36.93288803100586,47.402587890625],[-26.707765579223633,35.43217086791992,48.64891815185547],[-25.58608627319336,33.84223175048828,49.97544479370117],[-24.560068130493164,32.177490234375,51.43623733520508],[-23.645843505859375,30.44392204284668,53.06076431274414],[-22.858373641967773,28.63752555847168,54.852298736572266],[-22.182231903076172,26.753374099731445,56.76383972167969],[-21.5853214263916,24.791778564453125,58.74068832397461],[-21.025917053222656,22.757139205932617,60.72843933105469],[-43.6314697265625,43.090476989746094,27.310583114624023],[-42.94184875488281,43.01115417480469,29.3095760345459],[-42.116294860839844,42.85234069824219,31.275785446166992],[-41.16261291503906,42.614845275878906,33.21257400512695],[-40.09809112548828,42.296173095703125,35.12673568725586],[-38.94634246826172,41.89115905761719,37.019065856933594],[-37.73197555541992,41.394954681396484,38.88507080078125],[-36.46751022338867,40.79484558105469,40.708370208740234],[-35.1601448059082,40.07161331176758,42.465370178222656],[-33.81712341308594,39.2006950378418,44.116146087646484],[-32.455726623535156,38.17259979248047,45.64327621459961],[-31.096961975097656,36.98396682739258,47.0433349609375],[-29.764562606811523,35.64159393310547,48.33395767211914],[-28.480960845947266,34.15958786010742,49.55369186401367],[-27.264629364013672,32.567909240722656,50.7694091796875],[-26.123210906982422,30.890369415283203,52.04669952392578],[-25.06804656982422,29.14186668395996,53.43799591064453],[-24.11142921447754,27.32659339904785,54.96971893310547],[-23.273502349853516,25.446571350097656,56.65591812133789],[-22.549379348754883,23.503177642822266,58.458984375],[-21.913082122802734,21.50279998779297,60.323875427246094],[-44.1102409362793,40.849693298339844,29.065902709960938],[-43.45860290527344,40.7421760559082,31.06066131591797],[-42.670658111572266,40.56679916381836,33.040313720703125],[-41.75315856933594,40.321346282958984,35.00984191894531],[-40.717384338378906,39.99650192260742,36.971527099609375],[-39.585304260253906,39.58136749267578,38.921058654785156],[-38.380088806152344,39.065956115722656,40.848148345947266],[-37.113487243652344,38.43207550048828,42.73307418823242],[-35.79417037963867,37.659080505371094,44.544166564941406],[-34.432334899902344,36.723175048828125,46.23758316040039],[-33.049686431884766,35.61767578125,47.794891357421875],[-31.670324325561523,34.3424072265625,49.21147918701172],[-30.319007873535156,32.90547180175781,50.501625061035156],[-29.018310546875,31.33211326599121,51.70267105102539],[-27.78293228149414,29.650104522705078,52.87679672241211],[-26.616107940673828,27.884096145629883,54.08732223510742],[-25.52387046813965,26.047077178955078,55.381256103515625],[-24.518909454345703,24.1486873626709,56.79412078857422],[-23.628515243530273,22.198074340820312,58.354454040527344],[-22.856334686279297,20.203737258911133,60.02812194824219],[-44.49448013305664,38.55039978027344,30.762638092041016],[-43.887908935546875,38.42433547973633,32.76180648803711],[-43.14628601074219,38.24102783203125,34.76470184326172],[-42.269351959228516,37.99181365966797,36.77412796020508],[-41.266517639160156,37.66204833984375,38.78850555419922],[-40.1571044921875,37.23506164550781,40.79857635498047],[-38.9642448425293,36.69536590576172,42.790985107421875],[-37.69886779785156,36.02146530151367,44.73735809326172],[-36.37200164794922,35.193214416503906,46.60239791870117],[-34.995750427246094,34.187862396240234,48.338809967041016],[-33.59537887573242,33.00167465209961,49.925804138183594],[-32.19648361206055,31.635662078857422,51.35444259643555],[-30.8257999420166,30.108978271484375,52.63606262207031],[-29.50421142578125,28.445314407348633,53.803916931152344],[-28.24427032470703,26.673725128173828,54.91646957397461],[-27.04478645324707,24.81679916381836,56.03074264526367],[-25.91057777404785,22.892147064208984,57.200828552246094],[-24.857318878173828,20.91431427001953,58.47647476196289],[-23.917354583740234,18.900348663330078,59.89342498779297],[-44.772544860839844,36.217777252197266,32.39609146118164],[-44.22025680541992,36.08124542236328,34.410308837890625],[-43.52998352050781,35.89348602294922,36.44536590576172],[-42.699424743652344,35.64105224609375,38.50114822387695],[-41.73424530029297,35.30371856689453,40.572566986083984],[-40.652862548828125,34.858863830566406,42.647823333740234],[-39.475982666015625,34.28624725341797,44.704647064208984],[-38.21602249145508,33.564109802246094,46.71038055419922],[-36.885658264160156,32.67306900024414,48.6264762878418],[-35.49824905395508,31.592041015625,50.4013786315918],[-34.08114242553711,30.318248748779297,52.009159088134766],[-32.66276550292969,28.863649368286133,53.43617630004883],[-31.26970672607422,27.246723175048828,54.69009017944336],[-29.922565460205078,25.49309539794922,55.80009841918945],[-28.63147735595703,23.630369186401367,56.81732177734375],[-27.394685745239258,21.68511199951172,57.80517578125],[-26.218284606933594,19.678009033203125,58.83214569091797],[-25.12039566040039,17.628433227539062,59.95573425292969],[-44.93989944458008,33.878108978271484,33.961307525634766],[-44.44575500488281,33.73398208618164,36.0005989074707],[-43.812904357910156,33.54145431518555,38.07506561279297],[-43.034420013427734,33.28215789794922,40.1825065612793],[-42.114139556884766,32.930233001708984,42.316368103027344],[-41.064727783203125,32.45708084106445,44.45625305175781],[-39.907981872558594,31.84128189086914,46.57475280761719],[-38.65732192993164,31.06110382080078,48.63533401489258],[-37.3262939453125,30.098167419433594,50.59496307373047],[-35.928714752197266,28.931337356567383,52.39546585083008],[-34.49515151977539,27.568666458129883,54.00494384765625],[-33.05535888671875,26.022228240966797,55.40599060058594],[-31.636798858642578,24.31324005126953,56.601802825927734],[-30.259239196777344,22.467073440551758,57.61370849609375],[-28.93356704711914,20.516265869140625,58.499542236328125],[-27.659257888793945,18.48920249938965,59.3381233215332],[-26.44384765625,16.408681869506836,60.20734786987305],[-44.99854278564453,31.555240631103516,35.45161056518555],[-44.5659065246582,31.403362274169922,37.523895263671875],[-43.9945068359375,31.201980590820312,39.643638610839844],[-43.27506637573242,30.92805290222168,41.80866622924805],[-42.40271759033203,30.549884796142578,44.00505828857422],[-41.38871383666992,30.03669548034668,46.20672607421875],[-40.255393981933594,29.366140365600586,48.381553649902344],[-39.01622772216797,28.516565322875977,50.48768997192383],[-37.68497085571289,27.46845054626465,52.474510192871094],[-36.27708435058594,26.210899353027344,54.27655029296875],[-34.826080322265625,24.752573013305664,55.857765197753906],[-33.363502502441406,23.10912322998047,57.1959342956543],[-31.917144775390625,21.302879333496094,58.28565979003906],[-30.50857162475586,19.366735458374023,59.155696868896484],[-29.149934768676758,17.335664749145508,59.88240432739258],[-27.842002868652344,15.237695693969727,60.556243896484375],[-44.980220794677734,29.265958786010742,36.86766815185547],[-44.608558654785156,29.104106903076172,38.98004913330078],[-44.10134506225586,28.88738441467285,41.151729583740234],[-43.439361572265625,28.587604522705078,43.37505340576172],[-42.61431884765625,28.17097282409668,45.63117599487305],[-41.63566207885742,27.60516357421875,47.88875961303711],[-40.52505111694336,26.866992950439453,50.10939407348633],[-39.29566192626953,25.93262481689453,52.2424430847168],[-37.96199035644531,24.791481018066406,54.228668212890625],[-36.542320251464844,23.4335880279541,55.99778747558594],[-35.07310485839844,21.871782302856445,57.50849151611328],[-33.58735275268555,20.12397575378418,58.72909164428711],[-32.11560821533203,18.2230281829834,59.66260528564453],[-30.6807861328125,16.206623077392578,60.35953903198242],[-29.295392990112305,14.108452796936035,60.91267395019531],[-44.92030334472656,27.01858139038086,38.20942687988281],[-44.60681915283203,26.84357452392578,40.3690071105957],[-44.1562385559082,26.60303497314453,42.59366989135742],[-43.54540252685547,26.26694107055664,44.8721809387207],[-42.763092041015625,25.800094604492188,47.18132019042969],[-41.81562805175781,25.168888092041016,49.483154296875],[-40.7235221862793,24.347129821777344,51.729209899902344],[-39.49909973144531,23.31879234313965,53.85898971557617],[-38.16049575805664,22.073392868041992,55.8068733215332],[-36.72831344604492,20.605756759643555,57.49679946899414],[-35.24184036254883,18.93187141418457,58.87686538696289],[-33.737884521484375,17.083274841308594,59.92491912841797],[-32.24894332885742,15.100486755371094,60.6690673828125],[-30.798059463500977,13.020729064941406,61.18083190917969],[-44.863399505615234,24.815505981445312,39.480045318603516],[-44.59408187866211,24.622678756713867,41.68821716308594],[-44.187068939208984,24.35129165649414,43.96258544921875],[-43.61628341674805,23.970048904418945,46.28874588012695],[-42.86708068847656,23.442241668701172,48.63788604736328],[-41.94268035888672,22.730884552001953,50.961971282958984],[-40.860958099365234,21.816598892211914,53.20158767700195],[-39.637393951416016,20.683135986328125,55.28852462768555],[-38.292442321777344,19.32405662536621,57.1492919921875],[-36.84939956665039,17.73831558227539,58.69647979736328],[-35.35247802734375,15.95820140838623,59.888370513916016],[-33.84147262573242,14.025984764099121,60.731204986572266],[-32.34953689575195,11.982978820800781,61.278324127197266],[-44.85517120361328,22.654438018798828,40.67414855957031],[-44.608863830566406,22.440832138061523,42.92726135253906],[-44.22611618041992,22.134279251098633,45.24301528930664],[-43.67829132080078,21.701560974121094,47.60258865356445],[-42.94807052612305,21.10209846496582,49.968265533447266],[-42.0347900390625,20.30414581298828,52.28159713745117],[-40.95738983154297,19.288389205932617,54.474220275878906],[-39.73249435424805,18.04229736328125,56.468814849853516],[-38.38319396972656,16.563386917114258,58.178165435791016],[-36.93758010864258,14.868850708007812,59.52525329589844],[-35.44418716430664,13.004820823669434,60.49909973144531],[-33.9444465637207,11.015983581542969,61.13570785522461],[-44.940391540527344,20.52953338623047,41.792720794677734],[-44.692047119140625,20.292505264282227,44.08241271972656],[-44.31050109863281,19.947439193725586,46.425533294677734],[-43.765689849853516,19.456920623779297,48.795352935791016],[-43.03884506225586,18.782718658447266,51.14562225341797],[-42.12803268432617,17.892532348632812,53.40899658203125],[-41.0511474609375,16.770906448364258,55.507179260253906],[-39.82621383666992,15.409295082092285,57.34813690185547],[-38.48072052001953,13.823769569396973,58.853450775146484],[-37.046939849853516,12.047362327575684,59.977561950683594],[-35.57650375366211,10.130784034729004,60.742286682128906],[-45.15069580078125,18.436906814575195,42.83478546142578],[-44.87461471557617,18.17258071899414,45.14719009399414],[-44.47115707397461,17.784568786621094,47.49576950073242],[-43.91322326660156,17.234630584716797,49.84669876098633],[-43.17998123168945,16.482681274414062,52.14569854736328],[-42.26694869995117,15.498326301574707,54.31571960449219],[-41.190982818603516,14.270442008972168,56.2635383605957],[-39.972930908203125,12.808311462402344,57.90479278564453],[-38.64421463012695,11.145125389099121,59.19090270996094],[-37.24042892456055,9.320428848266602,60.10954284667969],[-45.50928497314453,16.375459671020508,43.798179626464844],[-45.18195724487305,16.07784080505371,46.112510681152344],[-44.74351501464844,15.643692970275879,48.44065856933594],[-44.163536071777344,15.031683921813965,50.74141311645508],[-43.419376373291016,14.200740814208984,52.95155334472656],[-42.50361633300781,13.122526168823242,54.97939682006836],[-41.43347930908203,11.802453994750977,56.73829650878906],[-40.23200988769531,10.26754379272461,58.17121124267578],[-38.93404006958008,8.560087203979492,59.262020111083984],[-46.030609130859375,14.346055030822754,44.682518005371094],[-45.64578628540039,14.008255958557129,46.97605514526367],[-45.16666030883789,13.522992134094238,49.257328033447266],[-44.56182098388672,12.84537124633789,51.47698974609375],[-43.80552673339844,11.93311882019043,53.55801773071289],[-42.88920593261719,10.77053451538086,55.4129753112793],[-41.82969665527344,9.381216049194336,56.97956466674805],[-40.652076721191406,7.803704738616943,58.23089599609375],[-46.73713684082031,12.354116439819336,45.49646759033203],[-46.295372009277344,11.967345237731934,47.747989654541016],[-45.776268005371094,11.422987937927246,49.95863723754883],[-45.145267486572266,10.671207427978516,52.06623077392578],[-44.375343322753906,9.677633285522461,53.99552917480469],[-43.45615005493164,8.443977355957031,55.67784118652344],[-42.40456008911133,7.008147239685059,57.077880859375],[-47.59634017944336,10.39456558227539,46.25736999511719],[-47.105323791503906,9.948005676269531,48.449180603027344],[-46.54740905761719,9.329463005065918,50.565277099609375],[-45.88726806640625,8.492010116577148,52.54277801513672],[-45.09591293334961,7.41719388961792,54.31910705566406],[-44.16285705566406,6.124623775482178,55.846824645996094],[-48.56363296508789,8.45366096496582,46.97335433959961],[-48.02642059326172,7.931055068969727,49.08808898925781],[-47.42588424682617,7.219683647155762,51.095027923583984],[-46.72489547729492,6.285126686096191,52.93828582763672],[-45.89387130737305,5.1294050216674805,54.56970977783203],[-49.563987731933594,6.502604007720947,47.63848876953125],[-48.97625732421875,5.884686470031738,49.664154052734375],[-48.31936264038086,5.062148571014404,51.55390167236328],[-47.55475997924805,4.020458221435547,53.25946044921875],[-50.49512481689453,4.5083513259887695,48.232879638671875],[-49.842247009277344,3.7770466804504395,50.158206939697266],[-49.10401916503906,2.8256330490112305,51.91524887084961],[-51.23680877685547,2.4545488357543945,48.71949768066406],[-50.49641418457031,1.5914161205291748,50.516845703125],[-51.690338134765625,0.3618791699409485,49.04826736450195],[-37.73696517944336,14.609963417053223,-33.05760955810547],[-39.480072021484375,14.83448600769043,-31.95897674560547],[-41.21054458618164,14.722406387329102,-30.578853607177734],[-42.862300872802734,14.266879081726074,-28.95917510986328],[-44.36763000488281,13.481285095214844,-27.16019630432129],[-45.6764030456543,12.413253784179688,-25.262527465820312],[-46.77305603027344,11.116361618041992,-23.329824447631836],[-47.64935302734375,9.636066436767578,-21.419095993041992],[-48.31345748901367,8.005192756652832,-19.572711944580078],[-48.77064514160156,6.27218770980835,-17.8388671875],[-49.06155014038086,4.472403526306152,-16.221771240234375],[-49.21864318847656,2.6331217288970947,-14.714601516723633],[-49.2696647644043,0.7745535969734192,-13.299745559692383],[-49.23230743408203,-1.0850895643234253,-11.954150199890137],[-49.11429977416992,-2.91615891456604,-10.64922046661377],[-48.92200469970703,-4.713754653930664,-9.356316566467285],[-48.649436950683594,-6.466485500335693,-8.054415702819824],[-48.282405853271484,-8.16966438293457,-6.729109287261963],[-47.811119079589844,-9.799705505371094,-5.360157489776611],[-47.23424530029297,-11.353148460388184,-3.936551094055176],[-46.55500411987305,-12.830958366394043,-2.4517831802368164],[-45.78449630737305,-14.235953330993652,-0.9004510045051575],[-44.94012451171875,-15.577723503112793,0.7184985876083374],[-44.0679931640625,-16.8533878326416,2.4116392135620117],[-43.20185089111328,-18.079891204833984,4.1608710289001465],[-42.38151931762695,-19.258087158203125,5.948690414428711],[-41.64524459838867,-20.38237762451172,7.748535633087158],[-41.05131530761719,-21.420127868652344,9.534085273742676],[-40.657806396484375,-22.332191467285156,11.272360801696777],[-40.5224723815918,-23.06884002685547,12.927167892456055],[-38.49292755126953,15.543106079101562,-33.95907211303711],[-40.420631408691406,15.707551956176758,-32.658668518066406],[-42.291114807128906,15.493185997009277,-31.055187225341797],[-44.039459228515625,14.917181015014648,-29.20984649658203],[-45.607173919677734,14.01215934753418,-27.204912185668945],[-46.95943832397461,12.823728561401367,-25.120189666748047],[-48.089393615722656,11.40681266784668,-23.022544860839844],[-48.996986389160156,9.79955768585205,-20.96462631225586],[-49.69432067871094,8.045571327209473,-19.00151252746582],[-50.191261291503906,6.182877540588379,-17.175724029541016],[-50.52666091918945,4.248695373535156,-15.484288215637207],[-50.72990798950195,2.2703680992126465,-13.915726661682129],[-50.823482513427734,0.27012819051742554,-12.450494766235352],[-50.816200256347656,-1.724196195602417,-11.068488121032715],[-50.71075439453125,-3.6910831928253174,-9.742637634277344],[-50.510555267333984,-5.62190055847168,-8.44371223449707],[-50.20603561401367,-7.509332180023193,-7.1528825759887695],[-49.7859001159668,-9.340270042419434,-5.854362964630127],[-49.23930358886719,-11.095361709594727,-4.526811122894287],[-48.56894302368164,-12.772733688354492,-3.1552464962005615],[-47.783653259277344,-14.375848770141602,-1.7300975322723389],[-46.89704132080078,-15.916007995605469,-0.24807202816009521],[-45.94077682495117,-17.393762588500977,1.3022198677062988],[-44.9549560546875,-18.808774948120117,2.927003860473633],[-43.97761535644531,-20.177223205566406,4.6056084632873535],[-43.04600143432617,-21.4988956451416,6.316568851470947],[-42.205421447753906,-22.74933624267578,8.043198585510254],[-41.522438049316406,-23.873531341552734,9.77660846710205],[-41.06768035888672,-24.808874130249023,11.499594688415527],[-39.4238395690918,16.204566955566406,-34.79038619995117],[-41.496490478515625,16.28264617919922,-33.26615905761719],[-43.46260070800781,15.973512649536133,-31.433574676513672],[-45.26612091064453,15.311894416809082,-29.374357223510742],[-46.8656005859375,14.327913284301758,-27.166656494140625],[-48.23699951171875,13.063529014587402,-24.894397735595703],[-49.38071060180664,11.569445610046387,-22.619325637817383],[-50.30390548706055,9.886478424072266,-20.411544799804688],[-51.02314376831055,8.052471160888672,-18.31882095336914],[-51.55084991455078,6.10225772857666,-16.383134841918945],[-51.923954010009766,4.076477527618408,-14.59527587890625],[-52.16835403442383,2.0051746368408203,-12.94029426574707],[-52.29887390136719,-0.08268864452838898,-11.402999877929688],[-52.321170806884766,-2.1644697189331055,-9.962120056152344],[-52.23267364501953,-4.220325946807861,-8.594088554382324],[-52.03449630737305,-6.242038726806641,-7.269378185272217],[-51.71617126464844,-8.2184419631958,-5.972997665405273],[-51.268592834472656,-10.14103889465332,-4.689329624176025],[-50.68013000488281,-11.997573852539062,-3.3986949920654297],[-49.95629119873047,-13.788475036621094,-2.0837337970733643],[-49.10852813720703,-15.52461051940918,-0.7375120520591736],[-48.1573600769043,-17.20890998840332,0.6547714471817017],[-47.12969970703125,-18.847536087036133,2.1021974086761475],[-46.06292724609375,-20.434600830078125,3.6160643100738525],[-44.996734619140625,-21.984153747558594,5.172552108764648],[-43.97346496582031,-23.475017547607422,6.764652252197266],[-43.04484939575195,-24.863386154174805,8.392643928527832],[-42.285003662109375,-26.075700759887695,10.062871932983398],[-40.577571868896484,16.418487548828125,-35.527095794677734],[-42.72776412963867,16.40200424194336,-33.785614013671875],[-44.728919982910156,16.023466110229492,-31.754776000976562],[-46.54230499267578,15.314285278320312,-29.509445190429688],[-48.13924789428711,14.298771858215332,-27.125782012939453],[-49.50297546386719,13.01044750213623,-24.679285049438477],[-50.64323425292969,11.493942260742188,-22.247756958007812],[-51.570709228515625,9.782007217407227,-19.893470764160156],[-52.303306579589844,7.910167694091797,-17.663110733032227],[-52.85443115234375,5.911530017852783,-15.598686218261719],[-53.25880432128906,3.834003448486328,-13.6893949508667],[-53.53662872314453,1.7125821113586426,-11.927779197692871],[-53.69966125488281,-0.42429491877555847,-10.295198440551758],[-53.749385833740234,-2.5542049407958984,-8.773695945739746],[-53.67997360229492,-4.659465312957764,-7.341452598571777],[-53.48976135253906,-6.73016881942749,-5.9752302169799805],[-53.16943359375,-8.75965690612793,-4.661169052124023],[-52.711483001708984,-10.744253158569336,-3.3845300674438477],[-52.10480880737305,-12.67891788482666,-2.128343343734741],[-51.357574462890625,-14.571226119995117,-0.8781791925430298],[-50.483524322509766,-16.427749633789062,0.3824467658996582],[-49.50066375732422,-18.25637435913086,1.666778802871704],[-48.43301010131836,-20.060836791992188,2.987135648727417],[-47.31257247924805,-21.83439826965332,4.354554653167725],[-46.18196487426758,-23.56832504272461,5.763101577758789],[-45.08812713623047,-25.222768783569336,7.223965644836426],[-44.08869171142578,-26.742355346679688,8.748076438903809],[-41.93706130981445,16.054601669311523,-36.100341796875],[-44.088279724121094,15.957805633544922,-34.177913665771484],[-46.06462478637695,15.535358428955078,-31.989540100097656],[-47.84054946899414,14.813660621643066,-29.606809616088867],[-49.39541244506836,13.811341285705566,-27.094711303710938],[-50.72782516479492,12.548381805419922,-24.53243064880371],[-51.84960174560547,11.059041976928711,-21.985872268676758],[-52.77273941040039,9.369011878967285,-19.51116943359375],[-53.51485061645508,7.509984016418457,-17.150634765625],[-54.08819580078125,5.512068748474121,-14.94591999053955],[-54.52194595336914,3.4263875484466553,-12.901433944702148],[-54.83282470703125,1.2923295497894287,-11.009553909301758],[-55.029083251953125,-0.8587675094604492,-9.257340431213379],[-55.110145568847656,-3.0028536319732666,-7.628990173339844],[-55.06495666503906,-5.123986721038818,-6.116426944732666],[-54.89177703857422,-7.214777946472168,-4.696733474731445],[-54.58203125,-9.272598266601562,-3.3569107055664062],[-54.12935256958008,-11.298772811889648,-2.0840795040130615],[-53.523719787597656,-13.297292709350586,-0.8669906258583069],[-52.77334976196289,-15.275430679321289,0.3158954977989197],[-51.89143371582031,-17.24295997619629,1.48147714138031],[-50.893653869628906,-19.20659065246582,2.6461727619171143],[-49.80036926269531,-21.17054557800293,3.821336030960083],[-48.640846252441406,-23.11204719543457,5.035793781280518],[-47.461029052734375,-25.004505157470703,6.302560329437256],[-46.31264114379883,-26.798982620239258,7.642403602600098],[-43.43146896362305,15.131477355957031,-36.427711486816406],[-45.52034378051758,14.971416473388672,-34.36127853393555],[-47.42010498046875,14.523787498474121,-32.06089782714844],[-49.10981750488281,13.809691429138184,-29.590457916259766],[-50.5895881652832,12.837441444396973,-27.016069412231445],[-51.863563537597656,11.618463516235352,-24.40113067626953],[-52.9464225769043,10.18148422241211,-21.802473068237305],[-53.853031158447266,8.549415588378906,-19.265169143676758],[-54.603057861328125,6.751862525939941,-16.82054328918457],[-55.20451736450195,4.8047990798950195,-14.505594253540039],[-55.67753982543945,2.7595324516296387,-12.329774856567383],[-56.03273010253906,0.655645489692688,-10.296993255615234],[-56.27590560913086,-1.4714622497558594,-8.401349067687988],[-56.3996467590332,-3.599379539489746,-6.650135040283203],[-56.39048767089844,-5.71268892288208,-5.044031143188477],[-56.247535705566406,-7.8040571212768555,-3.5606274604797363],[-55.96242904663086,-9.87449836730957,-2.18919038772583],[-55.52989959716797,-11.93091106414795,-0.9205531477928162],[-54.93670654296875,-13.981314659118652,0.2583247423171997],[-54.19207763671875,-16.03479766845703,1.3717900514602661],[-53.307952880859375,-18.100038528442383,2.4409079551696777],[-52.29792785644531,-20.18390464782715,3.482455015182495],[-51.1806640625,-22.278549194335938,4.524085998535156],[-49.98702621459961,-24.351043701171875,5.610035419464111],[-48.7677001953125,-26.36570930480957,6.763513088226318],[-44.984317779541016,13.769147872924805,-36.48585510253906],[-46.966670989990234,13.564444541931152,-34.31328201293945],[-48.74421310424805,13.106603622436523,-31.93922996520996],[-50.318538665771484,12.407001495361328,-29.428319931030273],[-51.693809509277344,11.464750289916992,-26.834604263305664],[-52.881011962890625,10.287418365478516,-24.213212966918945],[-53.898460388183594,8.902867317199707,-21.613784790039062],[-54.76781463623047,7.335941314697266,-19.0717830657959],[-55.51519012451172,5.610490322113037,-16.606277465820312],[-56.146846771240234,3.742901563644409,-14.235450744628906],[-56.67178726196289,1.77583909034729,-11.969054222106934],[-57.09447479248047,-0.25283899903297424,-9.814414024353027],[-57.407569885253906,-2.319112777709961,-7.7870378494262695],[-57.595157623291016,-4.403244972229004,-5.911604881286621],[-57.64031982421875,-6.488639831542969,-4.204618453979492],[-57.54361343383789,-8.565877914428711,-2.6503453254699707],[-57.29753112792969,-10.638036727905273,-1.241788625717163],[-56.89222717285156,-12.715933799743652,0.028572693467140198],[-56.31563186645508,-14.809004783630371,1.17527174949646],[-55.577388763427734,-16.925081253051758,2.227811574935913],[-54.68914794921875,-19.071434020996094,3.2105517387390137],[-53.66407012939453,-21.246389389038086,4.1543989181518555],[-52.523746490478516,-23.434242248535156,5.100641250610352],[-51.30244445800781,-25.599157333374023,6.099058151245117],[-46.55305862426758,12.067865371704102,-36.28897476196289],[-48.389156341552734,11.836231231689453,-34.04368209838867],[-50.023963928222656,11.379826545715332,-31.635210037231445],[-51.45936584472656,10.697901725769043,-29.11632537841797],[-52.704429626464844,9.783148765563965,-26.534561157226562],[-53.77582931518555,8.641284942626953,-23.939626693725586],[-54.69841384887695,7.301324844360352,-21.375858306884766],[-55.50914001464844,5.786081790924072,-18.86538314819336],[-56.23371887207031,4.125484943389893,-16.420856475830078],[-56.88395690917969,2.3389530181884766,-14.047503471374512],[-57.463809967041016,0.4685788154602051,-11.749222755432129],[-57.966331481933594,-1.4640610218048096,-9.532837867736816],[-58.37115478515625,-3.4434943199157715,-7.418927192687988],[-58.649688720703125,-5.456986904144287,-5.442040920257568],[-58.77414321899414,-7.492831707000732,-3.6387875080108643],[-58.74586486816406,-9.538152694702148,-2.0077714920043945],[-58.5484504699707,-11.601739883422852,-0.5532762408256531],[-58.17616653442383,-13.690048217773438,0.7347217202186584],[-57.61751174926758,-15.812262535095215,1.869240641593933],[-56.8848876953125,-17.972782135009766,2.8853113651275635],[-55.991180419921875,-20.172630310058594,3.818845748901367],[-54.95337677001953,-22.404338836669922,4.711833953857422],[-53.79747772216797,-24.64858055114746,5.611926078796387],[-48.10529708862305,10.109635353088379,-35.85155487060547],[-49.784393310546875,9.868037223815918,-33.57011795043945],[-51.26152420043945,9.421364784240723,-31.15676498413086],[-52.54027557373047,8.76020622253418,-28.657611846923828],[-53.63187026977539,7.8722076416015625,-26.1156063079834],[-54.560699462890625,6.761641502380371,-23.57538414001465],[-55.37166213989258,5.4552531242370605,-21.067447662353516],[-56.101741790771484,3.981813430786133,-18.60970687866211],[-56.78224563598633,2.374924421310425,-16.209674835205078],[-57.431243896484375,0.662558913230896,-13.869879722595215],[-58.05119705200195,-1.1216955184936523,-11.588332176208496],[-58.62703323364258,-2.961047649383545,-9.369457244873047],[-59.129737854003906,-4.845417499542236,-7.229787826538086],[-59.518333435058594,-6.770899772644043,-5.2003350257873535],[-59.75090789794922,-8.733621597290039,-3.3235185146331787],[-59.80680847167969,-10.733680725097656,-1.6210561990737915],[-59.671630859375,-12.773731231689453,-0.10544991493225098],[-59.34019088745117,-14.85739803314209,1.22633957862854],[-58.804264068603516,-16.990150451660156,2.384326696395874],[-58.07993698120117,-19.170995712280273,3.4083480834960938],[-57.185882568359375,-21.39536476135254,4.342867851257324],[-56.14459991455078,-23.651397705078125,5.23686408996582],[-49.64955139160156,7.953136920928955,-35.17115783691406],[-51.16582489013672,7.712286472320557,-32.88063049316406],[-52.476898193359375,7.281546115875244,-30.488506317138672],[-53.584476470947266,6.64422607421875,-28.036571502685547],[-54.50269317626953,5.782984256744385,-25.56390953063965],[-55.278785705566406,4.697566032409668,-23.099328994750977],[-55.95799255371094,3.4194459915161133,-20.668289184570312],[-56.58607482910156,1.9810031652450562,-18.281822204589844],[-57.19865417480469,0.42255401611328125,-15.947134017944336],[-57.82586669921875,-1.2300277948379517,-13.659942626953125],[-58.46354675292969,-2.944254159927368,-11.42247200012207],[-59.09194564819336,-4.7039055824279785,-9.240406036376953],[-59.6778450012207,-6.501245975494385,-7.125929832458496],[-60.17724609375,-8.333809852600098,-5.099327087402344],[-60.521697998046875,-10.218347549438477,-3.1911661624908447],[-60.67912292480469,-12.156205177307129,-1.4298458099365234],[-60.624061584472656,-14.15364933013916,0.16017471253871918],[-60.349422454833984,-16.211475372314453,1.5710060596466064],[-59.84617614746094,-18.332868576049805,2.7985668182373047],[-59.139591217041016,-20.509254455566406,3.881096601486206],[-58.25684356689453,-22.729507446289062,4.868591785430908],[-51.174102783203125,5.662077903747559,-34.256553649902344],[-52.52900314331055,5.430012226104736,-31.980350494384766],[-53.67091751098633,5.019804954528809,-29.633764266967773],[-54.59935760498047,4.407721519470215,-27.256399154663086],[-55.346736907958984,3.5684661865234375,-24.872974395751953],[-55.960296630859375,2.504990577697754,-22.506290435791016],[-56.49538803100586,1.2519549131393433,-20.172452926635742],[-57.00236511230469,-0.15214313566684723,-17.879549026489258],[-57.53434371948242,-1.6689863204956055,-15.62293529510498],[-58.12458038330078,-3.271372079849243,-13.400212287902832],[-58.762577056884766,-4.926875114440918,-11.220993995666504],[-59.42473220825195,-6.619617938995361,-9.09350872039795],[-60.076751708984375,-8.3394136428833,-7.029079437255859],[-60.66291427612305,-10.095646858215332,-5.032043933868408],[-61.110877990722656,-11.903303146362305,-3.11991548538208],[-61.37261199951172,-13.7714262008667,-1.3156670331954956],[-61.41164779663086,-15.70923137664795,0.35562464594841003],[-61.206459045410156,-17.723194122314453,1.8702908754348755],[-60.74662399291992,-19.814411163330078,3.2019524574279785],[-60.06917190551758,-21.964275360107422,4.381927013397217],[-52.66981887817383,3.2764806747436523,-33.11697006225586],[-53.86739730834961,3.058823347091675,-30.876375198364258],[-54.84111404418945,2.67124605178833,-28.598506927490234],[-55.6032829284668,2.0793979167938232,-26.310832977294922],[-56.18001174926758,1.257946491241455,-24.03609848022461],[-56.62726593017578,0.21246542036533356,-21.78767967224121],[-57.00377655029297,-1.0163005590438843,-19.57731819152832],[-57.38340377807617,-2.3899524211883545,-17.39250946044922],[-57.823890686035156,-3.8702502250671387,-15.22545337677002],[-58.362693786621094,-5.429152488708496,-13.07724666595459],[-58.984737396240234,-7.0350236892700195,-10.965045928955078],[-59.663230895996094,-8.669363975524902,-8.902304649353027],[-60.35758972167969,-10.330132484436035,-6.890091896057129],[-61.01005554199219,-12.021368980407715,-4.9301958084106445],[-61.54540252685547,-13.758570671081543,-3.0264639854431152],[-61.908103942871094,-15.55197811126709,-1.189347505569458],[-62.04405212402344,-17.42034912109375,0.5611122846603394],[-61.91718292236328,-19.375892639160156,2.1881775856018066],[-61.513092041015625,-21.417678833007812,3.6456222534179688],[-54.12089538574219,0.824693500995636,-31.77452850341797],[-55.167686462402344,0.6248805522918701,-29.589073181152344],[-55.99213409423828,0.25547078251838684,-27.39008140563965],[-56.596527099609375,-0.3207802176475525,-25.204973220825195],[-57.00856399536133,-1.1298927068710327,-23.053512573242188],[-57.283416748046875,-2.16060209274292,-20.948081970214844],[-57.50390625,-3.36967396736145,-18.875293731689453],[-57.751258850097656,-4.716660022735596,-16.811344146728516],[-58.0884895324707,-6.163918495178223,-14.745190620422363],[-58.560733795166016,-7.6845383644104,-12.679174423217773],[-59.1490478515625,-9.24589729309082,-10.64035415649414],[-59.82592010498047,-10.835824012756348,-8.636335372924805],[-60.54362487792969,-12.447524070739746,-6.672630310058594],[-61.242462158203125,-14.083673477172852,-4.746870040893555],[-61.8487663269043,-15.755217552185059,-2.854478120803833],[-62.29861831665039,-17.477209091186523,-0.9929755926132202],[-62.526954650878906,-19.272964477539062,0.8236745595932007],[-62.48686981201172,-21.156511306762695,2.5570623874664307],[-55.50578308105469,-1.6752393245697021,-30.26532554626465],[-56.42264938354492,-1.8598841428756714,-28.142576217651367],[-57.11080551147461,-2.215057849884033,-26.029653549194336],[-57.57009506225586,-2.7812137603759766,-23.95366096496582],[-57.82089614868164,-3.5828161239624023,-21.94134521484375],[-57.936519622802734,-4.605483531951904,-19.98630142211914],[-58.005706787109375,-5.800101280212402,-18.061063766479492],[-58.11494064331055,-7.123873233795166,-16.130599975585938],[-58.33618927001953,-8.540753364562988,-14.175369262695312],[-58.72280502319336,-10.02460765838623,-12.198942184448242],[-59.26415252685547,-11.550321578979492,-10.225807189941406],[-59.92245864868164,-13.101546287536621,-8.274589538574219],[-60.645999908447266,-14.67039680480957,-6.3516082763671875],[-61.3737907409668,-16.25570297241211,-4.454094886779785],[-62.03083038330078,-17.870025634765625,-2.5710299015045166],[-62.54912567138672,-19.528932571411133,-0.6954808831214905],[-62.86179733276367,-21.25244903564453,1.1658498048782349],[-56.80636978149414,-4.217192649841309,-28.636079788208008],[-57.606441497802734,-4.38857364654541,-26.581295013427734],[-58.17298889160156,-4.7340474128723145,-24.556140899658203],[-58.49576950073242,-5.294496059417725,-22.596107482910156],[-58.605533599853516,-6.0953898429870605,-20.71952247619629],[-58.5768928527832,-7.115991115570068,-18.91426658630371],[-58.5004768371582,-8.301194190979004,-17.14229393005371],[-58.46793746948242,-9.605329513549805,-15.354251861572266],[-58.55794143676758,-10.991598129272461,-13.520196914672852],[-58.8510627746582,-12.443304061889648,-11.626338005065918],[-59.33074188232422,-13.934422492980957,-9.714109420776367],[-59.95591735839844,-15.448156356811523,-7.808407306671143],[-60.670413970947266,-16.973546981811523,-5.919704914093018],[-61.41083908081055,-18.512222290039062,-4.043473243713379],[-62.0997314453125,-20.077268600463867,-2.169248342514038],[-62.667945861816406,-21.68053436279297,-0.2905367314815521],[-57.9948844909668,-6.794031143188477,-26.954845428466797],[-58.69009017944336,-6.95475959777832,-24.97102928161621],[-59.14249801635742,-7.294008255004883,-23.038589477539062],[-59.34752655029297,-7.854867458343506,-21.187843322753906],[-59.332820892333984,-8.659485816955566,-19.43925666809082],[-59.17154312133789,-9.681221008300781,-17.779239654541016],[-58.956295013427734,-10.859599113464355,-16.158679962158203],[-58.77837371826172,-12.143871307373047,-14.517322540283203],[-58.74221420288086,-13.503066062927246,-12.793686866760254],[-58.935569763183594,-14.92127799987793,-10.977413177490234],[-59.34653091430664,-16.37550163269043,-9.11918830871582],[-59.92972183227539,-17.846961975097656,-7.25341272354126],[-60.62641143798828,-19.328325271606445,-5.392276287078857],[-61.36798858642578,-20.823623657226562,-3.5339462757110596],[-62.075050354003906,-22.343250274658203,-1.671017050743103],[-59.05312728881836,-9.407140731811523,-25.27517318725586],[-59.64988708496094,-9.55884838104248,-23.367572784423828],[-60.00407409667969,-9.897510528564453,-21.521835327148438],[-60.10567855834961,-10.4627103805542,-19.77158546447754],[-59.97787857055664,-11.272479057312012,-18.14231300354004],[-59.693599700927734,-12.29538345336914,-16.618579864501953],[-59.34313201904297,-13.464982986450195,-15.145181655883789],[-59.036190032958984,-14.732067108154297,-13.630619049072266],[-58.878055572509766,-16.063671112060547,-12.009303092956543],[-58.97181701660156,-17.445711135864258,-10.263428688049316],[-59.31004333496094,-18.856534957885742,-8.454164505004883],[-59.84851837158203,-20.2827205657959,-6.622025966644287],[-60.52137756347656,-21.720680236816406,-4.784968376159668],[-61.254310607910156,-23.17348861694336,-2.945634603500366],[-59.965240478515625,-12.058180809020996,-23.64615821838379],[-60.477272033691406,-12.205467224121094,-21.810575485229492],[-60.74484634399414,-12.547004699707031,-20.04428482055664],[-60.752105712890625,-13.117283821105957,-18.386194229125977],[-60.51976776123047,-13.930070877075195,-16.865516662597656],[-60.11833572387695,-14.948869705200195,-15.468029975891113],[-59.65384292602539,-16.109024047851562,-14.113828659057617],[-59.23165512084961,-17.358375549316406,-12.709242820739746],[-58.96319580078125,-18.662073135375977,-11.177839279174805],[-58.960731506347656,-20.002952575683594,-9.496703147888184],[-59.23030471801758,-21.367176055908203,-7.729583263397217],[-59.723358154296875,-22.747573852539062,-5.927229881286621],[-60.36588668823242,-24.141267776489258,-4.114746570587158],[-60.72629165649414,-14.75678825378418,-22.09898567199707],[-61.164188385009766,-14.90153980255127,-20.32943344116211],[-61.35313415527344,-15.245508193969727,-18.634965896606445],[-61.27363204956055,-15.817476272583008,-17.05852699279785],[-60.94290542602539,-16.62531089782715,-15.634652137756348],[-60.446189880371094,-17.635536193847656,-14.332676887512207],[-59.88652038574219,-18.78303337097168,-13.072469711303711],[-59.37023162841797,-20.014965057373047,-11.755346298217773],[-59.007205963134766,-21.290515899658203,-10.30174446105957],[-58.921688079833984,-22.591075897216797,-8.6771240234375],[-59.12708282470703,-23.90940284729004,-6.948660373687744],[-59.570335388183594,-25.242355346679688,-5.176784992218018],[-61.339839935302734,-17.502485275268555,-20.65119171142578],[-61.710784912109375,-17.643115997314453,-18.94151496887207],[-61.82728576660156,-17.985090255737305,-17.31052017211914],[-61.6662712097168,-18.549297332763672,-15.80617904663086],[-61.257381439208984,-19.345584869384766,-14.45241641998291],[-60.68418884277344,-20.34111785888672,-13.2203950881958],[-60.05232620239258,-21.47370719909668,-12.026355743408203],[-59.46507263183594,-22.688434600830078,-10.77406120300293],[-59.03306198120117,-23.941225051879883,-9.380322456359863],[-58.879638671875,-25.20722198486328,-7.805757522583008],[-59.02232360839844,-26.480899810791016,-6.116995811462402],[-61.813011169433594,-20.28988265991211,-19.30550193786621],[-62.12342834472656,-20.421335220336914,-17.647838592529297],[-62.17292404174805,-20.750774383544922,-16.071714401245117],[-61.94890213012695,-21.299949645996094,-14.617574691772461],[-61.480342864990234,-22.07718849182129,-13.311602592468262],[-60.85361099243164,-23.05419921875,-12.122729301452637],[-60.1744270324707,-24.170698165893555,-10.968729019165039],[-59.54543685913086,-25.373210906982422,-9.756136894226074],[-59.06891632080078,-26.61176300048828,-8.406774520874023],[-58.858299255371094,-27.849746704101562,-6.880343437194824],[-62.155845642089844,-23.10889434814453,-18.054100036621094],[-62.412147521972656,-23.220121383666992,-16.43974494934082],[-62.41155242919922,-23.53009605407715,-14.900049209594727],[-62.14237594604492,-24.056264877319336,-13.477494239807129],[-61.6369514465332,-24.80987548828125,-12.195802688598633],[-60.98243713378906,-25.766048431396484,-11.02427864074707],[-60.285491943359375,-26.870519638061523,-9.883718490600586],[-59.640933990478516,-28.067790985107422,-8.690439224243164],[-59.1385498046875,-29.299388885498047,-7.3750386238098145],[-62.38151550292969,-25.941022872924805,-16.881975173950195],[-62.59899139404297,-26.026376724243164,-15.294861793518066],[-62.56483459472656,-26.309215545654297,-13.776300430297852],[-62.272125244140625,-26.808055877685547,-12.366194725036621],[-61.75556945800781,-27.535661697387695,-11.086142539978027],[-61.10223388671875,-28.475175857543945,-9.90727710723877],[-60.41276550292969,-29.57341766357422,-8.759917259216309],[-59.77241134643555,-30.76978302001953,-7.5716118812561035],[-62.51010513305664,-28.77271270751953,-15.763720512390137],[-62.70344924926758,-28.824905395507812,-14.191575050354004],[-62.65486145019531,-29.07720184326172,-12.679512977600098],[-62.36247634887695,-29.548057556152344,-11.264274597167969],[-61.862064361572266,-30.256330490112305,-9.965646743774414],[-61.23379898071289,-31.18634796142578,-8.762097358703613],[-60.57096862792969,-32.28144836425781,-7.593931198120117],[-62.56556701660156,-31.579509735107422,-14.674114227294922],[-62.749576568603516,-31.596424102783203,-13.106895446777344],[-62.70556640625,-31.819734573364258,-11.589442253112793],[-62.4355354309082,-32.27406692504883,-10.155109405517578],[-61.97038650512695,-32.97605514526367,-8.826286315917969],[-61.3824348449707,-33.90369415283203,-7.589081764221191],[-62.566017150878906,-34.3425178527832,-13.59196662902832],[-62.75531005859375,-34.326026916503906,-12.022748947143555],[-62.73218536376953,-34.535667419433594,-10.491278648376465],[-62.497657775878906,-34.99393844604492,-9.03125],[-62.07831954956055,-35.705020904541016,-7.668047904968262],[-62.526695251464844,-37.042083740234375,-12.501363754272461],[-62.73201370239258,-37.0088005065918,-10.926692008972168],[-62.73637008666992,-37.231849670410156,-9.37874984741211],[-62.54069519042969,-37.720481872558594,-7.893524646759033],[-62.45491027832031,-39.665321350097656,-11.392173767089844],[-62.676578521728516,-39.64576721191406,-9.814186096191406],[-62.70288848876953,-39.92182159423828,-8.254505157470703],[-62.35052490234375,-42.202388763427734,-10.265317916870117],[-62.57534408569336,-42.24803924560547,-8.691661834716797],[-62.2031135559082,-44.65443801879883,-9.135652542114258]]"),hS=JSON.parse("[[12,0,43],[12,43,105],[13,12,105],[13,105,106],[14,13,106],[14,106,107],[15,14,107],[15,107,108],[16,15,108],[16,108,109],[17,16,109],[17,109,110],[18,17,110],[18,110,111],[19,18,111],[19,111,112],[20,19,112],[20,112,113],[21,20,113],[21,113,114],[22,21,114],[22,114,115],[23,22,115],[23,115,116],[24,23,116],[24,116,117],[25,24,117],[25,117,118],[26,25,118],[26,118,119],[27,26,119],[27,119,120],[28,27,120],[28,120,121],[29,28,121],[29,121,122],[30,29,122],[30,122,123],[31,30,123],[31,123,124],[32,31,124],[32,124,125],[33,32,125],[33,125,126],[34,33,126],[34,126,127],[35,34,127],[35,127,128],[36,35,128],[36,128,129],[37,36,129],[37,129,130],[38,37,130],[38,130,131],[39,38,131],[39,131,132],[40,39,132],[40,132,133],[41,40,133],[41,133,134],[42,41,134],[42,134,74],[7,42,74],[105,43,44],[105,44,135],[106,105,135],[106,135,136],[107,106,136],[107,136,137],[108,107,137],[108,137,138],[109,108,138],[109,138,139],[110,109,139],[110,139,140],[111,110,140],[111,140,141],[112,111,141],[112,141,142],[113,112,142],[113,142,143],[114,113,143],[114,143,144],[115,114,144],[115,144,145],[116,115,145],[116,145,146],[117,116,146],[117,146,147],[118,117,147],[118,147,148],[119,118,148],[119,148,149],[120,119,149],[120,149,150],[121,120,150],[121,150,151],[122,121,151],[122,151,152],[123,122,152],[123,152,153],[124,123,153],[124,153,154],[125,124,154],[125,154,155],[126,125,155],[126,155,156],[127,126,156],[127,156,157],[128,127,157],[128,157,158],[129,128,158],[129,158,159],[130,129,159],[130,159,160],[131,130,160],[131,160,161],[132,131,161],[132,161,162],[133,132,162],[133,162,163],[134,133,163],[134,163,75],[74,134,75],[135,44,45],[135,45,164],[136,135,164],[136,164,165],[137,136,165],[137,165,166],[138,137,166],[138,166,167],[139,138,167],[139,167,168],[140,139,168],[140,168,169],[141,140,169],[141,169,170],[142,141,170],[142,170,171],[143,142,171],[143,171,172],[144,143,172],[144,172,173],[145,144,173],[145,173,174],[146,145,174],[146,174,175],[147,146,175],[147,175,176],[148,147,176],[148,176,177],[149,148,177],[149,177,178],[150,149,178],[150,178,179],[151,150,179],[151,179,180],[152,151,180],[152,180,181],[153,152,181],[153,181,182],[154,153,182],[154,182,183],[155,154,183],[155,183,184],[156,155,184],[156,184,185],[157,156,185],[157,185,186],[158,157,186],[158,186,187],[159,158,187],[159,187,188],[160,159,188],[160,188,189],[161,160,189],[161,189,190],[162,161,190],[162,190,191],[163,162,191],[163,191,76],[75,163,76],[164,45,46],[164,46,192],[165,164,192],[165,192,193],[166,165,193],[166,193,194],[167,166,194],[167,194,195],[168,167,195],[168,195,196],[169,168,196],[169,196,197],[170,169,197],[170,197,198],[171,170,198],[171,198,199],[172,171,199],[172,199,200],[173,172,200],[173,200,201],[174,173,201],[174,201,202],[175,174,202],[175,202,203],[176,175,203],[176,203,204],[177,176,204],[177,204,205],[178,177,205],[178,205,206],[179,178,206],[179,206,207],[180,179,207],[180,207,208],[181,180,208],[181,208,209],[182,181,209],[182,209,210],[183,182,210],[183,210,211],[184,183,211],[184,211,212],[185,184,212],[185,212,213],[186,185,213],[186,213,214],[187,186,214],[187,214,215],[188,187,215],[188,215,216],[189,188,216],[189,216,217],[190,189,217],[190,217,218],[191,190,218],[191,218,77],[76,191,77],[192,46,47],[192,47,219],[193,192,219],[193,219,220],[194,193,220],[194,220,221],[195,194,221],[195,221,222],[196,195,222],[196,222,223],[197,196,223],[197,223,224],[198,197,224],[198,224,225],[199,198,225],[199,225,226],[200,199,226],[200,226,227],[201,200,227],[201,227,228],[202,201,228],[202,228,229],[203,202,229],[203,229,230],[204,203,230],[204,230,231],[205,204,231],[205,231,232],[206,205,232],[206,232,233],[207,206,233],[207,233,234],[208,207,234],[208,234,235],[209,208,235],[209,235,236],[210,209,236],[210,236,237],[211,210,237],[211,237,238],[212,211,238],[212,238,239],[213,212,239],[213,239,240],[214,213,240],[214,240,241],[215,214,241],[215,241,242],[216,215,242],[216,242,243],[217,216,243],[217,243,244],[218,217,244],[218,244,78],[77,218,78],[219,47,48],[219,48,245],[220,219,245],[220,245,246],[221,220,246],[221,246,247],[222,221,247],[222,247,248],[223,222,248],[223,248,249],[224,223,249],[224,249,250],[225,224,250],[225,250,251],[226,225,251],[226,251,252],[227,226,252],[227,252,253],[228,227,253],[228,253,254],[229,228,254],[229,254,255],[230,229,255],[230,255,256],[231,230,256],[231,256,257],[232,231,257],[232,257,258],[233,232,258],[233,258,259],[234,233,259],[234,259,260],[235,234,260],[235,260,261],[236,235,261],[236,261,262],[237,236,262],[237,262,263],[238,237,263],[238,263,264],[239,238,264],[239,264,265],[240,239,265],[240,265,266],[241,240,266],[241,266,267],[242,241,267],[242,267,268],[243,242,268],[243,268,269],[244,243,269],[244,269,79],[78,244,79],[245,48,49],[245,49,270],[246,245,270],[246,270,271],[247,246,271],[247,271,272],[248,247,272],[248,272,273],[249,248,273],[249,273,274],[250,249,274],[250,274,275],[251,250,275],[251,275,276],[252,251,276],[252,276,277],[253,252,277],[253,277,278],[254,253,278],[254,278,279],[255,254,279],[255,279,280],[256,255,280],[256,280,281],[257,256,281],[257,281,282],[258,257,282],[258,282,283],[259,258,283],[259,283,284],[260,259,284],[260,284,285],[261,260,285],[261,285,286],[262,261,286],[262,286,287],[263,262,287],[263,287,288],[264,263,288],[264,288,289],[265,264,289],[265,289,290],[266,265,290],[266,290,291],[267,266,291],[267,291,292],[268,267,292],[268,292,293],[269,268,293],[269,293,80],[79,269,80],[270,49,50],[270,50,294],[271,270,294],[271,294,295],[272,271,295],[272,295,296],[273,272,296],[273,296,297],[274,273,297],[274,297,298],[275,274,298],[275,298,299],[276,275,299],[276,299,300],[277,276,300],[277,300,301],[278,277,301],[278,301,302],[279,278,302],[279,302,303],[280,279,303],[280,303,304],[281,280,304],[281,304,305],[282,281,305],[282,305,306],[283,282,306],[283,306,307],[284,283,307],[284,307,308],[285,284,308],[285,308,309],[286,285,309],[286,309,310],[287,286,310],[287,310,311],[288,287,311],[288,311,312],[289,288,312],[289,312,313],[290,289,313],[290,313,314],[291,290,314],[291,314,315],[292,291,315],[292,315,316],[293,292,316],[293,316,81],[80,293,81],[294,50,51],[294,51,317],[295,294,317],[295,317,318],[296,295,318],[296,318,319],[297,296,319],[297,319,320],[298,297,320],[298,320,321],[299,298,321],[299,321,322],[300,299,322],[300,322,323],[301,300,323],[301,323,324],[302,301,324],[302,324,325],[303,302,325],[303,325,326],[304,303,326],[304,326,327],[305,304,327],[305,327,328],[306,305,328],[306,328,329],[307,306,329],[307,329,330],[308,307,330],[308,330,331],[309,308,331],[309,331,332],[310,309,332],[310,332,333],[311,310,333],[311,333,334],[312,311,334],[312,334,335],[313,312,335],[313,335,336],[314,313,336],[314,336,337],[315,314,337],[315,337,338],[316,315,338],[316,338,82],[81,316,82],[317,51,52],[317,52,339],[318,317,339],[318,339,340],[319,318,340],[319,340,341],[320,319,341],[320,341,342],[321,320,342],[321,342,343],[322,321,343],[322,343,344],[323,322,344],[323,344,345],[324,323,345],[324,345,346],[325,324,346],[325,346,347],[326,325,347],[326,347,348],[327,326,348],[327,348,349],[328,327,349],[328,349,350],[329,328,350],[329,350,351],[330,329,351],[330,351,352],[331,330,352],[331,352,353],[332,331,353],[332,353,354],[333,332,354],[333,354,355],[334,333,355],[334,355,356],[335,334,356],[335,356,357],[336,335,357],[336,357,358],[337,336,358],[337,358,359],[338,337,359],[338,359,83],[82,338,83],[339,52,53],[339,53,360],[340,339,360],[340,360,361],[341,340,361],[341,361,362],[342,341,362],[342,362,363],[343,342,363],[343,363,364],[344,343,364],[344,364,365],[345,344,365],[345,365,366],[346,345,366],[346,366,367],[347,346,367],[347,367,368],[348,347,368],[348,368,369],[349,348,369],[349,369,370],[350,349,370],[350,370,371],[351,350,371],[351,371,372],[352,351,372],[352,372,373],[353,352,373],[353,373,374],[354,353,374],[354,374,375],[355,354,375],[355,375,376],[356,355,376],[356,376,377],[357,356,377],[357,377,378],[358,357,378],[358,378,379],[359,358,379],[359,379,84],[83,359,84],[360,53,54],[360,54,380],[361,360,380],[361,380,381],[362,361,381],[362,381,382],[363,362,382],[363,382,383],[364,363,383],[364,383,384],[365,364,384],[365,384,385],[366,365,385],[366,385,386],[367,366,386],[367,386,387],[368,367,387],[368,387,388],[369,368,388],[369,388,389],[370,369,389],[370,389,390],[371,370,390],[371,390,391],[372,371,391],[372,391,392],[373,372,392],[373,392,393],[374,373,393],[374,393,394],[375,374,394],[375,394,395],[376,375,395],[376,395,396],[377,376,396],[377,396,397],[378,377,397],[378,397,398],[379,378,398],[379,398,85],[84,379,85],[380,54,55],[380,55,399],[381,380,399],[381,399,400],[382,381,400],[382,400,401],[383,382,401],[383,401,402],[384,383,402],[384,402,403],[385,384,403],[385,403,404],[386,385,404],[386,404,405],[387,386,405],[387,405,406],[388,387,406],[388,406,407],[389,388,407],[389,407,408],[390,389,408],[390,408,409],[391,390,409],[391,409,410],[392,391,410],[392,410,411],[393,392,411],[393,411,412],[394,393,412],[394,412,413],[395,394,413],[395,413,414],[396,395,414],[396,414,415],[397,396,415],[397,415,416],[398,397,416],[398,416,86],[85,398,86],[399,55,56],[399,56,417],[400,399,417],[400,417,418],[401,400,418],[401,418,419],[402,401,419],[402,419,420],[403,402,420],[403,420,421],[404,403,421],[404,421,422],[405,404,422],[405,422,423],[406,405,423],[406,423,424],[407,406,424],[407,424,425],[408,407,425],[408,425,426],[409,408,426],[409,426,427],[410,409,427],[410,427,428],[411,410,428],[411,428,429],[412,411,429],[412,429,430],[413,412,430],[413,430,431],[414,413,431],[414,431,432],[415,414,432],[415,432,433],[416,415,433],[416,433,87],[86,416,87],[417,56,57],[417,57,434],[418,417,434],[418,434,435],[419,418,435],[419,435,436],[420,419,436],[420,436,437],[421,420,437],[421,437,438],[422,421,438],[422,438,439],[423,422,439],[423,439,440],[424,423,440],[424,440,441],[425,424,441],[425,441,442],[426,425,442],[426,442,443],[427,426,443],[427,443,444],[428,427,444],[428,444,445],[429,428,445],[429,445,446],[430,429,446],[430,446,447],[431,430,447],[431,447,448],[432,431,448],[432,448,449],[433,432,449],[433,449,88],[87,433,88],[434,57,58],[434,58,450],[435,434,450],[435,450,451],[436,435,451],[436,451,452],[437,436,452],[437,452,453],[438,437,453],[438,453,454],[439,438,454],[439,454,455],[440,439,455],[440,455,456],[441,440,456],[441,456,457],[442,441,457],[442,457,458],[443,442,458],[443,458,459],[444,443,459],[444,459,460],[445,444,460],[445,460,461],[446,445,461],[446,461,462],[447,446,462],[447,462,463],[448,447,463],[448,463,464],[449,448,464],[449,464,89],[88,449,89],[450,58,59],[450,59,465],[451,450,465],[451,465,466],[452,451,466],[452,466,467],[453,452,467],[453,467,468],[454,453,468],[454,468,469],[455,454,469],[455,469,470],[456,455,470],[456,470,471],[457,456,471],[457,471,472],[458,457,472],[458,472,473],[459,458,473],[459,473,474],[460,459,474],[460,474,475],[461,460,475],[461,475,476],[462,461,476],[462,476,477],[463,462,477],[463,477,478],[464,463,478],[464,478,90],[89,464,90],[465,59,60],[465,60,479],[466,465,479],[466,479,480],[467,466,480],[467,480,481],[468,467,481],[468,481,482],[469,468,482],[469,482,483],[470,469,483],[470,483,484],[471,470,484],[471,484,485],[472,471,485],[472,485,486],[473,472,486],[473,486,487],[474,473,487],[474,487,488],[475,474,488],[475,488,489],[476,475,489],[476,489,490],[477,476,490],[477,490,491],[478,477,491],[478,491,91],[90,478,91],[479,60,61],[479,61,492],[480,479,492],[480,492,493],[481,480,493],[481,493,494],[482,481,494],[482,494,495],[483,482,495],[483,495,496],[484,483,496],[484,496,497],[485,484,497],[485,497,498],[486,485,498],[486,498,499],[487,486,499],[487,499,500],[488,487,500],[488,500,501],[489,488,501],[489,501,502],[490,489,502],[490,502,503],[491,490,503],[491,503,92],[91,491,92],[492,61,62],[492,62,504],[493,492,504],[493,504,505],[494,493,505],[494,505,506],[495,494,506],[495,506,507],[496,495,507],[496,507,508],[497,496,508],[497,508,509],[498,497,509],[498,509,510],[499,498,510],[499,510,511],[500,499,511],[500,511,512],[501,500,512],[501,512,513],[502,501,513],[502,513,514],[503,502,514],[503,514,93],[92,503,93],[504,62,63],[504,63,515],[505,504,515],[505,515,516],[506,505,516],[506,516,517],[507,506,517],[507,517,518],[508,507,518],[508,518,519],[509,508,519],[509,519,520],[510,509,520],[510,520,521],[511,510,521],[511,521,522],[512,511,522],[512,522,523],[513,512,523],[513,523,524],[514,513,524],[514,524,94],[93,514,94],[515,63,64],[515,64,525],[516,515,525],[516,525,526],[517,516,526],[517,526,527],[518,517,527],[518,527,528],[519,518,528],[519,528,529],[520,519,529],[520,529,530],[521,520,530],[521,530,531],[522,521,531],[522,531,532],[523,522,532],[523,532,533],[524,523,533],[524,533,95],[94,524,95],[525,64,65],[525,65,534],[526,525,534],[526,534,535],[527,526,535],[527,535,536],[528,527,536],[528,536,537],[529,528,537],[529,537,538],[530,529,538],[530,538,539],[531,530,539],[531,539,540],[532,531,540],[532,540,541],[533,532,541],[533,541,96],[95,533,96],[534,65,66],[534,66,542],[535,534,542],[535,542,543],[536,535,543],[536,543,544],[537,536,544],[537,544,545],[538,537,545],[538,545,546],[539,538,546],[539,546,547],[540,539,547],[540,547,548],[541,540,548],[541,548,97],[96,541,97],[542,66,67],[542,67,549],[543,542,549],[543,549,550],[544,543,550],[544,550,551],[545,544,551],[545,551,552],[546,545,552],[546,552,553],[547,546,553],[547,553,554],[548,547,554],[548,554,98],[97,548,98],[549,67,68],[549,68,555],[550,549,555],[550,555,556],[551,550,556],[551,556,557],[552,551,557],[552,557,558],[553,552,558],[553,558,559],[554,553,559],[554,559,99],[98,554,99],[555,68,69],[555,69,560],[556,555,560],[556,560,561],[557,556,561],[557,561,562],[558,557,562],[558,562,563],[559,558,563],[559,563,100],[99,559,100],[560,69,70],[560,70,564],[561,560,564],[561,564,565],[562,561,565],[562,565,566],[563,562,566],[563,566,101],[100,563,101],[564,70,71],[564,71,567],[565,564,567],[565,567,568],[566,565,568],[566,568,102],[101,566,102],[567,71,72],[567,72,569],[568,567,569],[568,569,103],[102,568,103],[569,72,73],[569,73,104],[103,569,104],[104,73,8],[570,0,12],[570,12,632],[571,570,632],[571,632,633],[572,571,633],[572,633,634],[573,572,634],[573,634,635],[574,573,635],[574,635,636],[575,574,636],[575,636,637],[576,575,637],[576,637,638],[577,576,638],[577,638,639],[578,577,639],[578,639,640],[579,578,640],[579,640,641],[580,579,641],[580,641,642],[581,580,642],[581,642,643],[582,581,643],[582,643,644],[583,582,644],[583,644,645],[584,583,645],[584,645,646],[585,584,646],[585,646,647],[586,585,647],[586,647,648],[587,586,648],[587,648,649],[588,587,649],[588,649,650],[589,588,650],[589,650,651],[590,589,651],[590,651,652],[591,590,652],[591,652,653],[592,591,653],[592,653,654],[593,592,654],[593,654,655],[594,593,655],[594,655,656],[595,594,656],[595,656,657],[596,595,657],[596,657,658],[597,596,658],[597,658,659],[598,597,659],[598,659,660],[599,598,660],[599,660,661],[600,599,661],[600,661,601],[3,600,601],[632,12,13],[632,13,662],[633,632,662],[633,662,663],[634,633,663],[634,663,664],[635,634,664],[635,664,665],[636,635,665],[636,665,666],[637,636,666],[637,666,667],[638,637,667],[638,667,668],[639,638,668],[639,668,669],[640,639,669],[640,669,670],[641,640,670],[641,670,671],[642,641,671],[642,671,672],[643,642,672],[643,672,673],[644,643,673],[644,673,674],[645,644,674],[645,674,675],[646,645,675],[646,675,676],[647,646,676],[647,676,677],[648,647,677],[648,677,678],[649,648,678],[649,678,679],[650,649,679],[650,679,680],[651,650,680],[651,680,681],[652,651,681],[652,681,682],[653,652,682],[653,682,683],[654,653,683],[654,683,684],[655,654,684],[655,684,685],[656,655,685],[656,685,686],[657,656,686],[657,686,687],[658,657,687],[658,687,688],[659,658,688],[659,688,689],[660,659,689],[660,689,690],[661,660,690],[661,690,602],[601,661,602],[662,13,14],[662,14,691],[663,662,691],[663,691,692],[664,663,692],[664,692,693],[665,664,693],[665,693,694],[666,665,694],[666,694,695],[667,666,695],[667,695,696],[668,667,696],[668,696,697],[669,668,697],[669,697,698],[670,669,698],[670,698,699],[671,670,699],[671,699,700],[672,671,700],[672,700,701],[673,672,701],[673,701,702],[674,673,702],[674,702,703],[675,674,703],[675,703,704],[676,675,704],[676,704,705],[677,676,705],[677,705,706],[678,677,706],[678,706,707],[679,678,707],[679,707,708],[680,679,708],[680,708,709],[681,680,709],[681,709,710],[682,681,710],[682,710,711],[683,682,711],[683,711,712],[684,683,712],[684,712,713],[685,684,713],[685,713,714],[686,685,714],[686,714,715],[687,686,715],[687,715,716],[688,687,716],[688,716,717],[689,688,717],[689,717,718],[690,689,718],[690,718,603],[602,690,603],[691,14,15],[691,15,719],[692,691,719],[692,719,720],[693,692,720],[693,720,721],[694,693,721],[694,721,722],[695,694,722],[695,722,723],[696,695,723],[696,723,724],[697,696,724],[697,724,725],[698,697,725],[698,725,726],[699,698,726],[699,726,727],[700,699,727],[700,727,728],[701,700,728],[701,728,729],[702,701,729],[702,729,730],[703,702,730],[703,730,731],[704,703,731],[704,731,732],[705,704,732],[705,732,733],[706,705,733],[706,733,734],[707,706,734],[707,734,735],[708,707,735],[708,735,736],[709,708,736],[709,736,737],[710,709,737],[710,737,738],[711,710,738],[711,738,739],[712,711,739],[712,739,740],[713,712,740],[713,740,741],[714,713,741],[714,741,742],[715,714,742],[715,742,743],[716,715,743],[716,743,744],[717,716,744],[717,744,745],[718,717,745],[718,745,604],[603,718,604],[719,15,16],[719,16,746],[720,719,746],[720,746,747],[721,720,747],[721,747,748],[722,721,748],[722,748,749],[723,722,749],[723,749,750],[724,723,750],[724,750,751],[725,724,751],[725,751,752],[726,725,752],[726,752,753],[727,726,753],[727,753,754],[728,727,754],[728,754,755],[729,728,755],[729,755,756],[730,729,756],[730,756,757],[731,730,757],[731,757,758],[732,731,758],[732,758,759],[733,732,759],[733,759,760],[734,733,760],[734,760,761],[735,734,761],[735,761,762],[736,735,762],[736,762,763],[737,736,763],[737,763,764],[738,737,764],[738,764,765],[739,738,765],[739,765,766],[740,739,766],[740,766,767],[741,740,767],[741,767,768],[742,741,768],[742,768,769],[743,742,769],[743,769,770],[744,743,770],[744,770,771],[745,744,771],[745,771,605],[604,745,605],[746,16,17],[746,17,772],[747,746,772],[747,772,773],[748,747,773],[748,773,774],[749,748,774],[749,774,775],[750,749,775],[750,775,776],[751,750,776],[751,776,777],[752,751,777],[752,777,778],[753,752,778],[753,778,779],[754,753,779],[754,779,780],[755,754,780],[755,780,781],[756,755,781],[756,781,782],[757,756,782],[757,782,783],[758,757,783],[758,783,784],[759,758,784],[759,784,785],[760,759,785],[760,785,786],[761,760,786],[761,786,787],[762,761,787],[762,787,788],[763,762,788],[763,788,789],[764,763,789],[764,789,790],[765,764,790],[765,790,791],[766,765,791],[766,791,792],[767,766,792],[767,792,793],[768,767,793],[768,793,794],[769,768,794],[769,794,795],[770,769,795],[770,795,796],[771,770,796],[771,796,606],[605,771,606],[772,17,18],[772,18,797],[773,772,797],[773,797,798],[774,773,798],[774,798,799],[775,774,799],[775,799,800],[776,775,800],[776,800,801],[777,776,801],[777,801,802],[778,777,802],[778,802,803],[779,778,803],[779,803,804],[780,779,804],[780,804,805],[781,780,805],[781,805,806],[782,781,806],[782,806,807],[783,782,807],[783,807,808],[784,783,808],[784,808,809],[785,784,809],[785,809,810],[786,785,810],[786,810,811],[787,786,811],[787,811,812],[788,787,812],[788,812,813],[789,788,813],[789,813,814],[790,789,814],[790,814,815],[791,790,815],[791,815,816],[792,791,816],[792,816,817],[793,792,817],[793,817,818],[794,793,818],[794,818,819],[795,794,819],[795,819,820],[796,795,820],[796,820,607],[606,796,607],[797,18,19],[797,19,821],[798,797,821],[798,821,822],[799,798,822],[799,822,823],[800,799,823],[800,823,824],[801,800,824],[801,824,825],[802,801,825],[802,825,826],[803,802,826],[803,826,827],[804,803,827],[804,827,828],[805,804,828],[805,828,829],[806,805,829],[806,829,830],[807,806,830],[807,830,831],[808,807,831],[808,831,832],[809,808,832],[809,832,833],[810,809,833],[810,833,834],[811,810,834],[811,834,835],[812,811,835],[812,835,836],[813,812,836],[813,836,837],[814,813,837],[814,837,838],[815,814,838],[815,838,839],[816,815,839],[816,839,840],[817,816,840],[817,840,841],[818,817,841],[818,841,842],[819,818,842],[819,842,843],[820,819,843],[820,843,608],[607,820,608],[821,19,20],[821,20,844],[822,821,844],[822,844,845],[823,822,845],[823,845,846],[824,823,846],[824,846,847],[825,824,847],[825,847,848],[826,825,848],[826,848,849],[827,826,849],[827,849,850],[828,827,850],[828,850,851],[829,828,851],[829,851,852],[830,829,852],[830,852,853],[831,830,853],[831,853,854],[832,831,854],[832,854,855],[833,832,855],[833,855,856],[834,833,856],[834,856,857],[835,834,857],[835,857,858],[836,835,858],[836,858,859],[837,836,859],[837,859,860],[838,837,860],[838,860,861],[839,838,861],[839,861,862],[840,839,862],[840,862,863],[841,840,863],[841,863,864],[842,841,864],[842,864,865],[843,842,865],[843,865,609],[608,843,609],[844,20,21],[844,21,866],[845,844,866],[845,866,867],[846,845,867],[846,867,868],[847,846,868],[847,868,869],[848,847,869],[848,869,870],[849,848,870],[849,870,871],[850,849,871],[850,871,872],[851,850,872],[851,872,873],[852,851,873],[852,873,874],[853,852,874],[853,874,875],[854,853,875],[854,875,876],[855,854,876],[855,876,877],[856,855,877],[856,877,878],[857,856,878],[857,878,879],[858,857,879],[858,879,880],[859,858,880],[859,880,881],[860,859,881],[860,881,882],[861,860,882],[861,882,883],[862,861,883],[862,883,884],[863,862,884],[863,884,885],[864,863,885],[864,885,886],[865,864,886],[865,886,610],[609,865,610],[866,21,22],[866,22,887],[867,866,887],[867,887,888],[868,867,888],[868,888,889],[869,868,889],[869,889,890],[870,869,890],[870,890,891],[871,870,891],[871,891,892],[872,871,892],[872,892,893],[873,872,893],[873,893,894],[874,873,894],[874,894,895],[875,874,895],[875,895,896],[876,875,896],[876,896,897],[877,876,897],[877,897,898],[878,877,898],[878,898,899],[879,878,899],[879,899,900],[880,879,900],[880,900,901],[881,880,901],[881,901,902],[882,881,902],[882,902,903],[883,882,903],[883,903,904],[884,883,904],[884,904,905],[885,884,905],[885,905,906],[886,885,906],[886,906,611],[610,886,611],[887,22,23],[887,23,907],[888,887,907],[888,907,908],[889,888,908],[889,908,909],[890,889,909],[890,909,910],[891,890,910],[891,910,911],[892,891,911],[892,911,912],[893,892,912],[893,912,913],[894,893,913],[894,913,914],[895,894,914],[895,914,915],[896,895,915],[896,915,916],[897,896,916],[897,916,917],[898,897,917],[898,917,918],[899,898,918],[899,918,919],[900,899,919],[900,919,920],[901,900,920],[901,920,921],[902,901,921],[902,921,922],[903,902,922],[903,922,923],[904,903,923],[904,923,924],[905,904,924],[905,924,925],[906,905,925],[906,925,612],[611,906,612],[907,23,24],[907,24,926],[908,907,926],[908,926,927],[909,908,927],[909,927,928],[910,909,928],[910,928,929],[911,910,929],[911,929,930],[912,911,930],[912,930,931],[913,912,931],[913,931,932],[914,913,932],[914,932,933],[915,914,933],[915,933,934],[916,915,934],[916,934,935],[917,916,935],[917,935,936],[918,917,936],[918,936,937],[919,918,937],[919,937,938],[920,919,938],[920,938,939],[921,920,939],[921,939,940],[922,921,940],[922,940,941],[923,922,941],[923,941,942],[924,923,942],[924,942,943],[925,924,943],[925,943,613],[612,925,613],[926,24,25],[926,25,944],[927,926,944],[927,944,945],[928,927,945],[928,945,946],[929,928,946],[929,946,947],[930,929,947],[930,947,948],[931,930,948],[931,948,949],[932,931,949],[932,949,950],[933,932,950],[933,950,951],[934,933,951],[934,951,952],[935,934,952],[935,952,953],[936,935,953],[936,953,954],[937,936,954],[937,954,955],[938,937,955],[938,955,956],[939,938,956],[939,956,957],[940,939,957],[940,957,958],[941,940,958],[941,958,959],[942,941,959],[942,959,960],[943,942,960],[943,960,614],[613,943,614],[944,25,26],[944,26,961],[945,944,961],[945,961,962],[946,945,962],[946,962,963],[947,946,963],[947,963,964],[948,947,964],[948,964,965],[949,948,965],[949,965,966],[950,949,966],[950,966,967],[951,950,967],[951,967,968],[952,951,968],[952,968,969],[953,952,969],[953,969,970],[954,953,970],[954,970,971],[955,954,971],[955,971,972],[956,955,972],[956,972,973],[957,956,973],[957,973,974],[958,957,974],[958,974,975],[959,958,975],[959,975,976],[960,959,976],[960,976,615],[614,960,615],[961,26,27],[961,27,977],[962,961,977],[962,977,978],[963,962,978],[963,978,979],[964,963,979],[964,979,980],[965,964,980],[965,980,981],[966,965,981],[966,981,982],[967,966,982],[967,982,983],[968,967,983],[968,983,984],[969,968,984],[969,984,985],[970,969,985],[970,985,986],[971,970,986],[971,986,987],[972,971,987],[972,987,988],[973,972,988],[973,988,989],[974,973,989],[974,989,990],[975,974,990],[975,990,991],[976,975,991],[976,991,616],[615,976,616],[977,27,28],[977,28,992],[978,977,992],[978,992,993],[979,978,993],[979,993,994],[980,979,994],[980,994,995],[981,980,995],[981,995,996],[982,981,996],[982,996,997],[983,982,997],[983,997,998],[984,983,998],[984,998,999],[985,984,999],[985,999,1000],[986,985,1000],[986,1000,1001],[987,986,1001],[987,1001,1002],[988,987,1002],[988,1002,1003],[989,988,1003],[989,1003,1004],[990,989,1004],[990,1004,1005],[991,990,1005],[991,1005,617],[616,991,617],[992,28,29],[992,29,1006],[993,992,1006],[993,1006,1007],[994,993,1007],[994,1007,1008],[995,994,1008],[995,1008,1009],[996,995,1009],[996,1009,1010],[997,996,1010],[997,1010,1011],[998,997,1011],[998,1011,1012],[999,998,1012],[999,1012,1013],[1000,999,1013],[1000,1013,1014],[1001,1000,1014],[1001,1014,1015],[1002,1001,1015],[1002,1015,1016],[1003,1002,1016],[1003,1016,1017],[1004,1003,1017],[1004,1017,1018],[1005,1004,1018],[1005,1018,618],[617,1005,618],[1006,29,30],[1006,30,1019],[1007,1006,1019],[1007,1019,1020],[1008,1007,1020],[1008,1020,1021],[1009,1008,1021],[1009,1021,1022],[1010,1009,1022],[1010,1022,1023],[1011,1010,1023],[1011,1023,1024],[1012,1011,1024],[1012,1024,1025],[1013,1012,1025],[1013,1025,1026],[1014,1013,1026],[1014,1026,1027],[1015,1014,1027],[1015,1027,1028],[1016,1015,1028],[1016,1028,1029],[1017,1016,1029],[1017,1029,1030],[1018,1017,1030],[1018,1030,619],[618,1018,619],[1019,30,31],[1019,31,1031],[1020,1019,1031],[1020,1031,1032],[1021,1020,1032],[1021,1032,1033],[1022,1021,1033],[1022,1033,1034],[1023,1022,1034],[1023,1034,1035],[1024,1023,1035],[1024,1035,1036],[1025,1024,1036],[1025,1036,1037],[1026,1025,1037],[1026,1037,1038],[1027,1026,1038],[1027,1038,1039],[1028,1027,1039],[1028,1039,1040],[1029,1028,1040],[1029,1040,1041],[1030,1029,1041],[1030,1041,620],[619,1030,620],[1031,31,32],[1031,32,1042],[1032,1031,1042],[1032,1042,1043],[1033,1032,1043],[1033,1043,1044],[1034,1033,1044],[1034,1044,1045],[1035,1034,1045],[1035,1045,1046],[1036,1035,1046],[1036,1046,1047],[1037,1036,1047],[1037,1047,1048],[1038,1037,1048],[1038,1048,1049],[1039,1038,1049],[1039,1049,1050],[1040,1039,1050],[1040,1050,1051],[1041,1040,1051],[1041,1051,621],[620,1041,621],[1042,32,33],[1042,33,1052],[1043,1042,1052],[1043,1052,1053],[1044,1043,1053],[1044,1053,1054],[1045,1044,1054],[1045,1054,1055],[1046,1045,1055],[1046,1055,1056],[1047,1046,1056],[1047,1056,1057],[1048,1047,1057],[1048,1057,1058],[1049,1048,1058],[1049,1058,1059],[1050,1049,1059],[1050,1059,1060],[1051,1050,1060],[1051,1060,622],[621,1051,622],[1052,33,34],[1052,34,1061],[1053,1052,1061],[1053,1061,1062],[1054,1053,1062],[1054,1062,1063],[1055,1054,1063],[1055,1063,1064],[1056,1055,1064],[1056,1064,1065],[1057,1056,1065],[1057,1065,1066],[1058,1057,1066],[1058,1066,1067],[1059,1058,1067],[1059,1067,1068],[1060,1059,1068],[1060,1068,623],[622,1060,623],[1061,34,35],[1061,35,1069],[1062,1061,1069],[1062,1069,1070],[1063,1062,1070],[1063,1070,1071],[1064,1063,1071],[1064,1071,1072],[1065,1064,1072],[1065,1072,1073],[1066,1065,1073],[1066,1073,1074],[1067,1066,1074],[1067,1074,1075],[1068,1067,1075],[1068,1075,624],[623,1068,624],[1069,35,36],[1069,36,1076],[1070,1069,1076],[1070,1076,1077],[1071,1070,1077],[1071,1077,1078],[1072,1071,1078],[1072,1078,1079],[1073,1072,1079],[1073,1079,1080],[1074,1073,1080],[1074,1080,1081],[1075,1074,1081],[1075,1081,625],[624,1075,625],[1076,36,37],[1076,37,1082],[1077,1076,1082],[1077,1082,1083],[1078,1077,1083],[1078,1083,1084],[1079,1078,1084],[1079,1084,1085],[1080,1079,1085],[1080,1085,1086],[1081,1080,1086],[1081,1086,626],[625,1081,626],[1082,37,38],[1082,38,1087],[1083,1082,1087],[1083,1087,1088],[1084,1083,1088],[1084,1088,1089],[1085,1084,1089],[1085,1089,1090],[1086,1085,1090],[1086,1090,627],[626,1086,627],[1087,38,39],[1087,39,1091],[1088,1087,1091],[1088,1091,1092],[1089,1088,1092],[1089,1092,1093],[1090,1089,1093],[1090,1093,628],[627,1090,628],[1091,39,40],[1091,40,1094],[1092,1091,1094],[1092,1094,1095],[1093,1092,1095],[1093,1095,629],[628,1093,629],[1094,40,41],[1094,41,1096],[1095,1094,1096],[1095,1096,630],[629,1095,630],[1096,41,42],[1096,42,631],[630,1096,631],[631,42,7],[1097,0,570],[1097,570,1159],[1098,1097,1159],[1098,1159,1160],[1099,1098,1160],[1099,1160,1161],[1100,1099,1161],[1100,1161,1162],[1101,1100,1162],[1101,1162,1163],[1102,1101,1163],[1102,1163,1164],[1103,1102,1164],[1103,1164,1165],[1104,1103,1165],[1104,1165,1166],[1105,1104,1166],[1105,1166,1167],[1106,1105,1167],[1106,1167,1168],[1107,1106,1168],[1107,1168,1169],[1108,1107,1169],[1108,1169,1170],[1109,1108,1170],[1109,1170,1171],[1110,1109,1171],[1110,1171,1172],[1111,1110,1172],[1111,1172,1173],[1112,1111,1173],[1112,1173,1174],[1113,1112,1174],[1113,1174,1175],[1114,1113,1175],[1114,1175,1176],[1115,1114,1176],[1115,1176,1177],[1116,1115,1177],[1116,1177,1178],[1117,1116,1178],[1117,1178,1179],[1118,1117,1179],[1118,1179,1180],[1119,1118,1180],[1119,1180,1181],[1120,1119,1181],[1120,1181,1182],[1121,1120,1182],[1121,1182,1183],[1122,1121,1183],[1122,1183,1184],[1123,1122,1184],[1123,1184,1185],[1124,1123,1185],[1124,1185,1186],[1125,1124,1186],[1125,1186,1187],[1126,1125,1187],[1126,1187,1188],[1127,1126,1188],[1127,1188,1128],[1,1127,1128],[1159,570,571],[1159,571,1189],[1160,1159,1189],[1160,1189,1190],[1161,1160,1190],[1161,1190,1191],[1162,1161,1191],[1162,1191,1192],[1163,1162,1192],[1163,1192,1193],[1164,1163,1193],[1164,1193,1194],[1165,1164,1194],[1165,1194,1195],[1166,1165,1195],[1166,1195,1196],[1167,1166,1196],[1167,1196,1197],[1168,1167,1197],[1168,1197,1198],[1169,1168,1198],[1169,1198,1199],[1170,1169,1199],[1170,1199,1200],[1171,1170,1200],[1171,1200,1201],[1172,1171,1201],[1172,1201,1202],[1173,1172,1202],[1173,1202,1203],[1174,1173,1203],[1174,1203,1204],[1175,1174,1204],[1175,1204,1205],[1176,1175,1205],[1176,1205,1206],[1177,1176,1206],[1177,1206,1207],[1178,1177,1207],[1178,1207,1208],[1179,1178,1208],[1179,1208,1209],[1180,1179,1209],[1180,1209,1210],[1181,1180,1210],[1181,1210,1211],[1182,1181,1211],[1182,1211,1212],[1183,1182,1212],[1183,1212,1213],[1184,1183,1213],[1184,1213,1214],[1185,1184,1214],[1185,1214,1215],[1186,1185,1215],[1186,1215,1216],[1187,1186,1216],[1187,1216,1217],[1188,1187,1217],[1188,1217,1129],[1128,1188,1129],[1189,571,572],[1189,572,1218],[1190,1189,1218],[1190,1218,1219],[1191,1190,1219],[1191,1219,1220],[1192,1191,1220],[1192,1220,1221],[1193,1192,1221],[1193,1221,1222],[1194,1193,1222],[1194,1222,1223],[1195,1194,1223],[1195,1223,1224],[1196,1195,1224],[1196,1224,1225],[1197,1196,1225],[1197,1225,1226],[1198,1197,1226],[1198,1226,1227],[1199,1198,1227],[1199,1227,1228],[1200,1199,1228],[1200,1228,1229],[1201,1200,1229],[1201,1229,1230],[1202,1201,1230],[1202,1230,1231],[1203,1202,1231],[1203,1231,1232],[1204,1203,1232],[1204,1232,1233],[1205,1204,1233],[1205,1233,1234],[1206,1205,1234],[1206,1234,1235],[1207,1206,1235],[1207,1235,1236],[1208,1207,1236],[1208,1236,1237],[1209,1208,1237],[1209,1237,1238],[1210,1209,1238],[1210,1238,1239],[1211,1210,1239],[1211,1239,1240],[1212,1211,1240],[1212,1240,1241],[1213,1212,1241],[1213,1241,1242],[1214,1213,1242],[1214,1242,1243],[1215,1214,1243],[1215,1243,1244],[1216,1215,1244],[1216,1244,1245],[1217,1216,1245],[1217,1245,1130],[1129,1217,1130],[1218,572,573],[1218,573,1246],[1219,1218,1246],[1219,1246,1247],[1220,1219,1247],[1220,1247,1248],[1221,1220,1248],[1221,1248,1249],[1222,1221,1249],[1222,1249,1250],[1223,1222,1250],[1223,1250,1251],[1224,1223,1251],[1224,1251,1252],[1225,1224,1252],[1225,1252,1253],[1226,1225,1253],[1226,1253,1254],[1227,1226,1254],[1227,1254,1255],[1228,1227,1255],[1228,1255,1256],[1229,1228,1256],[1229,1256,1257],[1230,1229,1257],[1230,1257,1258],[1231,1230,1258],[1231,1258,1259],[1232,1231,1259],[1232,1259,1260],[1233,1232,1260],[1233,1260,1261],[1234,1233,1261],[1234,1261,1262],[1235,1234,1262],[1235,1262,1263],[1236,1235,1263],[1236,1263,1264],[1237,1236,1264],[1237,1264,1265],[1238,1237,1265],[1238,1265,1266],[1239,1238,1266],[1239,1266,1267],[1240,1239,1267],[1240,1267,1268],[1241,1240,1268],[1241,1268,1269],[1242,1241,1269],[1242,1269,1270],[1243,1242,1270],[1243,1270,1271],[1244,1243,1271],[1244,1271,1272],[1245,1244,1272],[1245,1272,1131],[1130,1245,1131],[1246,573,574],[1246,574,1273],[1247,1246,1273],[1247,1273,1274],[1248,1247,1274],[1248,1274,1275],[1249,1248,1275],[1249,1275,1276],[1250,1249,1276],[1250,1276,1277],[1251,1250,1277],[1251,1277,1278],[1252,1251,1278],[1252,1278,1279],[1253,1252,1279],[1253,1279,1280],[1254,1253,1280],[1254,1280,1281],[1255,1254,1281],[1255,1281,1282],[1256,1255,1282],[1256,1282,1283],[1257,1256,1283],[1257,1283,1284],[1258,1257,1284],[1258,1284,1285],[1259,1258,1285],[1259,1285,1286],[1260,1259,1286],[1260,1286,1287],[1261,1260,1287],[1261,1287,1288],[1262,1261,1288],[1262,1288,1289],[1263,1262,1289],[1263,1289,1290],[1264,1263,1290],[1264,1290,1291],[1265,1264,1291],[1265,1291,1292],[1266,1265,1292],[1266,1292,1293],[1267,1266,1293],[1267,1293,1294],[1268,1267,1294],[1268,1294,1295],[1269,1268,1295],[1269,1295,1296],[1270,1269,1296],[1270,1296,1297],[1271,1270,1297],[1271,1297,1298],[1272,1271,1298],[1272,1298,1132],[1131,1272,1132],[1273,574,575],[1273,575,1299],[1274,1273,1299],[1274,1299,1300],[1275,1274,1300],[1275,1300,1301],[1276,1275,1301],[1276,1301,1302],[1277,1276,1302],[1277,1302,1303],[1278,1277,1303],[1278,1303,1304],[1279,1278,1304],[1279,1304,1305],[1280,1279,1305],[1280,1305,1306],[1281,1280,1306],[1281,1306,1307],[1282,1281,1307],[1282,1307,1308],[1283,1282,1308],[1283,1308,1309],[1284,1283,1309],[1284,1309,1310],[1285,1284,1310],[1285,1310,1311],[1286,1285,1311],[1286,1311,1312],[1287,1286,1312],[1287,1312,1313],[1288,1287,1313],[1288,1313,1314],[1289,1288,1314],[1289,1314,1315],[1290,1289,1315],[1290,1315,1316],[1291,1290,1316],[1291,1316,1317],[1292,1291,1317],[1292,1317,1318],[1293,1292,1318],[1293,1318,1319],[1294,1293,1319],[1294,1319,1320],[1295,1294,1320],[1295,1320,1321],[1296,1295,1321],[1296,1321,1322],[1297,1296,1322],[1297,1322,1323],[1298,1297,1323],[1298,1323,1133],[1132,1298,1133],[1299,575,576],[1299,576,1324],[1300,1299,1324],[1300,1324,1325],[1301,1300,1325],[1301,1325,1326],[1302,1301,1326],[1302,1326,1327],[1303,1302,1327],[1303,1327,1328],[1304,1303,1328],[1304,1328,1329],[1305,1304,1329],[1305,1329,1330],[1306,1305,1330],[1306,1330,1331],[1307,1306,1331],[1307,1331,1332],[1308,1307,1332],[1308,1332,1333],[1309,1308,1333],[1309,1333,1334],[1310,1309,1334],[1310,1334,1335],[1311,1310,1335],[1311,1335,1336],[1312,1311,1336],[1312,1336,1337],[1313,1312,1337],[1313,1337,1338],[1314,1313,1338],[1314,1338,1339],[1315,1314,1339],[1315,1339,1340],[1316,1315,1340],[1316,1340,1341],[1317,1316,1341],[1317,1341,1342],[1318,1317,1342],[1318,1342,1343],[1319,1318,1343],[1319,1343,1344],[1320,1319,1344],[1320,1344,1345],[1321,1320,1345],[1321,1345,1346],[1322,1321,1346],[1322,1346,1347],[1323,1322,1347],[1323,1347,1134],[1133,1323,1134],[1324,576,577],[1324,577,1348],[1325,1324,1348],[1325,1348,1349],[1326,1325,1349],[1326,1349,1350],[1327,1326,1350],[1327,1350,1351],[1328,1327,1351],[1328,1351,1352],[1329,1328,1352],[1329,1352,1353],[1330,1329,1353],[1330,1353,1354],[1331,1330,1354],[1331,1354,1355],[1332,1331,1355],[1332,1355,1356],[1333,1332,1356],[1333,1356,1357],[1334,1333,1357],[1334,1357,1358],[1335,1334,1358],[1335,1358,1359],[1336,1335,1359],[1336,1359,1360],[1337,1336,1360],[1337,1360,1361],[1338,1337,1361],[1338,1361,1362],[1339,1338,1362],[1339,1362,1363],[1340,1339,1363],[1340,1363,1364],[1341,1340,1364],[1341,1364,1365],[1342,1341,1365],[1342,1365,1366],[1343,1342,1366],[1343,1366,1367],[1344,1343,1367],[1344,1367,1368],[1345,1344,1368],[1345,1368,1369],[1346,1345,1369],[1346,1369,1370],[1347,1346,1370],[1347,1370,1135],[1134,1347,1135],[1348,577,578],[1348,578,1371],[1349,1348,1371],[1349,1371,1372],[1350,1349,1372],[1350,1372,1373],[1351,1350,1373],[1351,1373,1374],[1352,1351,1374],[1352,1374,1375],[1353,1352,1375],[1353,1375,1376],[1354,1353,1376],[1354,1376,1377],[1355,1354,1377],[1355,1377,1378],[1356,1355,1378],[1356,1378,1379],[1357,1356,1379],[1357,1379,1380],[1358,1357,1380],[1358,1380,1381],[1359,1358,1381],[1359,1381,1382],[1360,1359,1382],[1360,1382,1383],[1361,1360,1383],[1361,1383,1384],[1362,1361,1384],[1362,1384,1385],[1363,1362,1385],[1363,1385,1386],[1364,1363,1386],[1364,1386,1387],[1365,1364,1387],[1365,1387,1388],[1366,1365,1388],[1366,1388,1389],[1367,1366,1389],[1367,1389,1390],[1368,1367,1390],[1368,1390,1391],[1369,1368,1391],[1369,1391,1392],[1370,1369,1392],[1370,1392,1136],[1135,1370,1136],[1371,578,579],[1371,579,1393],[1372,1371,1393],[1372,1393,1394],[1373,1372,1394],[1373,1394,1395],[1374,1373,1395],[1374,1395,1396],[1375,1374,1396],[1375,1396,1397],[1376,1375,1397],[1376,1397,1398],[1377,1376,1398],[1377,1398,1399],[1378,1377,1399],[1378,1399,1400],[1379,1378,1400],[1379,1400,1401],[1380,1379,1401],[1380,1401,1402],[1381,1380,1402],[1381,1402,1403],[1382,1381,1403],[1382,1403,1404],[1383,1382,1404],[1383,1404,1405],[1384,1383,1405],[1384,1405,1406],[1385,1384,1406],[1385,1406,1407],[1386,1385,1407],[1386,1407,1408],[1387,1386,1408],[1387,1408,1409],[1388,1387,1409],[1388,1409,1410],[1389,1388,1410],[1389,1410,1411],[1390,1389,1411],[1390,1411,1412],[1391,1390,1412],[1391,1412,1413],[1392,1391,1413],[1392,1413,1137],[1136,1392,1137],[1393,579,580],[1393,580,1414],[1394,1393,1414],[1394,1414,1415],[1395,1394,1415],[1395,1415,1416],[1396,1395,1416],[1396,1416,1417],[1397,1396,1417],[1397,1417,1418],[1398,1397,1418],[1398,1418,1419],[1399,1398,1419],[1399,1419,1420],[1400,1399,1420],[1400,1420,1421],[1401,1400,1421],[1401,1421,1422],[1402,1401,1422],[1402,1422,1423],[1403,1402,1423],[1403,1423,1424],[1404,1403,1424],[1404,1424,1425],[1405,1404,1425],[1405,1425,1426],[1406,1405,1426],[1406,1426,1427],[1407,1406,1427],[1407,1427,1428],[1408,1407,1428],[1408,1428,1429],[1409,1408,1429],[1409,1429,1430],[1410,1409,1430],[1410,1430,1431],[1411,1410,1431],[1411,1431,1432],[1412,1411,1432],[1412,1432,1433],[1413,1412,1433],[1413,1433,1138],[1137,1413,1138],[1414,580,581],[1414,581,1434],[1415,1414,1434],[1415,1434,1435],[1416,1415,1435],[1416,1435,1436],[1417,1416,1436],[1417,1436,1437],[1418,1417,1437],[1418,1437,1438],[1419,1418,1438],[1419,1438,1439],[1420,1419,1439],[1420,1439,1440],[1421,1420,1440],[1421,1440,1441],[1422,1421,1441],[1422,1441,1442],[1423,1422,1442],[1423,1442,1443],[1424,1423,1443],[1424,1443,1444],[1425,1424,1444],[1425,1444,1445],[1426,1425,1445],[1426,1445,1446],[1427,1426,1446],[1427,1446,1447],[1428,1427,1447],[1428,1447,1448],[1429,1428,1448],[1429,1448,1449],[1430,1429,1449],[1430,1449,1450],[1431,1430,1450],[1431,1450,1451],[1432,1431,1451],[1432,1451,1452],[1433,1432,1452],[1433,1452,1139],[1138,1433,1139],[1434,581,582],[1434,582,1453],[1435,1434,1453],[1435,1453,1454],[1436,1435,1454],[1436,1454,1455],[1437,1436,1455],[1437,1455,1456],[1438,1437,1456],[1438,1456,1457],[1439,1438,1457],[1439,1457,1458],[1440,1439,1458],[1440,1458,1459],[1441,1440,1459],[1441,1459,1460],[1442,1441,1460],[1442,1460,1461],[1443,1442,1461],[1443,1461,1462],[1444,1443,1462],[1444,1462,1463],[1445,1444,1463],[1445,1463,1464],[1446,1445,1464],[1446,1464,1465],[1447,1446,1465],[1447,1465,1466],[1448,1447,1466],[1448,1466,1467],[1449,1448,1467],[1449,1467,1468],[1450,1449,1468],[1450,1468,1469],[1451,1450,1469],[1451,1469,1470],[1452,1451,1470],[1452,1470,1140],[1139,1452,1140],[1453,582,583],[1453,583,1471],[1454,1453,1471],[1454,1471,1472],[1455,1454,1472],[1455,1472,1473],[1456,1455,1473],[1456,1473,1474],[1457,1456,1474],[1457,1474,1475],[1458,1457,1475],[1458,1475,1476],[1459,1458,1476],[1459,1476,1477],[1460,1459,1477],[1460,1477,1478],[1461,1460,1478],[1461,1478,1479],[1462,1461,1479],[1462,1479,1480],[1463,1462,1480],[1463,1480,1481],[1464,1463,1481],[1464,1481,1482],[1465,1464,1482],[1465,1482,1483],[1466,1465,1483],[1466,1483,1484],[1467,1466,1484],[1467,1484,1485],[1468,1467,1485],[1468,1485,1486],[1469,1468,1486],[1469,1486,1487],[1470,1469,1487],[1470,1487,1141],[1140,1470,1141],[1471,583,584],[1471,584,1488],[1472,1471,1488],[1472,1488,1489],[1473,1472,1489],[1473,1489,1490],[1474,1473,1490],[1474,1490,1491],[1475,1474,1491],[1475,1491,1492],[1476,1475,1492],[1476,1492,1493],[1477,1476,1493],[1477,1493,1494],[1478,1477,1494],[1478,1494,1495],[1479,1478,1495],[1479,1495,1496],[1480,1479,1496],[1480,1496,1497],[1481,1480,1497],[1481,1497,1498],[1482,1481,1498],[1482,1498,1499],[1483,1482,1499],[1483,1499,1500],[1484,1483,1500],[1484,1500,1501],[1485,1484,1501],[1485,1501,1502],[1486,1485,1502],[1486,1502,1503],[1487,1486,1503],[1487,1503,1142],[1141,1487,1142],[1488,584,585],[1488,585,1504],[1489,1488,1504],[1489,1504,1505],[1490,1489,1505],[1490,1505,1506],[1491,1490,1506],[1491,1506,1507],[1492,1491,1507],[1492,1507,1508],[1493,1492,1508],[1493,1508,1509],[1494,1493,1509],[1494,1509,1510],[1495,1494,1510],[1495,1510,1511],[1496,1495,1511],[1496,1511,1512],[1497,1496,1512],[1497,1512,1513],[1498,1497,1513],[1498,1513,1514],[1499,1498,1514],[1499,1514,1515],[1500,1499,1515],[1500,1515,1516],[1501,1500,1516],[1501,1516,1517],[1502,1501,1517],[1502,1517,1518],[1503,1502,1518],[1503,1518,1143],[1142,1503,1143],[1504,585,586],[1504,586,1519],[1505,1504,1519],[1505,1519,1520],[1506,1505,1520],[1506,1520,1521],[1507,1506,1521],[1507,1521,1522],[1508,1507,1522],[1508,1522,1523],[1509,1508,1523],[1509,1523,1524],[1510,1509,1524],[1510,1524,1525],[1511,1510,1525],[1511,1525,1526],[1512,1511,1526],[1512,1526,1527],[1513,1512,1527],[1513,1527,1528],[1514,1513,1528],[1514,1528,1529],[1515,1514,1529],[1515,1529,1530],[1516,1515,1530],[1516,1530,1531],[1517,1516,1531],[1517,1531,1532],[1518,1517,1532],[1518,1532,1144],[1143,1518,1144],[1519,586,587],[1519,587,1533],[1520,1519,1533],[1520,1533,1534],[1521,1520,1534],[1521,1534,1535],[1522,1521,1535],[1522,1535,1536],[1523,1522,1536],[1523,1536,1537],[1524,1523,1537],[1524,1537,1538],[1525,1524,1538],[1525,1538,1539],[1526,1525,1539],[1526,1539,1540],[1527,1526,1540],[1527,1540,1541],[1528,1527,1541],[1528,1541,1542],[1529,1528,1542],[1529,1542,1543],[1530,1529,1543],[1530,1543,1544],[1531,1530,1544],[1531,1544,1545],[1532,1531,1545],[1532,1545,1145],[1144,1532,1145],[1533,587,588],[1533,588,1546],[1534,1533,1546],[1534,1546,1547],[1535,1534,1547],[1535,1547,1548],[1536,1535,1548],[1536,1548,1549],[1537,1536,1549],[1537,1549,1550],[1538,1537,1550],[1538,1550,1551],[1539,1538,1551],[1539,1551,1552],[1540,1539,1552],[1540,1552,1553],[1541,1540,1553],[1541,1553,1554],[1542,1541,1554],[1542,1554,1555],[1543,1542,1555],[1543,1555,1556],[1544,1543,1556],[1544,1556,1557],[1545,1544,1557],[1545,1557,1146],[1145,1545,1146],[1546,588,589],[1546,589,1558],[1547,1546,1558],[1547,1558,1559],[1548,1547,1559],[1548,1559,1560],[1549,1548,1560],[1549,1560,1561],[1550,1549,1561],[1550,1561,1562],[1551,1550,1562],[1551,1562,1563],[1552,1551,1563],[1552,1563,1564],[1553,1552,1564],[1553,1564,1565],[1554,1553,1565],[1554,1565,1566],[1555,1554,1566],[1555,1566,1567],[1556,1555,1567],[1556,1567,1568],[1557,1556,1568],[1557,1568,1147],[1146,1557,1147],[1558,589,590],[1558,590,1569],[1559,1558,1569],[1559,1569,1570],[1560,1559,1570],[1560,1570,1571],[1561,1560,1571],[1561,1571,1572],[1562,1561,1572],[1562,1572,1573],[1563,1562,1573],[1563,1573,1574],[1564,1563,1574],[1564,1574,1575],[1565,1564,1575],[1565,1575,1576],[1566,1565,1576],[1566,1576,1577],[1567,1566,1577],[1567,1577,1578],[1568,1567,1578],[1568,1578,1148],[1147,1568,1148],[1569,590,591],[1569,591,1579],[1570,1569,1579],[1570,1579,1580],[1571,1570,1580],[1571,1580,1581],[1572,1571,1581],[1572,1581,1582],[1573,1572,1582],[1573,1582,1583],[1574,1573,1583],[1574,1583,1584],[1575,1574,1584],[1575,1584,1585],[1576,1575,1585],[1576,1585,1586],[1577,1576,1586],[1577,1586,1587],[1578,1577,1587],[1578,1587,1149],[1148,1578,1149],[1579,591,592],[1579,592,1588],[1580,1579,1588],[1580,1588,1589],[1581,1580,1589],[1581,1589,1590],[1582,1581,1590],[1582,1590,1591],[1583,1582,1591],[1583,1591,1592],[1584,1583,1592],[1584,1592,1593],[1585,1584,1593],[1585,1593,1594],[1586,1585,1594],[1586,1594,1595],[1587,1586,1595],[1587,1595,1150],[1149,1587,1150],[1588,592,593],[1588,593,1596],[1589,1588,1596],[1589,1596,1597],[1590,1589,1597],[1590,1597,1598],[1591,1590,1598],[1591,1598,1599],[1592,1591,1599],[1592,1599,1600],[1593,1592,1600],[1593,1600,1601],[1594,1593,1601],[1594,1601,1602],[1595,1594,1602],[1595,1602,1151],[1150,1595,1151],[1596,593,594],[1596,594,1603],[1597,1596,1603],[1597,1603,1604],[1598,1597,1604],[1598,1604,1605],[1599,1598,1605],[1599,1605,1606],[1600,1599,1606],[1600,1606,1607],[1601,1600,1607],[1601,1607,1608],[1602,1601,1608],[1602,1608,1152],[1151,1602,1152],[1603,594,595],[1603,595,1609],[1604,1603,1609],[1604,1609,1610],[1605,1604,1610],[1605,1610,1611],[1606,1605,1611],[1606,1611,1612],[1607,1606,1612],[1607,1612,1613],[1608,1607,1613],[1608,1613,1153],[1152,1608,1153],[1609,595,596],[1609,596,1614],[1610,1609,1614],[1610,1614,1615],[1611,1610,1615],[1611,1615,1616],[1612,1611,1616],[1612,1616,1617],[1613,1612,1617],[1613,1617,1154],[1153,1613,1154],[1614,596,597],[1614,597,1618],[1615,1614,1618],[1615,1618,1619],[1616,1615,1619],[1616,1619,1620],[1617,1616,1620],[1617,1620,1155],[1154,1617,1155],[1618,597,598],[1618,598,1621],[1619,1618,1621],[1619,1621,1622],[1620,1619,1622],[1620,1622,1156],[1155,1620,1156],[1621,598,599],[1621,599,1623],[1622,1621,1623],[1622,1623,1157],[1156,1622,1157],[1623,599,600],[1623,600,1158],[1157,1623,1158],[1158,600,3],[1624,1,1128],[1624,1128,1686],[1625,1624,1686],[1625,1686,1687],[1626,1625,1687],[1626,1687,1688],[1627,1626,1688],[1627,1688,1689],[1628,1627,1689],[1628,1689,1690],[1629,1628,1690],[1629,1690,1691],[1630,1629,1691],[1630,1691,1692],[1631,1630,1692],[1631,1692,1693],[1632,1631,1693],[1632,1693,1694],[1633,1632,1694],[1633,1694,1695],[1634,1633,1695],[1634,1695,1696],[1635,1634,1696],[1635,1696,1697],[1636,1635,1697],[1636,1697,1698],[1637,1636,1698],[1637,1698,1699],[1638,1637,1699],[1638,1699,1700],[1639,1638,1700],[1639,1700,1701],[1640,1639,1701],[1640,1701,1702],[1641,1640,1702],[1641,1702,1703],[1642,1641,1703],[1642,1703,1704],[1643,1642,1704],[1643,1704,1705],[1644,1643,1705],[1644,1705,1706],[1645,1644,1706],[1645,1706,1707],[1646,1645,1707],[1646,1707,1708],[1647,1646,1708],[1647,1708,1709],[1648,1647,1709],[1648,1709,1710],[1649,1648,1710],[1649,1710,1711],[1650,1649,1711],[1650,1711,1712],[1651,1650,1712],[1651,1712,1713],[1652,1651,1713],[1652,1713,1714],[1653,1652,1714],[1653,1714,1715],[1654,1653,1715],[1654,1715,1655],[2,1654,1655],[1686,1128,1129],[1686,1129,1716],[1687,1686,1716],[1687,1716,1717],[1688,1687,1717],[1688,1717,1718],[1689,1688,1718],[1689,1718,1719],[1690,1689,1719],[1690,1719,1720],[1691,1690,1720],[1691,1720,1721],[1692,1691,1721],[1692,1721,1722],[1693,1692,1722],[1693,1722,1723],[1694,1693,1723],[1694,1723,1724],[1695,1694,1724],[1695,1724,1725],[1696,1695,1725],[1696,1725,1726],[1697,1696,1726],[1697,1726,1727],[1698,1697,1727],[1698,1727,1728],[1699,1698,1728],[1699,1728,1729],[1700,1699,1729],[1700,1729,1730],[1701,1700,1730],[1701,1730,1731],[1702,1701,1731],[1702,1731,1732],[1703,1702,1732],[1703,1732,1733],[1704,1703,1733],[1704,1733,1734],[1705,1704,1734],[1705,1734,1735],[1706,1705,1735],[1706,1735,1736],[1707,1706,1736],[1707,1736,1737],[1708,1707,1737],[1708,1737,1738],[1709,1708,1738],[1709,1738,1739],[1710,1709,1739],[1710,1739,1740],[1711,1710,1740],[1711,1740,1741],[1712,1711,1741],[1712,1741,1742],[1713,1712,1742],[1713,1742,1743],[1714,1713,1743],[1714,1743,1744],[1715,1714,1744],[1715,1744,1656],[1655,1715,1656],[1716,1129,1130],[1716,1130,1745],[1717,1716,1745],[1717,1745,1746],[1718,1717,1746],[1718,1746,1747],[1719,1718,1747],[1719,1747,1748],[1720,1719,1748],[1720,1748,1749],[1721,1720,1749],[1721,1749,1750],[1722,1721,1750],[1722,1750,1751],[1723,1722,1751],[1723,1751,1752],[1724,1723,1752],[1724,1752,1753],[1725,1724,1753],[1725,1753,1754],[1726,1725,1754],[1726,1754,1755],[1727,1726,1755],[1727,1755,1756],[1728,1727,1756],[1728,1756,1757],[1729,1728,1757],[1729,1757,1758],[1730,1729,1758],[1730,1758,1759],[1731,1730,1759],[1731,1759,1760],[1732,1731,1760],[1732,1760,1761],[1733,1732,1761],[1733,1761,1762],[1734,1733,1762],[1734,1762,1763],[1735,1734,1763],[1735,1763,1764],[1736,1735,1764],[1736,1764,1765],[1737,1736,1765],[1737,1765,1766],[1738,1737,1766],[1738,1766,1767],[1739,1738,1767],[1739,1767,1768],[1740,1739,1768],[1740,1768,1769],[1741,1740,1769],[1741,1769,1770],[1742,1741,1770],[1742,1770,1771],[1743,1742,1771],[1743,1771,1772],[1744,1743,1772],[1744,1772,1657],[1656,1744,1657],[1745,1130,1131],[1745,1131,1773],[1746,1745,1773],[1746,1773,1774],[1747,1746,1774],[1747,1774,1775],[1748,1747,1775],[1748,1775,1776],[1749,1748,1776],[1749,1776,1777],[1750,1749,1777],[1750,1777,1778],[1751,1750,1778],[1751,1778,1779],[1752,1751,1779],[1752,1779,1780],[1753,1752,1780],[1753,1780,1781],[1754,1753,1781],[1754,1781,1782],[1755,1754,1782],[1755,1782,1783],[1756,1755,1783],[1756,1783,1784],[1757,1756,1784],[1757,1784,1785],[1758,1757,1785],[1758,1785,1786],[1759,1758,1786],[1759,1786,1787],[1760,1759,1787],[1760,1787,1788],[1761,1760,1788],[1761,1788,1789],[1762,1761,1789],[1762,1789,1790],[1763,1762,1790],[1763,1790,1791],[1764,1763,1791],[1764,1791,1792],[1765,1764,1792],[1765,1792,1793],[1766,1765,1793],[1766,1793,1794],[1767,1766,1794],[1767,1794,1795],[1768,1767,1795],[1768,1795,1796],[1769,1768,1796],[1769,1796,1797],[1770,1769,1797],[1770,1797,1798],[1771,1770,1798],[1771,1798,1799],[1772,1771,1799],[1772,1799,1658],[1657,1772,1658],[1773,1131,1132],[1773,1132,1800],[1774,1773,1800],[1774,1800,1801],[1775,1774,1801],[1775,1801,1802],[1776,1775,1802],[1776,1802,1803],[1777,1776,1803],[1777,1803,1804],[1778,1777,1804],[1778,1804,1805],[1779,1778,1805],[1779,1805,1806],[1780,1779,1806],[1780,1806,1807],[1781,1780,1807],[1781,1807,1808],[1782,1781,1808],[1782,1808,1809],[1783,1782,1809],[1783,1809,1810],[1784,1783,1810],[1784,1810,1811],[1785,1784,1811],[1785,1811,1812],[1786,1785,1812],[1786,1812,1813],[1787,1786,1813],[1787,1813,1814],[1788,1787,1814],[1788,1814,1815],[1789,1788,1815],[1789,1815,1816],[1790,1789,1816],[1790,1816,1817],[1791,1790,1817],[1791,1817,1818],[1792,1791,1818],[1792,1818,1819],[1793,1792,1819],[1793,1819,1820],[1794,1793,1820],[1794,1820,1821],[1795,1794,1821],[1795,1821,1822],[1796,1795,1822],[1796,1822,1823],[1797,1796,1823],[1797,1823,1824],[1798,1797,1824],[1798,1824,1825],[1799,1798,1825],[1799,1825,1659],[1658,1799,1659],[1800,1132,1133],[1800,1133,1826],[1801,1800,1826],[1801,1826,1827],[1802,1801,1827],[1802,1827,1828],[1803,1802,1828],[1803,1828,1829],[1804,1803,1829],[1804,1829,1830],[1805,1804,1830],[1805,1830,1831],[1806,1805,1831],[1806,1831,1832],[1807,1806,1832],[1807,1832,1833],[1808,1807,1833],[1808,1833,1834],[1809,1808,1834],[1809,1834,1835],[1810,1809,1835],[1810,1835,1836],[1811,1810,1836],[1811,1836,1837],[1812,1811,1837],[1812,1837,1838],[1813,1812,1838],[1813,1838,1839],[1814,1813,1839],[1814,1839,1840],[1815,1814,1840],[1815,1840,1841],[1816,1815,1841],[1816,1841,1842],[1817,1816,1842],[1817,1842,1843],[1818,1817,1843],[1818,1843,1844],[1819,1818,1844],[1819,1844,1845],[1820,1819,1845],[1820,1845,1846],[1821,1820,1846],[1821,1846,1847],[1822,1821,1847],[1822,1847,1848],[1823,1822,1848],[1823,1848,1849],[1824,1823,1849],[1824,1849,1850],[1825,1824,1850],[1825,1850,1660],[1659,1825,1660],[1826,1133,1134],[1826,1134,1851],[1827,1826,1851],[1827,1851,1852],[1828,1827,1852],[1828,1852,1853],[1829,1828,1853],[1829,1853,1854],[1830,1829,1854],[1830,1854,1855],[1831,1830,1855],[1831,1855,1856],[1832,1831,1856],[1832,1856,1857],[1833,1832,1857],[1833,1857,1858],[1834,1833,1858],[1834,1858,1859],[1835,1834,1859],[1835,1859,1860],[1836,1835,1860],[1836,1860,1861],[1837,1836,1861],[1837,1861,1862],[1838,1837,1862],[1838,1862,1863],[1839,1838,1863],[1839,1863,1864],[1840,1839,1864],[1840,1864,1865],[1841,1840,1865],[1841,1865,1866],[1842,1841,1866],[1842,1866,1867],[1843,1842,1867],[1843,1867,1868],[1844,1843,1868],[1844,1868,1869],[1845,1844,1869],[1845,1869,1870],[1846,1845,1870],[1846,1870,1871],[1847,1846,1871],[1847,1871,1872],[1848,1847,1872],[1848,1872,1873],[1849,1848,1873],[1849,1873,1874],[1850,1849,1874],[1850,1874,1661],[1660,1850,1661],[1851,1134,1135],[1851,1135,1875],[1852,1851,1875],[1852,1875,1876],[1853,1852,1876],[1853,1876,1877],[1854,1853,1877],[1854,1877,1878],[1855,1854,1878],[1855,1878,1879],[1856,1855,1879],[1856,1879,1880],[1857,1856,1880],[1857,1880,1881],[1858,1857,1881],[1858,1881,1882],[1859,1858,1882],[1859,1882,1883],[1860,1859,1883],[1860,1883,1884],[1861,1860,1884],[1861,1884,1885],[1862,1861,1885],[1862,1885,1886],[1863,1862,1886],[1863,1886,1887],[1864,1863,1887],[1864,1887,1888],[1865,1864,1888],[1865,1888,1889],[1866,1865,1889],[1866,1889,1890],[1867,1866,1890],[1867,1890,1891],[1868,1867,1891],[1868,1891,1892],[1869,1868,1892],[1869,1892,1893],[1870,1869,1893],[1870,1893,1894],[1871,1870,1894],[1871,1894,1895],[1872,1871,1895],[1872,1895,1896],[1873,1872,1896],[1873,1896,1897],[1874,1873,1897],[1874,1897,1662],[1661,1874,1662],[1875,1135,1136],[1875,1136,1898],[1876,1875,1898],[1876,1898,1899],[1877,1876,1899],[1877,1899,1900],[1878,1877,1900],[1878,1900,1901],[1879,1878,1901],[1879,1901,1902],[1880,1879,1902],[1880,1902,1903],[1881,1880,1903],[1881,1903,1904],[1882,1881,1904],[1882,1904,1905],[1883,1882,1905],[1883,1905,1906],[1884,1883,1906],[1884,1906,1907],[1885,1884,1907],[1885,1907,1908],[1886,1885,1908],[1886,1908,1909],[1887,1886,1909],[1887,1909,1910],[1888,1887,1910],[1888,1910,1911],[1889,1888,1911],[1889,1911,1912],[1890,1889,1912],[1890,1912,1913],[1891,1890,1913],[1891,1913,1914],[1892,1891,1914],[1892,1914,1915],[1893,1892,1915],[1893,1915,1916],[1894,1893,1916],[1894,1916,1917],[1895,1894,1917],[1895,1917,1918],[1896,1895,1918],[1896,1918,1919],[1897,1896,1919],[1897,1919,1663],[1662,1897,1663],[1898,1136,1137],[1898,1137,1920],[1899,1898,1920],[1899,1920,1921],[1900,1899,1921],[1900,1921,1922],[1901,1900,1922],[1901,1922,1923],[1902,1901,1923],[1902,1923,1924],[1903,1902,1924],[1903,1924,1925],[1904,1903,1925],[1904,1925,1926],[1905,1904,1926],[1905,1926,1927],[1906,1905,1927],[1906,1927,1928],[1907,1906,1928],[1907,1928,1929],[1908,1907,1929],[1908,1929,1930],[1909,1908,1930],[1909,1930,1931],[1910,1909,1931],[1910,1931,1932],[1911,1910,1932],[1911,1932,1933],[1912,1911,1933],[1912,1933,1934],[1913,1912,1934],[1913,1934,1935],[1914,1913,1935],[1914,1935,1936],[1915,1914,1936],[1915,1936,1937],[1916,1915,1937],[1916,1937,1938],[1917,1916,1938],[1917,1938,1939],[1918,1917,1939],[1918,1939,1940],[1919,1918,1940],[1919,1940,1664],[1663,1919,1664],[1920,1137,1138],[1920,1138,1941],[1921,1920,1941],[1921,1941,1942],[1922,1921,1942],[1922,1942,1943],[1923,1922,1943],[1923,1943,1944],[1924,1923,1944],[1924,1944,1945],[1925,1924,1945],[1925,1945,1946],[1926,1925,1946],[1926,1946,1947],[1927,1926,1947],[1927,1947,1948],[1928,1927,1948],[1928,1948,1949],[1929,1928,1949],[1929,1949,1950],[1930,1929,1950],[1930,1950,1951],[1931,1930,1951],[1931,1951,1952],[1932,1931,1952],[1932,1952,1953],[1933,1932,1953],[1933,1953,1954],[1934,1933,1954],[1934,1954,1955],[1935,1934,1955],[1935,1955,1956],[1936,1935,1956],[1936,1956,1957],[1937,1936,1957],[1937,1957,1958],[1938,1937,1958],[1938,1958,1959],[1939,1938,1959],[1939,1959,1960],[1940,1939,1960],[1940,1960,1665],[1664,1940,1665],[1941,1138,1139],[1941,1139,1961],[1942,1941,1961],[1942,1961,1962],[1943,1942,1962],[1943,1962,1963],[1944,1943,1963],[1944,1963,1964],[1945,1944,1964],[1945,1964,1965],[1946,1945,1965],[1946,1965,1966],[1947,1946,1966],[1947,1966,1967],[1948,1947,1967],[1948,1967,1968],[1949,1948,1968],[1949,1968,1969],[1950,1949,1969],[1950,1969,1970],[1951,1950,1970],[1951,1970,1971],[1952,1951,1971],[1952,1971,1972],[1953,1952,1972],[1953,1972,1973],[1954,1953,1973],[1954,1973,1974],[1955,1954,1974],[1955,1974,1975],[1956,1955,1975],[1956,1975,1976],[1957,1956,1976],[1957,1976,1977],[1958,1957,1977],[1958,1977,1978],[1959,1958,1978],[1959,1978,1979],[1960,1959,1979],[1960,1979,1666],[1665,1960,1666],[1961,1139,1140],[1961,1140,1980],[1962,1961,1980],[1962,1980,1981],[1963,1962,1981],[1963,1981,1982],[1964,1963,1982],[1964,1982,1983],[1965,1964,1983],[1965,1983,1984],[1966,1965,1984],[1966,1984,1985],[1967,1966,1985],[1967,1985,1986],[1968,1967,1986],[1968,1986,1987],[1969,1968,1987],[1969,1987,1988],[1970,1969,1988],[1970,1988,1989],[1971,1970,1989],[1971,1989,1990],[1972,1971,1990],[1972,1990,1991],[1973,1972,1991],[1973,1991,1992],[1974,1973,1992],[1974,1992,1993],[1975,1974,1993],[1975,1993,1994],[1976,1975,1994],[1976,1994,1995],[1977,1976,1995],[1977,1995,1996],[1978,1977,1996],[1978,1996,1997],[1979,1978,1997],[1979,1997,1667],[1666,1979,1667],[1980,1140,1141],[1980,1141,1998],[1981,1980,1998],[1981,1998,1999],[1982,1981,1999],[1982,1999,2000],[1983,1982,2000],[1983,2000,2001],[1984,1983,2001],[1984,2001,2002],[1985,1984,2002],[1985,2002,2003],[1986,1985,2003],[1986,2003,2004],[1987,1986,2004],[1987,2004,2005],[1988,1987,2005],[1988,2005,2006],[1989,1988,2006],[1989,2006,2007],[1990,1989,2007],[1990,2007,2008],[1991,1990,2008],[1991,2008,2009],[1992,1991,2009],[1992,2009,2010],[1993,1992,2010],[1993,2010,2011],[1994,1993,2011],[1994,2011,2012],[1995,1994,2012],[1995,2012,2013],[1996,1995,2013],[1996,2013,2014],[1997,1996,2014],[1997,2014,1668],[1667,1997,1668],[1998,1141,1142],[1998,1142,2015],[1999,1998,2015],[1999,2015,2016],[2000,1999,2016],[2000,2016,2017],[2001,2000,2017],[2001,2017,2018],[2002,2001,2018],[2002,2018,2019],[2003,2002,2019],[2003,2019,2020],[2004,2003,2020],[2004,2020,2021],[2005,2004,2021],[2005,2021,2022],[2006,2005,2022],[2006,2022,2023],[2007,2006,2023],[2007,2023,2024],[2008,2007,2024],[2008,2024,2025],[2009,2008,2025],[2009,2025,2026],[2010,2009,2026],[2010,2026,2027],[2011,2010,2027],[2011,2027,2028],[2012,2011,2028],[2012,2028,2029],[2013,2012,2029],[2013,2029,2030],[2014,2013,2030],[2014,2030,1669],[1668,2014,1669],[2015,1142,1143],[2015,1143,2031],[2016,2015,2031],[2016,2031,2032],[2017,2016,2032],[2017,2032,2033],[2018,2017,2033],[2018,2033,2034],[2019,2018,2034],[2019,2034,2035],[2020,2019,2035],[2020,2035,2036],[2021,2020,2036],[2021,2036,2037],[2022,2021,2037],[2022,2037,2038],[2023,2022,2038],[2023,2038,2039],[2024,2023,2039],[2024,2039,2040],[2025,2024,2040],[2025,2040,2041],[2026,2025,2041],[2026,2041,2042],[2027,2026,2042],[2027,2042,2043],[2028,2027,2043],[2028,2043,2044],[2029,2028,2044],[2029,2044,2045],[2030,2029,2045],[2030,2045,1670],[1669,2030,1670],[2031,1143,1144],[2031,1144,2046],[2032,2031,2046],[2032,2046,2047],[2033,2032,2047],[2033,2047,2048],[2034,2033,2048],[2034,2048,2049],[2035,2034,2049],[2035,2049,2050],[2036,2035,2050],[2036,2050,2051],[2037,2036,2051],[2037,2051,2052],[2038,2037,2052],[2038,2052,2053],[2039,2038,2053],[2039,2053,2054],[2040,2039,2054],[2040,2054,2055],[2041,2040,2055],[2041,2055,2056],[2042,2041,2056],[2042,2056,2057],[2043,2042,2057],[2043,2057,2058],[2044,2043,2058],[2044,2058,2059],[2045,2044,2059],[2045,2059,1671],[1670,2045,1671],[2046,1144,1145],[2046,1145,2060],[2047,2046,2060],[2047,2060,2061],[2048,2047,2061],[2048,2061,2062],[2049,2048,2062],[2049,2062,2063],[2050,2049,2063],[2050,2063,2064],[2051,2050,2064],[2051,2064,2065],[2052,2051,2065],[2052,2065,2066],[2053,2052,2066],[2053,2066,2067],[2054,2053,2067],[2054,2067,2068],[2055,2054,2068],[2055,2068,2069],[2056,2055,2069],[2056,2069,2070],[2057,2056,2070],[2057,2070,2071],[2058,2057,2071],[2058,2071,2072],[2059,2058,2072],[2059,2072,1672],[1671,2059,1672],[2060,1145,1146],[2060,1146,2073],[2061,2060,2073],[2061,2073,2074],[2062,2061,2074],[2062,2074,2075],[2063,2062,2075],[2063,2075,2076],[2064,2063,2076],[2064,2076,2077],[2065,2064,2077],[2065,2077,2078],[2066,2065,2078],[2066,2078,2079],[2067,2066,2079],[2067,2079,2080],[2068,2067,2080],[2068,2080,2081],[2069,2068,2081],[2069,2081,2082],[2070,2069,2082],[2070,2082,2083],[2071,2070,2083],[2071,2083,2084],[2072,2071,2084],[2072,2084,1673],[1672,2072,1673],[2073,1146,1147],[2073,1147,2085],[2074,2073,2085],[2074,2085,2086],[2075,2074,2086],[2075,2086,2087],[2076,2075,2087],[2076,2087,2088],[2077,2076,2088],[2077,2088,2089],[2078,2077,2089],[2078,2089,2090],[2079,2078,2090],[2079,2090,2091],[2080,2079,2091],[2080,2091,2092],[2081,2080,2092],[2081,2092,2093],[2082,2081,2093],[2082,2093,2094],[2083,2082,2094],[2083,2094,2095],[2084,2083,2095],[2084,2095,1674],[1673,2084,1674],[2085,1147,1148],[2085,1148,2096],[2086,2085,2096],[2086,2096,2097],[2087,2086,2097],[2087,2097,2098],[2088,2087,2098],[2088,2098,2099],[2089,2088,2099],[2089,2099,2100],[2090,2089,2100],[2090,2100,2101],[2091,2090,2101],[2091,2101,2102],[2092,2091,2102],[2092,2102,2103],[2093,2092,2103],[2093,2103,2104],[2094,2093,2104],[2094,2104,2105],[2095,2094,2105],[2095,2105,1675],[1674,2095,1675],[2096,1148,1149],[2096,1149,2106],[2097,2096,2106],[2097,2106,2107],[2098,2097,2107],[2098,2107,2108],[2099,2098,2108],[2099,2108,2109],[2100,2099,2109],[2100,2109,2110],[2101,2100,2110],[2101,2110,2111],[2102,2101,2111],[2102,2111,2112],[2103,2102,2112],[2103,2112,2113],[2104,2103,2113],[2104,2113,2114],[2105,2104,2114],[2105,2114,1676],[1675,2105,1676],[2106,1149,1150],[2106,1150,2115],[2107,2106,2115],[2107,2115,2116],[2108,2107,2116],[2108,2116,2117],[2109,2108,2117],[2109,2117,2118],[2110,2109,2118],[2110,2118,2119],[2111,2110,2119],[2111,2119,2120],[2112,2111,2120],[2112,2120,2121],[2113,2112,2121],[2113,2121,2122],[2114,2113,2122],[2114,2122,1677],[1676,2114,1677],[2115,1150,1151],[2115,1151,2123],[2116,2115,2123],[2116,2123,2124],[2117,2116,2124],[2117,2124,2125],[2118,2117,2125],[2118,2125,2126],[2119,2118,2126],[2119,2126,2127],[2120,2119,2127],[2120,2127,2128],[2121,2120,2128],[2121,2128,2129],[2122,2121,2129],[2122,2129,1678],[1677,2122,1678],[2123,1151,1152],[2123,1152,2130],[2124,2123,2130],[2124,2130,2131],[2125,2124,2131],[2125,2131,2132],[2126,2125,2132],[2126,2132,2133],[2127,2126,2133],[2127,2133,2134],[2128,2127,2134],[2128,2134,2135],[2129,2128,2135],[2129,2135,1679],[1678,2129,1679],[2130,1152,1153],[2130,1153,2136],[2131,2130,2136],[2131,2136,2137],[2132,2131,2137],[2132,2137,2138],[2133,2132,2138],[2133,2138,2139],[2134,2133,2139],[2134,2139,2140],[2135,2134,2140],[2135,2140,1680],[1679,2135,1680],[2136,1153,1154],[2136,1154,2141],[2137,2136,2141],[2137,2141,2142],[2138,2137,2142],[2138,2142,2143],[2139,2138,2143],[2139,2143,2144],[2140,2139,2144],[2140,2144,1681],[1680,2140,1681],[2141,1154,1155],[2141,1155,2145],[2142,2141,2145],[2142,2145,2146],[2143,2142,2146],[2143,2146,2147],[2144,2143,2147],[2144,2147,1682],[1681,2144,1682],[2145,1155,1156],[2145,1156,2148],[2146,2145,2148],[2146,2148,2149],[2147,2146,2149],[2147,2149,1683],[1682,2147,1683],[2148,1156,1157],[2148,1157,2150],[2149,2148,2150],[2149,2150,1684],[1683,2149,1684],[2150,1157,1158],[2150,1158,1685],[1684,2150,1685],[1685,1158,3],[2151,1,1624],[2151,1624,2213],[2152,2151,2213],[2152,2213,2214],[2153,2152,2214],[2153,2214,2215],[2154,2153,2215],[2154,2215,2216],[2155,2154,2216],[2155,2216,2217],[2156,2155,2217],[2156,2217,2218],[2157,2156,2218],[2157,2218,2219],[2158,2157,2219],[2158,2219,2220],[2159,2158,2220],[2159,2220,2221],[2160,2159,2221],[2160,2221,2222],[2161,2160,2222],[2161,2222,2223],[2162,2161,2223],[2162,2223,2224],[2163,2162,2224],[2163,2224,2225],[2164,2163,2225],[2164,2225,2226],[2165,2164,2226],[2165,2226,2227],[2166,2165,2227],[2166,2227,2228],[2167,2166,2228],[2167,2228,2229],[2168,2167,2229],[2168,2229,2230],[2169,2168,2230],[2169,2230,2231],[2170,2169,2231],[2170,2231,2232],[2171,2170,2232],[2171,2232,2233],[2172,2171,2233],[2172,2233,2234],[2173,2172,2234],[2173,2234,2235],[2174,2173,2235],[2174,2235,2236],[2175,2174,2236],[2175,2236,2237],[2176,2175,2237],[2176,2237,2238],[2177,2176,2238],[2177,2238,2239],[2178,2177,2239],[2178,2239,2240],[2179,2178,2240],[2179,2240,2241],[2180,2179,2241],[2180,2241,2242],[2181,2180,2242],[2181,2242,2212],[5,2181,2212],[2213,1624,1625],[2213,1625,2243],[2214,2213,2243],[2214,2243,2244],[2215,2214,2244],[2215,2244,2245],[2216,2215,2245],[2216,2245,2246],[2217,2216,2246],[2217,2246,2247],[2218,2217,2247],[2218,2247,2248],[2219,2218,2248],[2219,2248,2249],[2220,2219,2249],[2220,2249,2250],[2221,2220,2250],[2221,2250,2251],[2222,2221,2251],[2222,2251,2252],[2223,2222,2252],[2223,2252,2253],[2224,2223,2253],[2224,2253,2254],[2225,2224,2254],[2225,2254,2255],[2226,2225,2255],[2226,2255,2256],[2227,2226,2256],[2227,2256,2257],[2228,2227,2257],[2228,2257,2258],[2229,2228,2258],[2229,2258,2259],[2230,2229,2259],[2230,2259,2260],[2231,2230,2260],[2231,2260,2261],[2232,2231,2261],[2232,2261,2262],[2233,2232,2262],[2233,2262,2263],[2234,2233,2263],[2234,2263,2264],[2235,2234,2264],[2235,2264,2265],[2236,2235,2265],[2236,2265,2266],[2237,2236,2266],[2237,2266,2267],[2238,2237,2267],[2238,2267,2268],[2239,2238,2268],[2239,2268,2269],[2240,2239,2269],[2240,2269,2270],[2241,2240,2270],[2241,2270,2271],[2242,2241,2271],[2242,2271,2211],[2212,2242,2211],[2243,1625,1626],[2243,1626,2272],[2244,2243,2272],[2244,2272,2273],[2245,2244,2273],[2245,2273,2274],[2246,2245,2274],[2246,2274,2275],[2247,2246,2275],[2247,2275,2276],[2248,2247,2276],[2248,2276,2277],[2249,2248,2277],[2249,2277,2278],[2250,2249,2278],[2250,2278,2279],[2251,2250,2279],[2251,2279,2280],[2252,2251,2280],[2252,2280,2281],[2253,2252,2281],[2253,2281,2282],[2254,2253,2282],[2254,2282,2283],[2255,2254,2283],[2255,2283,2284],[2256,2255,2284],[2256,2284,2285],[2257,2256,2285],[2257,2285,2286],[2258,2257,2286],[2258,2286,2287],[2259,2258,2287],[2259,2287,2288],[2260,2259,2288],[2260,2288,2289],[2261,2260,2289],[2261,2289,2290],[2262,2261,2290],[2262,2290,2291],[2263,2262,2291],[2263,2291,2292],[2264,2263,2292],[2264,2292,2293],[2265,2264,2293],[2265,2293,2294],[2266,2265,2294],[2266,2294,2295],[2267,2266,2295],[2267,2295,2296],[2268,2267,2296],[2268,2296,2297],[2269,2268,2297],[2269,2297,2298],[2270,2269,2298],[2270,2298,2299],[2271,2270,2299],[2271,2299,2210],[2211,2271,2210],[2272,1626,1627],[2272,1627,2300],[2273,2272,2300],[2273,2300,2301],[2274,2273,2301],[2274,2301,2302],[2275,2274,2302],[2275,2302,2303],[2276,2275,2303],[2276,2303,2304],[2277,2276,2304],[2277,2304,2305],[2278,2277,2305],[2278,2305,2306],[2279,2278,2306],[2279,2306,2307],[2280,2279,2307],[2280,2307,2308],[2281,2280,2308],[2281,2308,2309],[2282,2281,2309],[2282,2309,2310],[2283,2282,2310],[2283,2310,2311],[2284,2283,2311],[2284,2311,2312],[2285,2284,2312],[2285,2312,2313],[2286,2285,2313],[2286,2313,2314],[2287,2286,2314],[2287,2314,2315],[2288,2287,2315],[2288,2315,2316],[2289,2288,2316],[2289,2316,2317],[2290,2289,2317],[2290,2317,2318],[2291,2290,2318],[2291,2318,2319],[2292,2291,2319],[2292,2319,2320],[2293,2292,2320],[2293,2320,2321],[2294,2293,2321],[2294,2321,2322],[2295,2294,2322],[2295,2322,2323],[2296,2295,2323],[2296,2323,2324],[2297,2296,2324],[2297,2324,2325],[2298,2297,2325],[2298,2325,2326],[2299,2298,2326],[2299,2326,2209],[2210,2299,2209],[2300,1627,1628],[2300,1628,2327],[2301,2300,2327],[2301,2327,2328],[2302,2301,2328],[2302,2328,2329],[2303,2302,2329],[2303,2329,2330],[2304,2303,2330],[2304,2330,2331],[2305,2304,2331],[2305,2331,2332],[2306,2305,2332],[2306,2332,2333],[2307,2306,2333],[2307,2333,2334],[2308,2307,2334],[2308,2334,2335],[2309,2308,2335],[2309,2335,2336],[2310,2309,2336],[2310,2336,2337],[2311,2310,2337],[2311,2337,2338],[2312,2311,2338],[2312,2338,2339],[2313,2312,2339],[2313,2339,2340],[2314,2313,2340],[2314,2340,2341],[2315,2314,2341],[2315,2341,2342],[2316,2315,2342],[2316,2342,2343],[2317,2316,2343],[2317,2343,2344],[2318,2317,2344],[2318,2344,2345],[2319,2318,2345],[2319,2345,2346],[2320,2319,2346],[2320,2346,2347],[2321,2320,2347],[2321,2347,2348],[2322,2321,2348],[2322,2348,2349],[2323,2322,2349],[2323,2349,2350],[2324,2323,2350],[2324,2350,2351],[2325,2324,2351],[2325,2351,2352],[2326,2325,2352],[2326,2352,2208],[2209,2326,2208],[2327,1628,1629],[2327,1629,2353],[2328,2327,2353],[2328,2353,2354],[2329,2328,2354],[2329,2354,2355],[2330,2329,2355],[2330,2355,2356],[2331,2330,2356],[2331,2356,2357],[2332,2331,2357],[2332,2357,2358],[2333,2332,2358],[2333,2358,2359],[2334,2333,2359],[2334,2359,2360],[2335,2334,2360],[2335,2360,2361],[2336,2335,2361],[2336,2361,2362],[2337,2336,2362],[2337,2362,2363],[2338,2337,2363],[2338,2363,2364],[2339,2338,2364],[2339,2364,2365],[2340,2339,2365],[2340,2365,2366],[2341,2340,2366],[2341,2366,2367],[2342,2341,2367],[2342,2367,2368],[2343,2342,2368],[2343,2368,2369],[2344,2343,2369],[2344,2369,2370],[2345,2344,2370],[2345,2370,2371],[2346,2345,2371],[2346,2371,2372],[2347,2346,2372],[2347,2372,2373],[2348,2347,2373],[2348,2373,2374],[2349,2348,2374],[2349,2374,2375],[2350,2349,2375],[2350,2375,2376],[2351,2350,2376],[2351,2376,2377],[2352,2351,2377],[2352,2377,2207],[2208,2352,2207],[2353,1629,1630],[2353,1630,2378],[2354,2353,2378],[2354,2378,2379],[2355,2354,2379],[2355,2379,2380],[2356,2355,2380],[2356,2380,2381],[2357,2356,2381],[2357,2381,2382],[2358,2357,2382],[2358,2382,2383],[2359,2358,2383],[2359,2383,2384],[2360,2359,2384],[2360,2384,2385],[2361,2360,2385],[2361,2385,2386],[2362,2361,2386],[2362,2386,2387],[2363,2362,2387],[2363,2387,2388],[2364,2363,2388],[2364,2388,2389],[2365,2364,2389],[2365,2389,2390],[2366,2365,2390],[2366,2390,2391],[2367,2366,2391],[2367,2391,2392],[2368,2367,2392],[2368,2392,2393],[2369,2368,2393],[2369,2393,2394],[2370,2369,2394],[2370,2394,2395],[2371,2370,2395],[2371,2395,2396],[2372,2371,2396],[2372,2396,2397],[2373,2372,2397],[2373,2397,2398],[2374,2373,2398],[2374,2398,2399],[2375,2374,2399],[2375,2399,2400],[2376,2375,2400],[2376,2400,2401],[2377,2376,2401],[2377,2401,2206],[2207,2377,2206],[2378,1630,1631],[2378,1631,2402],[2379,2378,2402],[2379,2402,2403],[2380,2379,2403],[2380,2403,2404],[2381,2380,2404],[2381,2404,2405],[2382,2381,2405],[2382,2405,2406],[2383,2382,2406],[2383,2406,2407],[2384,2383,2407],[2384,2407,2408],[2385,2384,2408],[2385,2408,2409],[2386,2385,2409],[2386,2409,2410],[2387,2386,2410],[2387,2410,2411],[2388,2387,2411],[2388,2411,2412],[2389,2388,2412],[2389,2412,2413],[2390,2389,2413],[2390,2413,2414],[2391,2390,2414],[2391,2414,2415],[2392,2391,2415],[2392,2415,2416],[2393,2392,2416],[2393,2416,2417],[2394,2393,2417],[2394,2417,2418],[2395,2394,2418],[2395,2418,2419],[2396,2395,2419],[2396,2419,2420],[2397,2396,2420],[2397,2420,2421],[2398,2397,2421],[2398,2421,2422],[2399,2398,2422],[2399,2422,2423],[2400,2399,2423],[2400,2423,2424],[2401,2400,2424],[2401,2424,2205],[2206,2401,2205],[2402,1631,1632],[2402,1632,2425],[2403,2402,2425],[2403,2425,2426],[2404,2403,2426],[2404,2426,2427],[2405,2404,2427],[2405,2427,2428],[2406,2405,2428],[2406,2428,2429],[2407,2406,2429],[2407,2429,2430],[2408,2407,2430],[2408,2430,2431],[2409,2408,2431],[2409,2431,2432],[2410,2409,2432],[2410,2432,2433],[2411,2410,2433],[2411,2433,2434],[2412,2411,2434],[2412,2434,2435],[2413,2412,2435],[2413,2435,2436],[2414,2413,2436],[2414,2436,2437],[2415,2414,2437],[2415,2437,2438],[2416,2415,2438],[2416,2438,2439],[2417,2416,2439],[2417,2439,2440],[2418,2417,2440],[2418,2440,2441],[2419,2418,2441],[2419,2441,2442],[2420,2419,2442],[2420,2442,2443],[2421,2420,2443],[2421,2443,2444],[2422,2421,2444],[2422,2444,2445],[2423,2422,2445],[2423,2445,2446],[2424,2423,2446],[2424,2446,2204],[2205,2424,2204],[2425,1632,1633],[2425,1633,2447],[2426,2425,2447],[2426,2447,2448],[2427,2426,2448],[2427,2448,2449],[2428,2427,2449],[2428,2449,2450],[2429,2428,2450],[2429,2450,2451],[2430,2429,2451],[2430,2451,2452],[2431,2430,2452],[2431,2452,2453],[2432,2431,2453],[2432,2453,2454],[2433,2432,2454],[2433,2454,2455],[2434,2433,2455],[2434,2455,2456],[2435,2434,2456],[2435,2456,2457],[2436,2435,2457],[2436,2457,2458],[2437,2436,2458],[2437,2458,2459],[2438,2437,2459],[2438,2459,2460],[2439,2438,2460],[2439,2460,2461],[2440,2439,2461],[2440,2461,2462],[2441,2440,2462],[2441,2462,2463],[2442,2441,2463],[2442,2463,2464],[2443,2442,2464],[2443,2464,2465],[2444,2443,2465],[2444,2465,2466],[2445,2444,2466],[2445,2466,2467],[2446,2445,2467],[2446,2467,2203],[2204,2446,2203],[2447,1633,1634],[2447,1634,2468],[2448,2447,2468],[2448,2468,2469],[2449,2448,2469],[2449,2469,2470],[2450,2449,2470],[2450,2470,2471],[2451,2450,2471],[2451,2471,2472],[2452,2451,2472],[2452,2472,2473],[2453,2452,2473],[2453,2473,2474],[2454,2453,2474],[2454,2474,2475],[2455,2454,2475],[2455,2475,2476],[2456,2455,2476],[2456,2476,2477],[2457,2456,2477],[2457,2477,2478],[2458,2457,2478],[2458,2478,2479],[2459,2458,2479],[2459,2479,2480],[2460,2459,2480],[2460,2480,2481],[2461,2460,2481],[2461,2481,2482],[2462,2461,2482],[2462,2482,2483],[2463,2462,2483],[2463,2483,2484],[2464,2463,2484],[2464,2484,2485],[2465,2464,2485],[2465,2485,2486],[2466,2465,2486],[2466,2486,2487],[2467,2466,2487],[2467,2487,2202],[2203,2467,2202],[2468,1634,1635],[2468,1635,2488],[2469,2468,2488],[2469,2488,2489],[2470,2469,2489],[2470,2489,2490],[2471,2470,2490],[2471,2490,2491],[2472,2471,2491],[2472,2491,2492],[2473,2472,2492],[2473,2492,2493],[2474,2473,2493],[2474,2493,2494],[2475,2474,2494],[2475,2494,2495],[2476,2475,2495],[2476,2495,2496],[2477,2476,2496],[2477,2496,2497],[2478,2477,2497],[2478,2497,2498],[2479,2478,2498],[2479,2498,2499],[2480,2479,2499],[2480,2499,2500],[2481,2480,2500],[2481,2500,2501],[2482,2481,2501],[2482,2501,2502],[2483,2482,2502],[2483,2502,2503],[2484,2483,2503],[2484,2503,2504],[2485,2484,2504],[2485,2504,2505],[2486,2485,2505],[2486,2505,2506],[2487,2486,2506],[2487,2506,2201],[2202,2487,2201],[2488,1635,1636],[2488,1636,2507],[2489,2488,2507],[2489,2507,2508],[2490,2489,2508],[2490,2508,2509],[2491,2490,2509],[2491,2509,2510],[2492,2491,2510],[2492,2510,2511],[2493,2492,2511],[2493,2511,2512],[2494,2493,2512],[2494,2512,2513],[2495,2494,2513],[2495,2513,2514],[2496,2495,2514],[2496,2514,2515],[2497,2496,2515],[2497,2515,2516],[2498,2497,2516],[2498,2516,2517],[2499,2498,2517],[2499,2517,2518],[2500,2499,2518],[2500,2518,2519],[2501,2500,2519],[2501,2519,2520],[2502,2501,2520],[2502,2520,2521],[2503,2502,2521],[2503,2521,2522],[2504,2503,2522],[2504,2522,2523],[2505,2504,2523],[2505,2523,2524],[2506,2505,2524],[2506,2524,2200],[2201,2506,2200],[2507,1636,1637],[2507,1637,2525],[2508,2507,2525],[2508,2525,2526],[2509,2508,2526],[2509,2526,2527],[2510,2509,2527],[2510,2527,2528],[2511,2510,2528],[2511,2528,2529],[2512,2511,2529],[2512,2529,2530],[2513,2512,2530],[2513,2530,2531],[2514,2513,2531],[2514,2531,2532],[2515,2514,2532],[2515,2532,2533],[2516,2515,2533],[2516,2533,2534],[2517,2516,2534],[2517,2534,2535],[2518,2517,2535],[2518,2535,2536],[2519,2518,2536],[2519,2536,2537],[2520,2519,2537],[2520,2537,2538],[2521,2520,2538],[2521,2538,2539],[2522,2521,2539],[2522,2539,2540],[2523,2522,2540],[2523,2540,2541],[2524,2523,2541],[2524,2541,2199],[2200,2524,2199],[2525,1637,1638],[2525,1638,2542],[2526,2525,2542],[2526,2542,2543],[2527,2526,2543],[2527,2543,2544],[2528,2527,2544],[2528,2544,2545],[2529,2528,2545],[2529,2545,2546],[2530,2529,2546],[2530,2546,2547],[2531,2530,2547],[2531,2547,2548],[2532,2531,2548],[2532,2548,2549],[2533,2532,2549],[2533,2549,2550],[2534,2533,2550],[2534,2550,2551],[2535,2534,2551],[2535,2551,2552],[2536,2535,2552],[2536,2552,2553],[2537,2536,2553],[2537,2553,2554],[2538,2537,2554],[2538,2554,2555],[2539,2538,2555],[2539,2555,2556],[2540,2539,2556],[2540,2556,2557],[2541,2540,2557],[2541,2557,2198],[2199,2541,2198],[2542,1638,1639],[2542,1639,2558],[2543,2542,2558],[2543,2558,2559],[2544,2543,2559],[2544,2559,2560],[2545,2544,2560],[2545,2560,2561],[2546,2545,2561],[2546,2561,2562],[2547,2546,2562],[2547,2562,2563],[2548,2547,2563],[2548,2563,2564],[2549,2548,2564],[2549,2564,2565],[2550,2549,2565],[2550,2565,2566],[2551,2550,2566],[2551,2566,2567],[2552,2551,2567],[2552,2567,2568],[2553,2552,2568],[2553,2568,2569],[2554,2553,2569],[2554,2569,2570],[2555,2554,2570],[2555,2570,2571],[2556,2555,2571],[2556,2571,2572],[2557,2556,2572],[2557,2572,2197],[2198,2557,2197],[2558,1639,1640],[2558,1640,2573],[2559,2558,2573],[2559,2573,2574],[2560,2559,2574],[2560,2574,2575],[2561,2560,2575],[2561,2575,2576],[2562,2561,2576],[2562,2576,2577],[2563,2562,2577],[2563,2577,2578],[2564,2563,2578],[2564,2578,2579],[2565,2564,2579],[2565,2579,2580],[2566,2565,2580],[2566,2580,2581],[2567,2566,2581],[2567,2581,2582],[2568,2567,2582],[2568,2582,2583],[2569,2568,2583],[2569,2583,2584],[2570,2569,2584],[2570,2584,2585],[2571,2570,2585],[2571,2585,2586],[2572,2571,2586],[2572,2586,2196],[2197,2572,2196],[2573,1640,1641],[2573,1641,2587],[2574,2573,2587],[2574,2587,2588],[2575,2574,2588],[2575,2588,2589],[2576,2575,2589],[2576,2589,2590],[2577,2576,2590],[2577,2590,2591],[2578,2577,2591],[2578,2591,2592],[2579,2578,2592],[2579,2592,2593],[2580,2579,2593],[2580,2593,2594],[2581,2580,2594],[2581,2594,2595],[2582,2581,2595],[2582,2595,2596],[2583,2582,2596],[2583,2596,2597],[2584,2583,2597],[2584,2597,2598],[2585,2584,2598],[2585,2598,2599],[2586,2585,2599],[2586,2599,2195],[2196,2586,2195],[2587,1641,1642],[2587,1642,2600],[2588,2587,2600],[2588,2600,2601],[2589,2588,2601],[2589,2601,2602],[2590,2589,2602],[2590,2602,2603],[2591,2590,2603],[2591,2603,2604],[2592,2591,2604],[2592,2604,2605],[2593,2592,2605],[2593,2605,2606],[2594,2593,2606],[2594,2606,2607],[2595,2594,2607],[2595,2607,2608],[2596,2595,2608],[2596,2608,2609],[2597,2596,2609],[2597,2609,2610],[2598,2597,2610],[2598,2610,2611],[2599,2598,2611],[2599,2611,2194],[2195,2599,2194],[2600,1642,1643],[2600,1643,2612],[2601,2600,2612],[2601,2612,2613],[2602,2601,2613],[2602,2613,2614],[2603,2602,2614],[2603,2614,2615],[2604,2603,2615],[2604,2615,2616],[2605,2604,2616],[2605,2616,2617],[2606,2605,2617],[2606,2617,2618],[2607,2606,2618],[2607,2618,2619],[2608,2607,2619],[2608,2619,2620],[2609,2608,2620],[2609,2620,2621],[2610,2609,2621],[2610,2621,2622],[2611,2610,2622],[2611,2622,2193],[2194,2611,2193],[2612,1643,1644],[2612,1644,2623],[2613,2612,2623],[2613,2623,2624],[2614,2613,2624],[2614,2624,2625],[2615,2614,2625],[2615,2625,2626],[2616,2615,2626],[2616,2626,2627],[2617,2616,2627],[2617,2627,2628],[2618,2617,2628],[2618,2628,2629],[2619,2618,2629],[2619,2629,2630],[2620,2619,2630],[2620,2630,2631],[2621,2620,2631],[2621,2631,2632],[2622,2621,2632],[2622,2632,2192],[2193,2622,2192],[2623,1644,1645],[2623,1645,2633],[2624,2623,2633],[2624,2633,2634],[2625,2624,2634],[2625,2634,2635],[2626,2625,2635],[2626,2635,2636],[2627,2626,2636],[2627,2636,2637],[2628,2627,2637],[2628,2637,2638],[2629,2628,2638],[2629,2638,2639],[2630,2629,2639],[2630,2639,2640],[2631,2630,2640],[2631,2640,2641],[2632,2631,2641],[2632,2641,2191],[2192,2632,2191],[2633,1645,1646],[2633,1646,2642],[2634,2633,2642],[2634,2642,2643],[2635,2634,2643],[2635,2643,2644],[2636,2635,2644],[2636,2644,2645],[2637,2636,2645],[2637,2645,2646],[2638,2637,2646],[2638,2646,2647],[2639,2638,2647],[2639,2647,2648],[2640,2639,2648],[2640,2648,2649],[2641,2640,2649],[2641,2649,2190],[2191,2641,2190],[2642,1646,1647],[2642,1647,2650],[2643,2642,2650],[2643,2650,2651],[2644,2643,2651],[2644,2651,2652],[2645,2644,2652],[2645,2652,2653],[2646,2645,2653],[2646,2653,2654],[2647,2646,2654],[2647,2654,2655],[2648,2647,2655],[2648,2655,2656],[2649,2648,2656],[2649,2656,2189],[2190,2649,2189],[2650,1647,1648],[2650,1648,2657],[2651,2650,2657],[2651,2657,2658],[2652,2651,2658],[2652,2658,2659],[2653,2652,2659],[2653,2659,2660],[2654,2653,2660],[2654,2660,2661],[2655,2654,2661],[2655,2661,2662],[2656,2655,2662],[2656,2662,2188],[2189,2656,2188],[2657,1648,1649],[2657,1649,2663],[2658,2657,2663],[2658,2663,2664],[2659,2658,2664],[2659,2664,2665],[2660,2659,2665],[2660,2665,2666],[2661,2660,2666],[2661,2666,2667],[2662,2661,2667],[2662,2667,2187],[2188,2662,2187],[2663,1649,1650],[2663,1650,2668],[2664,2663,2668],[2664,2668,2669],[2665,2664,2669],[2665,2669,2670],[2666,2665,2670],[2666,2670,2671],[2667,2666,2671],[2667,2671,2186],[2187,2667,2186],[2668,1650,1651],[2668,1651,2672],[2669,2668,2672],[2669,2672,2673],[2670,2669,2673],[2670,2673,2674],[2671,2670,2674],[2671,2674,2185],[2186,2671,2185],[2672,1651,1652],[2672,1652,2675],[2673,2672,2675],[2673,2675,2676],[2674,2673,2676],[2674,2676,2184],[2185,2674,2184],[2675,1652,1653],[2675,1653,2677],[2676,2675,2677],[2676,2677,2183],[2184,2676,2183],[2677,1653,1654],[2677,1654,2182],[2183,2677,2182],[2182,1654,2],[2678,5,2709],[2678,2709,2771],[2679,2678,2771],[2679,2771,2772],[2680,2679,2772],[2680,2772,2773],[2681,2680,2773],[2681,2773,2774],[2682,2681,2774],[2682,2774,2775],[2683,2682,2775],[2683,2775,2776],[2684,2683,2776],[2684,2776,2777],[2685,2684,2777],[2685,2777,2778],[2686,2685,2778],[2686,2778,2779],[2687,2686,2779],[2687,2779,2780],[2688,2687,2780],[2688,2780,2781],[2689,2688,2781],[2689,2781,2782],[2690,2689,2782],[2690,2782,2783],[2691,2690,2783],[2691,2783,2784],[2692,2691,2784],[2692,2784,2785],[2693,2692,2785],[2693,2785,2786],[2694,2693,2786],[2694,2786,2787],[2695,2694,2787],[2695,2787,2788],[2696,2695,2788],[2696,2788,2789],[2697,2696,2789],[2697,2789,2790],[2698,2697,2790],[2698,2790,2791],[2699,2698,2791],[2699,2791,2792],[2700,2699,2792],[2700,2792,2793],[2701,2700,2793],[2701,2793,2794],[2702,2701,2794],[2702,2794,2795],[2703,2702,2795],[2703,2795,2796],[2704,2703,2796],[2704,2796,2797],[2705,2704,2797],[2705,2797,2798],[2706,2705,2798],[2706,2798,2799],[2707,2706,2799],[2707,2799,2800],[2708,2707,2800],[2708,2800,2740],[9,2708,2740],[2771,2709,2710],[2771,2710,2801],[2772,2771,2801],[2772,2801,2802],[2773,2772,2802],[2773,2802,2803],[2774,2773,2803],[2774,2803,2804],[2775,2774,2804],[2775,2804,2805],[2776,2775,2805],[2776,2805,2806],[2777,2776,2806],[2777,2806,2807],[2778,2777,2807],[2778,2807,2808],[2779,2778,2808],[2779,2808,2809],[2780,2779,2809],[2780,2809,2810],[2781,2780,2810],[2781,2810,2811],[2782,2781,2811],[2782,2811,2812],[2783,2782,2812],[2783,2812,2813],[2784,2783,2813],[2784,2813,2814],[2785,2784,2814],[2785,2814,2815],[2786,2785,2815],[2786,2815,2816],[2787,2786,2816],[2787,2816,2817],[2788,2787,2817],[2788,2817,2818],[2789,2788,2818],[2789,2818,2819],[2790,2789,2819],[2790,2819,2820],[2791,2790,2820],[2791,2820,2821],[2792,2791,2821],[2792,2821,2822],[2793,2792,2822],[2793,2822,2823],[2794,2793,2823],[2794,2823,2824],[2795,2794,2824],[2795,2824,2825],[2796,2795,2825],[2796,2825,2826],[2797,2796,2826],[2797,2826,2827],[2798,2797,2827],[2798,2827,2828],[2799,2798,2828],[2799,2828,2829],[2800,2799,2829],[2800,2829,2741],[2740,2800,2741],[2801,2710,2711],[2801,2711,2830],[2802,2801,2830],[2802,2830,2831],[2803,2802,2831],[2803,2831,2832],[2804,2803,2832],[2804,2832,2833],[2805,2804,2833],[2805,2833,2834],[2806,2805,2834],[2806,2834,2835],[2807,2806,2835],[2807,2835,2836],[2808,2807,2836],[2808,2836,2837],[2809,2808,2837],[2809,2837,2838],[2810,2809,2838],[2810,2838,2839],[2811,2810,2839],[2811,2839,2840],[2812,2811,2840],[2812,2840,2841],[2813,2812,2841],[2813,2841,2842],[2814,2813,2842],[2814,2842,2843],[2815,2814,2843],[2815,2843,2844],[2816,2815,2844],[2816,2844,2845],[2817,2816,2845],[2817,2845,2846],[2818,2817,2846],[2818,2846,2847],[2819,2818,2847],[2819,2847,2848],[2820,2819,2848],[2820,2848,2849],[2821,2820,2849],[2821,2849,2850],[2822,2821,2850],[2822,2850,2851],[2823,2822,2851],[2823,2851,2852],[2824,2823,2852],[2824,2852,2853],[2825,2824,2853],[2825,2853,2854],[2826,2825,2854],[2826,2854,2855],[2827,2826,2855],[2827,2855,2856],[2828,2827,2856],[2828,2856,2857],[2829,2828,2857],[2829,2857,2742],[2741,2829,2742],[2830,2711,2712],[2830,2712,2858],[2831,2830,2858],[2831,2858,2859],[2832,2831,2859],[2832,2859,2860],[2833,2832,2860],[2833,2860,2861],[2834,2833,2861],[2834,2861,2862],[2835,2834,2862],[2835,2862,2863],[2836,2835,2863],[2836,2863,2864],[2837,2836,2864],[2837,2864,2865],[2838,2837,2865],[2838,2865,2866],[2839,2838,2866],[2839,2866,2867],[2840,2839,2867],[2840,2867,2868],[2841,2840,2868],[2841,2868,2869],[2842,2841,2869],[2842,2869,2870],[2843,2842,2870],[2843,2870,2871],[2844,2843,2871],[2844,2871,2872],[2845,2844,2872],[2845,2872,2873],[2846,2845,2873],[2846,2873,2874],[2847,2846,2874],[2847,2874,2875],[2848,2847,2875],[2848,2875,2876],[2849,2848,2876],[2849,2876,2877],[2850,2849,2877],[2850,2877,2878],[2851,2850,2878],[2851,2878,2879],[2852,2851,2879],[2852,2879,2880],[2853,2852,2880],[2853,2880,2881],[2854,2853,2881],[2854,2881,2882],[2855,2854,2882],[2855,2882,2883],[2856,2855,2883],[2856,2883,2884],[2857,2856,2884],[2857,2884,2743],[2742,2857,2743],[2858,2712,2713],[2858,2713,2885],[2859,2858,2885],[2859,2885,2886],[2860,2859,2886],[2860,2886,2887],[2861,2860,2887],[2861,2887,2888],[2862,2861,2888],[2862,2888,2889],[2863,2862,2889],[2863,2889,2890],[2864,2863,2890],[2864,2890,2891],[2865,2864,2891],[2865,2891,2892],[2866,2865,2892],[2866,2892,2893],[2867,2866,2893],[2867,2893,2894],[2868,2867,2894],[2868,2894,2895],[2869,2868,2895],[2869,2895,2896],[2870,2869,2896],[2870,2896,2897],[2871,2870,2897],[2871,2897,2898],[2872,2871,2898],[2872,2898,2899],[2873,2872,2899],[2873,2899,2900],[2874,2873,2900],[2874,2900,2901],[2875,2874,2901],[2875,2901,2902],[2876,2875,2902],[2876,2902,2903],[2877,2876,2903],[2877,2903,2904],[2878,2877,2904],[2878,2904,2905],[2879,2878,2905],[2879,2905,2906],[2880,2879,2906],[2880,2906,2907],[2881,2880,2907],[2881,2907,2908],[2882,2881,2908],[2882,2908,2909],[2883,2882,2909],[2883,2909,2910],[2884,2883,2910],[2884,2910,2744],[2743,2884,2744],[2885,2713,2714],[2885,2714,2911],[2886,2885,2911],[2886,2911,2912],[2887,2886,2912],[2887,2912,2913],[2888,2887,2913],[2888,2913,2914],[2889,2888,2914],[2889,2914,2915],[2890,2889,2915],[2890,2915,2916],[2891,2890,2916],[2891,2916,2917],[2892,2891,2917],[2892,2917,2918],[2893,2892,2918],[2893,2918,2919],[2894,2893,2919],[2894,2919,2920],[2895,2894,2920],[2895,2920,2921],[2896,2895,2921],[2896,2921,2922],[2897,2896,2922],[2897,2922,2923],[2898,2897,2923],[2898,2923,2924],[2899,2898,2924],[2899,2924,2925],[2900,2899,2925],[2900,2925,2926],[2901,2900,2926],[2901,2926,2927],[2902,2901,2927],[2902,2927,2928],[2903,2902,2928],[2903,2928,2929],[2904,2903,2929],[2904,2929,2930],[2905,2904,2930],[2905,2930,2931],[2906,2905,2931],[2906,2931,2932],[2907,2906,2932],[2907,2932,2933],[2908,2907,2933],[2908,2933,2934],[2909,2908,2934],[2909,2934,2935],[2910,2909,2935],[2910,2935,2745],[2744,2910,2745],[2911,2714,2715],[2911,2715,2936],[2912,2911,2936],[2912,2936,2937],[2913,2912,2937],[2913,2937,2938],[2914,2913,2938],[2914,2938,2939],[2915,2914,2939],[2915,2939,2940],[2916,2915,2940],[2916,2940,2941],[2917,2916,2941],[2917,2941,2942],[2918,2917,2942],[2918,2942,2943],[2919,2918,2943],[2919,2943,2944],[2920,2919,2944],[2920,2944,2945],[2921,2920,2945],[2921,2945,2946],[2922,2921,2946],[2922,2946,2947],[2923,2922,2947],[2923,2947,2948],[2924,2923,2948],[2924,2948,2949],[2925,2924,2949],[2925,2949,2950],[2926,2925,2950],[2926,2950,2951],[2927,2926,2951],[2927,2951,2952],[2928,2927,2952],[2928,2952,2953],[2929,2928,2953],[2929,2953,2954],[2930,2929,2954],[2930,2954,2955],[2931,2930,2955],[2931,2955,2956],[2932,2931,2956],[2932,2956,2957],[2933,2932,2957],[2933,2957,2958],[2934,2933,2958],[2934,2958,2959],[2935,2934,2959],[2935,2959,2746],[2745,2935,2746],[2936,2715,2716],[2936,2716,2960],[2937,2936,2960],[2937,2960,2961],[2938,2937,2961],[2938,2961,2962],[2939,2938,2962],[2939,2962,2963],[2940,2939,2963],[2940,2963,2964],[2941,2940,2964],[2941,2964,2965],[2942,2941,2965],[2942,2965,2966],[2943,2942,2966],[2943,2966,2967],[2944,2943,2967],[2944,2967,2968],[2945,2944,2968],[2945,2968,2969],[2946,2945,2969],[2946,2969,2970],[2947,2946,2970],[2947,2970,2971],[2948,2947,2971],[2948,2971,2972],[2949,2948,2972],[2949,2972,2973],[2950,2949,2973],[2950,2973,2974],[2951,2950,2974],[2951,2974,2975],[2952,2951,2975],[2952,2975,2976],[2953,2952,2976],[2953,2976,2977],[2954,2953,2977],[2954,2977,2978],[2955,2954,2978],[2955,2978,2979],[2956,2955,2979],[2956,2979,2980],[2957,2956,2980],[2957,2980,2981],[2958,2957,2981],[2958,2981,2982],[2959,2958,2982],[2959,2982,2747],[2746,2959,2747],[2960,2716,2717],[2960,2717,2983],[2961,2960,2983],[2961,2983,2984],[2962,2961,2984],[2962,2984,2985],[2963,2962,2985],[2963,2985,2986],[2964,2963,2986],[2964,2986,2987],[2965,2964,2987],[2965,2987,2988],[2966,2965,2988],[2966,2988,2989],[2967,2966,2989],[2967,2989,2990],[2968,2967,2990],[2968,2990,2991],[2969,2968,2991],[2969,2991,2992],[2970,2969,2992],[2970,2992,2993],[2971,2970,2993],[2971,2993,2994],[2972,2971,2994],[2972,2994,2995],[2973,2972,2995],[2973,2995,2996],[2974,2973,2996],[2974,2996,2997],[2975,2974,2997],[2975,2997,2998],[2976,2975,2998],[2976,2998,2999],[2977,2976,2999],[2977,2999,3000],[2978,2977,3000],[2978,3000,3001],[2979,2978,3001],[2979,3001,3002],[2980,2979,3002],[2980,3002,3003],[2981,2980,3003],[2981,3003,3004],[2982,2981,3004],[2982,3004,2748],[2747,2982,2748],[2983,2717,2718],[2983,2718,3005],[2984,2983,3005],[2984,3005,3006],[2985,2984,3006],[2985,3006,3007],[2986,2985,3007],[2986,3007,3008],[2987,2986,3008],[2987,3008,3009],[2988,2987,3009],[2988,3009,3010],[2989,2988,3010],[2989,3010,3011],[2990,2989,3011],[2990,3011,3012],[2991,2990,3012],[2991,3012,3013],[2992,2991,3013],[2992,3013,3014],[2993,2992,3014],[2993,3014,3015],[2994,2993,3015],[2994,3015,3016],[2995,2994,3016],[2995,3016,3017],[2996,2995,3017],[2996,3017,3018],[2997,2996,3018],[2997,3018,3019],[2998,2997,3019],[2998,3019,3020],[2999,2998,3020],[2999,3020,3021],[3000,2999,3021],[3000,3021,3022],[3001,3000,3022],[3001,3022,3023],[3002,3001,3023],[3002,3023,3024],[3003,3002,3024],[3003,3024,3025],[3004,3003,3025],[3004,3025,2749],[2748,3004,2749],[3005,2718,2719],[3005,2719,3026],[3006,3005,3026],[3006,3026,3027],[3007,3006,3027],[3007,3027,3028],[3008,3007,3028],[3008,3028,3029],[3009,3008,3029],[3009,3029,3030],[3010,3009,3030],[3010,3030,3031],[3011,3010,3031],[3011,3031,3032],[3012,3011,3032],[3012,3032,3033],[3013,3012,3033],[3013,3033,3034],[3014,3013,3034],[3014,3034,3035],[3015,3014,3035],[3015,3035,3036],[3016,3015,3036],[3016,3036,3037],[3017,3016,3037],[3017,3037,3038],[3018,3017,3038],[3018,3038,3039],[3019,3018,3039],[3019,3039,3040],[3020,3019,3040],[3020,3040,3041],[3021,3020,3041],[3021,3041,3042],[3022,3021,3042],[3022,3042,3043],[3023,3022,3043],[3023,3043,3044],[3024,3023,3044],[3024,3044,3045],[3025,3024,3045],[3025,3045,2750],[2749,3025,2750],[3026,2719,2720],[3026,2720,3046],[3027,3026,3046],[3027,3046,3047],[3028,3027,3047],[3028,3047,3048],[3029,3028,3048],[3029,3048,3049],[3030,3029,3049],[3030,3049,3050],[3031,3030,3050],[3031,3050,3051],[3032,3031,3051],[3032,3051,3052],[3033,3032,3052],[3033,3052,3053],[3034,3033,3053],[3034,3053,3054],[3035,3034,3054],[3035,3054,3055],[3036,3035,3055],[3036,3055,3056],[3037,3036,3056],[3037,3056,3057],[3038,3037,3057],[3038,3057,3058],[3039,3038,3058],[3039,3058,3059],[3040,3039,3059],[3040,3059,3060],[3041,3040,3060],[3041,3060,3061],[3042,3041,3061],[3042,3061,3062],[3043,3042,3062],[3043,3062,3063],[3044,3043,3063],[3044,3063,3064],[3045,3044,3064],[3045,3064,2751],[2750,3045,2751],[3046,2720,2721],[3046,2721,3065],[3047,3046,3065],[3047,3065,3066],[3048,3047,3066],[3048,3066,3067],[3049,3048,3067],[3049,3067,3068],[3050,3049,3068],[3050,3068,3069],[3051,3050,3069],[3051,3069,3070],[3052,3051,3070],[3052,3070,3071],[3053,3052,3071],[3053,3071,3072],[3054,3053,3072],[3054,3072,3073],[3055,3054,3073],[3055,3073,3074],[3056,3055,3074],[3056,3074,3075],[3057,3056,3075],[3057,3075,3076],[3058,3057,3076],[3058,3076,3077],[3059,3058,3077],[3059,3077,3078],[3060,3059,3078],[3060,3078,3079],[3061,3060,3079],[3061,3079,3080],[3062,3061,3080],[3062,3080,3081],[3063,3062,3081],[3063,3081,3082],[3064,3063,3082],[3064,3082,2752],[2751,3064,2752],[3065,2721,2722],[3065,2722,3083],[3066,3065,3083],[3066,3083,3084],[3067,3066,3084],[3067,3084,3085],[3068,3067,3085],[3068,3085,3086],[3069,3068,3086],[3069,3086,3087],[3070,3069,3087],[3070,3087,3088],[3071,3070,3088],[3071,3088,3089],[3072,3071,3089],[3072,3089,3090],[3073,3072,3090],[3073,3090,3091],[3074,3073,3091],[3074,3091,3092],[3075,3074,3092],[3075,3092,3093],[3076,3075,3093],[3076,3093,3094],[3077,3076,3094],[3077,3094,3095],[3078,3077,3095],[3078,3095,3096],[3079,3078,3096],[3079,3096,3097],[3080,3079,3097],[3080,3097,3098],[3081,3080,3098],[3081,3098,3099],[3082,3081,3099],[3082,3099,2753],[2752,3082,2753],[3083,2722,2723],[3083,2723,3100],[3084,3083,3100],[3084,3100,3101],[3085,3084,3101],[3085,3101,3102],[3086,3085,3102],[3086,3102,3103],[3087,3086,3103],[3087,3103,3104],[3088,3087,3104],[3088,3104,3105],[3089,3088,3105],[3089,3105,3106],[3090,3089,3106],[3090,3106,3107],[3091,3090,3107],[3091,3107,3108],[3092,3091,3108],[3092,3108,3109],[3093,3092,3109],[3093,3109,3110],[3094,3093,3110],[3094,3110,3111],[3095,3094,3111],[3095,3111,3112],[3096,3095,3112],[3096,3112,3113],[3097,3096,3113],[3097,3113,3114],[3098,3097,3114],[3098,3114,3115],[3099,3098,3115],[3099,3115,2754],[2753,3099,2754],[3100,2723,2724],[3100,2724,3116],[3101,3100,3116],[3101,3116,3117],[3102,3101,3117],[3102,3117,3118],[3103,3102,3118],[3103,3118,3119],[3104,3103,3119],[3104,3119,3120],[3105,3104,3120],[3105,3120,3121],[3106,3105,3121],[3106,3121,3122],[3107,3106,3122],[3107,3122,3123],[3108,3107,3123],[3108,3123,3124],[3109,3108,3124],[3109,3124,3125],[3110,3109,3125],[3110,3125,3126],[3111,3110,3126],[3111,3126,3127],[3112,3111,3127],[3112,3127,3128],[3113,3112,3128],[3113,3128,3129],[3114,3113,3129],[3114,3129,3130],[3115,3114,3130],[3115,3130,2755],[2754,3115,2755],[3116,2724,2725],[3116,2725,3131],[3117,3116,3131],[3117,3131,3132],[3118,3117,3132],[3118,3132,3133],[3119,3118,3133],[3119,3133,3134],[3120,3119,3134],[3120,3134,3135],[3121,3120,3135],[3121,3135,3136],[3122,3121,3136],[3122,3136,3137],[3123,3122,3137],[3123,3137,3138],[3124,3123,3138],[3124,3138,3139],[3125,3124,3139],[3125,3139,3140],[3126,3125,3140],[3126,3140,3141],[3127,3126,3141],[3127,3141,3142],[3128,3127,3142],[3128,3142,3143],[3129,3128,3143],[3129,3143,3144],[3130,3129,3144],[3130,3144,2756],[2755,3130,2756],[3131,2725,2726],[3131,2726,3145],[3132,3131,3145],[3132,3145,3146],[3133,3132,3146],[3133,3146,3147],[3134,3133,3147],[3134,3147,3148],[3135,3134,3148],[3135,3148,3149],[3136,3135,3149],[3136,3149,3150],[3137,3136,3150],[3137,3150,3151],[3138,3137,3151],[3138,3151,3152],[3139,3138,3152],[3139,3152,3153],[3140,3139,3153],[3140,3153,3154],[3141,3140,3154],[3141,3154,3155],[3142,3141,3155],[3142,3155,3156],[3143,3142,3156],[3143,3156,3157],[3144,3143,3157],[3144,3157,2757],[2756,3144,2757],[3145,2726,2727],[3145,2727,3158],[3146,3145,3158],[3146,3158,3159],[3147,3146,3159],[3147,3159,3160],[3148,3147,3160],[3148,3160,3161],[3149,3148,3161],[3149,3161,3162],[3150,3149,3162],[3150,3162,3163],[3151,3150,3163],[3151,3163,3164],[3152,3151,3164],[3152,3164,3165],[3153,3152,3165],[3153,3165,3166],[3154,3153,3166],[3154,3166,3167],[3155,3154,3167],[3155,3167,3168],[3156,3155,3168],[3156,3168,3169],[3157,3156,3169],[3157,3169,2758],[2757,3157,2758],[3158,2727,2728],[3158,2728,3170],[3159,3158,3170],[3159,3170,3171],[3160,3159,3171],[3160,3171,3172],[3161,3160,3172],[3161,3172,3173],[3162,3161,3173],[3162,3173,3174],[3163,3162,3174],[3163,3174,3175],[3164,3163,3175],[3164,3175,3176],[3165,3164,3176],[3165,3176,3177],[3166,3165,3177],[3166,3177,3178],[3167,3166,3178],[3167,3178,3179],[3168,3167,3179],[3168,3179,3180],[3169,3168,3180],[3169,3180,2759],[2758,3169,2759],[3170,2728,2729],[3170,2729,3181],[3171,3170,3181],[3171,3181,3182],[3172,3171,3182],[3172,3182,3183],[3173,3172,3183],[3173,3183,3184],[3174,3173,3184],[3174,3184,3185],[3175,3174,3185],[3175,3185,3186],[3176,3175,3186],[3176,3186,3187],[3177,3176,3187],[3177,3187,3188],[3178,3177,3188],[3178,3188,3189],[3179,3178,3189],[3179,3189,3190],[3180,3179,3190],[3180,3190,2760],[2759,3180,2760],[3181,2729,2730],[3181,2730,3191],[3182,3181,3191],[3182,3191,3192],[3183,3182,3192],[3183,3192,3193],[3184,3183,3193],[3184,3193,3194],[3185,3184,3194],[3185,3194,3195],[3186,3185,3195],[3186,3195,3196],[3187,3186,3196],[3187,3196,3197],[3188,3187,3197],[3188,3197,3198],[3189,3188,3198],[3189,3198,3199],[3190,3189,3199],[3190,3199,2761],[2760,3190,2761],[3191,2730,2731],[3191,2731,3200],[3192,3191,3200],[3192,3200,3201],[3193,3192,3201],[3193,3201,3202],[3194,3193,3202],[3194,3202,3203],[3195,3194,3203],[3195,3203,3204],[3196,3195,3204],[3196,3204,3205],[3197,3196,3205],[3197,3205,3206],[3198,3197,3206],[3198,3206,3207],[3199,3198,3207],[3199,3207,2762],[2761,3199,2762],[3200,2731,2732],[3200,2732,3208],[3201,3200,3208],[3201,3208,3209],[3202,3201,3209],[3202,3209,3210],[3203,3202,3210],[3203,3210,3211],[3204,3203,3211],[3204,3211,3212],[3205,3204,3212],[3205,3212,3213],[3206,3205,3213],[3206,3213,3214],[3207,3206,3214],[3207,3214,2763],[2762,3207,2763],[3208,2732,2733],[3208,2733,3215],[3209,3208,3215],[3209,3215,3216],[3210,3209,3216],[3210,3216,3217],[3211,3210,3217],[3211,3217,3218],[3212,3211,3218],[3212,3218,3219],[3213,3212,3219],[3213,3219,3220],[3214,3213,3220],[3214,3220,2764],[2763,3214,2764],[3215,2733,2734],[3215,2734,3221],[3216,3215,3221],[3216,3221,3222],[3217,3216,3222],[3217,3222,3223],[3218,3217,3223],[3218,3223,3224],[3219,3218,3224],[3219,3224,3225],[3220,3219,3225],[3220,3225,2765],[2764,3220,2765],[3221,2734,2735],[3221,2735,3226],[3222,3221,3226],[3222,3226,3227],[3223,3222,3227],[3223,3227,3228],[3224,3223,3228],[3224,3228,3229],[3225,3224,3229],[3225,3229,2766],[2765,3225,2766],[3226,2735,2736],[3226,2736,3230],[3227,3226,3230],[3227,3230,3231],[3228,3227,3231],[3228,3231,3232],[3229,3228,3232],[3229,3232,2767],[2766,3229,2767],[3230,2736,2737],[3230,2737,3233],[3231,3230,3233],[3231,3233,3234],[3232,3231,3234],[3232,3234,2768],[2767,3232,2768],[3233,2737,2738],[3233,2738,3235],[3234,3233,3235],[3234,3235,2769],[2768,3234,2769],[3235,2738,2739],[3235,2739,2770],[2769,3235,2770],[2770,2739,10],[3236,10,3297],[3236,3297,3329],[3237,3236,3329],[3237,3329,3330],[3238,3237,3330],[3238,3330,3331],[3239,3238,3331],[3239,3331,3332],[3240,3239,3332],[3240,3332,3333],[3241,3240,3333],[3241,3333,3334],[3242,3241,3334],[3242,3334,3335],[3243,3242,3335],[3243,3335,3336],[3244,3243,3336],[3244,3336,3337],[3245,3244,3337],[3245,3337,3338],[3246,3245,3338],[3246,3338,3339],[3247,3246,3339],[3247,3339,3340],[3248,3247,3340],[3248,3340,3341],[3249,3248,3341],[3249,3341,3342],[3250,3249,3342],[3250,3342,3343],[3251,3250,3343],[3251,3343,3344],[3252,3251,3344],[3252,3344,3345],[3253,3252,3345],[3253,3345,3346],[3254,3253,3346],[3254,3346,3347],[3255,3254,3347],[3255,3347,3348],[3256,3255,3348],[3256,3348,3349],[3257,3256,3349],[3257,3349,3350],[3258,3257,3350],[3258,3350,3351],[3259,3258,3351],[3259,3351,3352],[3260,3259,3352],[3260,3352,3353],[3261,3260,3353],[3261,3353,3354],[3262,3261,3354],[3262,3354,3355],[3263,3262,3355],[3263,3355,3356],[3264,3263,3356],[3264,3356,3357],[3265,3264,3357],[3265,3357,3358],[3266,3265,3358],[3266,3358,3328],[11,3266,3328],[3329,3297,3296],[3329,3296,3359],[3330,3329,3359],[3330,3359,3360],[3331,3330,3360],[3331,3360,3361],[3332,3331,3361],[3332,3361,3362],[3333,3332,3362],[3333,3362,3363],[3334,3333,3363],[3334,3363,3364],[3335,3334,3364],[3335,3364,3365],[3336,3335,3365],[3336,3365,3366],[3337,3336,3366],[3337,3366,3367],[3338,3337,3367],[3338,3367,3368],[3339,3338,3368],[3339,3368,3369],[3340,3339,3369],[3340,3369,3370],[3341,3340,3370],[3341,3370,3371],[3342,3341,3371],[3342,3371,3372],[3343,3342,3372],[3343,3372,3373],[3344,3343,3373],[3344,3373,3374],[3345,3344,3374],[3345,3374,3375],[3346,3345,3375],[3346,3375,3376],[3347,3346,3376],[3347,3376,3377],[3348,3347,3377],[3348,3377,3378],[3349,3348,3378],[3349,3378,3379],[3350,3349,3379],[3350,3379,3380],[3351,3350,3380],[3351,3380,3381],[3352,3351,3381],[3352,3381,3382],[3353,3352,3382],[3353,3382,3383],[3354,3353,3383],[3354,3383,3384],[3355,3354,3384],[3355,3384,3385],[3356,3355,3385],[3356,3385,3386],[3357,3356,3386],[3357,3386,3387],[3358,3357,3387],[3358,3387,3327],[3328,3358,3327],[3359,3296,3295],[3359,3295,3388],[3360,3359,3388],[3360,3388,3389],[3361,3360,3389],[3361,3389,3390],[3362,3361,3390],[3362,3390,3391],[3363,3362,3391],[3363,3391,3392],[3364,3363,3392],[3364,3392,3393],[3365,3364,3393],[3365,3393,3394],[3366,3365,3394],[3366,3394,3395],[3367,3366,3395],[3367,3395,3396],[3368,3367,3396],[3368,3396,3397],[3369,3368,3397],[3369,3397,3398],[3370,3369,3398],[3370,3398,3399],[3371,3370,3399],[3371,3399,3400],[3372,3371,3400],[3372,3400,3401],[3373,3372,3401],[3373,3401,3402],[3374,3373,3402],[3374,3402,3403],[3375,3374,3403],[3375,3403,3404],[3376,3375,3404],[3376,3404,3405],[3377,3376,3405],[3377,3405,3406],[3378,3377,3406],[3378,3406,3407],[3379,3378,3407],[3379,3407,3408],[3380,3379,3408],[3380,3408,3409],[3381,3380,3409],[3381,3409,3410],[3382,3381,3410],[3382,3410,3411],[3383,3382,3411],[3383,3411,3412],[3384,3383,3412],[3384,3412,3413],[3385,3384,3413],[3385,3413,3414],[3386,3385,3414],[3386,3414,3415],[3387,3386,3415],[3387,3415,3326],[3327,3387,3326],[3388,3295,3294],[3388,3294,3416],[3389,3388,3416],[3389,3416,3417],[3390,3389,3417],[3390,3417,3418],[3391,3390,3418],[3391,3418,3419],[3392,3391,3419],[3392,3419,3420],[3393,3392,3420],[3393,3420,3421],[3394,3393,3421],[3394,3421,3422],[3395,3394,3422],[3395,3422,3423],[3396,3395,3423],[3396,3423,3424],[3397,3396,3424],[3397,3424,3425],[3398,3397,3425],[3398,3425,3426],[3399,3398,3426],[3399,3426,3427],[3400,3399,3427],[3400,3427,3428],[3401,3400,3428],[3401,3428,3429],[3402,3401,3429],[3402,3429,3430],[3403,3402,3430],[3403,3430,3431],[3404,3403,3431],[3404,3431,3432],[3405,3404,3432],[3405,3432,3433],[3406,3405,3433],[3406,3433,3434],[3407,3406,3434],[3407,3434,3435],[3408,3407,3435],[3408,3435,3436],[3409,3408,3436],[3409,3436,3437],[3410,3409,3437],[3410,3437,3438],[3411,3410,3438],[3411,3438,3439],[3412,3411,3439],[3412,3439,3440],[3413,3412,3440],[3413,3440,3441],[3414,3413,3441],[3414,3441,3442],[3415,3414,3442],[3415,3442,3325],[3326,3415,3325],[3416,3294,3293],[3416,3293,3443],[3417,3416,3443],[3417,3443,3444],[3418,3417,3444],[3418,3444,3445],[3419,3418,3445],[3419,3445,3446],[3420,3419,3446],[3420,3446,3447],[3421,3420,3447],[3421,3447,3448],[3422,3421,3448],[3422,3448,3449],[3423,3422,3449],[3423,3449,3450],[3424,3423,3450],[3424,3450,3451],[3425,3424,3451],[3425,3451,3452],[3426,3425,3452],[3426,3452,3453],[3427,3426,3453],[3427,3453,3454],[3428,3427,3454],[3428,3454,3455],[3429,3428,3455],[3429,3455,3456],[3430,3429,3456],[3430,3456,3457],[3431,3430,3457],[3431,3457,3458],[3432,3431,3458],[3432,3458,3459],[3433,3432,3459],[3433,3459,3460],[3434,3433,3460],[3434,3460,3461],[3435,3434,3461],[3435,3461,3462],[3436,3435,3462],[3436,3462,3463],[3437,3436,3463],[3437,3463,3464],[3438,3437,3464],[3438,3464,3465],[3439,3438,3465],[3439,3465,3466],[3440,3439,3466],[3440,3466,3467],[3441,3440,3467],[3441,3467,3468],[3442,3441,3468],[3442,3468,3324],[3325,3442,3324],[3443,3293,3292],[3443,3292,3469],[3444,3443,3469],[3444,3469,3470],[3445,3444,3470],[3445,3470,3471],[3446,3445,3471],[3446,3471,3472],[3447,3446,3472],[3447,3472,3473],[3448,3447,3473],[3448,3473,3474],[3449,3448,3474],[3449,3474,3475],[3450,3449,3475],[3450,3475,3476],[3451,3450,3476],[3451,3476,3477],[3452,3451,3477],[3452,3477,3478],[3453,3452,3478],[3453,3478,3479],[3454,3453,3479],[3454,3479,3480],[3455,3454,3480],[3455,3480,3481],[3456,3455,3481],[3456,3481,3482],[3457,3456,3482],[3457,3482,3483],[3458,3457,3483],[3458,3483,3484],[3459,3458,3484],[3459,3484,3485],[3460,3459,3485],[3460,3485,3486],[3461,3460,3486],[3461,3486,3487],[3462,3461,3487],[3462,3487,3488],[3463,3462,3488],[3463,3488,3489],[3464,3463,3489],[3464,3489,3490],[3465,3464,3490],[3465,3490,3491],[3466,3465,3491],[3466,3491,3492],[3467,3466,3492],[3467,3492,3493],[3468,3467,3493],[3468,3493,3323],[3324,3468,3323],[3469,3292,3291],[3469,3291,3494],[3470,3469,3494],[3470,3494,3495],[3471,3470,3495],[3471,3495,3496],[3472,3471,3496],[3472,3496,3497],[3473,3472,3497],[3473,3497,3498],[3474,3473,3498],[3474,3498,3499],[3475,3474,3499],[3475,3499,3500],[3476,3475,3500],[3476,3500,3501],[3477,3476,3501],[3477,3501,3502],[3478,3477,3502],[3478,3502,3503],[3479,3478,3503],[3479,3503,3504],[3480,3479,3504],[3480,3504,3505],[3481,3480,3505],[3481,3505,3506],[3482,3481,3506],[3482,3506,3507],[3483,3482,3507],[3483,3507,3508],[3484,3483,3508],[3484,3508,3509],[3485,3484,3509],[3485,3509,3510],[3486,3485,3510],[3486,3510,3511],[3487,3486,3511],[3487,3511,3512],[3488,3487,3512],[3488,3512,3513],[3489,3488,3513],[3489,3513,3514],[3490,3489,3514],[3490,3514,3515],[3491,3490,3515],[3491,3515,3516],[3492,3491,3516],[3492,3516,3517],[3493,3492,3517],[3493,3517,3322],[3323,3493,3322],[3494,3291,3290],[3494,3290,3518],[3495,3494,3518],[3495,3518,3519],[3496,3495,3519],[3496,3519,3520],[3497,3496,3520],[3497,3520,3521],[3498,3497,3521],[3498,3521,3522],[3499,3498,3522],[3499,3522,3523],[3500,3499,3523],[3500,3523,3524],[3501,3500,3524],[3501,3524,3525],[3502,3501,3525],[3502,3525,3526],[3503,3502,3526],[3503,3526,3527],[3504,3503,3527],[3504,3527,3528],[3505,3504,3528],[3505,3528,3529],[3506,3505,3529],[3506,3529,3530],[3507,3506,3530],[3507,3530,3531],[3508,3507,3531],[3508,3531,3532],[3509,3508,3532],[3509,3532,3533],[3510,3509,3533],[3510,3533,3534],[3511,3510,3534],[3511,3534,3535],[3512,3511,3535],[3512,3535,3536],[3513,3512,3536],[3513,3536,3537],[3514,3513,3537],[3514,3537,3538],[3515,3514,3538],[3515,3538,3539],[3516,3515,3539],[3516,3539,3540],[3517,3516,3540],[3517,3540,3321],[3322,3517,3321],[3518,3290,3289],[3518,3289,3541],[3519,3518,3541],[3519,3541,3542],[3520,3519,3542],[3520,3542,3543],[3521,3520,3543],[3521,3543,3544],[3522,3521,3544],[3522,3544,3545],[3523,3522,3545],[3523,3545,3546],[3524,3523,3546],[3524,3546,3547],[3525,3524,3547],[3525,3547,3548],[3526,3525,3548],[3526,3548,3549],[3527,3526,3549],[3527,3549,3550],[3528,3527,3550],[3528,3550,3551],[3529,3528,3551],[3529,3551,3552],[3530,3529,3552],[3530,3552,3553],[3531,3530,3553],[3531,3553,3554],[3532,3531,3554],[3532,3554,3555],[3533,3532,3555],[3533,3555,3556],[3534,3533,3556],[3534,3556,3557],[3535,3534,3557],[3535,3557,3558],[3536,3535,3558],[3536,3558,3559],[3537,3536,3559],[3537,3559,3560],[3538,3537,3560],[3538,3560,3561],[3539,3538,3561],[3539,3561,3562],[3540,3539,3562],[3540,3562,3320],[3321,3540,3320],[3541,3289,3288],[3541,3288,3563],[3542,3541,3563],[3542,3563,3564],[3543,3542,3564],[3543,3564,3565],[3544,3543,3565],[3544,3565,3566],[3545,3544,3566],[3545,3566,3567],[3546,3545,3567],[3546,3567,3568],[3547,3546,3568],[3547,3568,3569],[3548,3547,3569],[3548,3569,3570],[3549,3548,3570],[3549,3570,3571],[3550,3549,3571],[3550,3571,3572],[3551,3550,3572],[3551,3572,3573],[3552,3551,3573],[3552,3573,3574],[3553,3552,3574],[3553,3574,3575],[3554,3553,3575],[3554,3575,3576],[3555,3554,3576],[3555,3576,3577],[3556,3555,3577],[3556,3577,3578],[3557,3556,3578],[3557,3578,3579],[3558,3557,3579],[3558,3579,3580],[3559,3558,3580],[3559,3580,3581],[3560,3559,3581],[3560,3581,3582],[3561,3560,3582],[3561,3582,3583],[3562,3561,3583],[3562,3583,3319],[3320,3562,3319],[3563,3288,3287],[3563,3287,3584],[3564,3563,3584],[3564,3584,3585],[3565,3564,3585],[3565,3585,3586],[3566,3565,3586],[3566,3586,3587],[3567,3566,3587],[3567,3587,3588],[3568,3567,3588],[3568,3588,3589],[3569,3568,3589],[3569,3589,3590],[3570,3569,3590],[3570,3590,3591],[3571,3570,3591],[3571,3591,3592],[3572,3571,3592],[3572,3592,3593],[3573,3572,3593],[3573,3593,3594],[3574,3573,3594],[3574,3594,3595],[3575,3574,3595],[3575,3595,3596],[3576,3575,3596],[3576,3596,3597],[3577,3576,3597],[3577,3597,3598],[3578,3577,3598],[3578,3598,3599],[3579,3578,3599],[3579,3599,3600],[3580,3579,3600],[3580,3600,3601],[3581,3580,3601],[3581,3601,3602],[3582,3581,3602],[3582,3602,3603],[3583,3582,3603],[3583,3603,3318],[3319,3583,3318],[3584,3287,3286],[3584,3286,3604],[3585,3584,3604],[3585,3604,3605],[3586,3585,3605],[3586,3605,3606],[3587,3586,3606],[3587,3606,3607],[3588,3587,3607],[3588,3607,3608],[3589,3588,3608],[3589,3608,3609],[3590,3589,3609],[3590,3609,3610],[3591,3590,3610],[3591,3610,3611],[3592,3591,3611],[3592,3611,3612],[3593,3592,3612],[3593,3612,3613],[3594,3593,3613],[3594,3613,3614],[3595,3594,3614],[3595,3614,3615],[3596,3595,3615],[3596,3615,3616],[3597,3596,3616],[3597,3616,3617],[3598,3597,3617],[3598,3617,3618],[3599,3598,3618],[3599,3618,3619],[3600,3599,3619],[3600,3619,3620],[3601,3600,3620],[3601,3620,3621],[3602,3601,3621],[3602,3621,3622],[3603,3602,3622],[3603,3622,3317],[3318,3603,3317],[3604,3286,3285],[3604,3285,3623],[3605,3604,3623],[3605,3623,3624],[3606,3605,3624],[3606,3624,3625],[3607,3606,3625],[3607,3625,3626],[3608,3607,3626],[3608,3626,3627],[3609,3608,3627],[3609,3627,3628],[3610,3609,3628],[3610,3628,3629],[3611,3610,3629],[3611,3629,3630],[3612,3611,3630],[3612,3630,3631],[3613,3612,3631],[3613,3631,3632],[3614,3613,3632],[3614,3632,3633],[3615,3614,3633],[3615,3633,3634],[3616,3615,3634],[3616,3634,3635],[3617,3616,3635],[3617,3635,3636],[3618,3617,3636],[3618,3636,3637],[3619,3618,3637],[3619,3637,3638],[3620,3619,3638],[3620,3638,3639],[3621,3620,3639],[3621,3639,3640],[3622,3621,3640],[3622,3640,3316],[3317,3622,3316],[3623,3285,3284],[3623,3284,3641],[3624,3623,3641],[3624,3641,3642],[3625,3624,3642],[3625,3642,3643],[3626,3625,3643],[3626,3643,3644],[3627,3626,3644],[3627,3644,3645],[3628,3627,3645],[3628,3645,3646],[3629,3628,3646],[3629,3646,3647],[3630,3629,3647],[3630,3647,3648],[3631,3630,3648],[3631,3648,3649],[3632,3631,3649],[3632,3649,3650],[3633,3632,3650],[3633,3650,3651],[3634,3633,3651],[3634,3651,3652],[3635,3634,3652],[3635,3652,3653],[3636,3635,3653],[3636,3653,3654],[3637,3636,3654],[3637,3654,3655],[3638,3637,3655],[3638,3655,3656],[3639,3638,3656],[3639,3656,3657],[3640,3639,3657],[3640,3657,3315],[3316,3640,3315],[3641,3284,3283],[3641,3283,3658],[3642,3641,3658],[3642,3658,3659],[3643,3642,3659],[3643,3659,3660],[3644,3643,3660],[3644,3660,3661],[3645,3644,3661],[3645,3661,3662],[3646,3645,3662],[3646,3662,3663],[3647,3646,3663],[3647,3663,3664],[3648,3647,3664],[3648,3664,3665],[3649,3648,3665],[3649,3665,3666],[3650,3649,3666],[3650,3666,3667],[3651,3650,3667],[3651,3667,3668],[3652,3651,3668],[3652,3668,3669],[3653,3652,3669],[3653,3669,3670],[3654,3653,3670],[3654,3670,3671],[3655,3654,3671],[3655,3671,3672],[3656,3655,3672],[3656,3672,3673],[3657,3656,3673],[3657,3673,3314],[3315,3657,3314],[3658,3283,3282],[3658,3282,3674],[3659,3658,3674],[3659,3674,3675],[3660,3659,3675],[3660,3675,3676],[3661,3660,3676],[3661,3676,3677],[3662,3661,3677],[3662,3677,3678],[3663,3662,3678],[3663,3678,3679],[3664,3663,3679],[3664,3679,3680],[3665,3664,3680],[3665,3680,3681],[3666,3665,3681],[3666,3681,3682],[3667,3666,3682],[3667,3682,3683],[3668,3667,3683],[3668,3683,3684],[3669,3668,3684],[3669,3684,3685],[3670,3669,3685],[3670,3685,3686],[3671,3670,3686],[3671,3686,3687],[3672,3671,3687],[3672,3687,3688],[3673,3672,3688],[3673,3688,3313],[3314,3673,3313],[3674,3282,3281],[3674,3281,3689],[3675,3674,3689],[3675,3689,3690],[3676,3675,3690],[3676,3690,3691],[3677,3676,3691],[3677,3691,3692],[3678,3677,3692],[3678,3692,3693],[3679,3678,3693],[3679,3693,3694],[3680,3679,3694],[3680,3694,3695],[3681,3680,3695],[3681,3695,3696],[3682,3681,3696],[3682,3696,3697],[3683,3682,3697],[3683,3697,3698],[3684,3683,3698],[3684,3698,3699],[3685,3684,3699],[3685,3699,3700],[3686,3685,3700],[3686,3700,3701],[3687,3686,3701],[3687,3701,3702],[3688,3687,3702],[3688,3702,3312],[3313,3688,3312],[3689,3281,3280],[3689,3280,3703],[3690,3689,3703],[3690,3703,3704],[3691,3690,3704],[3691,3704,3705],[3692,3691,3705],[3692,3705,3706],[3693,3692,3706],[3693,3706,3707],[3694,3693,3707],[3694,3707,3708],[3695,3694,3708],[3695,3708,3709],[3696,3695,3709],[3696,3709,3710],[3697,3696,3710],[3697,3710,3711],[3698,3697,3711],[3698,3711,3712],[3699,3698,3712],[3699,3712,3713],[3700,3699,3713],[3700,3713,3714],[3701,3700,3714],[3701,3714,3715],[3702,3701,3715],[3702,3715,3311],[3312,3702,3311],[3703,3280,3279],[3703,3279,3716],[3704,3703,3716],[3704,3716,3717],[3705,3704,3717],[3705,3717,3718],[3706,3705,3718],[3706,3718,3719],[3707,3706,3719],[3707,3719,3720],[3708,3707,3720],[3708,3720,3721],[3709,3708,3721],[3709,3721,3722],[3710,3709,3722],[3710,3722,3723],[3711,3710,3723],[3711,3723,3724],[3712,3711,3724],[3712,3724,3725],[3713,3712,3725],[3713,3725,3726],[3714,3713,3726],[3714,3726,3727],[3715,3714,3727],[3715,3727,3310],[3311,3715,3310],[3716,3279,3278],[3716,3278,3728],[3717,3716,3728],[3717,3728,3729],[3718,3717,3729],[3718,3729,3730],[3719,3718,3730],[3719,3730,3731],[3720,3719,3731],[3720,3731,3732],[3721,3720,3732],[3721,3732,3733],[3722,3721,3733],[3722,3733,3734],[3723,3722,3734],[3723,3734,3735],[3724,3723,3735],[3724,3735,3736],[3725,3724,3736],[3725,3736,3737],[3726,3725,3737],[3726,3737,3738],[3727,3726,3738],[3727,3738,3309],[3310,3727,3309],[3728,3278,3277],[3728,3277,3739],[3729,3728,3739],[3729,3739,3740],[3730,3729,3740],[3730,3740,3741],[3731,3730,3741],[3731,3741,3742],[3732,3731,3742],[3732,3742,3743],[3733,3732,3743],[3733,3743,3744],[3734,3733,3744],[3734,3744,3745],[3735,3734,3745],[3735,3745,3746],[3736,3735,3746],[3736,3746,3747],[3737,3736,3747],[3737,3747,3748],[3738,3737,3748],[3738,3748,3308],[3309,3738,3308],[3739,3277,3276],[3739,3276,3749],[3740,3739,3749],[3740,3749,3750],[3741,3740,3750],[3741,3750,3751],[3742,3741,3751],[3742,3751,3752],[3743,3742,3752],[3743,3752,3753],[3744,3743,3753],[3744,3753,3754],[3745,3744,3754],[3745,3754,3755],[3746,3745,3755],[3746,3755,3756],[3747,3746,3756],[3747,3756,3757],[3748,3747,3757],[3748,3757,3307],[3308,3748,3307],[3749,3276,3275],[3749,3275,3758],[3750,3749,3758],[3750,3758,3759],[3751,3750,3759],[3751,3759,3760],[3752,3751,3760],[3752,3760,3761],[3753,3752,3761],[3753,3761,3762],[3754,3753,3762],[3754,3762,3763],[3755,3754,3763],[3755,3763,3764],[3756,3755,3764],[3756,3764,3765],[3757,3756,3765],[3757,3765,3306],[3307,3757,3306],[3758,3275,3274],[3758,3274,3766],[3759,3758,3766],[3759,3766,3767],[3760,3759,3767],[3760,3767,3768],[3761,3760,3768],[3761,3768,3769],[3762,3761,3769],[3762,3769,3770],[3763,3762,3770],[3763,3770,3771],[3764,3763,3771],[3764,3771,3772],[3765,3764,3772],[3765,3772,3305],[3306,3765,3305],[3766,3274,3273],[3766,3273,3773],[3767,3766,3773],[3767,3773,3774],[3768,3767,3774],[3768,3774,3775],[3769,3768,3775],[3769,3775,3776],[3770,3769,3776],[3770,3776,3777],[3771,3770,3777],[3771,3777,3778],[3772,3771,3778],[3772,3778,3304],[3305,3772,3304],[3773,3273,3272],[3773,3272,3779],[3774,3773,3779],[3774,3779,3780],[3775,3774,3780],[3775,3780,3781],[3776,3775,3781],[3776,3781,3782],[3777,3776,3782],[3777,3782,3783],[3778,3777,3783],[3778,3783,3303],[3304,3778,3303],[3779,3272,3271],[3779,3271,3784],[3780,3779,3784],[3780,3784,3785],[3781,3780,3785],[3781,3785,3786],[3782,3781,3786],[3782,3786,3787],[3783,3782,3787],[3783,3787,3302],[3303,3783,3302],[3784,3271,3270],[3784,3270,3788],[3785,3784,3788],[3785,3788,3789],[3786,3785,3789],[3786,3789,3790],[3787,3786,3790],[3787,3790,3301],[3302,3787,3301],[3788,3270,3269],[3788,3269,3791],[3789,3788,3791],[3789,3791,3792],[3790,3789,3792],[3790,3792,3300],[3301,3790,3300],[3791,3269,3268],[3791,3268,3793],[3792,3791,3793],[3792,3793,3299],[3300,3792,3299],[3793,3268,3267],[3793,3267,3298],[3299,3793,3298],[3298,3267,6],[3824,4,3855],[3824,3855,3856],[3823,3824,3856],[3823,3856,3857],[3822,3823,3857],[3822,3857,3858],[3821,3822,3858],[3821,3858,3859],[3820,3821,3859],[3820,3859,3860],[3819,3820,3860],[3819,3860,3861],[3818,3819,3861],[3818,3861,3862],[3817,3818,3862],[3817,3862,3863],[3816,3817,3863],[3816,3863,3864],[3815,3816,3864],[3815,3864,3865],[3814,3815,3865],[3814,3865,3866],[3813,3814,3866],[3813,3866,3867],[3812,3813,3867],[3812,3867,3868],[3811,3812,3868],[3811,3868,3869],[3810,3811,3869],[3810,3869,3870],[3809,3810,3870],[3809,3870,3871],[3808,3809,3871],[3808,3871,3872],[3807,3808,3872],[3807,3872,3873],[3806,3807,3873],[3806,3873,3874],[3805,3806,3874],[3805,3874,3875],[3804,3805,3875],[3804,3875,3876],[3803,3804,3876],[3803,3876,3877],[3802,3803,3877],[3802,3877,3878],[3801,3802,3878],[3801,3878,3879],[3800,3801,3879],[3800,3879,3880],[3799,3800,3880],[3799,3880,3881],[3798,3799,3881],[3798,3881,3882],[3797,3798,3882],[3797,3882,3883],[3796,3797,3883],[3796,3883,3884],[3795,3796,3884],[3795,3884,3885],[3794,3795,3885],[3794,3885,1127],[1,3794,1127],[3856,3855,3854],[3856,3854,3886],[3857,3856,3886],[3857,3886,3887],[3858,3857,3887],[3858,3887,3888],[3859,3858,3888],[3859,3888,3889],[3860,3859,3889],[3860,3889,3890],[3861,3860,3890],[3861,3890,3891],[3862,3861,3891],[3862,3891,3892],[3863,3862,3892],[3863,3892,3893],[3864,3863,3893],[3864,3893,3894],[3865,3864,3894],[3865,3894,3895],[3866,3865,3895],[3866,3895,3896],[3867,3866,3896],[3867,3896,3897],[3868,3867,3897],[3868,3897,3898],[3869,3868,3898],[3869,3898,3899],[3870,3869,3899],[3870,3899,3900],[3871,3870,3900],[3871,3900,3901],[3872,3871,3901],[3872,3901,3902],[3873,3872,3902],[3873,3902,3903],[3874,3873,3903],[3874,3903,3904],[3875,3874,3904],[3875,3904,3905],[3876,3875,3905],[3876,3905,3906],[3877,3876,3906],[3877,3906,3907],[3878,3877,3907],[3878,3907,3908],[3879,3878,3908],[3879,3908,3909],[3880,3879,3909],[3880,3909,3910],[3881,3880,3910],[3881,3910,3911],[3882,3881,3911],[3882,3911,3912],[3883,3882,3912],[3883,3912,3913],[3884,3883,3913],[3884,3913,3914],[3885,3884,3914],[3885,3914,1126],[1127,3885,1126],[3886,3854,3853],[3886,3853,3915],[3887,3886,3915],[3887,3915,3916],[3888,3887,3916],[3888,3916,3917],[3889,3888,3917],[3889,3917,3918],[3890,3889,3918],[3890,3918,3919],[3891,3890,3919],[3891,3919,3920],[3892,3891,3920],[3892,3920,3921],[3893,3892,3921],[3893,3921,3922],[3894,3893,3922],[3894,3922,3923],[3895,3894,3923],[3895,3923,3924],[3896,3895,3924],[3896,3924,3925],[3897,3896,3925],[3897,3925,3926],[3898,3897,3926],[3898,3926,3927],[3899,3898,3927],[3899,3927,3928],[3900,3899,3928],[3900,3928,3929],[3901,3900,3929],[3901,3929,3930],[3902,3901,3930],[3902,3930,3931],[3903,3902,3931],[3903,3931,3932],[3904,3903,3932],[3904,3932,3933],[3905,3904,3933],[3905,3933,3934],[3906,3905,3934],[3906,3934,3935],[3907,3906,3935],[3907,3935,3936],[3908,3907,3936],[3908,3936,3937],[3909,3908,3937],[3909,3937,3938],[3910,3909,3938],[3910,3938,3939],[3911,3910,3939],[3911,3939,3940],[3912,3911,3940],[3912,3940,3941],[3913,3912,3941],[3913,3941,3942],[3914,3913,3942],[3914,3942,1125],[1126,3914,1125],[3915,3853,3852],[3915,3852,3943],[3916,3915,3943],[3916,3943,3944],[3917,3916,3944],[3917,3944,3945],[3918,3917,3945],[3918,3945,3946],[3919,3918,3946],[3919,3946,3947],[3920,3919,3947],[3920,3947,3948],[3921,3920,3948],[3921,3948,3949],[3922,3921,3949],[3922,3949,3950],[3923,3922,3950],[3923,3950,3951],[3924,3923,3951],[3924,3951,3952],[3925,3924,3952],[3925,3952,3953],[3926,3925,3953],[3926,3953,3954],[3927,3926,3954],[3927,3954,3955],[3928,3927,3955],[3928,3955,3956],[3929,3928,3956],[3929,3956,3957],[3930,3929,3957],[3930,3957,3958],[3931,3930,3958],[3931,3958,3959],[3932,3931,3959],[3932,3959,3960],[3933,3932,3960],[3933,3960,3961],[3934,3933,3961],[3934,3961,3962],[3935,3934,3962],[3935,3962,3963],[3936,3935,3963],[3936,3963,3964],[3937,3936,3964],[3937,3964,3965],[3938,3937,3965],[3938,3965,3966],[3939,3938,3966],[3939,3966,3967],[3940,3939,3967],[3940,3967,3968],[3941,3940,3968],[3941,3968,3969],[3942,3941,3969],[3942,3969,1124],[1125,3942,1124],[3943,3852,3851],[3943,3851,3970],[3944,3943,3970],[3944,3970,3971],[3945,3944,3971],[3945,3971,3972],[3946,3945,3972],[3946,3972,3973],[3947,3946,3973],[3947,3973,3974],[3948,3947,3974],[3948,3974,3975],[3949,3948,3975],[3949,3975,3976],[3950,3949,3976],[3950,3976,3977],[3951,3950,3977],[3951,3977,3978],[3952,3951,3978],[3952,3978,3979],[3953,3952,3979],[3953,3979,3980],[3954,3953,3980],[3954,3980,3981],[3955,3954,3981],[3955,3981,3982],[3956,3955,3982],[3956,3982,3983],[3957,3956,3983],[3957,3983,3984],[3958,3957,3984],[3958,3984,3985],[3959,3958,3985],[3959,3985,3986],[3960,3959,3986],[3960,3986,3987],[3961,3960,3987],[3961,3987,3988],[3962,3961,3988],[3962,3988,3989],[3963,3962,3989],[3963,3989,3990],[3964,3963,3990],[3964,3990,3991],[3965,3964,3991],[3965,3991,3992],[3966,3965,3992],[3966,3992,3993],[3967,3966,3993],[3967,3993,3994],[3968,3967,3994],[3968,3994,3995],[3969,3968,3995],[3969,3995,1123],[1124,3969,1123],[3970,3851,3850],[3970,3850,3996],[3971,3970,3996],[3971,3996,3997],[3972,3971,3997],[3972,3997,3998],[3973,3972,3998],[3973,3998,3999],[3974,3973,3999],[3974,3999,4000],[3975,3974,4000],[3975,4000,4001],[3976,3975,4001],[3976,4001,4002],[3977,3976,4002],[3977,4002,4003],[3978,3977,4003],[3978,4003,4004],[3979,3978,4004],[3979,4004,4005],[3980,3979,4005],[3980,4005,4006],[3981,3980,4006],[3981,4006,4007],[3982,3981,4007],[3982,4007,4008],[3983,3982,4008],[3983,4008,4009],[3984,3983,4009],[3984,4009,4010],[3985,3984,4010],[3985,4010,4011],[3986,3985,4011],[3986,4011,4012],[3987,3986,4012],[3987,4012,4013],[3988,3987,4013],[3988,4013,4014],[3989,3988,4014],[3989,4014,4015],[3990,3989,4015],[3990,4015,4016],[3991,3990,4016],[3991,4016,4017],[3992,3991,4017],[3992,4017,4018],[3993,3992,4018],[3993,4018,4019],[3994,3993,4019],[3994,4019,4020],[3995,3994,4020],[3995,4020,1122],[1123,3995,1122],[3996,3850,3849],[3996,3849,4021],[3997,3996,4021],[3997,4021,4022],[3998,3997,4022],[3998,4022,4023],[3999,3998,4023],[3999,4023,4024],[4000,3999,4024],[4000,4024,4025],[4001,4000,4025],[4001,4025,4026],[4002,4001,4026],[4002,4026,4027],[4003,4002,4027],[4003,4027,4028],[4004,4003,4028],[4004,4028,4029],[4005,4004,4029],[4005,4029,4030],[4006,4005,4030],[4006,4030,4031],[4007,4006,4031],[4007,4031,4032],[4008,4007,4032],[4008,4032,4033],[4009,4008,4033],[4009,4033,4034],[4010,4009,4034],[4010,4034,4035],[4011,4010,4035],[4011,4035,4036],[4012,4011,4036],[4012,4036,4037],[4013,4012,4037],[4013,4037,4038],[4014,4013,4038],[4014,4038,4039],[4015,4014,4039],[4015,4039,4040],[4016,4015,4040],[4016,4040,4041],[4017,4016,4041],[4017,4041,4042],[4018,4017,4042],[4018,4042,4043],[4019,4018,4043],[4019,4043,4044],[4020,4019,4044],[4020,4044,1121],[1122,4020,1121],[4021,3849,3848],[4021,3848,4045],[4022,4021,4045],[4022,4045,4046],[4023,4022,4046],[4023,4046,4047],[4024,4023,4047],[4024,4047,4048],[4025,4024,4048],[4025,4048,4049],[4026,4025,4049],[4026,4049,4050],[4027,4026,4050],[4027,4050,4051],[4028,4027,4051],[4028,4051,4052],[4029,4028,4052],[4029,4052,4053],[4030,4029,4053],[4030,4053,4054],[4031,4030,4054],[4031,4054,4055],[4032,4031,4055],[4032,4055,4056],[4033,4032,4056],[4033,4056,4057],[4034,4033,4057],[4034,4057,4058],[4035,4034,4058],[4035,4058,4059],[4036,4035,4059],[4036,4059,4060],[4037,4036,4060],[4037,4060,4061],[4038,4037,4061],[4038,4061,4062],[4039,4038,4062],[4039,4062,4063],[4040,4039,4063],[4040,4063,4064],[4041,4040,4064],[4041,4064,4065],[4042,4041,4065],[4042,4065,4066],[4043,4042,4066],[4043,4066,4067],[4044,4043,4067],[4044,4067,1120],[1121,4044,1120],[4045,3848,3847],[4045,3847,4068],[4046,4045,4068],[4046,4068,4069],[4047,4046,4069],[4047,4069,4070],[4048,4047,4070],[4048,4070,4071],[4049,4048,4071],[4049,4071,4072],[4050,4049,4072],[4050,4072,4073],[4051,4050,4073],[4051,4073,4074],[4052,4051,4074],[4052,4074,4075],[4053,4052,4075],[4053,4075,4076],[4054,4053,4076],[4054,4076,4077],[4055,4054,4077],[4055,4077,4078],[4056,4055,4078],[4056,4078,4079],[4057,4056,4079],[4057,4079,4080],[4058,4057,4080],[4058,4080,4081],[4059,4058,4081],[4059,4081,4082],[4060,4059,4082],[4060,4082,4083],[4061,4060,4083],[4061,4083,4084],[4062,4061,4084],[4062,4084,4085],[4063,4062,4085],[4063,4085,4086],[4064,4063,4086],[4064,4086,4087],[4065,4064,4087],[4065,4087,4088],[4066,4065,4088],[4066,4088,4089],[4067,4066,4089],[4067,4089,1119],[1120,4067,1119],[4068,3847,3846],[4068,3846,4090],[4069,4068,4090],[4069,4090,4091],[4070,4069,4091],[4070,4091,4092],[4071,4070,4092],[4071,4092,4093],[4072,4071,4093],[4072,4093,4094],[4073,4072,4094],[4073,4094,4095],[4074,4073,4095],[4074,4095,4096],[4075,4074,4096],[4075,4096,4097],[4076,4075,4097],[4076,4097,4098],[4077,4076,4098],[4077,4098,4099],[4078,4077,4099],[4078,4099,4100],[4079,4078,4100],[4079,4100,4101],[4080,4079,4101],[4080,4101,4102],[4081,4080,4102],[4081,4102,4103],[4082,4081,4103],[4082,4103,4104],[4083,4082,4104],[4083,4104,4105],[4084,4083,4105],[4084,4105,4106],[4085,4084,4106],[4085,4106,4107],[4086,4085,4107],[4086,4107,4108],[4087,4086,4108],[4087,4108,4109],[4088,4087,4109],[4088,4109,4110],[4089,4088,4110],[4089,4110,1118],[1119,4089,1118],[4090,3846,3845],[4090,3845,4111],[4091,4090,4111],[4091,4111,4112],[4092,4091,4112],[4092,4112,4113],[4093,4092,4113],[4093,4113,4114],[4094,4093,4114],[4094,4114,4115],[4095,4094,4115],[4095,4115,4116],[4096,4095,4116],[4096,4116,4117],[4097,4096,4117],[4097,4117,4118],[4098,4097,4118],[4098,4118,4119],[4099,4098,4119],[4099,4119,4120],[4100,4099,4120],[4100,4120,4121],[4101,4100,4121],[4101,4121,4122],[4102,4101,4122],[4102,4122,4123],[4103,4102,4123],[4103,4123,4124],[4104,4103,4124],[4104,4124,4125],[4105,4104,4125],[4105,4125,4126],[4106,4105,4126],[4106,4126,4127],[4107,4106,4127],[4107,4127,4128],[4108,4107,4128],[4108,4128,4129],[4109,4108,4129],[4109,4129,4130],[4110,4109,4130],[4110,4130,1117],[1118,4110,1117],[4111,3845,3844],[4111,3844,4131],[4112,4111,4131],[4112,4131,4132],[4113,4112,4132],[4113,4132,4133],[4114,4113,4133],[4114,4133,4134],[4115,4114,4134],[4115,4134,4135],[4116,4115,4135],[4116,4135,4136],[4117,4116,4136],[4117,4136,4137],[4118,4117,4137],[4118,4137,4138],[4119,4118,4138],[4119,4138,4139],[4120,4119,4139],[4120,4139,4140],[4121,4120,4140],[4121,4140,4141],[4122,4121,4141],[4122,4141,4142],[4123,4122,4142],[4123,4142,4143],[4124,4123,4143],[4124,4143,4144],[4125,4124,4144],[4125,4144,4145],[4126,4125,4145],[4126,4145,4146],[4127,4126,4146],[4127,4146,4147],[4128,4127,4147],[4128,4147,4148],[4129,4128,4148],[4129,4148,4149],[4130,4129,4149],[4130,4149,1116],[1117,4130,1116],[4131,3844,3843],[4131,3843,4150],[4132,4131,4150],[4132,4150,4151],[4133,4132,4151],[4133,4151,4152],[4134,4133,4152],[4134,4152,4153],[4135,4134,4153],[4135,4153,4154],[4136,4135,4154],[4136,4154,4155],[4137,4136,4155],[4137,4155,4156],[4138,4137,4156],[4138,4156,4157],[4139,4138,4157],[4139,4157,4158],[4140,4139,4158],[4140,4158,4159],[4141,4140,4159],[4141,4159,4160],[4142,4141,4160],[4142,4160,4161],[4143,4142,4161],[4143,4161,4162],[4144,4143,4162],[4144,4162,4163],[4145,4144,4163],[4145,4163,4164],[4146,4145,4164],[4146,4164,4165],[4147,4146,4165],[4147,4165,4166],[4148,4147,4166],[4148,4166,4167],[4149,4148,4167],[4149,4167,1115],[1116,4149,1115],[4150,3843,3842],[4150,3842,4168],[4151,4150,4168],[4151,4168,4169],[4152,4151,4169],[4152,4169,4170],[4153,4152,4170],[4153,4170,4171],[4154,4153,4171],[4154,4171,4172],[4155,4154,4172],[4155,4172,4173],[4156,4155,4173],[4156,4173,4174],[4157,4156,4174],[4157,4174,4175],[4158,4157,4175],[4158,4175,4176],[4159,4158,4176],[4159,4176,4177],[4160,4159,4177],[4160,4177,4178],[4161,4160,4178],[4161,4178,4179],[4162,4161,4179],[4162,4179,4180],[4163,4162,4180],[4163,4180,4181],[4164,4163,4181],[4164,4181,4182],[4165,4164,4182],[4165,4182,4183],[4166,4165,4183],[4166,4183,4184],[4167,4166,4184],[4167,4184,1114],[1115,4167,1114],[4168,3842,3841],[4168,3841,4185],[4169,4168,4185],[4169,4185,4186],[4170,4169,4186],[4170,4186,4187],[4171,4170,4187],[4171,4187,4188],[4172,4171,4188],[4172,4188,4189],[4173,4172,4189],[4173,4189,4190],[4174,4173,4190],[4174,4190,4191],[4175,4174,4191],[4175,4191,4192],[4176,4175,4192],[4176,4192,4193],[4177,4176,4193],[4177,4193,4194],[4178,4177,4194],[4178,4194,4195],[4179,4178,4195],[4179,4195,4196],[4180,4179,4196],[4180,4196,4197],[4181,4180,4197],[4181,4197,4198],[4182,4181,4198],[4182,4198,4199],[4183,4182,4199],[4183,4199,4200],[4184,4183,4200],[4184,4200,1113],[1114,4184,1113],[4185,3841,3840],[4185,3840,4201],[4186,4185,4201],[4186,4201,4202],[4187,4186,4202],[4187,4202,4203],[4188,4187,4203],[4188,4203,4204],[4189,4188,4204],[4189,4204,4205],[4190,4189,4205],[4190,4205,4206],[4191,4190,4206],[4191,4206,4207],[4192,4191,4207],[4192,4207,4208],[4193,4192,4208],[4193,4208,4209],[4194,4193,4209],[4194,4209,4210],[4195,4194,4210],[4195,4210,4211],[4196,4195,4211],[4196,4211,4212],[4197,4196,4212],[4197,4212,4213],[4198,4197,4213],[4198,4213,4214],[4199,4198,4214],[4199,4214,4215],[4200,4199,4215],[4200,4215,1112],[1113,4200,1112],[4201,3840,3839],[4201,3839,4216],[4202,4201,4216],[4202,4216,4217],[4203,4202,4217],[4203,4217,4218],[4204,4203,4218],[4204,4218,4219],[4205,4204,4219],[4205,4219,4220],[4206,4205,4220],[4206,4220,4221],[4207,4206,4221],[4207,4221,4222],[4208,4207,4222],[4208,4222,4223],[4209,4208,4223],[4209,4223,4224],[4210,4209,4224],[4210,4224,4225],[4211,4210,4225],[4211,4225,4226],[4212,4211,4226],[4212,4226,4227],[4213,4212,4227],[4213,4227,4228],[4214,4213,4228],[4214,4228,4229],[4215,4214,4229],[4215,4229,1111],[1112,4215,1111],[4216,3839,3838],[4216,3838,4230],[4217,4216,4230],[4217,4230,4231],[4218,4217,4231],[4218,4231,4232],[4219,4218,4232],[4219,4232,4233],[4220,4219,4233],[4220,4233,4234],[4221,4220,4234],[4221,4234,4235],[4222,4221,4235],[4222,4235,4236],[4223,4222,4236],[4223,4236,4237],[4224,4223,4237],[4224,4237,4238],[4225,4224,4238],[4225,4238,4239],[4226,4225,4239],[4226,4239,4240],[4227,4226,4240],[4227,4240,4241],[4228,4227,4241],[4228,4241,4242],[4229,4228,4242],[4229,4242,1110],[1111,4229,1110],[4230,3838,3837],[4230,3837,4243],[4231,4230,4243],[4231,4243,4244],[4232,4231,4244],[4232,4244,4245],[4233,4232,4245],[4233,4245,4246],[4234,4233,4246],[4234,4246,4247],[4235,4234,4247],[4235,4247,4248],[4236,4235,4248],[4236,4248,4249],[4237,4236,4249],[4237,4249,4250],[4238,4237,4250],[4238,4250,4251],[4239,4238,4251],[4239,4251,4252],[4240,4239,4252],[4240,4252,4253],[4241,4240,4253],[4241,4253,4254],[4242,4241,4254],[4242,4254,1109],[1110,4242,1109],[4243,3837,3836],[4243,3836,4255],[4244,4243,4255],[4244,4255,4256],[4245,4244,4256],[4245,4256,4257],[4246,4245,4257],[4246,4257,4258],[4247,4246,4258],[4247,4258,4259],[4248,4247,4259],[4248,4259,4260],[4249,4248,4260],[4249,4260,4261],[4250,4249,4261],[4250,4261,4262],[4251,4250,4262],[4251,4262,4263],[4252,4251,4263],[4252,4263,4264],[4253,4252,4264],[4253,4264,4265],[4254,4253,4265],[4254,4265,1108],[1109,4254,1108],[4255,3836,3835],[4255,3835,4266],[4256,4255,4266],[4256,4266,4267],[4257,4256,4267],[4257,4267,4268],[4258,4257,4268],[4258,4268,4269],[4259,4258,4269],[4259,4269,4270],[4260,4259,4270],[4260,4270,4271],[4261,4260,4271],[4261,4271,4272],[4262,4261,4272],[4262,4272,4273],[4263,4262,4273],[4263,4273,4274],[4264,4263,4274],[4264,4274,4275],[4265,4264,4275],[4265,4275,1107],[1108,4265,1107],[4266,3835,3834],[4266,3834,4276],[4267,4266,4276],[4267,4276,4277],[4268,4267,4277],[4268,4277,4278],[4269,4268,4278],[4269,4278,4279],[4270,4269,4279],[4270,4279,4280],[4271,4270,4280],[4271,4280,4281],[4272,4271,4281],[4272,4281,4282],[4273,4272,4282],[4273,4282,4283],[4274,4273,4283],[4274,4283,4284],[4275,4274,4284],[4275,4284,1106],[1107,4275,1106],[4276,3834,3833],[4276,3833,4285],[4277,4276,4285],[4277,4285,4286],[4278,4277,4286],[4278,4286,4287],[4279,4278,4287],[4279,4287,4288],[4280,4279,4288],[4280,4288,4289],[4281,4280,4289],[4281,4289,4290],[4282,4281,4290],[4282,4290,4291],[4283,4282,4291],[4283,4291,4292],[4284,4283,4292],[4284,4292,1105],[1106,4284,1105],[4285,3833,3832],[4285,3832,4293],[4286,4285,4293],[4286,4293,4294],[4287,4286,4294],[4287,4294,4295],[4288,4287,4295],[4288,4295,4296],[4289,4288,4296],[4289,4296,4297],[4290,4289,4297],[4290,4297,4298],[4291,4290,4298],[4291,4298,4299],[4292,4291,4299],[4292,4299,1104],[1105,4292,1104],[4293,3832,3831],[4293,3831,4300],[4294,4293,4300],[4294,4300,4301],[4295,4294,4301],[4295,4301,4302],[4296,4295,4302],[4296,4302,4303],[4297,4296,4303],[4297,4303,4304],[4298,4297,4304],[4298,4304,4305],[4299,4298,4305],[4299,4305,1103],[1104,4299,1103],[4300,3831,3830],[4300,3830,4306],[4301,4300,4306],[4301,4306,4307],[4302,4301,4307],[4302,4307,4308],[4303,4302,4308],[4303,4308,4309],[4304,4303,4309],[4304,4309,4310],[4305,4304,4310],[4305,4310,1102],[1103,4305,1102],[4306,3830,3829],[4306,3829,4311],[4307,4306,4311],[4307,4311,4312],[4308,4307,4312],[4308,4312,4313],[4309,4308,4313],[4309,4313,4314],[4310,4309,4314],[4310,4314,1101],[1102,4310,1101],[4311,3829,3828],[4311,3828,4315],[4312,4311,4315],[4312,4315,4316],[4313,4312,4316],[4313,4316,4317],[4314,4313,4317],[4314,4317,1100],[1101,4314,1100],[4315,3828,3827],[4315,3827,4318],[4316,4315,4318],[4316,4318,4319],[4317,4316,4319],[4317,4319,1099],[1100,4317,1099],[4318,3827,3826],[4318,3826,4320],[4319,4318,4320],[4319,4320,1098],[1099,4319,1098],[4320,3826,3825],[4320,3825,1097],[1098,4320,1097],[1097,3825,0],[4321,4,3824],[4321,3824,4352],[4322,4321,4352],[4322,4352,4353],[4323,4322,4353],[4323,4353,4354],[4324,4323,4354],[4324,4354,4355],[4325,4324,4355],[4325,4355,4356],[4326,4325,4356],[4326,4356,4357],[4327,4326,4357],[4327,4357,4358],[4328,4327,4358],[4328,4358,4359],[4329,4328,4359],[4329,4359,4360],[4330,4329,4360],[4330,4360,4361],[4331,4330,4361],[4331,4361,4362],[4332,4331,4362],[4332,4362,4363],[4333,4332,4363],[4333,4363,4364],[4334,4333,4364],[4334,4364,4365],[4335,4334,4365],[4335,4365,4366],[4336,4335,4366],[4336,4366,4367],[4337,4336,4367],[4337,4367,4368],[4338,4337,4368],[4338,4368,4369],[4339,4338,4369],[4339,4369,4370],[4340,4339,4370],[4340,4370,4371],[4341,4340,4371],[4341,4371,4372],[4342,4341,4372],[4342,4372,4373],[4343,4342,4373],[4343,4373,4374],[4344,4343,4374],[4344,4374,4375],[4345,4344,4375],[4345,4375,4376],[4346,4345,4376],[4346,4376,4377],[4347,4346,4377],[4347,4377,4378],[4348,4347,4378],[4348,4378,4379],[4349,4348,4379],[4349,4379,4380],[4350,4349,4380],[4350,4380,4381],[4351,4350,4381],[4351,4381,2181],[5,4351,2181],[4352,3824,3823],[4352,3823,4382],[4353,4352,4382],[4353,4382,4383],[4354,4353,4383],[4354,4383,4384],[4355,4354,4384],[4355,4384,4385],[4356,4355,4385],[4356,4385,4386],[4357,4356,4386],[4357,4386,4387],[4358,4357,4387],[4358,4387,4388],[4359,4358,4388],[4359,4388,4389],[4360,4359,4389],[4360,4389,4390],[4361,4360,4390],[4361,4390,4391],[4362,4361,4391],[4362,4391,4392],[4363,4362,4392],[4363,4392,4393],[4364,4363,4393],[4364,4393,4394],[4365,4364,4394],[4365,4394,4395],[4366,4365,4395],[4366,4395,4396],[4367,4366,4396],[4367,4396,4397],[4368,4367,4397],[4368,4397,4398],[4369,4368,4398],[4369,4398,4399],[4370,4369,4399],[4370,4399,4400],[4371,4370,4400],[4371,4400,4401],[4372,4371,4401],[4372,4401,4402],[4373,4372,4402],[4373,4402,4403],[4374,4373,4403],[4374,4403,4404],[4375,4374,4404],[4375,4404,4405],[4376,4375,4405],[4376,4405,4406],[4377,4376,4406],[4377,4406,4407],[4378,4377,4407],[4378,4407,4408],[4379,4378,4408],[4379,4408,4409],[4380,4379,4409],[4380,4409,4410],[4381,4380,4410],[4381,4410,2180],[2181,4381,2180],[4382,3823,3822],[4382,3822,4411],[4383,4382,4411],[4383,4411,4412],[4384,4383,4412],[4384,4412,4413],[4385,4384,4413],[4385,4413,4414],[4386,4385,4414],[4386,4414,4415],[4387,4386,4415],[4387,4415,4416],[4388,4387,4416],[4388,4416,4417],[4389,4388,4417],[4389,4417,4418],[4390,4389,4418],[4390,4418,4419],[4391,4390,4419],[4391,4419,4420],[4392,4391,4420],[4392,4420,4421],[4393,4392,4421],[4393,4421,4422],[4394,4393,4422],[4394,4422,4423],[4395,4394,4423],[4395,4423,4424],[4396,4395,4424],[4396,4424,4425],[4397,4396,4425],[4397,4425,4426],[4398,4397,4426],[4398,4426,4427],[4399,4398,4427],[4399,4427,4428],[4400,4399,4428],[4400,4428,4429],[4401,4400,4429],[4401,4429,4430],[4402,4401,4430],[4402,4430,4431],[4403,4402,4431],[4403,4431,4432],[4404,4403,4432],[4404,4432,4433],[4405,4404,4433],[4405,4433,4434],[4406,4405,4434],[4406,4434,4435],[4407,4406,4435],[4407,4435,4436],[4408,4407,4436],[4408,4436,4437],[4409,4408,4437],[4409,4437,4438],[4410,4409,4438],[4410,4438,2179],[2180,4410,2179],[4411,3822,3821],[4411,3821,4439],[4412,4411,4439],[4412,4439,4440],[4413,4412,4440],[4413,4440,4441],[4414,4413,4441],[4414,4441,4442],[4415,4414,4442],[4415,4442,4443],[4416,4415,4443],[4416,4443,4444],[4417,4416,4444],[4417,4444,4445],[4418,4417,4445],[4418,4445,4446],[4419,4418,4446],[4419,4446,4447],[4420,4419,4447],[4420,4447,4448],[4421,4420,4448],[4421,4448,4449],[4422,4421,4449],[4422,4449,4450],[4423,4422,4450],[4423,4450,4451],[4424,4423,4451],[4424,4451,4452],[4425,4424,4452],[4425,4452,4453],[4426,4425,4453],[4426,4453,4454],[4427,4426,4454],[4427,4454,4455],[4428,4427,4455],[4428,4455,4456],[4429,4428,4456],[4429,4456,4457],[4430,4429,4457],[4430,4457,4458],[4431,4430,4458],[4431,4458,4459],[4432,4431,4459],[4432,4459,4460],[4433,4432,4460],[4433,4460,4461],[4434,4433,4461],[4434,4461,4462],[4435,4434,4462],[4435,4462,4463],[4436,4435,4463],[4436,4463,4464],[4437,4436,4464],[4437,4464,4465],[4438,4437,4465],[4438,4465,2178],[2179,4438,2178],[4439,3821,3820],[4439,3820,4466],[4440,4439,4466],[4440,4466,4467],[4441,4440,4467],[4441,4467,4468],[4442,4441,4468],[4442,4468,4469],[4443,4442,4469],[4443,4469,4470],[4444,4443,4470],[4444,4470,4471],[4445,4444,4471],[4445,4471,4472],[4446,4445,4472],[4446,4472,4473],[4447,4446,4473],[4447,4473,4474],[4448,4447,4474],[4448,4474,4475],[4449,4448,4475],[4449,4475,4476],[4450,4449,4476],[4450,4476,4477],[4451,4450,4477],[4451,4477,4478],[4452,4451,4478],[4452,4478,4479],[4453,4452,4479],[4453,4479,4480],[4454,4453,4480],[4454,4480,4481],[4455,4454,4481],[4455,4481,4482],[4456,4455,4482],[4456,4482,4483],[4457,4456,4483],[4457,4483,4484],[4458,4457,4484],[4458,4484,4485],[4459,4458,4485],[4459,4485,4486],[4460,4459,4486],[4460,4486,4487],[4461,4460,4487],[4461,4487,4488],[4462,4461,4488],[4462,4488,4489],[4463,4462,4489],[4463,4489,4490],[4464,4463,4490],[4464,4490,4491],[4465,4464,4491],[4465,4491,2177],[2178,4465,2177],[4466,3820,3819],[4466,3819,4492],[4467,4466,4492],[4467,4492,4493],[4468,4467,4493],[4468,4493,4494],[4469,4468,4494],[4469,4494,4495],[4470,4469,4495],[4470,4495,4496],[4471,4470,4496],[4471,4496,4497],[4472,4471,4497],[4472,4497,4498],[4473,4472,4498],[4473,4498,4499],[4474,4473,4499],[4474,4499,4500],[4475,4474,4500],[4475,4500,4501],[4476,4475,4501],[4476,4501,4502],[4477,4476,4502],[4477,4502,4503],[4478,4477,4503],[4478,4503,4504],[4479,4478,4504],[4479,4504,4505],[4480,4479,4505],[4480,4505,4506],[4481,4480,4506],[4481,4506,4507],[4482,4481,4507],[4482,4507,4508],[4483,4482,4508],[4483,4508,4509],[4484,4483,4509],[4484,4509,4510],[4485,4484,4510],[4485,4510,4511],[4486,4485,4511],[4486,4511,4512],[4487,4486,4512],[4487,4512,4513],[4488,4487,4513],[4488,4513,4514],[4489,4488,4514],[4489,4514,4515],[4490,4489,4515],[4490,4515,4516],[4491,4490,4516],[4491,4516,2176],[2177,4491,2176],[4492,3819,3818],[4492,3818,4517],[4493,4492,4517],[4493,4517,4518],[4494,4493,4518],[4494,4518,4519],[4495,4494,4519],[4495,4519,4520],[4496,4495,4520],[4496,4520,4521],[4497,4496,4521],[4497,4521,4522],[4498,4497,4522],[4498,4522,4523],[4499,4498,4523],[4499,4523,4524],[4500,4499,4524],[4500,4524,4525],[4501,4500,4525],[4501,4525,4526],[4502,4501,4526],[4502,4526,4527],[4503,4502,4527],[4503,4527,4528],[4504,4503,4528],[4504,4528,4529],[4505,4504,4529],[4505,4529,4530],[4506,4505,4530],[4506,4530,4531],[4507,4506,4531],[4507,4531,4532],[4508,4507,4532],[4508,4532,4533],[4509,4508,4533],[4509,4533,4534],[4510,4509,4534],[4510,4534,4535],[4511,4510,4535],[4511,4535,4536],[4512,4511,4536],[4512,4536,4537],[4513,4512,4537],[4513,4537,4538],[4514,4513,4538],[4514,4538,4539],[4515,4514,4539],[4515,4539,4540],[4516,4515,4540],[4516,4540,2175],[2176,4516,2175],[4517,3818,3817],[4517,3817,4541],[4518,4517,4541],[4518,4541,4542],[4519,4518,4542],[4519,4542,4543],[4520,4519,4543],[4520,4543,4544],[4521,4520,4544],[4521,4544,4545],[4522,4521,4545],[4522,4545,4546],[4523,4522,4546],[4523,4546,4547],[4524,4523,4547],[4524,4547,4548],[4525,4524,4548],[4525,4548,4549],[4526,4525,4549],[4526,4549,4550],[4527,4526,4550],[4527,4550,4551],[4528,4527,4551],[4528,4551,4552],[4529,4528,4552],[4529,4552,4553],[4530,4529,4553],[4530,4553,4554],[4531,4530,4554],[4531,4554,4555],[4532,4531,4555],[4532,4555,4556],[4533,4532,4556],[4533,4556,4557],[4534,4533,4557],[4534,4557,4558],[4535,4534,4558],[4535,4558,4559],[4536,4535,4559],[4536,4559,4560],[4537,4536,4560],[4537,4560,4561],[4538,4537,4561],[4538,4561,4562],[4539,4538,4562],[4539,4562,4563],[4540,4539,4563],[4540,4563,2174],[2175,4540,2174],[4541,3817,3816],[4541,3816,4564],[4542,4541,4564],[4542,4564,4565],[4543,4542,4565],[4543,4565,4566],[4544,4543,4566],[4544,4566,4567],[4545,4544,4567],[4545,4567,4568],[4546,4545,4568],[4546,4568,4569],[4547,4546,4569],[4547,4569,4570],[4548,4547,4570],[4548,4570,4571],[4549,4548,4571],[4549,4571,4572],[4550,4549,4572],[4550,4572,4573],[4551,4550,4573],[4551,4573,4574],[4552,4551,4574],[4552,4574,4575],[4553,4552,4575],[4553,4575,4576],[4554,4553,4576],[4554,4576,4577],[4555,4554,4577],[4555,4577,4578],[4556,4555,4578],[4556,4578,4579],[4557,4556,4579],[4557,4579,4580],[4558,4557,4580],[4558,4580,4581],[4559,4558,4581],[4559,4581,4582],[4560,4559,4582],[4560,4582,4583],[4561,4560,4583],[4561,4583,4584],[4562,4561,4584],[4562,4584,4585],[4563,4562,4585],[4563,4585,2173],[2174,4563,2173],[4564,3816,3815],[4564,3815,4586],[4565,4564,4586],[4565,4586,4587],[4566,4565,4587],[4566,4587,4588],[4567,4566,4588],[4567,4588,4589],[4568,4567,4589],[4568,4589,4590],[4569,4568,4590],[4569,4590,4591],[4570,4569,4591],[4570,4591,4592],[4571,4570,4592],[4571,4592,4593],[4572,4571,4593],[4572,4593,4594],[4573,4572,4594],[4573,4594,4595],[4574,4573,4595],[4574,4595,4596],[4575,4574,4596],[4575,4596,4597],[4576,4575,4597],[4576,4597,4598],[4577,4576,4598],[4577,4598,4599],[4578,4577,4599],[4578,4599,4600],[4579,4578,4600],[4579,4600,4601],[4580,4579,4601],[4580,4601,4602],[4581,4580,4602],[4581,4602,4603],[4582,4581,4603],[4582,4603,4604],[4583,4582,4604],[4583,4604,4605],[4584,4583,4605],[4584,4605,4606],[4585,4584,4606],[4585,4606,2172],[2173,4585,2172],[4586,3815,3814],[4586,3814,4607],[4587,4586,4607],[4587,4607,4608],[4588,4587,4608],[4588,4608,4609],[4589,4588,4609],[4589,4609,4610],[4590,4589,4610],[4590,4610,4611],[4591,4590,4611],[4591,4611,4612],[4592,4591,4612],[4592,4612,4613],[4593,4592,4613],[4593,4613,4614],[4594,4593,4614],[4594,4614,4615],[4595,4594,4615],[4595,4615,4616],[4596,4595,4616],[4596,4616,4617],[4597,4596,4617],[4597,4617,4618],[4598,4597,4618],[4598,4618,4619],[4599,4598,4619],[4599,4619,4620],[4600,4599,4620],[4600,4620,4621],[4601,4600,4621],[4601,4621,4622],[4602,4601,4622],[4602,4622,4623],[4603,4602,4623],[4603,4623,4624],[4604,4603,4624],[4604,4624,4625],[4605,4604,4625],[4605,4625,4626],[4606,4605,4626],[4606,4626,2171],[2172,4606,2171],[4607,3814,3813],[4607,3813,4627],[4608,4607,4627],[4608,4627,4628],[4609,4608,4628],[4609,4628,4629],[4610,4609,4629],[4610,4629,4630],[4611,4610,4630],[4611,4630,4631],[4612,4611,4631],[4612,4631,4632],[4613,4612,4632],[4613,4632,4633],[4614,4613,4633],[4614,4633,4634],[4615,4614,4634],[4615,4634,4635],[4616,4615,4635],[4616,4635,4636],[4617,4616,4636],[4617,4636,4637],[4618,4617,4637],[4618,4637,4638],[4619,4618,4638],[4619,4638,4639],[4620,4619,4639],[4620,4639,4640],[4621,4620,4640],[4621,4640,4641],[4622,4621,4641],[4622,4641,4642],[4623,4622,4642],[4623,4642,4643],[4624,4623,4643],[4624,4643,4644],[4625,4624,4644],[4625,4644,4645],[4626,4625,4645],[4626,4645,2170],[2171,4626,2170],[4627,3813,3812],[4627,3812,4646],[4628,4627,4646],[4628,4646,4647],[4629,4628,4647],[4629,4647,4648],[4630,4629,4648],[4630,4648,4649],[4631,4630,4649],[4631,4649,4650],[4632,4631,4650],[4632,4650,4651],[4633,4632,4651],[4633,4651,4652],[4634,4633,4652],[4634,4652,4653],[4635,4634,4653],[4635,4653,4654],[4636,4635,4654],[4636,4654,4655],[4637,4636,4655],[4637,4655,4656],[4638,4637,4656],[4638,4656,4657],[4639,4638,4657],[4639,4657,4658],[4640,4639,4658],[4640,4658,4659],[4641,4640,4659],[4641,4659,4660],[4642,4641,4660],[4642,4660,4661],[4643,4642,4661],[4643,4661,4662],[4644,4643,4662],[4644,4662,4663],[4645,4644,4663],[4645,4663,2169],[2170,4645,2169],[4646,3812,3811],[4646,3811,4664],[4647,4646,4664],[4647,4664,4665],[4648,4647,4665],[4648,4665,4666],[4649,4648,4666],[4649,4666,4667],[4650,4649,4667],[4650,4667,4668],[4651,4650,4668],[4651,4668,4669],[4652,4651,4669],[4652,4669,4670],[4653,4652,4670],[4653,4670,4671],[4654,4653,4671],[4654,4671,4672],[4655,4654,4672],[4655,4672,4673],[4656,4655,4673],[4656,4673,4674],[4657,4656,4674],[4657,4674,4675],[4658,4657,4675],[4658,4675,4676],[4659,4658,4676],[4659,4676,4677],[4660,4659,4677],[4660,4677,4678],[4661,4660,4678],[4661,4678,4679],[4662,4661,4679],[4662,4679,4680],[4663,4662,4680],[4663,4680,2168],[2169,4663,2168],[4664,3811,3810],[4664,3810,4681],[4665,4664,4681],[4665,4681,4682],[4666,4665,4682],[4666,4682,4683],[4667,4666,4683],[4667,4683,4684],[4668,4667,4684],[4668,4684,4685],[4669,4668,4685],[4669,4685,4686],[4670,4669,4686],[4670,4686,4687],[4671,4670,4687],[4671,4687,4688],[4672,4671,4688],[4672,4688,4689],[4673,4672,4689],[4673,4689,4690],[4674,4673,4690],[4674,4690,4691],[4675,4674,4691],[4675,4691,4692],[4676,4675,4692],[4676,4692,4693],[4677,4676,4693],[4677,4693,4694],[4678,4677,4694],[4678,4694,4695],[4679,4678,4695],[4679,4695,4696],[4680,4679,4696],[4680,4696,2167],[2168,4680,2167],[4681,3810,3809],[4681,3809,4697],[4682,4681,4697],[4682,4697,4698],[4683,4682,4698],[4683,4698,4699],[4684,4683,4699],[4684,4699,4700],[4685,4684,4700],[4685,4700,4701],[4686,4685,4701],[4686,4701,4702],[4687,4686,4702],[4687,4702,4703],[4688,4687,4703],[4688,4703,4704],[4689,4688,4704],[4689,4704,4705],[4690,4689,4705],[4690,4705,4706],[4691,4690,4706],[4691,4706,4707],[4692,4691,4707],[4692,4707,4708],[4693,4692,4708],[4693,4708,4709],[4694,4693,4709],[4694,4709,4710],[4695,4694,4710],[4695,4710,4711],[4696,4695,4711],[4696,4711,2166],[2167,4696,2166],[4697,3809,3808],[4697,3808,4712],[4698,4697,4712],[4698,4712,4713],[4699,4698,4713],[4699,4713,4714],[4700,4699,4714],[4700,4714,4715],[4701,4700,4715],[4701,4715,4716],[4702,4701,4716],[4702,4716,4717],[4703,4702,4717],[4703,4717,4718],[4704,4703,4718],[4704,4718,4719],[4705,4704,4719],[4705,4719,4720],[4706,4705,4720],[4706,4720,4721],[4707,4706,4721],[4707,4721,4722],[4708,4707,4722],[4708,4722,4723],[4709,4708,4723],[4709,4723,4724],[4710,4709,4724],[4710,4724,4725],[4711,4710,4725],[4711,4725,2165],[2166,4711,2165],[4712,3808,3807],[4712,3807,4726],[4713,4712,4726],[4713,4726,4727],[4714,4713,4727],[4714,4727,4728],[4715,4714,4728],[4715,4728,4729],[4716,4715,4729],[4716,4729,4730],[4717,4716,4730],[4717,4730,4731],[4718,4717,4731],[4718,4731,4732],[4719,4718,4732],[4719,4732,4733],[4720,4719,4733],[4720,4733,4734],[4721,4720,4734],[4721,4734,4735],[4722,4721,4735],[4722,4735,4736],[4723,4722,4736],[4723,4736,4737],[4724,4723,4737],[4724,4737,4738],[4725,4724,4738],[4725,4738,2164],[2165,4725,2164],[4726,3807,3806],[4726,3806,4739],[4727,4726,4739],[4727,4739,4740],[4728,4727,4740],[4728,4740,4741],[4729,4728,4741],[4729,4741,4742],[4730,4729,4742],[4730,4742,4743],[4731,4730,4743],[4731,4743,4744],[4732,4731,4744],[4732,4744,4745],[4733,4732,4745],[4733,4745,4746],[4734,4733,4746],[4734,4746,4747],[4735,4734,4747],[4735,4747,4748],[4736,4735,4748],[4736,4748,4749],[4737,4736,4749],[4737,4749,4750],[4738,4737,4750],[4738,4750,2163],[2164,4738,2163],[4739,3806,3805],[4739,3805,4751],[4740,4739,4751],[4740,4751,4752],[4741,4740,4752],[4741,4752,4753],[4742,4741,4753],[4742,4753,4754],[4743,4742,4754],[4743,4754,4755],[4744,4743,4755],[4744,4755,4756],[4745,4744,4756],[4745,4756,4757],[4746,4745,4757],[4746,4757,4758],[4747,4746,4758],[4747,4758,4759],[4748,4747,4759],[4748,4759,4760],[4749,4748,4760],[4749,4760,4761],[4750,4749,4761],[4750,4761,2162],[2163,4750,2162],[4751,3805,3804],[4751,3804,4762],[4752,4751,4762],[4752,4762,4763],[4753,4752,4763],[4753,4763,4764],[4754,4753,4764],[4754,4764,4765],[4755,4754,4765],[4755,4765,4766],[4756,4755,4766],[4756,4766,4767],[4757,4756,4767],[4757,4767,4768],[4758,4757,4768],[4758,4768,4769],[4759,4758,4769],[4759,4769,4770],[4760,4759,4770],[4760,4770,4771],[4761,4760,4771],[4761,4771,2161],[2162,4761,2161],[4762,3804,3803],[4762,3803,4772],[4763,4762,4772],[4763,4772,4773],[4764,4763,4773],[4764,4773,4774],[4765,4764,4774],[4765,4774,4775],[4766,4765,4775],[4766,4775,4776],[4767,4766,4776],[4767,4776,4777],[4768,4767,4777],[4768,4777,4778],[4769,4768,4778],[4769,4778,4779],[4770,4769,4779],[4770,4779,4780],[4771,4770,4780],[4771,4780,2160],[2161,4771,2160],[4772,3803,3802],[4772,3802,4781],[4773,4772,4781],[4773,4781,4782],[4774,4773,4782],[4774,4782,4783],[4775,4774,4783],[4775,4783,4784],[4776,4775,4784],[4776,4784,4785],[4777,4776,4785],[4777,4785,4786],[4778,4777,4786],[4778,4786,4787],[4779,4778,4787],[4779,4787,4788],[4780,4779,4788],[4780,4788,2159],[2160,4780,2159],[4781,3802,3801],[4781,3801,4789],[4782,4781,4789],[4782,4789,4790],[4783,4782,4790],[4783,4790,4791],[4784,4783,4791],[4784,4791,4792],[4785,4784,4792],[4785,4792,4793],[4786,4785,4793],[4786,4793,4794],[4787,4786,4794],[4787,4794,4795],[4788,4787,4795],[4788,4795,2158],[2159,4788,2158],[4789,3801,3800],[4789,3800,4796],[4790,4789,4796],[4790,4796,4797],[4791,4790,4797],[4791,4797,4798],[4792,4791,4798],[4792,4798,4799],[4793,4792,4799],[4793,4799,4800],[4794,4793,4800],[4794,4800,4801],[4795,4794,4801],[4795,4801,2157],[2158,4795,2157],[4796,3800,3799],[4796,3799,4802],[4797,4796,4802],[4797,4802,4803],[4798,4797,4803],[4798,4803,4804],[4799,4798,4804],[4799,4804,4805],[4800,4799,4805],[4800,4805,4806],[4801,4800,4806],[4801,4806,2156],[2157,4801,2156],[4802,3799,3798],[4802,3798,4807],[4803,4802,4807],[4803,4807,4808],[4804,4803,4808],[4804,4808,4809],[4805,4804,4809],[4805,4809,4810],[4806,4805,4810],[4806,4810,2155],[2156,4806,2155],[4807,3798,3797],[4807,3797,4811],[4808,4807,4811],[4808,4811,4812],[4809,4808,4812],[4809,4812,4813],[4810,4809,4813],[4810,4813,2154],[2155,4810,2154],[4811,3797,3796],[4811,3796,4814],[4812,4811,4814],[4812,4814,4815],[4813,4812,4815],[4813,4815,2153],[2154,4813,2153],[4814,3796,3795],[4814,3795,4816],[4815,4814,4816],[4815,4816,2152],[2153,4815,2152],[4816,3795,3794],[4816,3794,2151],[2152,4816,2151],[2151,3794,1],[4817,4,4321],[4817,4321,4848],[4818,4817,4848],[4818,4848,4849],[4819,4818,4849],[4819,4849,4850],[4820,4819,4850],[4820,4850,4851],[4821,4820,4851],[4821,4851,4852],[4822,4821,4852],[4822,4852,4853],[4823,4822,4853],[4823,4853,4854],[4824,4823,4854],[4824,4854,4855],[4825,4824,4855],[4825,4855,4856],[4826,4825,4856],[4826,4856,4857],[4827,4826,4857],[4827,4857,4858],[4828,4827,4858],[4828,4858,4859],[4829,4828,4859],[4829,4859,4860],[4830,4829,4860],[4830,4860,4861],[4831,4830,4861],[4831,4861,4862],[4832,4831,4862],[4832,4862,4863],[4833,4832,4863],[4833,4863,4864],[4834,4833,4864],[4834,4864,4865],[4835,4834,4865],[4835,4865,4866],[4836,4835,4866],[4836,4866,4867],[4837,4836,4867],[4837,4867,4868],[4838,4837,4868],[4838,4868,4869],[4839,4838,4869],[4839,4869,4870],[4840,4839,4870],[4840,4870,4871],[4841,4840,4871],[4841,4871,4872],[4842,4841,4872],[4842,4872,4873],[4843,4842,4873],[4843,4873,4874],[4844,4843,4874],[4844,4874,4875],[4845,4844,4875],[4845,4875,4876],[4846,4845,4876],[4846,4876,4877],[4847,4846,4877],[4847,4877,2708],[9,4847,2708],[4848,4321,4322],[4848,4322,4878],[4849,4848,4878],[4849,4878,4879],[4850,4849,4879],[4850,4879,4880],[4851,4850,4880],[4851,4880,4881],[4852,4851,4881],[4852,4881,4882],[4853,4852,4882],[4853,4882,4883],[4854,4853,4883],[4854,4883,4884],[4855,4854,4884],[4855,4884,4885],[4856,4855,4885],[4856,4885,4886],[4857,4856,4886],[4857,4886,4887],[4858,4857,4887],[4858,4887,4888],[4859,4858,4888],[4859,4888,4889],[4860,4859,4889],[4860,4889,4890],[4861,4860,4890],[4861,4890,4891],[4862,4861,4891],[4862,4891,4892],[4863,4862,4892],[4863,4892,4893],[4864,4863,4893],[4864,4893,4894],[4865,4864,4894],[4865,4894,4895],[4866,4865,4895],[4866,4895,4896],[4867,4866,4896],[4867,4896,4897],[4868,4867,4897],[4868,4897,4898],[4869,4868,4898],[4869,4898,4899],[4870,4869,4899],[4870,4899,4900],[4871,4870,4900],[4871,4900,4901],[4872,4871,4901],[4872,4901,4902],[4873,4872,4902],[4873,4902,4903],[4874,4873,4903],[4874,4903,4904],[4875,4874,4904],[4875,4904,4905],[4876,4875,4905],[4876,4905,4906],[4877,4876,4906],[4877,4906,2707],[2708,4877,2707],[4878,4322,4323],[4878,4323,4907],[4879,4878,4907],[4879,4907,4908],[4880,4879,4908],[4880,4908,4909],[4881,4880,4909],[4881,4909,4910],[4882,4881,4910],[4882,4910,4911],[4883,4882,4911],[4883,4911,4912],[4884,4883,4912],[4884,4912,4913],[4885,4884,4913],[4885,4913,4914],[4886,4885,4914],[4886,4914,4915],[4887,4886,4915],[4887,4915,4916],[4888,4887,4916],[4888,4916,4917],[4889,4888,4917],[4889,4917,4918],[4890,4889,4918],[4890,4918,4919],[4891,4890,4919],[4891,4919,4920],[4892,4891,4920],[4892,4920,4921],[4893,4892,4921],[4893,4921,4922],[4894,4893,4922],[4894,4922,4923],[4895,4894,4923],[4895,4923,4924],[4896,4895,4924],[4896,4924,4925],[4897,4896,4925],[4897,4925,4926],[4898,4897,4926],[4898,4926,4927],[4899,4898,4927],[4899,4927,4928],[4900,4899,4928],[4900,4928,4929],[4901,4900,4929],[4901,4929,4930],[4902,4901,4930],[4902,4930,4931],[4903,4902,4931],[4903,4931,4932],[4904,4903,4932],[4904,4932,4933],[4905,4904,4933],[4905,4933,4934],[4906,4905,4934],[4906,4934,2706],[2707,4906,2706],[4907,4323,4324],[4907,4324,4935],[4908,4907,4935],[4908,4935,4936],[4909,4908,4936],[4909,4936,4937],[4910,4909,4937],[4910,4937,4938],[4911,4910,4938],[4911,4938,4939],[4912,4911,4939],[4912,4939,4940],[4913,4912,4940],[4913,4940,4941],[4914,4913,4941],[4914,4941,4942],[4915,4914,4942],[4915,4942,4943],[4916,4915,4943],[4916,4943,4944],[4917,4916,4944],[4917,4944,4945],[4918,4917,4945],[4918,4945,4946],[4919,4918,4946],[4919,4946,4947],[4920,4919,4947],[4920,4947,4948],[4921,4920,4948],[4921,4948,4949],[4922,4921,4949],[4922,4949,4950],[4923,4922,4950],[4923,4950,4951],[4924,4923,4951],[4924,4951,4952],[4925,4924,4952],[4925,4952,4953],[4926,4925,4953],[4926,4953,4954],[4927,4926,4954],[4927,4954,4955],[4928,4927,4955],[4928,4955,4956],[4929,4928,4956],[4929,4956,4957],[4930,4929,4957],[4930,4957,4958],[4931,4930,4958],[4931,4958,4959],[4932,4931,4959],[4932,4959,4960],[4933,4932,4960],[4933,4960,4961],[4934,4933,4961],[4934,4961,2705],[2706,4934,2705],[4935,4324,4325],[4935,4325,4962],[4936,4935,4962],[4936,4962,4963],[4937,4936,4963],[4937,4963,4964],[4938,4937,4964],[4938,4964,4965],[4939,4938,4965],[4939,4965,4966],[4940,4939,4966],[4940,4966,4967],[4941,4940,4967],[4941,4967,4968],[4942,4941,4968],[4942,4968,4969],[4943,4942,4969],[4943,4969,4970],[4944,4943,4970],[4944,4970,4971],[4945,4944,4971],[4945,4971,4972],[4946,4945,4972],[4946,4972,4973],[4947,4946,4973],[4947,4973,4974],[4948,4947,4974],[4948,4974,4975],[4949,4948,4975],[4949,4975,4976],[4950,4949,4976],[4950,4976,4977],[4951,4950,4977],[4951,4977,4978],[4952,4951,4978],[4952,4978,4979],[4953,4952,4979],[4953,4979,4980],[4954,4953,4980],[4954,4980,4981],[4955,4954,4981],[4955,4981,4982],[4956,4955,4982],[4956,4982,4983],[4957,4956,4983],[4957,4983,4984],[4958,4957,4984],[4958,4984,4985],[4959,4958,4985],[4959,4985,4986],[4960,4959,4986],[4960,4986,4987],[4961,4960,4987],[4961,4987,2704],[2705,4961,2704],[4962,4325,4326],[4962,4326,4988],[4963,4962,4988],[4963,4988,4989],[4964,4963,4989],[4964,4989,4990],[4965,4964,4990],[4965,4990,4991],[4966,4965,4991],[4966,4991,4992],[4967,4966,4992],[4967,4992,4993],[4968,4967,4993],[4968,4993,4994],[4969,4968,4994],[4969,4994,4995],[4970,4969,4995],[4970,4995,4996],[4971,4970,4996],[4971,4996,4997],[4972,4971,4997],[4972,4997,4998],[4973,4972,4998],[4973,4998,4999],[4974,4973,4999],[4974,4999,5000],[4975,4974,5000],[4975,5000,5001],[4976,4975,5001],[4976,5001,5002],[4977,4976,5002],[4977,5002,5003],[4978,4977,5003],[4978,5003,5004],[4979,4978,5004],[4979,5004,5005],[4980,4979,5005],[4980,5005,5006],[4981,4980,5006],[4981,5006,5007],[4982,4981,5007],[4982,5007,5008],[4983,4982,5008],[4983,5008,5009],[4984,4983,5009],[4984,5009,5010],[4985,4984,5010],[4985,5010,5011],[4986,4985,5011],[4986,5011,5012],[4987,4986,5012],[4987,5012,2703],[2704,4987,2703],[4988,4326,4327],[4988,4327,5013],[4989,4988,5013],[4989,5013,5014],[4990,4989,5014],[4990,5014,5015],[4991,4990,5015],[4991,5015,5016],[4992,4991,5016],[4992,5016,5017],[4993,4992,5017],[4993,5017,5018],[4994,4993,5018],[4994,5018,5019],[4995,4994,5019],[4995,5019,5020],[4996,4995,5020],[4996,5020,5021],[4997,4996,5021],[4997,5021,5022],[4998,4997,5022],[4998,5022,5023],[4999,4998,5023],[4999,5023,5024],[5000,4999,5024],[5000,5024,5025],[5001,5000,5025],[5001,5025,5026],[5002,5001,5026],[5002,5026,5027],[5003,5002,5027],[5003,5027,5028],[5004,5003,5028],[5004,5028,5029],[5005,5004,5029],[5005,5029,5030],[5006,5005,5030],[5006,5030,5031],[5007,5006,5031],[5007,5031,5032],[5008,5007,5032],[5008,5032,5033],[5009,5008,5033],[5009,5033,5034],[5010,5009,5034],[5010,5034,5035],[5011,5010,5035],[5011,5035,5036],[5012,5011,5036],[5012,5036,2702],[2703,5012,2702],[5013,4327,4328],[5013,4328,5037],[5014,5013,5037],[5014,5037,5038],[5015,5014,5038],[5015,5038,5039],[5016,5015,5039],[5016,5039,5040],[5017,5016,5040],[5017,5040,5041],[5018,5017,5041],[5018,5041,5042],[5019,5018,5042],[5019,5042,5043],[5020,5019,5043],[5020,5043,5044],[5021,5020,5044],[5021,5044,5045],[5022,5021,5045],[5022,5045,5046],[5023,5022,5046],[5023,5046,5047],[5024,5023,5047],[5024,5047,5048],[5025,5024,5048],[5025,5048,5049],[5026,5025,5049],[5026,5049,5050],[5027,5026,5050],[5027,5050,5051],[5028,5027,5051],[5028,5051,5052],[5029,5028,5052],[5029,5052,5053],[5030,5029,5053],[5030,5053,5054],[5031,5030,5054],[5031,5054,5055],[5032,5031,5055],[5032,5055,5056],[5033,5032,5056],[5033,5056,5057],[5034,5033,5057],[5034,5057,5058],[5035,5034,5058],[5035,5058,5059],[5036,5035,5059],[5036,5059,2701],[2702,5036,2701],[5037,4328,4329],[5037,4329,5060],[5038,5037,5060],[5038,5060,5061],[5039,5038,5061],[5039,5061,5062],[5040,5039,5062],[5040,5062,5063],[5041,5040,5063],[5041,5063,5064],[5042,5041,5064],[5042,5064,5065],[5043,5042,5065],[5043,5065,5066],[5044,5043,5066],[5044,5066,5067],[5045,5044,5067],[5045,5067,5068],[5046,5045,5068],[5046,5068,5069],[5047,5046,5069],[5047,5069,5070],[5048,5047,5070],[5048,5070,5071],[5049,5048,5071],[5049,5071,5072],[5050,5049,5072],[5050,5072,5073],[5051,5050,5073],[5051,5073,5074],[5052,5051,5074],[5052,5074,5075],[5053,5052,5075],[5053,5075,5076],[5054,5053,5076],[5054,5076,5077],[5055,5054,5077],[5055,5077,5078],[5056,5055,5078],[5056,5078,5079],[5057,5056,5079],[5057,5079,5080],[5058,5057,5080],[5058,5080,5081],[5059,5058,5081],[5059,5081,2700],[2701,5059,2700],[5060,4329,4330],[5060,4330,5082],[5061,5060,5082],[5061,5082,5083],[5062,5061,5083],[5062,5083,5084],[5063,5062,5084],[5063,5084,5085],[5064,5063,5085],[5064,5085,5086],[5065,5064,5086],[5065,5086,5087],[5066,5065,5087],[5066,5087,5088],[5067,5066,5088],[5067,5088,5089],[5068,5067,5089],[5068,5089,5090],[5069,5068,5090],[5069,5090,5091],[5070,5069,5091],[5070,5091,5092],[5071,5070,5092],[5071,5092,5093],[5072,5071,5093],[5072,5093,5094],[5073,5072,5094],[5073,5094,5095],[5074,5073,5095],[5074,5095,5096],[5075,5074,5096],[5075,5096,5097],[5076,5075,5097],[5076,5097,5098],[5077,5076,5098],[5077,5098,5099],[5078,5077,5099],[5078,5099,5100],[5079,5078,5100],[5079,5100,5101],[5080,5079,5101],[5080,5101,5102],[5081,5080,5102],[5081,5102,2699],[2700,5081,2699],[5082,4330,4331],[5082,4331,5103],[5083,5082,5103],[5083,5103,5104],[5084,5083,5104],[5084,5104,5105],[5085,5084,5105],[5085,5105,5106],[5086,5085,5106],[5086,5106,5107],[5087,5086,5107],[5087,5107,5108],[5088,5087,5108],[5088,5108,5109],[5089,5088,5109],[5089,5109,5110],[5090,5089,5110],[5090,5110,5111],[5091,5090,5111],[5091,5111,5112],[5092,5091,5112],[5092,5112,5113],[5093,5092,5113],[5093,5113,5114],[5094,5093,5114],[5094,5114,5115],[5095,5094,5115],[5095,5115,5116],[5096,5095,5116],[5096,5116,5117],[5097,5096,5117],[5097,5117,5118],[5098,5097,5118],[5098,5118,5119],[5099,5098,5119],[5099,5119,5120],[5100,5099,5120],[5100,5120,5121],[5101,5100,5121],[5101,5121,5122],[5102,5101,5122],[5102,5122,2698],[2699,5102,2698],[5103,4331,4332],[5103,4332,5123],[5104,5103,5123],[5104,5123,5124],[5105,5104,5124],[5105,5124,5125],[5106,5105,5125],[5106,5125,5126],[5107,5106,5126],[5107,5126,5127],[5108,5107,5127],[5108,5127,5128],[5109,5108,5128],[5109,5128,5129],[5110,5109,5129],[5110,5129,5130],[5111,5110,5130],[5111,5130,5131],[5112,5111,5131],[5112,5131,5132],[5113,5112,5132],[5113,5132,5133],[5114,5113,5133],[5114,5133,5134],[5115,5114,5134],[5115,5134,5135],[5116,5115,5135],[5116,5135,5136],[5117,5116,5136],[5117,5136,5137],[5118,5117,5137],[5118,5137,5138],[5119,5118,5138],[5119,5138,5139],[5120,5119,5139],[5120,5139,5140],[5121,5120,5140],[5121,5140,5141],[5122,5121,5141],[5122,5141,2697],[2698,5122,2697],[5123,4332,4333],[5123,4333,5142],[5124,5123,5142],[5124,5142,5143],[5125,5124,5143],[5125,5143,5144],[5126,5125,5144],[5126,5144,5145],[5127,5126,5145],[5127,5145,5146],[5128,5127,5146],[5128,5146,5147],[5129,5128,5147],[5129,5147,5148],[5130,5129,5148],[5130,5148,5149],[5131,5130,5149],[5131,5149,5150],[5132,5131,5150],[5132,5150,5151],[5133,5132,5151],[5133,5151,5152],[5134,5133,5152],[5134,5152,5153],[5135,5134,5153],[5135,5153,5154],[5136,5135,5154],[5136,5154,5155],[5137,5136,5155],[5137,5155,5156],[5138,5137,5156],[5138,5156,5157],[5139,5138,5157],[5139,5157,5158],[5140,5139,5158],[5140,5158,5159],[5141,5140,5159],[5141,5159,2696],[2697,5141,2696],[5142,4333,4334],[5142,4334,5160],[5143,5142,5160],[5143,5160,5161],[5144,5143,5161],[5144,5161,5162],[5145,5144,5162],[5145,5162,5163],[5146,5145,5163],[5146,5163,5164],[5147,5146,5164],[5147,5164,5165],[5148,5147,5165],[5148,5165,5166],[5149,5148,5166],[5149,5166,5167],[5150,5149,5167],[5150,5167,5168],[5151,5150,5168],[5151,5168,5169],[5152,5151,5169],[5152,5169,5170],[5153,5152,5170],[5153,5170,5171],[5154,5153,5171],[5154,5171,5172],[5155,5154,5172],[5155,5172,5173],[5156,5155,5173],[5156,5173,5174],[5157,5156,5174],[5157,5174,5175],[5158,5157,5175],[5158,5175,5176],[5159,5158,5176],[5159,5176,2695],[2696,5159,2695],[5160,4334,4335],[5160,4335,5177],[5161,5160,5177],[5161,5177,5178],[5162,5161,5178],[5162,5178,5179],[5163,5162,5179],[5163,5179,5180],[5164,5163,5180],[5164,5180,5181],[5165,5164,5181],[5165,5181,5182],[5166,5165,5182],[5166,5182,5183],[5167,5166,5183],[5167,5183,5184],[5168,5167,5184],[5168,5184,5185],[5169,5168,5185],[5169,5185,5186],[5170,5169,5186],[5170,5186,5187],[5171,5170,5187],[5171,5187,5188],[5172,5171,5188],[5172,5188,5189],[5173,5172,5189],[5173,5189,5190],[5174,5173,5190],[5174,5190,5191],[5175,5174,5191],[5175,5191,5192],[5176,5175,5192],[5176,5192,2694],[2695,5176,2694],[5177,4335,4336],[5177,4336,5193],[5178,5177,5193],[5178,5193,5194],[5179,5178,5194],[5179,5194,5195],[5180,5179,5195],[5180,5195,5196],[5181,5180,5196],[5181,5196,5197],[5182,5181,5197],[5182,5197,5198],[5183,5182,5198],[5183,5198,5199],[5184,5183,5199],[5184,5199,5200],[5185,5184,5200],[5185,5200,5201],[5186,5185,5201],[5186,5201,5202],[5187,5186,5202],[5187,5202,5203],[5188,5187,5203],[5188,5203,5204],[5189,5188,5204],[5189,5204,5205],[5190,5189,5205],[5190,5205,5206],[5191,5190,5206],[5191,5206,5207],[5192,5191,5207],[5192,5207,2693],[2694,5192,2693],[5193,4336,4337],[5193,4337,5208],[5194,5193,5208],[5194,5208,5209],[5195,5194,5209],[5195,5209,5210],[5196,5195,5210],[5196,5210,5211],[5197,5196,5211],[5197,5211,5212],[5198,5197,5212],[5198,5212,5213],[5199,5198,5213],[5199,5213,5214],[5200,5199,5214],[5200,5214,5215],[5201,5200,5215],[5201,5215,5216],[5202,5201,5216],[5202,5216,5217],[5203,5202,5217],[5203,5217,5218],[5204,5203,5218],[5204,5218,5219],[5205,5204,5219],[5205,5219,5220],[5206,5205,5220],[5206,5220,5221],[5207,5206,5221],[5207,5221,2692],[2693,5207,2692],[5208,4337,4338],[5208,4338,5222],[5209,5208,5222],[5209,5222,5223],[5210,5209,5223],[5210,5223,5224],[5211,5210,5224],[5211,5224,5225],[5212,5211,5225],[5212,5225,5226],[5213,5212,5226],[5213,5226,5227],[5214,5213,5227],[5214,5227,5228],[5215,5214,5228],[5215,5228,5229],[5216,5215,5229],[5216,5229,5230],[5217,5216,5230],[5217,5230,5231],[5218,5217,5231],[5218,5231,5232],[5219,5218,5232],[5219,5232,5233],[5220,5219,5233],[5220,5233,5234],[5221,5220,5234],[5221,5234,2691],[2692,5221,2691],[5222,4338,4339],[5222,4339,5235],[5223,5222,5235],[5223,5235,5236],[5224,5223,5236],[5224,5236,5237],[5225,5224,5237],[5225,5237,5238],[5226,5225,5238],[5226,5238,5239],[5227,5226,5239],[5227,5239,5240],[5228,5227,5240],[5228,5240,5241],[5229,5228,5241],[5229,5241,5242],[5230,5229,5242],[5230,5242,5243],[5231,5230,5243],[5231,5243,5244],[5232,5231,5244],[5232,5244,5245],[5233,5232,5245],[5233,5245,5246],[5234,5233,5246],[5234,5246,2690],[2691,5234,2690],[5235,4339,4340],[5235,4340,5247],[5236,5235,5247],[5236,5247,5248],[5237,5236,5248],[5237,5248,5249],[5238,5237,5249],[5238,5249,5250],[5239,5238,5250],[5239,5250,5251],[5240,5239,5251],[5240,5251,5252],[5241,5240,5252],[5241,5252,5253],[5242,5241,5253],[5242,5253,5254],[5243,5242,5254],[5243,5254,5255],[5244,5243,5255],[5244,5255,5256],[5245,5244,5256],[5245,5256,5257],[5246,5245,5257],[5246,5257,2689],[2690,5246,2689],[5247,4340,4341],[5247,4341,5258],[5248,5247,5258],[5248,5258,5259],[5249,5248,5259],[5249,5259,5260],[5250,5249,5260],[5250,5260,5261],[5251,5250,5261],[5251,5261,5262],[5252,5251,5262],[5252,5262,5263],[5253,5252,5263],[5253,5263,5264],[5254,5253,5264],[5254,5264,5265],[5255,5254,5265],[5255,5265,5266],[5256,5255,5266],[5256,5266,5267],[5257,5256,5267],[5257,5267,2688],[2689,5257,2688],[5258,4341,4342],[5258,4342,5268],[5259,5258,5268],[5259,5268,5269],[5260,5259,5269],[5260,5269,5270],[5261,5260,5270],[5261,5270,5271],[5262,5261,5271],[5262,5271,5272],[5263,5262,5272],[5263,5272,5273],[5264,5263,5273],[5264,5273,5274],[5265,5264,5274],[5265,5274,5275],[5266,5265,5275],[5266,5275,5276],[5267,5266,5276],[5267,5276,2687],[2688,5267,2687],[5268,4342,4343],[5268,4343,5277],[5269,5268,5277],[5269,5277,5278],[5270,5269,5278],[5270,5278,5279],[5271,5270,5279],[5271,5279,5280],[5272,5271,5280],[5272,5280,5281],[5273,5272,5281],[5273,5281,5282],[5274,5273,5282],[5274,5282,5283],[5275,5274,5283],[5275,5283,5284],[5276,5275,5284],[5276,5284,2686],[2687,5276,2686],[5277,4343,4344],[5277,4344,5285],[5278,5277,5285],[5278,5285,5286],[5279,5278,5286],[5279,5286,5287],[5280,5279,5287],[5280,5287,5288],[5281,5280,5288],[5281,5288,5289],[5282,5281,5289],[5282,5289,5290],[5283,5282,5290],[5283,5290,5291],[5284,5283,5291],[5284,5291,2685],[2686,5284,2685],[5285,4344,4345],[5285,4345,5292],[5286,5285,5292],[5286,5292,5293],[5287,5286,5293],[5287,5293,5294],[5288,5287,5294],[5288,5294,5295],[5289,5288,5295],[5289,5295,5296],[5290,5289,5296],[5290,5296,5297],[5291,5290,5297],[5291,5297,2684],[2685,5291,2684],[5292,4345,4346],[5292,4346,5298],[5293,5292,5298],[5293,5298,5299],[5294,5293,5299],[5294,5299,5300],[5295,5294,5300],[5295,5300,5301],[5296,5295,5301],[5296,5301,5302],[5297,5296,5302],[5297,5302,2683],[2684,5297,2683],[5298,4346,4347],[5298,4347,5303],[5299,5298,5303],[5299,5303,5304],[5300,5299,5304],[5300,5304,5305],[5301,5300,5305],[5301,5305,5306],[5302,5301,5306],[5302,5306,2682],[2683,5302,2682],[5303,4347,4348],[5303,4348,5307],[5304,5303,5307],[5304,5307,5308],[5305,5304,5308],[5305,5308,5309],[5306,5305,5309],[5306,5309,2681],[2682,5306,2681],[5307,4348,4349],[5307,4349,5310],[5308,5307,5310],[5308,5310,5311],[5309,5308,5311],[5309,5311,2680],[2681,5309,2680],[5310,4349,4350],[5310,4350,5312],[5311,5310,5312],[5311,5312,2679],[2680,5311,2679],[5312,4350,4351],[5312,4351,2678],[2679,5312,2678],[2678,4351,5],[2709,5,2212],[2709,2212,5344],[2710,2709,5344],[2710,5344,5345],[2711,2710,5345],[2711,5345,5346],[2712,2711,5346],[2712,5346,5347],[2713,2712,5347],[2713,5347,5348],[2714,2713,5348],[2714,5348,5349],[2715,2714,5349],[2715,5349,5350],[2716,2715,5350],[2716,5350,5351],[2717,2716,5351],[2717,5351,5352],[2718,2717,5352],[2718,5352,5353],[2719,2718,5353],[2719,5353,5354],[2720,2719,5354],[2720,5354,5355],[2721,2720,5355],[2721,5355,5356],[2722,2721,5356],[2722,5356,5357],[2723,2722,5357],[2723,5357,5358],[2724,2723,5358],[2724,5358,5359],[2725,2724,5359],[2725,5359,5360],[2726,2725,5360],[2726,5360,5361],[2727,2726,5361],[2727,5361,5362],[2728,2727,5362],[2728,5362,5363],[2729,2728,5363],[2729,5363,5364],[2730,2729,5364],[2730,5364,5365],[2731,2730,5365],[2731,5365,5366],[2732,2731,5366],[2732,5366,5367],[2733,2732,5367],[2733,5367,5368],[2734,2733,5368],[2734,5368,5369],[2735,2734,5369],[2735,5369,5370],[2736,2735,5370],[2736,5370,5371],[2737,2736,5371],[2737,5371,5372],[2738,2737,5372],[2738,5372,5373],[2739,2738,5373],[2739,5373,5343],[10,2739,5343],[5344,2212,2211],[5344,2211,5374],[5345,5344,5374],[5345,5374,5375],[5346,5345,5375],[5346,5375,5376],[5347,5346,5376],[5347,5376,5377],[5348,5347,5377],[5348,5377,5378],[5349,5348,5378],[5349,5378,5379],[5350,5349,5379],[5350,5379,5380],[5351,5350,5380],[5351,5380,5381],[5352,5351,5381],[5352,5381,5382],[5353,5352,5382],[5353,5382,5383],[5354,5353,5383],[5354,5383,5384],[5355,5354,5384],[5355,5384,5385],[5356,5355,5385],[5356,5385,5386],[5357,5356,5386],[5357,5386,5387],[5358,5357,5387],[5358,5387,5388],[5359,5358,5388],[5359,5388,5389],[5360,5359,5389],[5360,5389,5390],[5361,5360,5390],[5361,5390,5391],[5362,5361,5391],[5362,5391,5392],[5363,5362,5392],[5363,5392,5393],[5364,5363,5393],[5364,5393,5394],[5365,5364,5394],[5365,5394,5395],[5366,5365,5395],[5366,5395,5396],[5367,5366,5396],[5367,5396,5397],[5368,5367,5397],[5368,5397,5398],[5369,5368,5398],[5369,5398,5399],[5370,5369,5399],[5370,5399,5400],[5371,5370,5400],[5371,5400,5401],[5372,5371,5401],[5372,5401,5402],[5373,5372,5402],[5373,5402,5342],[5343,5373,5342],[5374,2211,2210],[5374,2210,5403],[5375,5374,5403],[5375,5403,5404],[5376,5375,5404],[5376,5404,5405],[5377,5376,5405],[5377,5405,5406],[5378,5377,5406],[5378,5406,5407],[5379,5378,5407],[5379,5407,5408],[5380,5379,5408],[5380,5408,5409],[5381,5380,5409],[5381,5409,5410],[5382,5381,5410],[5382,5410,5411],[5383,5382,5411],[5383,5411,5412],[5384,5383,5412],[5384,5412,5413],[5385,5384,5413],[5385,5413,5414],[5386,5385,5414],[5386,5414,5415],[5387,5386,5415],[5387,5415,5416],[5388,5387,5416],[5388,5416,5417],[5389,5388,5417],[5389,5417,5418],[5390,5389,5418],[5390,5418,5419],[5391,5390,5419],[5391,5419,5420],[5392,5391,5420],[5392,5420,5421],[5393,5392,5421],[5393,5421,5422],[5394,5393,5422],[5394,5422,5423],[5395,5394,5423],[5395,5423,5424],[5396,5395,5424],[5396,5424,5425],[5397,5396,5425],[5397,5425,5426],[5398,5397,5426],[5398,5426,5427],[5399,5398,5427],[5399,5427,5428],[5400,5399,5428],[5400,5428,5429],[5401,5400,5429],[5401,5429,5430],[5402,5401,5430],[5402,5430,5341],[5342,5402,5341],[5403,2210,2209],[5403,2209,5431],[5404,5403,5431],[5404,5431,5432],[5405,5404,5432],[5405,5432,5433],[5406,5405,5433],[5406,5433,5434],[5407,5406,5434],[5407,5434,5435],[5408,5407,5435],[5408,5435,5436],[5409,5408,5436],[5409,5436,5437],[5410,5409,5437],[5410,5437,5438],[5411,5410,5438],[5411,5438,5439],[5412,5411,5439],[5412,5439,5440],[5413,5412,5440],[5413,5440,5441],[5414,5413,5441],[5414,5441,5442],[5415,5414,5442],[5415,5442,5443],[5416,5415,5443],[5416,5443,5444],[5417,5416,5444],[5417,5444,5445],[5418,5417,5445],[5418,5445,5446],[5419,5418,5446],[5419,5446,5447],[5420,5419,5447],[5420,5447,5448],[5421,5420,5448],[5421,5448,5449],[5422,5421,5449],[5422,5449,5450],[5423,5422,5450],[5423,5450,5451],[5424,5423,5451],[5424,5451,5452],[5425,5424,5452],[5425,5452,5453],[5426,5425,5453],[5426,5453,5454],[5427,5426,5454],[5427,5454,5455],[5428,5427,5455],[5428,5455,5456],[5429,5428,5456],[5429,5456,5457],[5430,5429,5457],[5430,5457,5340],[5341,5430,5340],[5431,2209,2208],[5431,2208,5458],[5432,5431,5458],[5432,5458,5459],[5433,5432,5459],[5433,5459,5460],[5434,5433,5460],[5434,5460,5461],[5435,5434,5461],[5435,5461,5462],[5436,5435,5462],[5436,5462,5463],[5437,5436,5463],[5437,5463,5464],[5438,5437,5464],[5438,5464,5465],[5439,5438,5465],[5439,5465,5466],[5440,5439,5466],[5440,5466,5467],[5441,5440,5467],[5441,5467,5468],[5442,5441,5468],[5442,5468,5469],[5443,5442,5469],[5443,5469,5470],[5444,5443,5470],[5444,5470,5471],[5445,5444,5471],[5445,5471,5472],[5446,5445,5472],[5446,5472,5473],[5447,5446,5473],[5447,5473,5474],[5448,5447,5474],[5448,5474,5475],[5449,5448,5475],[5449,5475,5476],[5450,5449,5476],[5450,5476,5477],[5451,5450,5477],[5451,5477,5478],[5452,5451,5478],[5452,5478,5479],[5453,5452,5479],[5453,5479,5480],[5454,5453,5480],[5454,5480,5481],[5455,5454,5481],[5455,5481,5482],[5456,5455,5482],[5456,5482,5483],[5457,5456,5483],[5457,5483,5339],[5340,5457,5339],[5458,2208,2207],[5458,2207,5484],[5459,5458,5484],[5459,5484,5485],[5460,5459,5485],[5460,5485,5486],[5461,5460,5486],[5461,5486,5487],[5462,5461,5487],[5462,5487,5488],[5463,5462,5488],[5463,5488,5489],[5464,5463,5489],[5464,5489,5490],[5465,5464,5490],[5465,5490,5491],[5466,5465,5491],[5466,5491,5492],[5467,5466,5492],[5467,5492,5493],[5468,5467,5493],[5468,5493,5494],[5469,5468,5494],[5469,5494,5495],[5470,5469,5495],[5470,5495,5496],[5471,5470,5496],[5471,5496,5497],[5472,5471,5497],[5472,5497,5498],[5473,5472,5498],[5473,5498,5499],[5474,5473,5499],[5474,5499,5500],[5475,5474,5500],[5475,5500,5501],[5476,5475,5501],[5476,5501,5502],[5477,5476,5502],[5477,5502,5503],[5478,5477,5503],[5478,5503,5504],[5479,5478,5504],[5479,5504,5505],[5480,5479,5505],[5480,5505,5506],[5481,5480,5506],[5481,5506,5507],[5482,5481,5507],[5482,5507,5508],[5483,5482,5508],[5483,5508,5338],[5339,5483,5338],[5484,2207,2206],[5484,2206,5509],[5485,5484,5509],[5485,5509,5510],[5486,5485,5510],[5486,5510,5511],[5487,5486,5511],[5487,5511,5512],[5488,5487,5512],[5488,5512,5513],[5489,5488,5513],[5489,5513,5514],[5490,5489,5514],[5490,5514,5515],[5491,5490,5515],[5491,5515,5516],[5492,5491,5516],[5492,5516,5517],[5493,5492,5517],[5493,5517,5518],[5494,5493,5518],[5494,5518,5519],[5495,5494,5519],[5495,5519,5520],[5496,5495,5520],[5496,5520,5521],[5497,5496,5521],[5497,5521,5522],[5498,5497,5522],[5498,5522,5523],[5499,5498,5523],[5499,5523,5524],[5500,5499,5524],[5500,5524,5525],[5501,5500,5525],[5501,5525,5526],[5502,5501,5526],[5502,5526,5527],[5503,5502,5527],[5503,5527,5528],[5504,5503,5528],[5504,5528,5529],[5505,5504,5529],[5505,5529,5530],[5506,5505,5530],[5506,5530,5531],[5507,5506,5531],[5507,5531,5532],[5508,5507,5532],[5508,5532,5337],[5338,5508,5337],[5509,2206,2205],[5509,2205,5533],[5510,5509,5533],[5510,5533,5534],[5511,5510,5534],[5511,5534,5535],[5512,5511,5535],[5512,5535,5536],[5513,5512,5536],[5513,5536,5537],[5514,5513,5537],[5514,5537,5538],[5515,5514,5538],[5515,5538,5539],[5516,5515,5539],[5516,5539,5540],[5517,5516,5540],[5517,5540,5541],[5518,5517,5541],[5518,5541,5542],[5519,5518,5542],[5519,5542,5543],[5520,5519,5543],[5520,5543,5544],[5521,5520,5544],[5521,5544,5545],[5522,5521,5545],[5522,5545,5546],[5523,5522,5546],[5523,5546,5547],[5524,5523,5547],[5524,5547,5548],[5525,5524,5548],[5525,5548,5549],[5526,5525,5549],[5526,5549,5550],[5527,5526,5550],[5527,5550,5551],[5528,5527,5551],[5528,5551,5552],[5529,5528,5552],[5529,5552,5553],[5530,5529,5553],[5530,5553,5554],[5531,5530,5554],[5531,5554,5555],[5532,5531,5555],[5532,5555,5336],[5337,5532,5336],[5533,2205,2204],[5533,2204,5556],[5534,5533,5556],[5534,5556,5557],[5535,5534,5557],[5535,5557,5558],[5536,5535,5558],[5536,5558,5559],[5537,5536,5559],[5537,5559,5560],[5538,5537,5560],[5538,5560,5561],[5539,5538,5561],[5539,5561,5562],[5540,5539,5562],[5540,5562,5563],[5541,5540,5563],[5541,5563,5564],[5542,5541,5564],[5542,5564,5565],[5543,5542,5565],[5543,5565,5566],[5544,5543,5566],[5544,5566,5567],[5545,5544,5567],[5545,5567,5568],[5546,5545,5568],[5546,5568,5569],[5547,5546,5569],[5547,5569,5570],[5548,5547,5570],[5548,5570,5571],[5549,5548,5571],[5549,5571,5572],[5550,5549,5572],[5550,5572,5573],[5551,5550,5573],[5551,5573,5574],[5552,5551,5574],[5552,5574,5575],[5553,5552,5575],[5553,5575,5576],[5554,5553,5576],[5554,5576,5577],[5555,5554,5577],[5555,5577,5335],[5336,5555,5335],[5556,2204,2203],[5556,2203,5578],[5557,5556,5578],[5557,5578,5579],[5558,5557,5579],[5558,5579,5580],[5559,5558,5580],[5559,5580,5581],[5560,5559,5581],[5560,5581,5582],[5561,5560,5582],[5561,5582,5583],[5562,5561,5583],[5562,5583,5584],[5563,5562,5584],[5563,5584,5585],[5564,5563,5585],[5564,5585,5586],[5565,5564,5586],[5565,5586,5587],[5566,5565,5587],[5566,5587,5588],[5567,5566,5588],[5567,5588,5589],[5568,5567,5589],[5568,5589,5590],[5569,5568,5590],[5569,5590,5591],[5570,5569,5591],[5570,5591,5592],[5571,5570,5592],[5571,5592,5593],[5572,5571,5593],[5572,5593,5594],[5573,5572,5594],[5573,5594,5595],[5574,5573,5595],[5574,5595,5596],[5575,5574,5596],[5575,5596,5597],[5576,5575,5597],[5576,5597,5598],[5577,5576,5598],[5577,5598,5334],[5335,5577,5334],[5578,2203,2202],[5578,2202,5599],[5579,5578,5599],[5579,5599,5600],[5580,5579,5600],[5580,5600,5601],[5581,5580,5601],[5581,5601,5602],[5582,5581,5602],[5582,5602,5603],[5583,5582,5603],[5583,5603,5604],[5584,5583,5604],[5584,5604,5605],[5585,5584,5605],[5585,5605,5606],[5586,5585,5606],[5586,5606,5607],[5587,5586,5607],[5587,5607,5608],[5588,5587,5608],[5588,5608,5609],[5589,5588,5609],[5589,5609,5610],[5590,5589,5610],[5590,5610,5611],[5591,5590,5611],[5591,5611,5612],[5592,5591,5612],[5592,5612,5613],[5593,5592,5613],[5593,5613,5614],[5594,5593,5614],[5594,5614,5615],[5595,5594,5615],[5595,5615,5616],[5596,5595,5616],[5596,5616,5617],[5597,5596,5617],[5597,5617,5618],[5598,5597,5618],[5598,5618,5333],[5334,5598,5333],[5599,2202,2201],[5599,2201,5619],[5600,5599,5619],[5600,5619,5620],[5601,5600,5620],[5601,5620,5621],[5602,5601,5621],[5602,5621,5622],[5603,5602,5622],[5603,5622,5623],[5604,5603,5623],[5604,5623,5624],[5605,5604,5624],[5605,5624,5625],[5606,5605,5625],[5606,5625,5626],[5607,5606,5626],[5607,5626,5627],[5608,5607,5627],[5608,5627,5628],[5609,5608,5628],[5609,5628,5629],[5610,5609,5629],[5610,5629,5630],[5611,5610,5630],[5611,5630,5631],[5612,5611,5631],[5612,5631,5632],[5613,5612,5632],[5613,5632,5633],[5614,5613,5633],[5614,5633,5634],[5615,5614,5634],[5615,5634,5635],[5616,5615,5635],[5616,5635,5636],[5617,5616,5636],[5617,5636,5637],[5618,5617,5637],[5618,5637,5332],[5333,5618,5332],[5619,2201,2200],[5619,2200,5638],[5620,5619,5638],[5620,5638,5639],[5621,5620,5639],[5621,5639,5640],[5622,5621,5640],[5622,5640,5641],[5623,5622,5641],[5623,5641,5642],[5624,5623,5642],[5624,5642,5643],[5625,5624,5643],[5625,5643,5644],[5626,5625,5644],[5626,5644,5645],[5627,5626,5645],[5627,5645,5646],[5628,5627,5646],[5628,5646,5647],[5629,5628,5647],[5629,5647,5648],[5630,5629,5648],[5630,5648,5649],[5631,5630,5649],[5631,5649,5650],[5632,5631,5650],[5632,5650,5651],[5633,5632,5651],[5633,5651,5652],[5634,5633,5652],[5634,5652,5653],[5635,5634,5653],[5635,5653,5654],[5636,5635,5654],[5636,5654,5655],[5637,5636,5655],[5637,5655,5331],[5332,5637,5331],[5638,2200,2199],[5638,2199,5656],[5639,5638,5656],[5639,5656,5657],[5640,5639,5657],[5640,5657,5658],[5641,5640,5658],[5641,5658,5659],[5642,5641,5659],[5642,5659,5660],[5643,5642,5660],[5643,5660,5661],[5644,5643,5661],[5644,5661,5662],[5645,5644,5662],[5645,5662,5663],[5646,5645,5663],[5646,5663,5664],[5647,5646,5664],[5647,5664,5665],[5648,5647,5665],[5648,5665,5666],[5649,5648,5666],[5649,5666,5667],[5650,5649,5667],[5650,5667,5668],[5651,5650,5668],[5651,5668,5669],[5652,5651,5669],[5652,5669,5670],[5653,5652,5670],[5653,5670,5671],[5654,5653,5671],[5654,5671,5672],[5655,5654,5672],[5655,5672,5330],[5331,5655,5330],[5656,2199,2198],[5656,2198,5673],[5657,5656,5673],[5657,5673,5674],[5658,5657,5674],[5658,5674,5675],[5659,5658,5675],[5659,5675,5676],[5660,5659,5676],[5660,5676,5677],[5661,5660,5677],[5661,5677,5678],[5662,5661,5678],[5662,5678,5679],[5663,5662,5679],[5663,5679,5680],[5664,5663,5680],[5664,5680,5681],[5665,5664,5681],[5665,5681,5682],[5666,5665,5682],[5666,5682,5683],[5667,5666,5683],[5667,5683,5684],[5668,5667,5684],[5668,5684,5685],[5669,5668,5685],[5669,5685,5686],[5670,5669,5686],[5670,5686,5687],[5671,5670,5687],[5671,5687,5688],[5672,5671,5688],[5672,5688,5329],[5330,5672,5329],[5673,2198,2197],[5673,2197,5689],[5674,5673,5689],[5674,5689,5690],[5675,5674,5690],[5675,5690,5691],[5676,5675,5691],[5676,5691,5692],[5677,5676,5692],[5677,5692,5693],[5678,5677,5693],[5678,5693,5694],[5679,5678,5694],[5679,5694,5695],[5680,5679,5695],[5680,5695,5696],[5681,5680,5696],[5681,5696,5697],[5682,5681,5697],[5682,5697,5698],[5683,5682,5698],[5683,5698,5699],[5684,5683,5699],[5684,5699,5700],[5685,5684,5700],[5685,5700,5701],[5686,5685,5701],[5686,5701,5702],[5687,5686,5702],[5687,5702,5703],[5688,5687,5703],[5688,5703,5328],[5329,5688,5328],[5689,2197,2196],[5689,2196,5704],[5690,5689,5704],[5690,5704,5705],[5691,5690,5705],[5691,5705,5706],[5692,5691,5706],[5692,5706,5707],[5693,5692,5707],[5693,5707,5708],[5694,5693,5708],[5694,5708,5709],[5695,5694,5709],[5695,5709,5710],[5696,5695,5710],[5696,5710,5711],[5697,5696,5711],[5697,5711,5712],[5698,5697,5712],[5698,5712,5713],[5699,5698,5713],[5699,5713,5714],[5700,5699,5714],[5700,5714,5715],[5701,5700,5715],[5701,5715,5716],[5702,5701,5716],[5702,5716,5717],[5703,5702,5717],[5703,5717,5327],[5328,5703,5327],[5704,2196,2195],[5704,2195,5718],[5705,5704,5718],[5705,5718,5719],[5706,5705,5719],[5706,5719,5720],[5707,5706,5720],[5707,5720,5721],[5708,5707,5721],[5708,5721,5722],[5709,5708,5722],[5709,5722,5723],[5710,5709,5723],[5710,5723,5724],[5711,5710,5724],[5711,5724,5725],[5712,5711,5725],[5712,5725,5726],[5713,5712,5726],[5713,5726,5727],[5714,5713,5727],[5714,5727,5728],[5715,5714,5728],[5715,5728,5729],[5716,5715,5729],[5716,5729,5730],[5717,5716,5730],[5717,5730,5326],[5327,5717,5326],[5718,2195,2194],[5718,2194,5731],[5719,5718,5731],[5719,5731,5732],[5720,5719,5732],[5720,5732,5733],[5721,5720,5733],[5721,5733,5734],[5722,5721,5734],[5722,5734,5735],[5723,5722,5735],[5723,5735,5736],[5724,5723,5736],[5724,5736,5737],[5725,5724,5737],[5725,5737,5738],[5726,5725,5738],[5726,5738,5739],[5727,5726,5739],[5727,5739,5740],[5728,5727,5740],[5728,5740,5741],[5729,5728,5741],[5729,5741,5742],[5730,5729,5742],[5730,5742,5325],[5326,5730,5325],[5731,2194,2193],[5731,2193,5743],[5732,5731,5743],[5732,5743,5744],[5733,5732,5744],[5733,5744,5745],[5734,5733,5745],[5734,5745,5746],[5735,5734,5746],[5735,5746,5747],[5736,5735,5747],[5736,5747,5748],[5737,5736,5748],[5737,5748,5749],[5738,5737,5749],[5738,5749,5750],[5739,5738,5750],[5739,5750,5751],[5740,5739,5751],[5740,5751,5752],[5741,5740,5752],[5741,5752,5753],[5742,5741,5753],[5742,5753,5324],[5325,5742,5324],[5743,2193,2192],[5743,2192,5754],[5744,5743,5754],[5744,5754,5755],[5745,5744,5755],[5745,5755,5756],[5746,5745,5756],[5746,5756,5757],[5747,5746,5757],[5747,5757,5758],[5748,5747,5758],[5748,5758,5759],[5749,5748,5759],[5749,5759,5760],[5750,5749,5760],[5750,5760,5761],[5751,5750,5761],[5751,5761,5762],[5752,5751,5762],[5752,5762,5763],[5753,5752,5763],[5753,5763,5323],[5324,5753,5323],[5754,2192,2191],[5754,2191,5764],[5755,5754,5764],[5755,5764,5765],[5756,5755,5765],[5756,5765,5766],[5757,5756,5766],[5757,5766,5767],[5758,5757,5767],[5758,5767,5768],[5759,5758,5768],[5759,5768,5769],[5760,5759,5769],[5760,5769,5770],[5761,5760,5770],[5761,5770,5771],[5762,5761,5771],[5762,5771,5772],[5763,5762,5772],[5763,5772,5322],[5323,5763,5322],[5764,2191,2190],[5764,2190,5773],[5765,5764,5773],[5765,5773,5774],[5766,5765,5774],[5766,5774,5775],[5767,5766,5775],[5767,5775,5776],[5768,5767,5776],[5768,5776,5777],[5769,5768,5777],[5769,5777,5778],[5770,5769,5778],[5770,5778,5779],[5771,5770,5779],[5771,5779,5780],[5772,5771,5780],[5772,5780,5321],[5322,5772,5321],[5773,2190,2189],[5773,2189,5781],[5774,5773,5781],[5774,5781,5782],[5775,5774,5782],[5775,5782,5783],[5776,5775,5783],[5776,5783,5784],[5777,5776,5784],[5777,5784,5785],[5778,5777,5785],[5778,5785,5786],[5779,5778,5786],[5779,5786,5787],[5780,5779,5787],[5780,5787,5320],[5321,5780,5320],[5781,2189,2188],[5781,2188,5788],[5782,5781,5788],[5782,5788,5789],[5783,5782,5789],[5783,5789,5790],[5784,5783,5790],[5784,5790,5791],[5785,5784,5791],[5785,5791,5792],[5786,5785,5792],[5786,5792,5793],[5787,5786,5793],[5787,5793,5319],[5320,5787,5319],[5788,2188,2187],[5788,2187,5794],[5789,5788,5794],[5789,5794,5795],[5790,5789,5795],[5790,5795,5796],[5791,5790,5796],[5791,5796,5797],[5792,5791,5797],[5792,5797,5798],[5793,5792,5798],[5793,5798,5318],[5319,5793,5318],[5794,2187,2186],[5794,2186,5799],[5795,5794,5799],[5795,5799,5800],[5796,5795,5800],[5796,5800,5801],[5797,5796,5801],[5797,5801,5802],[5798,5797,5802],[5798,5802,5317],[5318,5798,5317],[5799,2186,2185],[5799,2185,5803],[5800,5799,5803],[5800,5803,5804],[5801,5800,5804],[5801,5804,5805],[5802,5801,5805],[5802,5805,5316],[5317,5802,5316],[5803,2185,2184],[5803,2184,5806],[5804,5803,5806],[5804,5806,5807],[5805,5804,5807],[5805,5807,5315],[5316,5805,5315],[5806,2184,2183],[5806,2183,5808],[5807,5806,5808],[5807,5808,5314],[5315,5807,5314],[5808,2183,2182],[5808,2182,5313],[5314,5808,5313],[5313,2182,2],[3297,10,5343],[3297,5343,5840],[3296,3297,5840],[3296,5840,5841],[3295,3296,5841],[3295,5841,5842],[3294,3295,5842],[3294,5842,5843],[3293,3294,5843],[3293,5843,5844],[3292,3293,5844],[3292,5844,5845],[3291,3292,5845],[3291,5845,5846],[3290,3291,5846],[3290,5846,5847],[3289,3290,5847],[3289,5847,5848],[3288,3289,5848],[3288,5848,5849],[3287,3288,5849],[3287,5849,5850],[3286,3287,5850],[3286,5850,5851],[3285,3286,5851],[3285,5851,5852],[3284,3285,5852],[3284,5852,5853],[3283,3284,5853],[3283,5853,5854],[3282,3283,5854],[3282,5854,5855],[3281,3282,5855],[3281,5855,5856],[3280,3281,5856],[3280,5856,5857],[3279,3280,5857],[3279,5857,5858],[3278,3279,5858],[3278,5858,5859],[3277,3278,5859],[3277,5859,5860],[3276,3277,5860],[3276,5860,5861],[3275,3276,5861],[3275,5861,5862],[3274,3275,5862],[3274,5862,5863],[3273,3274,5863],[3273,5863,5864],[3272,3273,5864],[3272,5864,5865],[3271,3272,5865],[3271,5865,5866],[3270,3271,5866],[3270,5866,5867],[3269,3270,5867],[3269,5867,5868],[3268,3269,5868],[3268,5868,5869],[3267,3268,5869],[3267,5869,5839],[6,3267,5839],[5840,5343,5342],[5840,5342,5870],[5841,5840,5870],[5841,5870,5871],[5842,5841,5871],[5842,5871,5872],[5843,5842,5872],[5843,5872,5873],[5844,5843,5873],[5844,5873,5874],[5845,5844,5874],[5845,5874,5875],[5846,5845,5875],[5846,5875,5876],[5847,5846,5876],[5847,5876,5877],[5848,5847,5877],[5848,5877,5878],[5849,5848,5878],[5849,5878,5879],[5850,5849,5879],[5850,5879,5880],[5851,5850,5880],[5851,5880,5881],[5852,5851,5881],[5852,5881,5882],[5853,5852,5882],[5853,5882,5883],[5854,5853,5883],[5854,5883,5884],[5855,5854,5884],[5855,5884,5885],[5856,5855,5885],[5856,5885,5886],[5857,5856,5886],[5857,5886,5887],[5858,5857,5887],[5858,5887,5888],[5859,5858,5888],[5859,5888,5889],[5860,5859,5889],[5860,5889,5890],[5861,5860,5890],[5861,5890,5891],[5862,5861,5891],[5862,5891,5892],[5863,5862,5892],[5863,5892,5893],[5864,5863,5893],[5864,5893,5894],[5865,5864,5894],[5865,5894,5895],[5866,5865,5895],[5866,5895,5896],[5867,5866,5896],[5867,5896,5897],[5868,5867,5897],[5868,5897,5898],[5869,5868,5898],[5869,5898,5838],[5839,5869,5838],[5870,5342,5341],[5870,5341,5899],[5871,5870,5899],[5871,5899,5900],[5872,5871,5900],[5872,5900,5901],[5873,5872,5901],[5873,5901,5902],[5874,5873,5902],[5874,5902,5903],[5875,5874,5903],[5875,5903,5904],[5876,5875,5904],[5876,5904,5905],[5877,5876,5905],[5877,5905,5906],[5878,5877,5906],[5878,5906,5907],[5879,5878,5907],[5879,5907,5908],[5880,5879,5908],[5880,5908,5909],[5881,5880,5909],[5881,5909,5910],[5882,5881,5910],[5882,5910,5911],[5883,5882,5911],[5883,5911,5912],[5884,5883,5912],[5884,5912,5913],[5885,5884,5913],[5885,5913,5914],[5886,5885,5914],[5886,5914,5915],[5887,5886,5915],[5887,5915,5916],[5888,5887,5916],[5888,5916,5917],[5889,5888,5917],[5889,5917,5918],[5890,5889,5918],[5890,5918,5919],[5891,5890,5919],[5891,5919,5920],[5892,5891,5920],[5892,5920,5921],[5893,5892,5921],[5893,5921,5922],[5894,5893,5922],[5894,5922,5923],[5895,5894,5923],[5895,5923,5924],[5896,5895,5924],[5896,5924,5925],[5897,5896,5925],[5897,5925,5926],[5898,5897,5926],[5898,5926,5837],[5838,5898,5837],[5899,5341,5340],[5899,5340,5927],[5900,5899,5927],[5900,5927,5928],[5901,5900,5928],[5901,5928,5929],[5902,5901,5929],[5902,5929,5930],[5903,5902,5930],[5903,5930,5931],[5904,5903,5931],[5904,5931,5932],[5905,5904,5932],[5905,5932,5933],[5906,5905,5933],[5906,5933,5934],[5907,5906,5934],[5907,5934,5935],[5908,5907,5935],[5908,5935,5936],[5909,5908,5936],[5909,5936,5937],[5910,5909,5937],[5910,5937,5938],[5911,5910,5938],[5911,5938,5939],[5912,5911,5939],[5912,5939,5940],[5913,5912,5940],[5913,5940,5941],[5914,5913,5941],[5914,5941,5942],[5915,5914,5942],[5915,5942,5943],[5916,5915,5943],[5916,5943,5944],[5917,5916,5944],[5917,5944,5945],[5918,5917,5945],[5918,5945,5946],[5919,5918,5946],[5919,5946,5947],[5920,5919,5947],[5920,5947,5948],[5921,5920,5948],[5921,5948,5949],[5922,5921,5949],[5922,5949,5950],[5923,5922,5950],[5923,5950,5951],[5924,5923,5951],[5924,5951,5952],[5925,5924,5952],[5925,5952,5953],[5926,5925,5953],[5926,5953,5836],[5837,5926,5836],[5927,5340,5339],[5927,5339,5954],[5928,5927,5954],[5928,5954,5955],[5929,5928,5955],[5929,5955,5956],[5930,5929,5956],[5930,5956,5957],[5931,5930,5957],[5931,5957,5958],[5932,5931,5958],[5932,5958,5959],[5933,5932,5959],[5933,5959,5960],[5934,5933,5960],[5934,5960,5961],[5935,5934,5961],[5935,5961,5962],[5936,5935,5962],[5936,5962,5963],[5937,5936,5963],[5937,5963,5964],[5938,5937,5964],[5938,5964,5965],[5939,5938,5965],[5939,5965,5966],[5940,5939,5966],[5940,5966,5967],[5941,5940,5967],[5941,5967,5968],[5942,5941,5968],[5942,5968,5969],[5943,5942,5969],[5943,5969,5970],[5944,5943,5970],[5944,5970,5971],[5945,5944,5971],[5945,5971,5972],[5946,5945,5972],[5946,5972,5973],[5947,5946,5973],[5947,5973,5974],[5948,5947,5974],[5948,5974,5975],[5949,5948,5975],[5949,5975,5976],[5950,5949,5976],[5950,5976,5977],[5951,5950,5977],[5951,5977,5978],[5952,5951,5978],[5952,5978,5979],[5953,5952,5979],[5953,5979,5835],[5836,5953,5835],[5954,5339,5338],[5954,5338,5980],[5955,5954,5980],[5955,5980,5981],[5956,5955,5981],[5956,5981,5982],[5957,5956,5982],[5957,5982,5983],[5958,5957,5983],[5958,5983,5984],[5959,5958,5984],[5959,5984,5985],[5960,5959,5985],[5960,5985,5986],[5961,5960,5986],[5961,5986,5987],[5962,5961,5987],[5962,5987,5988],[5963,5962,5988],[5963,5988,5989],[5964,5963,5989],[5964,5989,5990],[5965,5964,5990],[5965,5990,5991],[5966,5965,5991],[5966,5991,5992],[5967,5966,5992],[5967,5992,5993],[5968,5967,5993],[5968,5993,5994],[5969,5968,5994],[5969,5994,5995],[5970,5969,5995],[5970,5995,5996],[5971,5970,5996],[5971,5996,5997],[5972,5971,5997],[5972,5997,5998],[5973,5972,5998],[5973,5998,5999],[5974,5973,5999],[5974,5999,6000],[5975,5974,6000],[5975,6000,6001],[5976,5975,6001],[5976,6001,6002],[5977,5976,6002],[5977,6002,6003],[5978,5977,6003],[5978,6003,6004],[5979,5978,6004],[5979,6004,5834],[5835,5979,5834],[5980,5338,5337],[5980,5337,6005],[5981,5980,6005],[5981,6005,6006],[5982,5981,6006],[5982,6006,6007],[5983,5982,6007],[5983,6007,6008],[5984,5983,6008],[5984,6008,6009],[5985,5984,6009],[5985,6009,6010],[5986,5985,6010],[5986,6010,6011],[5987,5986,6011],[5987,6011,6012],[5988,5987,6012],[5988,6012,6013],[5989,5988,6013],[5989,6013,6014],[5990,5989,6014],[5990,6014,6015],[5991,5990,6015],[5991,6015,6016],[5992,5991,6016],[5992,6016,6017],[5993,5992,6017],[5993,6017,6018],[5994,5993,6018],[5994,6018,6019],[5995,5994,6019],[5995,6019,6020],[5996,5995,6020],[5996,6020,6021],[5997,5996,6021],[5997,6021,6022],[5998,5997,6022],[5998,6022,6023],[5999,5998,6023],[5999,6023,6024],[6000,5999,6024],[6000,6024,6025],[6001,6000,6025],[6001,6025,6026],[6002,6001,6026],[6002,6026,6027],[6003,6002,6027],[6003,6027,6028],[6004,6003,6028],[6004,6028,5833],[5834,6004,5833],[6005,5337,5336],[6005,5336,6029],[6006,6005,6029],[6006,6029,6030],[6007,6006,6030],[6007,6030,6031],[6008,6007,6031],[6008,6031,6032],[6009,6008,6032],[6009,6032,6033],[6010,6009,6033],[6010,6033,6034],[6011,6010,6034],[6011,6034,6035],[6012,6011,6035],[6012,6035,6036],[6013,6012,6036],[6013,6036,6037],[6014,6013,6037],[6014,6037,6038],[6015,6014,6038],[6015,6038,6039],[6016,6015,6039],[6016,6039,6040],[6017,6016,6040],[6017,6040,6041],[6018,6017,6041],[6018,6041,6042],[6019,6018,6042],[6019,6042,6043],[6020,6019,6043],[6020,6043,6044],[6021,6020,6044],[6021,6044,6045],[6022,6021,6045],[6022,6045,6046],[6023,6022,6046],[6023,6046,6047],[6024,6023,6047],[6024,6047,6048],[6025,6024,6048],[6025,6048,6049],[6026,6025,6049],[6026,6049,6050],[6027,6026,6050],[6027,6050,6051],[6028,6027,6051],[6028,6051,5832],[5833,6028,5832],[6029,5336,5335],[6029,5335,6052],[6030,6029,6052],[6030,6052,6053],[6031,6030,6053],[6031,6053,6054],[6032,6031,6054],[6032,6054,6055],[6033,6032,6055],[6033,6055,6056],[6034,6033,6056],[6034,6056,6057],[6035,6034,6057],[6035,6057,6058],[6036,6035,6058],[6036,6058,6059],[6037,6036,6059],[6037,6059,6060],[6038,6037,6060],[6038,6060,6061],[6039,6038,6061],[6039,6061,6062],[6040,6039,6062],[6040,6062,6063],[6041,6040,6063],[6041,6063,6064],[6042,6041,6064],[6042,6064,6065],[6043,6042,6065],[6043,6065,6066],[6044,6043,6066],[6044,6066,6067],[6045,6044,6067],[6045,6067,6068],[6046,6045,6068],[6046,6068,6069],[6047,6046,6069],[6047,6069,6070],[6048,6047,6070],[6048,6070,6071],[6049,6048,6071],[6049,6071,6072],[6050,6049,6072],[6050,6072,6073],[6051,6050,6073],[6051,6073,5831],[5832,6051,5831],[6052,5335,5334],[6052,5334,6074],[6053,6052,6074],[6053,6074,6075],[6054,6053,6075],[6054,6075,6076],[6055,6054,6076],[6055,6076,6077],[6056,6055,6077],[6056,6077,6078],[6057,6056,6078],[6057,6078,6079],[6058,6057,6079],[6058,6079,6080],[6059,6058,6080],[6059,6080,6081],[6060,6059,6081],[6060,6081,6082],[6061,6060,6082],[6061,6082,6083],[6062,6061,6083],[6062,6083,6084],[6063,6062,6084],[6063,6084,6085],[6064,6063,6085],[6064,6085,6086],[6065,6064,6086],[6065,6086,6087],[6066,6065,6087],[6066,6087,6088],[6067,6066,6088],[6067,6088,6089],[6068,6067,6089],[6068,6089,6090],[6069,6068,6090],[6069,6090,6091],[6070,6069,6091],[6070,6091,6092],[6071,6070,6092],[6071,6092,6093],[6072,6071,6093],[6072,6093,6094],[6073,6072,6094],[6073,6094,5830],[5831,6073,5830],[6074,5334,5333],[6074,5333,6095],[6075,6074,6095],[6075,6095,6096],[6076,6075,6096],[6076,6096,6097],[6077,6076,6097],[6077,6097,6098],[6078,6077,6098],[6078,6098,6099],[6079,6078,6099],[6079,6099,6100],[6080,6079,6100],[6080,6100,6101],[6081,6080,6101],[6081,6101,6102],[6082,6081,6102],[6082,6102,6103],[6083,6082,6103],[6083,6103,6104],[6084,6083,6104],[6084,6104,6105],[6085,6084,6105],[6085,6105,6106],[6086,6085,6106],[6086,6106,6107],[6087,6086,6107],[6087,6107,6108],[6088,6087,6108],[6088,6108,6109],[6089,6088,6109],[6089,6109,6110],[6090,6089,6110],[6090,6110,6111],[6091,6090,6111],[6091,6111,6112],[6092,6091,6112],[6092,6112,6113],[6093,6092,6113],[6093,6113,6114],[6094,6093,6114],[6094,6114,5829],[5830,6094,5829],[6095,5333,5332],[6095,5332,6115],[6096,6095,6115],[6096,6115,6116],[6097,6096,6116],[6097,6116,6117],[6098,6097,6117],[6098,6117,6118],[6099,6098,6118],[6099,6118,6119],[6100,6099,6119],[6100,6119,6120],[6101,6100,6120],[6101,6120,6121],[6102,6101,6121],[6102,6121,6122],[6103,6102,6122],[6103,6122,6123],[6104,6103,6123],[6104,6123,6124],[6105,6104,6124],[6105,6124,6125],[6106,6105,6125],[6106,6125,6126],[6107,6106,6126],[6107,6126,6127],[6108,6107,6127],[6108,6127,6128],[6109,6108,6128],[6109,6128,6129],[6110,6109,6129],[6110,6129,6130],[6111,6110,6130],[6111,6130,6131],[6112,6111,6131],[6112,6131,6132],[6113,6112,6132],[6113,6132,6133],[6114,6113,6133],[6114,6133,5828],[5829,6114,5828],[6115,5332,5331],[6115,5331,6134],[6116,6115,6134],[6116,6134,6135],[6117,6116,6135],[6117,6135,6136],[6118,6117,6136],[6118,6136,6137],[6119,6118,6137],[6119,6137,6138],[6120,6119,6138],[6120,6138,6139],[6121,6120,6139],[6121,6139,6140],[6122,6121,6140],[6122,6140,6141],[6123,6122,6141],[6123,6141,6142],[6124,6123,6142],[6124,6142,6143],[6125,6124,6143],[6125,6143,6144],[6126,6125,6144],[6126,6144,6145],[6127,6126,6145],[6127,6145,6146],[6128,6127,6146],[6128,6146,6147],[6129,6128,6147],[6129,6147,6148],[6130,6129,6148],[6130,6148,6149],[6131,6130,6149],[6131,6149,6150],[6132,6131,6150],[6132,6150,6151],[6133,6132,6151],[6133,6151,5827],[5828,6133,5827],[6134,5331,5330],[6134,5330,6152],[6135,6134,6152],[6135,6152,6153],[6136,6135,6153],[6136,6153,6154],[6137,6136,6154],[6137,6154,6155],[6138,6137,6155],[6138,6155,6156],[6139,6138,6156],[6139,6156,6157],[6140,6139,6157],[6140,6157,6158],[6141,6140,6158],[6141,6158,6159],[6142,6141,6159],[6142,6159,6160],[6143,6142,6160],[6143,6160,6161],[6144,6143,6161],[6144,6161,6162],[6145,6144,6162],[6145,6162,6163],[6146,6145,6163],[6146,6163,6164],[6147,6146,6164],[6147,6164,6165],[6148,6147,6165],[6148,6165,6166],[6149,6148,6166],[6149,6166,6167],[6150,6149,6167],[6150,6167,6168],[6151,6150,6168],[6151,6168,5826],[5827,6151,5826],[6152,5330,5329],[6152,5329,6169],[6153,6152,6169],[6153,6169,6170],[6154,6153,6170],[6154,6170,6171],[6155,6154,6171],[6155,6171,6172],[6156,6155,6172],[6156,6172,6173],[6157,6156,6173],[6157,6173,6174],[6158,6157,6174],[6158,6174,6175],[6159,6158,6175],[6159,6175,6176],[6160,6159,6176],[6160,6176,6177],[6161,6160,6177],[6161,6177,6178],[6162,6161,6178],[6162,6178,6179],[6163,6162,6179],[6163,6179,6180],[6164,6163,6180],[6164,6180,6181],[6165,6164,6181],[6165,6181,6182],[6166,6165,6182],[6166,6182,6183],[6167,6166,6183],[6167,6183,6184],[6168,6167,6184],[6168,6184,5825],[5826,6168,5825],[6169,5329,5328],[6169,5328,6185],[6170,6169,6185],[6170,6185,6186],[6171,6170,6186],[6171,6186,6187],[6172,6171,6187],[6172,6187,6188],[6173,6172,6188],[6173,6188,6189],[6174,6173,6189],[6174,6189,6190],[6175,6174,6190],[6175,6190,6191],[6176,6175,6191],[6176,6191,6192],[6177,6176,6192],[6177,6192,6193],[6178,6177,6193],[6178,6193,6194],[6179,6178,6194],[6179,6194,6195],[6180,6179,6195],[6180,6195,6196],[6181,6180,6196],[6181,6196,6197],[6182,6181,6197],[6182,6197,6198],[6183,6182,6198],[6183,6198,6199],[6184,6183,6199],[6184,6199,5824],[5825,6184,5824],[6185,5328,5327],[6185,5327,6200],[6186,6185,6200],[6186,6200,6201],[6187,6186,6201],[6187,6201,6202],[6188,6187,6202],[6188,6202,6203],[6189,6188,6203],[6189,6203,6204],[6190,6189,6204],[6190,6204,6205],[6191,6190,6205],[6191,6205,6206],[6192,6191,6206],[6192,6206,6207],[6193,6192,6207],[6193,6207,6208],[6194,6193,6208],[6194,6208,6209],[6195,6194,6209],[6195,6209,6210],[6196,6195,6210],[6196,6210,6211],[6197,6196,6211],[6197,6211,6212],[6198,6197,6212],[6198,6212,6213],[6199,6198,6213],[6199,6213,5823],[5824,6199,5823],[6200,5327,5326],[6200,5326,6214],[6201,6200,6214],[6201,6214,6215],[6202,6201,6215],[6202,6215,6216],[6203,6202,6216],[6203,6216,6217],[6204,6203,6217],[6204,6217,6218],[6205,6204,6218],[6205,6218,6219],[6206,6205,6219],[6206,6219,6220],[6207,6206,6220],[6207,6220,6221],[6208,6207,6221],[6208,6221,6222],[6209,6208,6222],[6209,6222,6223],[6210,6209,6223],[6210,6223,6224],[6211,6210,6224],[6211,6224,6225],[6212,6211,6225],[6212,6225,6226],[6213,6212,6226],[6213,6226,5822],[5823,6213,5822],[6214,5326,5325],[6214,5325,6227],[6215,6214,6227],[6215,6227,6228],[6216,6215,6228],[6216,6228,6229],[6217,6216,6229],[6217,6229,6230],[6218,6217,6230],[6218,6230,6231],[6219,6218,6231],[6219,6231,6232],[6220,6219,6232],[6220,6232,6233],[6221,6220,6233],[6221,6233,6234],[6222,6221,6234],[6222,6234,6235],[6223,6222,6235],[6223,6235,6236],[6224,6223,6236],[6224,6236,6237],[6225,6224,6237],[6225,6237,6238],[6226,6225,6238],[6226,6238,5821],[5822,6226,5821],[6227,5325,5324],[6227,5324,6239],[6228,6227,6239],[6228,6239,6240],[6229,6228,6240],[6229,6240,6241],[6230,6229,6241],[6230,6241,6242],[6231,6230,6242],[6231,6242,6243],[6232,6231,6243],[6232,6243,6244],[6233,6232,6244],[6233,6244,6245],[6234,6233,6245],[6234,6245,6246],[6235,6234,6246],[6235,6246,6247],[6236,6235,6247],[6236,6247,6248],[6237,6236,6248],[6237,6248,6249],[6238,6237,6249],[6238,6249,5820],[5821,6238,5820],[6239,5324,5323],[6239,5323,6250],[6240,6239,6250],[6240,6250,6251],[6241,6240,6251],[6241,6251,6252],[6242,6241,6252],[6242,6252,6253],[6243,6242,6253],[6243,6253,6254],[6244,6243,6254],[6244,6254,6255],[6245,6244,6255],[6245,6255,6256],[6246,6245,6256],[6246,6256,6257],[6247,6246,6257],[6247,6257,6258],[6248,6247,6258],[6248,6258,6259],[6249,6248,6259],[6249,6259,5819],[5820,6249,5819],[6250,5323,5322],[6250,5322,6260],[6251,6250,6260],[6251,6260,6261],[6252,6251,6261],[6252,6261,6262],[6253,6252,6262],[6253,6262,6263],[6254,6253,6263],[6254,6263,6264],[6255,6254,6264],[6255,6264,6265],[6256,6255,6265],[6256,6265,6266],[6257,6256,6266],[6257,6266,6267],[6258,6257,6267],[6258,6267,6268],[6259,6258,6268],[6259,6268,5818],[5819,6259,5818],[6260,5322,5321],[6260,5321,6269],[6261,6260,6269],[6261,6269,6270],[6262,6261,6270],[6262,6270,6271],[6263,6262,6271],[6263,6271,6272],[6264,6263,6272],[6264,6272,6273],[6265,6264,6273],[6265,6273,6274],[6266,6265,6274],[6266,6274,6275],[6267,6266,6275],[6267,6275,6276],[6268,6267,6276],[6268,6276,5817],[5818,6268,5817],[6269,5321,5320],[6269,5320,6277],[6270,6269,6277],[6270,6277,6278],[6271,6270,6278],[6271,6278,6279],[6272,6271,6279],[6272,6279,6280],[6273,6272,6280],[6273,6280,6281],[6274,6273,6281],[6274,6281,6282],[6275,6274,6282],[6275,6282,6283],[6276,6275,6283],[6276,6283,5816],[5817,6276,5816],[6277,5320,5319],[6277,5319,6284],[6278,6277,6284],[6278,6284,6285],[6279,6278,6285],[6279,6285,6286],[6280,6279,6286],[6280,6286,6287],[6281,6280,6287],[6281,6287,6288],[6282,6281,6288],[6282,6288,6289],[6283,6282,6289],[6283,6289,5815],[5816,6283,5815],[6284,5319,5318],[6284,5318,6290],[6285,6284,6290],[6285,6290,6291],[6286,6285,6291],[6286,6291,6292],[6287,6286,6292],[6287,6292,6293],[6288,6287,6293],[6288,6293,6294],[6289,6288,6294],[6289,6294,5814],[5815,6289,5814],[6290,5318,5317],[6290,5317,6295],[6291,6290,6295],[6291,6295,6296],[6292,6291,6296],[6292,6296,6297],[6293,6292,6297],[6293,6297,6298],[6294,6293,6298],[6294,6298,5813],[5814,6294,5813],[6295,5317,5316],[6295,5316,6299],[6296,6295,6299],[6296,6299,6300],[6297,6296,6300],[6297,6300,6301],[6298,6297,6301],[6298,6301,5812],[5813,6298,5812],[6299,5316,5315],[6299,5315,6302],[6300,6299,6302],[6300,6302,6303],[6301,6300,6303],[6301,6303,5811],[5812,6301,5811],[6302,5315,5314],[6302,5314,6304],[6303,6302,6304],[6303,6304,5810],[5811,6303,5810],[6304,5314,5313],[6304,5313,5809],[5810,6304,5809],[5809,5313,2],[3298,6,6305],[3298,6305,6367],[3299,3298,6367],[3299,6367,6368],[3300,3299,6368],[3300,6368,6369],[3301,3300,6369],[3301,6369,6370],[3302,3301,6370],[3302,6370,6371],[3303,3302,6371],[3303,6371,6372],[3304,3303,6372],[3304,6372,6373],[3305,3304,6373],[3305,6373,6374],[3306,3305,6374],[3306,6374,6375],[3307,3306,6375],[3307,6375,6376],[3308,3307,6376],[3308,6376,6377],[3309,3308,6377],[3309,6377,6378],[3310,3309,6378],[3310,6378,6379],[3311,3310,6379],[3311,6379,6380],[3312,3311,6380],[3312,6380,6381],[3313,3312,6381],[3313,6381,6382],[3314,3313,6382],[3314,6382,6383],[3315,3314,6383],[3315,6383,6384],[3316,3315,6384],[3316,6384,6385],[3317,3316,6385],[3317,6385,6386],[3318,3317,6386],[3318,6386,6387],[3319,3318,6387],[3319,6387,6388],[3320,3319,6388],[3320,6388,6389],[3321,3320,6389],[3321,6389,6390],[3322,3321,6390],[3322,6390,6391],[3323,3322,6391],[3323,6391,6392],[3324,3323,6392],[3324,6392,6393],[3325,3324,6393],[3325,6393,6394],[3326,3325,6394],[3326,6394,6395],[3327,3326,6395],[3327,6395,6396],[3328,3327,6396],[3328,6396,6366],[11,3328,6366],[6367,6305,6306],[6367,6306,6397],[6368,6367,6397],[6368,6397,6398],[6369,6368,6398],[6369,6398,6399],[6370,6369,6399],[6370,6399,6400],[6371,6370,6400],[6371,6400,6401],[6372,6371,6401],[6372,6401,6402],[6373,6372,6402],[6373,6402,6403],[6374,6373,6403],[6374,6403,6404],[6375,6374,6404],[6375,6404,6405],[6376,6375,6405],[6376,6405,6406],[6377,6376,6406],[6377,6406,6407],[6378,6377,6407],[6378,6407,6408],[6379,6378,6408],[6379,6408,6409],[6380,6379,6409],[6380,6409,6410],[6381,6380,6410],[6381,6410,6411],[6382,6381,6411],[6382,6411,6412],[6383,6382,6412],[6383,6412,6413],[6384,6383,6413],[6384,6413,6414],[6385,6384,6414],[6385,6414,6415],[6386,6385,6415],[6386,6415,6416],[6387,6386,6416],[6387,6416,6417],[6388,6387,6417],[6388,6417,6418],[6389,6388,6418],[6389,6418,6419],[6390,6389,6419],[6390,6419,6420],[6391,6390,6420],[6391,6420,6421],[6392,6391,6421],[6392,6421,6422],[6393,6392,6422],[6393,6422,6423],[6394,6393,6423],[6394,6423,6424],[6395,6394,6424],[6395,6424,6425],[6396,6395,6425],[6396,6425,6365],[6366,6396,6365],[6397,6306,6307],[6397,6307,6426],[6398,6397,6426],[6398,6426,6427],[6399,6398,6427],[6399,6427,6428],[6400,6399,6428],[6400,6428,6429],[6401,6400,6429],[6401,6429,6430],[6402,6401,6430],[6402,6430,6431],[6403,6402,6431],[6403,6431,6432],[6404,6403,6432],[6404,6432,6433],[6405,6404,6433],[6405,6433,6434],[6406,6405,6434],[6406,6434,6435],[6407,6406,6435],[6407,6435,6436],[6408,6407,6436],[6408,6436,6437],[6409,6408,6437],[6409,6437,6438],[6410,6409,6438],[6410,6438,6439],[6411,6410,6439],[6411,6439,6440],[6412,6411,6440],[6412,6440,6441],[6413,6412,6441],[6413,6441,6442],[6414,6413,6442],[6414,6442,6443],[6415,6414,6443],[6415,6443,6444],[6416,6415,6444],[6416,6444,6445],[6417,6416,6445],[6417,6445,6446],[6418,6417,6446],[6418,6446,6447],[6419,6418,6447],[6419,6447,6448],[6420,6419,6448],[6420,6448,6449],[6421,6420,6449],[6421,6449,6450],[6422,6421,6450],[6422,6450,6451],[6423,6422,6451],[6423,6451,6452],[6424,6423,6452],[6424,6452,6453],[6425,6424,6453],[6425,6453,6364],[6365,6425,6364],[6426,6307,6308],[6426,6308,6454],[6427,6426,6454],[6427,6454,6455],[6428,6427,6455],[6428,6455,6456],[6429,6428,6456],[6429,6456,6457],[6430,6429,6457],[6430,6457,6458],[6431,6430,6458],[6431,6458,6459],[6432,6431,6459],[6432,6459,6460],[6433,6432,6460],[6433,6460,6461],[6434,6433,6461],[6434,6461,6462],[6435,6434,6462],[6435,6462,6463],[6436,6435,6463],[6436,6463,6464],[6437,6436,6464],[6437,6464,6465],[6438,6437,6465],[6438,6465,6466],[6439,6438,6466],[6439,6466,6467],[6440,6439,6467],[6440,6467,6468],[6441,6440,6468],[6441,6468,6469],[6442,6441,6469],[6442,6469,6470],[6443,6442,6470],[6443,6470,6471],[6444,6443,6471],[6444,6471,6472],[6445,6444,6472],[6445,6472,6473],[6446,6445,6473],[6446,6473,6474],[6447,6446,6474],[6447,6474,6475],[6448,6447,6475],[6448,6475,6476],[6449,6448,6476],[6449,6476,6477],[6450,6449,6477],[6450,6477,6478],[6451,6450,6478],[6451,6478,6479],[6452,6451,6479],[6452,6479,6480],[6453,6452,6480],[6453,6480,6363],[6364,6453,6363],[6454,6308,6309],[6454,6309,6481],[6455,6454,6481],[6455,6481,6482],[6456,6455,6482],[6456,6482,6483],[6457,6456,6483],[6457,6483,6484],[6458,6457,6484],[6458,6484,6485],[6459,6458,6485],[6459,6485,6486],[6460,6459,6486],[6460,6486,6487],[6461,6460,6487],[6461,6487,6488],[6462,6461,6488],[6462,6488,6489],[6463,6462,6489],[6463,6489,6490],[6464,6463,6490],[6464,6490,6491],[6465,6464,6491],[6465,6491,6492],[6466,6465,6492],[6466,6492,6493],[6467,6466,6493],[6467,6493,6494],[6468,6467,6494],[6468,6494,6495],[6469,6468,6495],[6469,6495,6496],[6470,6469,6496],[6470,6496,6497],[6471,6470,6497],[6471,6497,6498],[6472,6471,6498],[6472,6498,6499],[6473,6472,6499],[6473,6499,6500],[6474,6473,6500],[6474,6500,6501],[6475,6474,6501],[6475,6501,6502],[6476,6475,6502],[6476,6502,6503],[6477,6476,6503],[6477,6503,6504],[6478,6477,6504],[6478,6504,6505],[6479,6478,6505],[6479,6505,6506],[6480,6479,6506],[6480,6506,6362],[6363,6480,6362],[6481,6309,6310],[6481,6310,6507],[6482,6481,6507],[6482,6507,6508],[6483,6482,6508],[6483,6508,6509],[6484,6483,6509],[6484,6509,6510],[6485,6484,6510],[6485,6510,6511],[6486,6485,6511],[6486,6511,6512],[6487,6486,6512],[6487,6512,6513],[6488,6487,6513],[6488,6513,6514],[6489,6488,6514],[6489,6514,6515],[6490,6489,6515],[6490,6515,6516],[6491,6490,6516],[6491,6516,6517],[6492,6491,6517],[6492,6517,6518],[6493,6492,6518],[6493,6518,6519],[6494,6493,6519],[6494,6519,6520],[6495,6494,6520],[6495,6520,6521],[6496,6495,6521],[6496,6521,6522],[6497,6496,6522],[6497,6522,6523],[6498,6497,6523],[6498,6523,6524],[6499,6498,6524],[6499,6524,6525],[6500,6499,6525],[6500,6525,6526],[6501,6500,6526],[6501,6526,6527],[6502,6501,6527],[6502,6527,6528],[6503,6502,6528],[6503,6528,6529],[6504,6503,6529],[6504,6529,6530],[6505,6504,6530],[6505,6530,6531],[6506,6505,6531],[6506,6531,6361],[6362,6506,6361],[6507,6310,6311],[6507,6311,6532],[6508,6507,6532],[6508,6532,6533],[6509,6508,6533],[6509,6533,6534],[6510,6509,6534],[6510,6534,6535],[6511,6510,6535],[6511,6535,6536],[6512,6511,6536],[6512,6536,6537],[6513,6512,6537],[6513,6537,6538],[6514,6513,6538],[6514,6538,6539],[6515,6514,6539],[6515,6539,6540],[6516,6515,6540],[6516,6540,6541],[6517,6516,6541],[6517,6541,6542],[6518,6517,6542],[6518,6542,6543],[6519,6518,6543],[6519,6543,6544],[6520,6519,6544],[6520,6544,6545],[6521,6520,6545],[6521,6545,6546],[6522,6521,6546],[6522,6546,6547],[6523,6522,6547],[6523,6547,6548],[6524,6523,6548],[6524,6548,6549],[6525,6524,6549],[6525,6549,6550],[6526,6525,6550],[6526,6550,6551],[6527,6526,6551],[6527,6551,6552],[6528,6527,6552],[6528,6552,6553],[6529,6528,6553],[6529,6553,6554],[6530,6529,6554],[6530,6554,6555],[6531,6530,6555],[6531,6555,6360],[6361,6531,6360],[6532,6311,6312],[6532,6312,6556],[6533,6532,6556],[6533,6556,6557],[6534,6533,6557],[6534,6557,6558],[6535,6534,6558],[6535,6558,6559],[6536,6535,6559],[6536,6559,6560],[6537,6536,6560],[6537,6560,6561],[6538,6537,6561],[6538,6561,6562],[6539,6538,6562],[6539,6562,6563],[6540,6539,6563],[6540,6563,6564],[6541,6540,6564],[6541,6564,6565],[6542,6541,6565],[6542,6565,6566],[6543,6542,6566],[6543,6566,6567],[6544,6543,6567],[6544,6567,6568],[6545,6544,6568],[6545,6568,6569],[6546,6545,6569],[6546,6569,6570],[6547,6546,6570],[6547,6570,6571],[6548,6547,6571],[6548,6571,6572],[6549,6548,6572],[6549,6572,6573],[6550,6549,6573],[6550,6573,6574],[6551,6550,6574],[6551,6574,6575],[6552,6551,6575],[6552,6575,6576],[6553,6552,6576],[6553,6576,6577],[6554,6553,6577],[6554,6577,6578],[6555,6554,6578],[6555,6578,6359],[6360,6555,6359],[6556,6312,6313],[6556,6313,6579],[6557,6556,6579],[6557,6579,6580],[6558,6557,6580],[6558,6580,6581],[6559,6558,6581],[6559,6581,6582],[6560,6559,6582],[6560,6582,6583],[6561,6560,6583],[6561,6583,6584],[6562,6561,6584],[6562,6584,6585],[6563,6562,6585],[6563,6585,6586],[6564,6563,6586],[6564,6586,6587],[6565,6564,6587],[6565,6587,6588],[6566,6565,6588],[6566,6588,6589],[6567,6566,6589],[6567,6589,6590],[6568,6567,6590],[6568,6590,6591],[6569,6568,6591],[6569,6591,6592],[6570,6569,6592],[6570,6592,6593],[6571,6570,6593],[6571,6593,6594],[6572,6571,6594],[6572,6594,6595],[6573,6572,6595],[6573,6595,6596],[6574,6573,6596],[6574,6596,6597],[6575,6574,6597],[6575,6597,6598],[6576,6575,6598],[6576,6598,6599],[6577,6576,6599],[6577,6599,6600],[6578,6577,6600],[6578,6600,6358],[6359,6578,6358],[6579,6313,6314],[6579,6314,6601],[6580,6579,6601],[6580,6601,6602],[6581,6580,6602],[6581,6602,6603],[6582,6581,6603],[6582,6603,6604],[6583,6582,6604],[6583,6604,6605],[6584,6583,6605],[6584,6605,6606],[6585,6584,6606],[6585,6606,6607],[6586,6585,6607],[6586,6607,6608],[6587,6586,6608],[6587,6608,6609],[6588,6587,6609],[6588,6609,6610],[6589,6588,6610],[6589,6610,6611],[6590,6589,6611],[6590,6611,6612],[6591,6590,6612],[6591,6612,6613],[6592,6591,6613],[6592,6613,6614],[6593,6592,6614],[6593,6614,6615],[6594,6593,6615],[6594,6615,6616],[6595,6594,6616],[6595,6616,6617],[6596,6595,6617],[6596,6617,6618],[6597,6596,6618],[6597,6618,6619],[6598,6597,6619],[6598,6619,6620],[6599,6598,6620],[6599,6620,6621],[6600,6599,6621],[6600,6621,6357],[6358,6600,6357],[6601,6314,6315],[6601,6315,6622],[6602,6601,6622],[6602,6622,6623],[6603,6602,6623],[6603,6623,6624],[6604,6603,6624],[6604,6624,6625],[6605,6604,6625],[6605,6625,6626],[6606,6605,6626],[6606,6626,6627],[6607,6606,6627],[6607,6627,6628],[6608,6607,6628],[6608,6628,6629],[6609,6608,6629],[6609,6629,6630],[6610,6609,6630],[6610,6630,6631],[6611,6610,6631],[6611,6631,6632],[6612,6611,6632],[6612,6632,6633],[6613,6612,6633],[6613,6633,6634],[6614,6613,6634],[6614,6634,6635],[6615,6614,6635],[6615,6635,6636],[6616,6615,6636],[6616,6636,6637],[6617,6616,6637],[6617,6637,6638],[6618,6617,6638],[6618,6638,6639],[6619,6618,6639],[6619,6639,6640],[6620,6619,6640],[6620,6640,6641],[6621,6620,6641],[6621,6641,6356],[6357,6621,6356],[6622,6315,6316],[6622,6316,6642],[6623,6622,6642],[6623,6642,6643],[6624,6623,6643],[6624,6643,6644],[6625,6624,6644],[6625,6644,6645],[6626,6625,6645],[6626,6645,6646],[6627,6626,6646],[6627,6646,6647],[6628,6627,6647],[6628,6647,6648],[6629,6628,6648],[6629,6648,6649],[6630,6629,6649],[6630,6649,6650],[6631,6630,6650],[6631,6650,6651],[6632,6631,6651],[6632,6651,6652],[6633,6632,6652],[6633,6652,6653],[6634,6633,6653],[6634,6653,6654],[6635,6634,6654],[6635,6654,6655],[6636,6635,6655],[6636,6655,6656],[6637,6636,6656],[6637,6656,6657],[6638,6637,6657],[6638,6657,6658],[6639,6638,6658],[6639,6658,6659],[6640,6639,6659],[6640,6659,6660],[6641,6640,6660],[6641,6660,6355],[6356,6641,6355],[6642,6316,6317],[6642,6317,6661],[6643,6642,6661],[6643,6661,6662],[6644,6643,6662],[6644,6662,6663],[6645,6644,6663],[6645,6663,6664],[6646,6645,6664],[6646,6664,6665],[6647,6646,6665],[6647,6665,6666],[6648,6647,6666],[6648,6666,6667],[6649,6648,6667],[6649,6667,6668],[6650,6649,6668],[6650,6668,6669],[6651,6650,6669],[6651,6669,6670],[6652,6651,6670],[6652,6670,6671],[6653,6652,6671],[6653,6671,6672],[6654,6653,6672],[6654,6672,6673],[6655,6654,6673],[6655,6673,6674],[6656,6655,6674],[6656,6674,6675],[6657,6656,6675],[6657,6675,6676],[6658,6657,6676],[6658,6676,6677],[6659,6658,6677],[6659,6677,6678],[6660,6659,6678],[6660,6678,6354],[6355,6660,6354],[6661,6317,6318],[6661,6318,6679],[6662,6661,6679],[6662,6679,6680],[6663,6662,6680],[6663,6680,6681],[6664,6663,6681],[6664,6681,6682],[6665,6664,6682],[6665,6682,6683],[6666,6665,6683],[6666,6683,6684],[6667,6666,6684],[6667,6684,6685],[6668,6667,6685],[6668,6685,6686],[6669,6668,6686],[6669,6686,6687],[6670,6669,6687],[6670,6687,6688],[6671,6670,6688],[6671,6688,6689],[6672,6671,6689],[6672,6689,6690],[6673,6672,6690],[6673,6690,6691],[6674,6673,6691],[6674,6691,6692],[6675,6674,6692],[6675,6692,6693],[6676,6675,6693],[6676,6693,6694],[6677,6676,6694],[6677,6694,6695],[6678,6677,6695],[6678,6695,6353],[6354,6678,6353],[6679,6318,6319],[6679,6319,6696],[6680,6679,6696],[6680,6696,6697],[6681,6680,6697],[6681,6697,6698],[6682,6681,6698],[6682,6698,6699],[6683,6682,6699],[6683,6699,6700],[6684,6683,6700],[6684,6700,6701],[6685,6684,6701],[6685,6701,6702],[6686,6685,6702],[6686,6702,6703],[6687,6686,6703],[6687,6703,6704],[6688,6687,6704],[6688,6704,6705],[6689,6688,6705],[6689,6705,6706],[6690,6689,6706],[6690,6706,6707],[6691,6690,6707],[6691,6707,6708],[6692,6691,6708],[6692,6708,6709],[6693,6692,6709],[6693,6709,6710],[6694,6693,6710],[6694,6710,6711],[6695,6694,6711],[6695,6711,6352],[6353,6695,6352],[6696,6319,6320],[6696,6320,6712],[6697,6696,6712],[6697,6712,6713],[6698,6697,6713],[6698,6713,6714],[6699,6698,6714],[6699,6714,6715],[6700,6699,6715],[6700,6715,6716],[6701,6700,6716],[6701,6716,6717],[6702,6701,6717],[6702,6717,6718],[6703,6702,6718],[6703,6718,6719],[6704,6703,6719],[6704,6719,6720],[6705,6704,6720],[6705,6720,6721],[6706,6705,6721],[6706,6721,6722],[6707,6706,6722],[6707,6722,6723],[6708,6707,6723],[6708,6723,6724],[6709,6708,6724],[6709,6724,6725],[6710,6709,6725],[6710,6725,6726],[6711,6710,6726],[6711,6726,6351],[6352,6711,6351],[6712,6320,6321],[6712,6321,6727],[6713,6712,6727],[6713,6727,6728],[6714,6713,6728],[6714,6728,6729],[6715,6714,6729],[6715,6729,6730],[6716,6715,6730],[6716,6730,6731],[6717,6716,6731],[6717,6731,6732],[6718,6717,6732],[6718,6732,6733],[6719,6718,6733],[6719,6733,6734],[6720,6719,6734],[6720,6734,6735],[6721,6720,6735],[6721,6735,6736],[6722,6721,6736],[6722,6736,6737],[6723,6722,6737],[6723,6737,6738],[6724,6723,6738],[6724,6738,6739],[6725,6724,6739],[6725,6739,6740],[6726,6725,6740],[6726,6740,6350],[6351,6726,6350],[6727,6321,6322],[6727,6322,6741],[6728,6727,6741],[6728,6741,6742],[6729,6728,6742],[6729,6742,6743],[6730,6729,6743],[6730,6743,6744],[6731,6730,6744],[6731,6744,6745],[6732,6731,6745],[6732,6745,6746],[6733,6732,6746],[6733,6746,6747],[6734,6733,6747],[6734,6747,6748],[6735,6734,6748],[6735,6748,6749],[6736,6735,6749],[6736,6749,6750],[6737,6736,6750],[6737,6750,6751],[6738,6737,6751],[6738,6751,6752],[6739,6738,6752],[6739,6752,6753],[6740,6739,6753],[6740,6753,6349],[6350,6740,6349],[6741,6322,6323],[6741,6323,6754],[6742,6741,6754],[6742,6754,6755],[6743,6742,6755],[6743,6755,6756],[6744,6743,6756],[6744,6756,6757],[6745,6744,6757],[6745,6757,6758],[6746,6745,6758],[6746,6758,6759],[6747,6746,6759],[6747,6759,6760],[6748,6747,6760],[6748,6760,6761],[6749,6748,6761],[6749,6761,6762],[6750,6749,6762],[6750,6762,6763],[6751,6750,6763],[6751,6763,6764],[6752,6751,6764],[6752,6764,6765],[6753,6752,6765],[6753,6765,6348],[6349,6753,6348],[6754,6323,6324],[6754,6324,6766],[6755,6754,6766],[6755,6766,6767],[6756,6755,6767],[6756,6767,6768],[6757,6756,6768],[6757,6768,6769],[6758,6757,6769],[6758,6769,6770],[6759,6758,6770],[6759,6770,6771],[6760,6759,6771],[6760,6771,6772],[6761,6760,6772],[6761,6772,6773],[6762,6761,6773],[6762,6773,6774],[6763,6762,6774],[6763,6774,6775],[6764,6763,6775],[6764,6775,6776],[6765,6764,6776],[6765,6776,6347],[6348,6765,6347],[6766,6324,6325],[6766,6325,6777],[6767,6766,6777],[6767,6777,6778],[6768,6767,6778],[6768,6778,6779],[6769,6768,6779],[6769,6779,6780],[6770,6769,6780],[6770,6780,6781],[6771,6770,6781],[6771,6781,6782],[6772,6771,6782],[6772,6782,6783],[6773,6772,6783],[6773,6783,6784],[6774,6773,6784],[6774,6784,6785],[6775,6774,6785],[6775,6785,6786],[6776,6775,6786],[6776,6786,6346],[6347,6776,6346],[6777,6325,6326],[6777,6326,6787],[6778,6777,6787],[6778,6787,6788],[6779,6778,6788],[6779,6788,6789],[6780,6779,6789],[6780,6789,6790],[6781,6780,6790],[6781,6790,6791],[6782,6781,6791],[6782,6791,6792],[6783,6782,6792],[6783,6792,6793],[6784,6783,6793],[6784,6793,6794],[6785,6784,6794],[6785,6794,6795],[6786,6785,6795],[6786,6795,6345],[6346,6786,6345],[6787,6326,6327],[6787,6327,6796],[6788,6787,6796],[6788,6796,6797],[6789,6788,6797],[6789,6797,6798],[6790,6789,6798],[6790,6798,6799],[6791,6790,6799],[6791,6799,6800],[6792,6791,6800],[6792,6800,6801],[6793,6792,6801],[6793,6801,6802],[6794,6793,6802],[6794,6802,6803],[6795,6794,6803],[6795,6803,6344],[6345,6795,6344],[6796,6327,6328],[6796,6328,6804],[6797,6796,6804],[6797,6804,6805],[6798,6797,6805],[6798,6805,6806],[6799,6798,6806],[6799,6806,6807],[6800,6799,6807],[6800,6807,6808],[6801,6800,6808],[6801,6808,6809],[6802,6801,6809],[6802,6809,6810],[6803,6802,6810],[6803,6810,6343],[6344,6803,6343],[6804,6328,6329],[6804,6329,6811],[6805,6804,6811],[6805,6811,6812],[6806,6805,6812],[6806,6812,6813],[6807,6806,6813],[6807,6813,6814],[6808,6807,6814],[6808,6814,6815],[6809,6808,6815],[6809,6815,6816],[6810,6809,6816],[6810,6816,6342],[6343,6810,6342],[6811,6329,6330],[6811,6330,6817],[6812,6811,6817],[6812,6817,6818],[6813,6812,6818],[6813,6818,6819],[6814,6813,6819],[6814,6819,6820],[6815,6814,6820],[6815,6820,6821],[6816,6815,6821],[6816,6821,6341],[6342,6816,6341],[6817,6330,6331],[6817,6331,6822],[6818,6817,6822],[6818,6822,6823],[6819,6818,6823],[6819,6823,6824],[6820,6819,6824],[6820,6824,6825],[6821,6820,6825],[6821,6825,6340],[6341,6821,6340],[6822,6331,6332],[6822,6332,6826],[6823,6822,6826],[6823,6826,6827],[6824,6823,6827],[6824,6827,6828],[6825,6824,6828],[6825,6828,6339],[6340,6825,6339],[6826,6332,6333],[6826,6333,6829],[6827,6826,6829],[6827,6829,6830],[6828,6827,6830],[6828,6830,6338],[6339,6828,6338],[6829,6333,6334],[6829,6334,6831],[6830,6829,6831],[6830,6831,6337],[6338,6830,6337],[6831,6334,6335],[6831,6335,6336],[6337,6831,6336],[6336,6335,7],[6862,11,6893],[6862,6893,6925],[6861,6862,6925],[6861,6925,6926],[6860,6861,6926],[6860,6926,6927],[6859,6860,6927],[6859,6927,6928],[6858,6859,6928],[6858,6928,6929],[6857,6858,6929],[6857,6929,6930],[6856,6857,6930],[6856,6930,6931],[6855,6856,6931],[6855,6931,6932],[6854,6855,6932],[6854,6932,6933],[6853,6854,6933],[6853,6933,6934],[6852,6853,6934],[6852,6934,6935],[6851,6852,6935],[6851,6935,6936],[6850,6851,6936],[6850,6936,6937],[6849,6850,6937],[6849,6937,6938],[6848,6849,6938],[6848,6938,6939],[6847,6848,6939],[6847,6939,6940],[6846,6847,6940],[6846,6940,6941],[6845,6846,6941],[6845,6941,6942],[6844,6845,6942],[6844,6942,6943],[6843,6844,6943],[6843,6943,6944],[6842,6843,6944],[6842,6944,6945],[6841,6842,6945],[6841,6945,6946],[6840,6841,6946],[6840,6946,6947],[6839,6840,6947],[6839,6947,6948],[6838,6839,6948],[6838,6948,6949],[6837,6838,6949],[6837,6949,6950],[6836,6837,6950],[6836,6950,6951],[6835,6836,6951],[6835,6951,6952],[6834,6835,6952],[6834,6952,6953],[6833,6834,6953],[6833,6953,6954],[6832,6833,6954],[6832,6954,6924],[9,6832,6924],[6925,6893,6892],[6925,6892,6955],[6926,6925,6955],[6926,6955,6956],[6927,6926,6956],[6927,6956,6957],[6928,6927,6957],[6928,6957,6958],[6929,6928,6958],[6929,6958,6959],[6930,6929,6959],[6930,6959,6960],[6931,6930,6960],[6931,6960,6961],[6932,6931,6961],[6932,6961,6962],[6933,6932,6962],[6933,6962,6963],[6934,6933,6963],[6934,6963,6964],[6935,6934,6964],[6935,6964,6965],[6936,6935,6965],[6936,6965,6966],[6937,6936,6966],[6937,6966,6967],[6938,6937,6967],[6938,6967,6968],[6939,6938,6968],[6939,6968,6969],[6940,6939,6969],[6940,6969,6970],[6941,6940,6970],[6941,6970,6971],[6942,6941,6971],[6942,6971,6972],[6943,6942,6972],[6943,6972,6973],[6944,6943,6973],[6944,6973,6974],[6945,6944,6974],[6945,6974,6975],[6946,6945,6975],[6946,6975,6976],[6947,6946,6976],[6947,6976,6977],[6948,6947,6977],[6948,6977,6978],[6949,6948,6978],[6949,6978,6979],[6950,6949,6979],[6950,6979,6980],[6951,6950,6980],[6951,6980,6981],[6952,6951,6981],[6952,6981,6982],[6953,6952,6982],[6953,6982,6983],[6954,6953,6983],[6954,6983,6923],[6924,6954,6923],[6955,6892,6891],[6955,6891,6984],[6956,6955,6984],[6956,6984,6985],[6957,6956,6985],[6957,6985,6986],[6958,6957,6986],[6958,6986,6987],[6959,6958,6987],[6959,6987,6988],[6960,6959,6988],[6960,6988,6989],[6961,6960,6989],[6961,6989,6990],[6962,6961,6990],[6962,6990,6991],[6963,6962,6991],[6963,6991,6992],[6964,6963,6992],[6964,6992,6993],[6965,6964,6993],[6965,6993,6994],[6966,6965,6994],[6966,6994,6995],[6967,6966,6995],[6967,6995,6996],[6968,6967,6996],[6968,6996,6997],[6969,6968,6997],[6969,6997,6998],[6970,6969,6998],[6970,6998,6999],[6971,6970,6999],[6971,6999,7000],[6972,6971,7000],[6972,7000,7001],[6973,6972,7001],[6973,7001,7002],[6974,6973,7002],[6974,7002,7003],[6975,6974,7003],[6975,7003,7004],[6976,6975,7004],[6976,7004,7005],[6977,6976,7005],[6977,7005,7006],[6978,6977,7006],[6978,7006,7007],[6979,6978,7007],[6979,7007,7008],[6980,6979,7008],[6980,7008,7009],[6981,6980,7009],[6981,7009,7010],[6982,6981,7010],[6982,7010,7011],[6983,6982,7011],[6983,7011,6922],[6923,6983,6922],[6984,6891,6890],[6984,6890,7012],[6985,6984,7012],[6985,7012,7013],[6986,6985,7013],[6986,7013,7014],[6987,6986,7014],[6987,7014,7015],[6988,6987,7015],[6988,7015,7016],[6989,6988,7016],[6989,7016,7017],[6990,6989,7017],[6990,7017,7018],[6991,6990,7018],[6991,7018,7019],[6992,6991,7019],[6992,7019,7020],[6993,6992,7020],[6993,7020,7021],[6994,6993,7021],[6994,7021,7022],[6995,6994,7022],[6995,7022,7023],[6996,6995,7023],[6996,7023,7024],[6997,6996,7024],[6997,7024,7025],[6998,6997,7025],[6998,7025,7026],[6999,6998,7026],[6999,7026,7027],[7000,6999,7027],[7000,7027,7028],[7001,7000,7028],[7001,7028,7029],[7002,7001,7029],[7002,7029,7030],[7003,7002,7030],[7003,7030,7031],[7004,7003,7031],[7004,7031,7032],[7005,7004,7032],[7005,7032,7033],[7006,7005,7033],[7006,7033,7034],[7007,7006,7034],[7007,7034,7035],[7008,7007,7035],[7008,7035,7036],[7009,7008,7036],[7009,7036,7037],[7010,7009,7037],[7010,7037,7038],[7011,7010,7038],[7011,7038,6921],[6922,7011,6921],[7012,6890,6889],[7012,6889,7039],[7013,7012,7039],[7013,7039,7040],[7014,7013,7040],[7014,7040,7041],[7015,7014,7041],[7015,7041,7042],[7016,7015,7042],[7016,7042,7043],[7017,7016,7043],[7017,7043,7044],[7018,7017,7044],[7018,7044,7045],[7019,7018,7045],[7019,7045,7046],[7020,7019,7046],[7020,7046,7047],[7021,7020,7047],[7021,7047,7048],[7022,7021,7048],[7022,7048,7049],[7023,7022,7049],[7023,7049,7050],[7024,7023,7050],[7024,7050,7051],[7025,7024,7051],[7025,7051,7052],[7026,7025,7052],[7026,7052,7053],[7027,7026,7053],[7027,7053,7054],[7028,7027,7054],[7028,7054,7055],[7029,7028,7055],[7029,7055,7056],[7030,7029,7056],[7030,7056,7057],[7031,7030,7057],[7031,7057,7058],[7032,7031,7058],[7032,7058,7059],[7033,7032,7059],[7033,7059,7060],[7034,7033,7060],[7034,7060,7061],[7035,7034,7061],[7035,7061,7062],[7036,7035,7062],[7036,7062,7063],[7037,7036,7063],[7037,7063,7064],[7038,7037,7064],[7038,7064,6920],[6921,7038,6920],[7039,6889,6888],[7039,6888,7065],[7040,7039,7065],[7040,7065,7066],[7041,7040,7066],[7041,7066,7067],[7042,7041,7067],[7042,7067,7068],[7043,7042,7068],[7043,7068,7069],[7044,7043,7069],[7044,7069,7070],[7045,7044,7070],[7045,7070,7071],[7046,7045,7071],[7046,7071,7072],[7047,7046,7072],[7047,7072,7073],[7048,7047,7073],[7048,7073,7074],[7049,7048,7074],[7049,7074,7075],[7050,7049,7075],[7050,7075,7076],[7051,7050,7076],[7051,7076,7077],[7052,7051,7077],[7052,7077,7078],[7053,7052,7078],[7053,7078,7079],[7054,7053,7079],[7054,7079,7080],[7055,7054,7080],[7055,7080,7081],[7056,7055,7081],[7056,7081,7082],[7057,7056,7082],[7057,7082,7083],[7058,7057,7083],[7058,7083,7084],[7059,7058,7084],[7059,7084,7085],[7060,7059,7085],[7060,7085,7086],[7061,7060,7086],[7061,7086,7087],[7062,7061,7087],[7062,7087,7088],[7063,7062,7088],[7063,7088,7089],[7064,7063,7089],[7064,7089,6919],[6920,7064,6919],[7065,6888,6887],[7065,6887,7090],[7066,7065,7090],[7066,7090,7091],[7067,7066,7091],[7067,7091,7092],[7068,7067,7092],[7068,7092,7093],[7069,7068,7093],[7069,7093,7094],[7070,7069,7094],[7070,7094,7095],[7071,7070,7095],[7071,7095,7096],[7072,7071,7096],[7072,7096,7097],[7073,7072,7097],[7073,7097,7098],[7074,7073,7098],[7074,7098,7099],[7075,7074,7099],[7075,7099,7100],[7076,7075,7100],[7076,7100,7101],[7077,7076,7101],[7077,7101,7102],[7078,7077,7102],[7078,7102,7103],[7079,7078,7103],[7079,7103,7104],[7080,7079,7104],[7080,7104,7105],[7081,7080,7105],[7081,7105,7106],[7082,7081,7106],[7082,7106,7107],[7083,7082,7107],[7083,7107,7108],[7084,7083,7108],[7084,7108,7109],[7085,7084,7109],[7085,7109,7110],[7086,7085,7110],[7086,7110,7111],[7087,7086,7111],[7087,7111,7112],[7088,7087,7112],[7088,7112,7113],[7089,7088,7113],[7089,7113,6918],[6919,7089,6918],[7090,6887,6886],[7090,6886,7114],[7091,7090,7114],[7091,7114,7115],[7092,7091,7115],[7092,7115,7116],[7093,7092,7116],[7093,7116,7117],[7094,7093,7117],[7094,7117,7118],[7095,7094,7118],[7095,7118,7119],[7096,7095,7119],[7096,7119,7120],[7097,7096,7120],[7097,7120,7121],[7098,7097,7121],[7098,7121,7122],[7099,7098,7122],[7099,7122,7123],[7100,7099,7123],[7100,7123,7124],[7101,7100,7124],[7101,7124,7125],[7102,7101,7125],[7102,7125,7126],[7103,7102,7126],[7103,7126,7127],[7104,7103,7127],[7104,7127,7128],[7105,7104,7128],[7105,7128,7129],[7106,7105,7129],[7106,7129,7130],[7107,7106,7130],[7107,7130,7131],[7108,7107,7131],[7108,7131,7132],[7109,7108,7132],[7109,7132,7133],[7110,7109,7133],[7110,7133,7134],[7111,7110,7134],[7111,7134,7135],[7112,7111,7135],[7112,7135,7136],[7113,7112,7136],[7113,7136,6917],[6918,7113,6917],[7114,6886,6885],[7114,6885,7137],[7115,7114,7137],[7115,7137,7138],[7116,7115,7138],[7116,7138,7139],[7117,7116,7139],[7117,7139,7140],[7118,7117,7140],[7118,7140,7141],[7119,7118,7141],[7119,7141,7142],[7120,7119,7142],[7120,7142,7143],[7121,7120,7143],[7121,7143,7144],[7122,7121,7144],[7122,7144,7145],[7123,7122,7145],[7123,7145,7146],[7124,7123,7146],[7124,7146,7147],[7125,7124,7147],[7125,7147,7148],[7126,7125,7148],[7126,7148,7149],[7127,7126,7149],[7127,7149,7150],[7128,7127,7150],[7128,7150,7151],[7129,7128,7151],[7129,7151,7152],[7130,7129,7152],[7130,7152,7153],[7131,7130,7153],[7131,7153,7154],[7132,7131,7154],[7132,7154,7155],[7133,7132,7155],[7133,7155,7156],[7134,7133,7156],[7134,7156,7157],[7135,7134,7157],[7135,7157,7158],[7136,7135,7158],[7136,7158,6916],[6917,7136,6916],[7137,6885,6884],[7137,6884,7159],[7138,7137,7159],[7138,7159,7160],[7139,7138,7160],[7139,7160,7161],[7140,7139,7161],[7140,7161,7162],[7141,7140,7162],[7141,7162,7163],[7142,7141,7163],[7142,7163,7164],[7143,7142,7164],[7143,7164,7165],[7144,7143,7165],[7144,7165,7166],[7145,7144,7166],[7145,7166,7167],[7146,7145,7167],[7146,7167,7168],[7147,7146,7168],[7147,7168,7169],[7148,7147,7169],[7148,7169,7170],[7149,7148,7170],[7149,7170,7171],[7150,7149,7171],[7150,7171,7172],[7151,7150,7172],[7151,7172,7173],[7152,7151,7173],[7152,7173,7174],[7153,7152,7174],[7153,7174,7175],[7154,7153,7175],[7154,7175,7176],[7155,7154,7176],[7155,7176,7177],[7156,7155,7177],[7156,7177,7178],[7157,7156,7178],[7157,7178,7179],[7158,7157,7179],[7158,7179,6915],[6916,7158,6915],[7159,6884,6883],[7159,6883,7180],[7160,7159,7180],[7160,7180,7181],[7161,7160,7181],[7161,7181,7182],[7162,7161,7182],[7162,7182,7183],[7163,7162,7183],[7163,7183,7184],[7164,7163,7184],[7164,7184,7185],[7165,7164,7185],[7165,7185,7186],[7166,7165,7186],[7166,7186,7187],[7167,7166,7187],[7167,7187,7188],[7168,7167,7188],[7168,7188,7189],[7169,7168,7189],[7169,7189,7190],[7170,7169,7190],[7170,7190,7191],[7171,7170,7191],[7171,7191,7192],[7172,7171,7192],[7172,7192,7193],[7173,7172,7193],[7173,7193,7194],[7174,7173,7194],[7174,7194,7195],[7175,7174,7195],[7175,7195,7196],[7176,7175,7196],[7176,7196,7197],[7177,7176,7197],[7177,7197,7198],[7178,7177,7198],[7178,7198,7199],[7179,7178,7199],[7179,7199,6914],[6915,7179,6914],[7180,6883,6882],[7180,6882,7200],[7181,7180,7200],[7181,7200,7201],[7182,7181,7201],[7182,7201,7202],[7183,7182,7202],[7183,7202,7203],[7184,7183,7203],[7184,7203,7204],[7185,7184,7204],[7185,7204,7205],[7186,7185,7205],[7186,7205,7206],[7187,7186,7206],[7187,7206,7207],[7188,7187,7207],[7188,7207,7208],[7189,7188,7208],[7189,7208,7209],[7190,7189,7209],[7190,7209,7210],[7191,7190,7210],[7191,7210,7211],[7192,7191,7211],[7192,7211,7212],[7193,7192,7212],[7193,7212,7213],[7194,7193,7213],[7194,7213,7214],[7195,7194,7214],[7195,7214,7215],[7196,7195,7215],[7196,7215,7216],[7197,7196,7216],[7197,7216,7217],[7198,7197,7217],[7198,7217,7218],[7199,7198,7218],[7199,7218,6913],[6914,7199,6913],[7200,6882,6881],[7200,6881,7219],[7201,7200,7219],[7201,7219,7220],[7202,7201,7220],[7202,7220,7221],[7203,7202,7221],[7203,7221,7222],[7204,7203,7222],[7204,7222,7223],[7205,7204,7223],[7205,7223,7224],[7206,7205,7224],[7206,7224,7225],[7207,7206,7225],[7207,7225,7226],[7208,7207,7226],[7208,7226,7227],[7209,7208,7227],[7209,7227,7228],[7210,7209,7228],[7210,7228,7229],[7211,7210,7229],[7211,7229,7230],[7212,7211,7230],[7212,7230,7231],[7213,7212,7231],[7213,7231,7232],[7214,7213,7232],[7214,7232,7233],[7215,7214,7233],[7215,7233,7234],[7216,7215,7234],[7216,7234,7235],[7217,7216,7235],[7217,7235,7236],[7218,7217,7236],[7218,7236,6912],[6913,7218,6912],[7219,6881,6880],[7219,6880,7237],[7220,7219,7237],[7220,7237,7238],[7221,7220,7238],[7221,7238,7239],[7222,7221,7239],[7222,7239,7240],[7223,7222,7240],[7223,7240,7241],[7224,7223,7241],[7224,7241,7242],[7225,7224,7242],[7225,7242,7243],[7226,7225,7243],[7226,7243,7244],[7227,7226,7244],[7227,7244,7245],[7228,7227,7245],[7228,7245,7246],[7229,7228,7246],[7229,7246,7247],[7230,7229,7247],[7230,7247,7248],[7231,7230,7248],[7231,7248,7249],[7232,7231,7249],[7232,7249,7250],[7233,7232,7250],[7233,7250,7251],[7234,7233,7251],[7234,7251,7252],[7235,7234,7252],[7235,7252,7253],[7236,7235,7253],[7236,7253,6911],[6912,7236,6911],[7237,6880,6879],[7237,6879,7254],[7238,7237,7254],[7238,7254,7255],[7239,7238,7255],[7239,7255,7256],[7240,7239,7256],[7240,7256,7257],[7241,7240,7257],[7241,7257,7258],[7242,7241,7258],[7242,7258,7259],[7243,7242,7259],[7243,7259,7260],[7244,7243,7260],[7244,7260,7261],[7245,7244,7261],[7245,7261,7262],[7246,7245,7262],[7246,7262,7263],[7247,7246,7263],[7247,7263,7264],[7248,7247,7264],[7248,7264,7265],[7249,7248,7265],[7249,7265,7266],[7250,7249,7266],[7250,7266,7267],[7251,7250,7267],[7251,7267,7268],[7252,7251,7268],[7252,7268,7269],[7253,7252,7269],[7253,7269,6910],[6911,7253,6910],[7254,6879,6878],[7254,6878,7270],[7255,7254,7270],[7255,7270,7271],[7256,7255,7271],[7256,7271,7272],[7257,7256,7272],[7257,7272,7273],[7258,7257,7273],[7258,7273,7274],[7259,7258,7274],[7259,7274,7275],[7260,7259,7275],[7260,7275,7276],[7261,7260,7276],[7261,7276,7277],[7262,7261,7277],[7262,7277,7278],[7263,7262,7278],[7263,7278,7279],[7264,7263,7279],[7264,7279,7280],[7265,7264,7280],[7265,7280,7281],[7266,7265,7281],[7266,7281,7282],[7267,7266,7282],[7267,7282,7283],[7268,7267,7283],[7268,7283,7284],[7269,7268,7284],[7269,7284,6909],[6910,7269,6909],[7270,6878,6877],[7270,6877,7285],[7271,7270,7285],[7271,7285,7286],[7272,7271,7286],[7272,7286,7287],[7273,7272,7287],[7273,7287,7288],[7274,7273,7288],[7274,7288,7289],[7275,7274,7289],[7275,7289,7290],[7276,7275,7290],[7276,7290,7291],[7277,7276,7291],[7277,7291,7292],[7278,7277,7292],[7278,7292,7293],[7279,7278,7293],[7279,7293,7294],[7280,7279,7294],[7280,7294,7295],[7281,7280,7295],[7281,7295,7296],[7282,7281,7296],[7282,7296,7297],[7283,7282,7297],[7283,7297,7298],[7284,7283,7298],[7284,7298,6908],[6909,7284,6908],[7285,6877,6876],[7285,6876,7299],[7286,7285,7299],[7286,7299,7300],[7287,7286,7300],[7287,7300,7301],[7288,7287,7301],[7288,7301,7302],[7289,7288,7302],[7289,7302,7303],[7290,7289,7303],[7290,7303,7304],[7291,7290,7304],[7291,7304,7305],[7292,7291,7305],[7292,7305,7306],[7293,7292,7306],[7293,7306,7307],[7294,7293,7307],[7294,7307,7308],[7295,7294,7308],[7295,7308,7309],[7296,7295,7309],[7296,7309,7310],[7297,7296,7310],[7297,7310,7311],[7298,7297,7311],[7298,7311,6907],[6908,7298,6907],[7299,6876,6875],[7299,6875,7312],[7300,7299,7312],[7300,7312,7313],[7301,7300,7313],[7301,7313,7314],[7302,7301,7314],[7302,7314,7315],[7303,7302,7315],[7303,7315,7316],[7304,7303,7316],[7304,7316,7317],[7305,7304,7317],[7305,7317,7318],[7306,7305,7318],[7306,7318,7319],[7307,7306,7319],[7307,7319,7320],[7308,7307,7320],[7308,7320,7321],[7309,7308,7321],[7309,7321,7322],[7310,7309,7322],[7310,7322,7323],[7311,7310,7323],[7311,7323,6906],[6907,7311,6906],[7312,6875,6874],[7312,6874,7324],[7313,7312,7324],[7313,7324,7325],[7314,7313,7325],[7314,7325,7326],[7315,7314,7326],[7315,7326,7327],[7316,7315,7327],[7316,7327,7328],[7317,7316,7328],[7317,7328,7329],[7318,7317,7329],[7318,7329,7330],[7319,7318,7330],[7319,7330,7331],[7320,7319,7331],[7320,7331,7332],[7321,7320,7332],[7321,7332,7333],[7322,7321,7333],[7322,7333,7334],[7323,7322,7334],[7323,7334,6905],[6906,7323,6905],[7324,6874,6873],[7324,6873,7335],[7325,7324,7335],[7325,7335,7336],[7326,7325,7336],[7326,7336,7337],[7327,7326,7337],[7327,7337,7338],[7328,7327,7338],[7328,7338,7339],[7329,7328,7339],[7329,7339,7340],[7330,7329,7340],[7330,7340,7341],[7331,7330,7341],[7331,7341,7342],[7332,7331,7342],[7332,7342,7343],[7333,7332,7343],[7333,7343,7344],[7334,7333,7344],[7334,7344,6904],[6905,7334,6904],[7335,6873,6872],[7335,6872,7345],[7336,7335,7345],[7336,7345,7346],[7337,7336,7346],[7337,7346,7347],[7338,7337,7347],[7338,7347,7348],[7339,7338,7348],[7339,7348,7349],[7340,7339,7349],[7340,7349,7350],[7341,7340,7350],[7341,7350,7351],[7342,7341,7351],[7342,7351,7352],[7343,7342,7352],[7343,7352,7353],[7344,7343,7353],[7344,7353,6903],[6904,7344,6903],[7345,6872,6871],[7345,6871,7354],[7346,7345,7354],[7346,7354,7355],[7347,7346,7355],[7347,7355,7356],[7348,7347,7356],[7348,7356,7357],[7349,7348,7357],[7349,7357,7358],[7350,7349,7358],[7350,7358,7359],[7351,7350,7359],[7351,7359,7360],[7352,7351,7360],[7352,7360,7361],[7353,7352,7361],[7353,7361,6902],[6903,7353,6902],[7354,6871,6870],[7354,6870,7362],[7355,7354,7362],[7355,7362,7363],[7356,7355,7363],[7356,7363,7364],[7357,7356,7364],[7357,7364,7365],[7358,7357,7365],[7358,7365,7366],[7359,7358,7366],[7359,7366,7367],[7360,7359,7367],[7360,7367,7368],[7361,7360,7368],[7361,7368,6901],[6902,7361,6901],[7362,6870,6869],[7362,6869,7369],[7363,7362,7369],[7363,7369,7370],[7364,7363,7370],[7364,7370,7371],[7365,7364,7371],[7365,7371,7372],[7366,7365,7372],[7366,7372,7373],[7367,7366,7373],[7367,7373,7374],[7368,7367,7374],[7368,7374,6900],[6901,7368,6900],[7369,6869,6868],[7369,6868,7375],[7370,7369,7375],[7370,7375,7376],[7371,7370,7376],[7371,7376,7377],[7372,7371,7377],[7372,7377,7378],[7373,7372,7378],[7373,7378,7379],[7374,7373,7379],[7374,7379,6899],[6900,7374,6899],[7375,6868,6867],[7375,6867,7380],[7376,7375,7380],[7376,7380,7381],[7377,7376,7381],[7377,7381,7382],[7378,7377,7382],[7378,7382,7383],[7379,7378,7383],[7379,7383,6898],[6899,7379,6898],[7380,6867,6866],[7380,6866,7384],[7381,7380,7384],[7381,7384,7385],[7382,7381,7385],[7382,7385,7386],[7383,7382,7386],[7383,7386,6897],[6898,7383,6897],[7384,6866,6865],[7384,6865,7387],[7385,7384,7387],[7385,7387,7388],[7386,7385,7388],[7386,7388,6896],[6897,7386,6896],[7387,6865,6864],[7387,6864,7389],[7388,7387,7389],[7388,7389,6895],[6896,7388,6895],[7389,6864,6863],[7389,6863,6894],[6895,7389,6894],[6894,6863,8],[4847,9,6924],[4847,6924,7421],[4846,4847,7421],[4846,7421,7422],[4845,4846,7422],[4845,7422,7423],[4844,4845,7423],[4844,7423,7424],[4843,4844,7424],[4843,7424,7425],[4842,4843,7425],[4842,7425,7426],[4841,4842,7426],[4841,7426,7427],[4840,4841,7427],[4840,7427,7428],[4839,4840,7428],[4839,7428,7429],[4838,4839,7429],[4838,7429,7430],[4837,4838,7430],[4837,7430,7431],[4836,4837,7431],[4836,7431,7432],[4835,4836,7432],[4835,7432,7433],[4834,4835,7433],[4834,7433,7434],[4833,4834,7434],[4833,7434,7435],[4832,4833,7435],[4832,7435,7436],[4831,4832,7436],[4831,7436,7437],[4830,4831,7437],[4830,7437,7438],[4829,4830,7438],[4829,7438,7439],[4828,4829,7439],[4828,7439,7440],[4827,4828,7440],[4827,7440,7441],[4826,4827,7441],[4826,7441,7442],[4825,4826,7442],[4825,7442,7443],[4824,4825,7443],[4824,7443,7444],[4823,4824,7444],[4823,7444,7445],[4822,4823,7445],[4822,7445,7446],[4821,4822,7446],[4821,7446,7447],[4820,4821,7447],[4820,7447,7448],[4819,4820,7448],[4819,7448,7449],[4818,4819,7449],[4818,7449,7450],[4817,4818,7450],[4817,7450,7390],[4,4817,7390],[7421,6924,6923],[7421,6923,7451],[7422,7421,7451],[7422,7451,7452],[7423,7422,7452],[7423,7452,7453],[7424,7423,7453],[7424,7453,7454],[7425,7424,7454],[7425,7454,7455],[7426,7425,7455],[7426,7455,7456],[7427,7426,7456],[7427,7456,7457],[7428,7427,7457],[7428,7457,7458],[7429,7428,7458],[7429,7458,7459],[7430,7429,7459],[7430,7459,7460],[7431,7430,7460],[7431,7460,7461],[7432,7431,7461],[7432,7461,7462],[7433,7432,7462],[7433,7462,7463],[7434,7433,7463],[7434,7463,7464],[7435,7434,7464],[7435,7464,7465],[7436,7435,7465],[7436,7465,7466],[7437,7436,7466],[7437,7466,7467],[7438,7437,7467],[7438,7467,7468],[7439,7438,7468],[7439,7468,7469],[7440,7439,7469],[7440,7469,7470],[7441,7440,7470],[7441,7470,7471],[7442,7441,7471],[7442,7471,7472],[7443,7442,7472],[7443,7472,7473],[7444,7443,7473],[7444,7473,7474],[7445,7444,7474],[7445,7474,7475],[7446,7445,7475],[7446,7475,7476],[7447,7446,7476],[7447,7476,7477],[7448,7447,7477],[7448,7477,7478],[7449,7448,7478],[7449,7478,7479],[7450,7449,7479],[7450,7479,7391],[7390,7450,7391],[7451,6923,6922],[7451,6922,7480],[7452,7451,7480],[7452,7480,7481],[7453,7452,7481],[7453,7481,7482],[7454,7453,7482],[7454,7482,7483],[7455,7454,7483],[7455,7483,7484],[7456,7455,7484],[7456,7484,7485],[7457,7456,7485],[7457,7485,7486],[7458,7457,7486],[7458,7486,7487],[7459,7458,7487],[7459,7487,7488],[7460,7459,7488],[7460,7488,7489],[7461,7460,7489],[7461,7489,7490],[7462,7461,7490],[7462,7490,7491],[7463,7462,7491],[7463,7491,7492],[7464,7463,7492],[7464,7492,7493],[7465,7464,7493],[7465,7493,7494],[7466,7465,7494],[7466,7494,7495],[7467,7466,7495],[7467,7495,7496],[7468,7467,7496],[7468,7496,7497],[7469,7468,7497],[7469,7497,7498],[7470,7469,7498],[7470,7498,7499],[7471,7470,7499],[7471,7499,7500],[7472,7471,7500],[7472,7500,7501],[7473,7472,7501],[7473,7501,7502],[7474,7473,7502],[7474,7502,7503],[7475,7474,7503],[7475,7503,7504],[7476,7475,7504],[7476,7504,7505],[7477,7476,7505],[7477,7505,7506],[7478,7477,7506],[7478,7506,7507],[7479,7478,7507],[7479,7507,7392],[7391,7479,7392],[7480,6922,6921],[7480,6921,7508],[7481,7480,7508],[7481,7508,7509],[7482,7481,7509],[7482,7509,7510],[7483,7482,7510],[7483,7510,7511],[7484,7483,7511],[7484,7511,7512],[7485,7484,7512],[7485,7512,7513],[7486,7485,7513],[7486,7513,7514],[7487,7486,7514],[7487,7514,7515],[7488,7487,7515],[7488,7515,7516],[7489,7488,7516],[7489,7516,7517],[7490,7489,7517],[7490,7517,7518],[7491,7490,7518],[7491,7518,7519],[7492,7491,7519],[7492,7519,7520],[7493,7492,7520],[7493,7520,7521],[7494,7493,7521],[7494,7521,7522],[7495,7494,7522],[7495,7522,7523],[7496,7495,7523],[7496,7523,7524],[7497,7496,7524],[7497,7524,7525],[7498,7497,7525],[7498,7525,7526],[7499,7498,7526],[7499,7526,7527],[7500,7499,7527],[7500,7527,7528],[7501,7500,7528],[7501,7528,7529],[7502,7501,7529],[7502,7529,7530],[7503,7502,7530],[7503,7530,7531],[7504,7503,7531],[7504,7531,7532],[7505,7504,7532],[7505,7532,7533],[7506,7505,7533],[7506,7533,7534],[7507,7506,7534],[7507,7534,7393],[7392,7507,7393],[7508,6921,6920],[7508,6920,7535],[7509,7508,7535],[7509,7535,7536],[7510,7509,7536],[7510,7536,7537],[7511,7510,7537],[7511,7537,7538],[7512,7511,7538],[7512,7538,7539],[7513,7512,7539],[7513,7539,7540],[7514,7513,7540],[7514,7540,7541],[7515,7514,7541],[7515,7541,7542],[7516,7515,7542],[7516,7542,7543],[7517,7516,7543],[7517,7543,7544],[7518,7517,7544],[7518,7544,7545],[7519,7518,7545],[7519,7545,7546],[7520,7519,7546],[7520,7546,7547],[7521,7520,7547],[7521,7547,7548],[7522,7521,7548],[7522,7548,7549],[7523,7522,7549],[7523,7549,7550],[7524,7523,7550],[7524,7550,7551],[7525,7524,7551],[7525,7551,7552],[7526,7525,7552],[7526,7552,7553],[7527,7526,7553],[7527,7553,7554],[7528,7527,7554],[7528,7554,7555],[7529,7528,7555],[7529,7555,7556],[7530,7529,7556],[7530,7556,7557],[7531,7530,7557],[7531,7557,7558],[7532,7531,7558],[7532,7558,7559],[7533,7532,7559],[7533,7559,7560],[7534,7533,7560],[7534,7560,7394],[7393,7534,7394],[7535,6920,6919],[7535,6919,7561],[7536,7535,7561],[7536,7561,7562],[7537,7536,7562],[7537,7562,7563],[7538,7537,7563],[7538,7563,7564],[7539,7538,7564],[7539,7564,7565],[7540,7539,7565],[7540,7565,7566],[7541,7540,7566],[7541,7566,7567],[7542,7541,7567],[7542,7567,7568],[7543,7542,7568],[7543,7568,7569],[7544,7543,7569],[7544,7569,7570],[7545,7544,7570],[7545,7570,7571],[7546,7545,7571],[7546,7571,7572],[7547,7546,7572],[7547,7572,7573],[7548,7547,7573],[7548,7573,7574],[7549,7548,7574],[7549,7574,7575],[7550,7549,7575],[7550,7575,7576],[7551,7550,7576],[7551,7576,7577],[7552,7551,7577],[7552,7577,7578],[7553,7552,7578],[7553,7578,7579],[7554,7553,7579],[7554,7579,7580],[7555,7554,7580],[7555,7580,7581],[7556,7555,7581],[7556,7581,7582],[7557,7556,7582],[7557,7582,7583],[7558,7557,7583],[7558,7583,7584],[7559,7558,7584],[7559,7584,7585],[7560,7559,7585],[7560,7585,7395],[7394,7560,7395],[7561,6919,6918],[7561,6918,7586],[7562,7561,7586],[7562,7586,7587],[7563,7562,7587],[7563,7587,7588],[7564,7563,7588],[7564,7588,7589],[7565,7564,7589],[7565,7589,7590],[7566,7565,7590],[7566,7590,7591],[7567,7566,7591],[7567,7591,7592],[7568,7567,7592],[7568,7592,7593],[7569,7568,7593],[7569,7593,7594],[7570,7569,7594],[7570,7594,7595],[7571,7570,7595],[7571,7595,7596],[7572,7571,7596],[7572,7596,7597],[7573,7572,7597],[7573,7597,7598],[7574,7573,7598],[7574,7598,7599],[7575,7574,7599],[7575,7599,7600],[7576,7575,7600],[7576,7600,7601],[7577,7576,7601],[7577,7601,7602],[7578,7577,7602],[7578,7602,7603],[7579,7578,7603],[7579,7603,7604],[7580,7579,7604],[7580,7604,7605],[7581,7580,7605],[7581,7605,7606],[7582,7581,7606],[7582,7606,7607],[7583,7582,7607],[7583,7607,7608],[7584,7583,7608],[7584,7608,7609],[7585,7584,7609],[7585,7609,7396],[7395,7585,7396],[7586,6918,6917],[7586,6917,7610],[7587,7586,7610],[7587,7610,7611],[7588,7587,7611],[7588,7611,7612],[7589,7588,7612],[7589,7612,7613],[7590,7589,7613],[7590,7613,7614],[7591,7590,7614],[7591,7614,7615],[7592,7591,7615],[7592,7615,7616],[7593,7592,7616],[7593,7616,7617],[7594,7593,7617],[7594,7617,7618],[7595,7594,7618],[7595,7618,7619],[7596,7595,7619],[7596,7619,7620],[7597,7596,7620],[7597,7620,7621],[7598,7597,7621],[7598,7621,7622],[7599,7598,7622],[7599,7622,7623],[7600,7599,7623],[7600,7623,7624],[7601,7600,7624],[7601,7624,7625],[7602,7601,7625],[7602,7625,7626],[7603,7602,7626],[7603,7626,7627],[7604,7603,7627],[7604,7627,7628],[7605,7604,7628],[7605,7628,7629],[7606,7605,7629],[7606,7629,7630],[7607,7606,7630],[7607,7630,7631],[7608,7607,7631],[7608,7631,7632],[7609,7608,7632],[7609,7632,7397],[7396,7609,7397],[7610,6917,6916],[7610,6916,7633],[7611,7610,7633],[7611,7633,7634],[7612,7611,7634],[7612,7634,7635],[7613,7612,7635],[7613,7635,7636],[7614,7613,7636],[7614,7636,7637],[7615,7614,7637],[7615,7637,7638],[7616,7615,7638],[7616,7638,7639],[7617,7616,7639],[7617,7639,7640],[7618,7617,7640],[7618,7640,7641],[7619,7618,7641],[7619,7641,7642],[7620,7619,7642],[7620,7642,7643],[7621,7620,7643],[7621,7643,7644],[7622,7621,7644],[7622,7644,7645],[7623,7622,7645],[7623,7645,7646],[7624,7623,7646],[7624,7646,7647],[7625,7624,7647],[7625,7647,7648],[7626,7625,7648],[7626,7648,7649],[7627,7626,7649],[7627,7649,7650],[7628,7627,7650],[7628,7650,7651],[7629,7628,7651],[7629,7651,7652],[7630,7629,7652],[7630,7652,7653],[7631,7630,7653],[7631,7653,7654],[7632,7631,7654],[7632,7654,7398],[7397,7632,7398],[7633,6916,6915],[7633,6915,7655],[7634,7633,7655],[7634,7655,7656],[7635,7634,7656],[7635,7656,7657],[7636,7635,7657],[7636,7657,7658],[7637,7636,7658],[7637,7658,7659],[7638,7637,7659],[7638,7659,7660],[7639,7638,7660],[7639,7660,7661],[7640,7639,7661],[7640,7661,7662],[7641,7640,7662],[7641,7662,7663],[7642,7641,7663],[7642,7663,7664],[7643,7642,7664],[7643,7664,7665],[7644,7643,7665],[7644,7665,7666],[7645,7644,7666],[7645,7666,7667],[7646,7645,7667],[7646,7667,7668],[7647,7646,7668],[7647,7668,7669],[7648,7647,7669],[7648,7669,7670],[7649,7648,7670],[7649,7670,7671],[7650,7649,7671],[7650,7671,7672],[7651,7650,7672],[7651,7672,7673],[7652,7651,7673],[7652,7673,7674],[7653,7652,7674],[7653,7674,7675],[7654,7653,7675],[7654,7675,7399],[7398,7654,7399],[7655,6915,6914],[7655,6914,7676],[7656,7655,7676],[7656,7676,7677],[7657,7656,7677],[7657,7677,7678],[7658,7657,7678],[7658,7678,7679],[7659,7658,7679],[7659,7679,7680],[7660,7659,7680],[7660,7680,7681],[7661,7660,7681],[7661,7681,7682],[7662,7661,7682],[7662,7682,7683],[7663,7662,7683],[7663,7683,7684],[7664,7663,7684],[7664,7684,7685],[7665,7664,7685],[7665,7685,7686],[7666,7665,7686],[7666,7686,7687],[7667,7666,7687],[7667,7687,7688],[7668,7667,7688],[7668,7688,7689],[7669,7668,7689],[7669,7689,7690],[7670,7669,7690],[7670,7690,7691],[7671,7670,7691],[7671,7691,7692],[7672,7671,7692],[7672,7692,7693],[7673,7672,7693],[7673,7693,7694],[7674,7673,7694],[7674,7694,7695],[7675,7674,7695],[7675,7695,7400],[7399,7675,7400],[7676,6914,6913],[7676,6913,7696],[7677,7676,7696],[7677,7696,7697],[7678,7677,7697],[7678,7697,7698],[7679,7678,7698],[7679,7698,7699],[7680,7679,7699],[7680,7699,7700],[7681,7680,7700],[7681,7700,7701],[7682,7681,7701],[7682,7701,7702],[7683,7682,7702],[7683,7702,7703],[7684,7683,7703],[7684,7703,7704],[7685,7684,7704],[7685,7704,7705],[7686,7685,7705],[7686,7705,7706],[7687,7686,7706],[7687,7706,7707],[7688,7687,7707],[7688,7707,7708],[7689,7688,7708],[7689,7708,7709],[7690,7689,7709],[7690,7709,7710],[7691,7690,7710],[7691,7710,7711],[7692,7691,7711],[7692,7711,7712],[7693,7692,7712],[7693,7712,7713],[7694,7693,7713],[7694,7713,7714],[7695,7694,7714],[7695,7714,7401],[7400,7695,7401],[7696,6913,6912],[7696,6912,7715],[7697,7696,7715],[7697,7715,7716],[7698,7697,7716],[7698,7716,7717],[7699,7698,7717],[7699,7717,7718],[7700,7699,7718],[7700,7718,7719],[7701,7700,7719],[7701,7719,7720],[7702,7701,7720],[7702,7720,7721],[7703,7702,7721],[7703,7721,7722],[7704,7703,7722],[7704,7722,7723],[7705,7704,7723],[7705,7723,7724],[7706,7705,7724],[7706,7724,7725],[7707,7706,7725],[7707,7725,7726],[7708,7707,7726],[7708,7726,7727],[7709,7708,7727],[7709,7727,7728],[7710,7709,7728],[7710,7728,7729],[7711,7710,7729],[7711,7729,7730],[7712,7711,7730],[7712,7730,7731],[7713,7712,7731],[7713,7731,7732],[7714,7713,7732],[7714,7732,7402],[7401,7714,7402],[7715,6912,6911],[7715,6911,7733],[7716,7715,7733],[7716,7733,7734],[7717,7716,7734],[7717,7734,7735],[7718,7717,7735],[7718,7735,7736],[7719,7718,7736],[7719,7736,7737],[7720,7719,7737],[7720,7737,7738],[7721,7720,7738],[7721,7738,7739],[7722,7721,7739],[7722,7739,7740],[7723,7722,7740],[7723,7740,7741],[7724,7723,7741],[7724,7741,7742],[7725,7724,7742],[7725,7742,7743],[7726,7725,7743],[7726,7743,7744],[7727,7726,7744],[7727,7744,7745],[7728,7727,7745],[7728,7745,7746],[7729,7728,7746],[7729,7746,7747],[7730,7729,7747],[7730,7747,7748],[7731,7730,7748],[7731,7748,7749],[7732,7731,7749],[7732,7749,7403],[7402,7732,7403],[7733,6911,6910],[7733,6910,7750],[7734,7733,7750],[7734,7750,7751],[7735,7734,7751],[7735,7751,7752],[7736,7735,7752],[7736,7752,7753],[7737,7736,7753],[7737,7753,7754],[7738,7737,7754],[7738,7754,7755],[7739,7738,7755],[7739,7755,7756],[7740,7739,7756],[7740,7756,7757],[7741,7740,7757],[7741,7757,7758],[7742,7741,7758],[7742,7758,7759],[7743,7742,7759],[7743,7759,7760],[7744,7743,7760],[7744,7760,7761],[7745,7744,7761],[7745,7761,7762],[7746,7745,7762],[7746,7762,7763],[7747,7746,7763],[7747,7763,7764],[7748,7747,7764],[7748,7764,7765],[7749,7748,7765],[7749,7765,7404],[7403,7749,7404],[7750,6910,6909],[7750,6909,7766],[7751,7750,7766],[7751,7766,7767],[7752,7751,7767],[7752,7767,7768],[7753,7752,7768],[7753,7768,7769],[7754,7753,7769],[7754,7769,7770],[7755,7754,7770],[7755,7770,7771],[7756,7755,7771],[7756,7771,7772],[7757,7756,7772],[7757,7772,7773],[7758,7757,7773],[7758,7773,7774],[7759,7758,7774],[7759,7774,7775],[7760,7759,7775],[7760,7775,7776],[7761,7760,7776],[7761,7776,7777],[7762,7761,7777],[7762,7777,7778],[7763,7762,7778],[7763,7778,7779],[7764,7763,7779],[7764,7779,7780],[7765,7764,7780],[7765,7780,7405],[7404,7765,7405],[7766,6909,6908],[7766,6908,7781],[7767,7766,7781],[7767,7781,7782],[7768,7767,7782],[7768,7782,7783],[7769,7768,7783],[7769,7783,7784],[7770,7769,7784],[7770,7784,7785],[7771,7770,7785],[7771,7785,7786],[7772,7771,7786],[7772,7786,7787],[7773,7772,7787],[7773,7787,7788],[7774,7773,7788],[7774,7788,7789],[7775,7774,7789],[7775,7789,7790],[7776,7775,7790],[7776,7790,7791],[7777,7776,7791],[7777,7791,7792],[7778,7777,7792],[7778,7792,7793],[7779,7778,7793],[7779,7793,7794],[7780,7779,7794],[7780,7794,7406],[7405,7780,7406],[7781,6908,6907],[7781,6907,7795],[7782,7781,7795],[7782,7795,7796],[7783,7782,7796],[7783,7796,7797],[7784,7783,7797],[7784,7797,7798],[7785,7784,7798],[7785,7798,7799],[7786,7785,7799],[7786,7799,7800],[7787,7786,7800],[7787,7800,7801],[7788,7787,7801],[7788,7801,7802],[7789,7788,7802],[7789,7802,7803],[7790,7789,7803],[7790,7803,7804],[7791,7790,7804],[7791,7804,7805],[7792,7791,7805],[7792,7805,7806],[7793,7792,7806],[7793,7806,7807],[7794,7793,7807],[7794,7807,7407],[7406,7794,7407],[7795,6907,6906],[7795,6906,7808],[7796,7795,7808],[7796,7808,7809],[7797,7796,7809],[7797,7809,7810],[7798,7797,7810],[7798,7810,7811],[7799,7798,7811],[7799,7811,7812],[7800,7799,7812],[7800,7812,7813],[7801,7800,7813],[7801,7813,7814],[7802,7801,7814],[7802,7814,7815],[7803,7802,7815],[7803,7815,7816],[7804,7803,7816],[7804,7816,7817],[7805,7804,7817],[7805,7817,7818],[7806,7805,7818],[7806,7818,7819],[7807,7806,7819],[7807,7819,7408],[7407,7807,7408],[7808,6906,6905],[7808,6905,7820],[7809,7808,7820],[7809,7820,7821],[7810,7809,7821],[7810,7821,7822],[7811,7810,7822],[7811,7822,7823],[7812,7811,7823],[7812,7823,7824],[7813,7812,7824],[7813,7824,7825],[7814,7813,7825],[7814,7825,7826],[7815,7814,7826],[7815,7826,7827],[7816,7815,7827],[7816,7827,7828],[7817,7816,7828],[7817,7828,7829],[7818,7817,7829],[7818,7829,7830],[7819,7818,7830],[7819,7830,7409],[7408,7819,7409],[7820,6905,6904],[7820,6904,7831],[7821,7820,7831],[7821,7831,7832],[7822,7821,7832],[7822,7832,7833],[7823,7822,7833],[7823,7833,7834],[7824,7823,7834],[7824,7834,7835],[7825,7824,7835],[7825,7835,7836],[7826,7825,7836],[7826,7836,7837],[7827,7826,7837],[7827,7837,7838],[7828,7827,7838],[7828,7838,7839],[7829,7828,7839],[7829,7839,7840],[7830,7829,7840],[7830,7840,7410],[7409,7830,7410],[7831,6904,6903],[7831,6903,7841],[7832,7831,7841],[7832,7841,7842],[7833,7832,7842],[7833,7842,7843],[7834,7833,7843],[7834,7843,7844],[7835,7834,7844],[7835,7844,7845],[7836,7835,7845],[7836,7845,7846],[7837,7836,7846],[7837,7846,7847],[7838,7837,7847],[7838,7847,7848],[7839,7838,7848],[7839,7848,7849],[7840,7839,7849],[7840,7849,7411],[7410,7840,7411],[7841,6903,6902],[7841,6902,7850],[7842,7841,7850],[7842,7850,7851],[7843,7842,7851],[7843,7851,7852],[7844,7843,7852],[7844,7852,7853],[7845,7844,7853],[7845,7853,7854],[7846,7845,7854],[7846,7854,7855],[7847,7846,7855],[7847,7855,7856],[7848,7847,7856],[7848,7856,7857],[7849,7848,7857],[7849,7857,7412],[7411,7849,7412],[7850,6902,6901],[7850,6901,7858],[7851,7850,7858],[7851,7858,7859],[7852,7851,7859],[7852,7859,7860],[7853,7852,7860],[7853,7860,7861],[7854,7853,7861],[7854,7861,7862],[7855,7854,7862],[7855,7862,7863],[7856,7855,7863],[7856,7863,7864],[7857,7856,7864],[7857,7864,7413],[7412,7857,7413],[7858,6901,6900],[7858,6900,7865],[7859,7858,7865],[7859,7865,7866],[7860,7859,7866],[7860,7866,7867],[7861,7860,7867],[7861,7867,7868],[7862,7861,7868],[7862,7868,7869],[7863,7862,7869],[7863,7869,7870],[7864,7863,7870],[7864,7870,7414],[7413,7864,7414],[7865,6900,6899],[7865,6899,7871],[7866,7865,7871],[7866,7871,7872],[7867,7866,7872],[7867,7872,7873],[7868,7867,7873],[7868,7873,7874],[7869,7868,7874],[7869,7874,7875],[7870,7869,7875],[7870,7875,7415],[7414,7870,7415],[7871,6899,6898],[7871,6898,7876],[7872,7871,7876],[7872,7876,7877],[7873,7872,7877],[7873,7877,7878],[7874,7873,7878],[7874,7878,7879],[7875,7874,7879],[7875,7879,7416],[7415,7875,7416],[7876,6898,6897],[7876,6897,7880],[7877,7876,7880],[7877,7880,7881],[7878,7877,7881],[7878,7881,7882],[7879,7878,7882],[7879,7882,7417],[7416,7879,7417],[7880,6897,6896],[7880,6896,7883],[7881,7880,7883],[7881,7883,7884],[7882,7881,7884],[7882,7884,7418],[7417,7882,7418],[7883,6896,6895],[7883,6895,7885],[7884,7883,7885],[7884,7885,7419],[7418,7884,7419],[7885,6895,6894],[7885,6894,7420],[7419,7885,7420],[7420,6894,8],[7420,8,73],[7420,73,7886],[7419,7420,7886],[7419,7886,7887],[7418,7419,7887],[7418,7887,7888],[7417,7418,7888],[7417,7888,7889],[7416,7417,7889],[7416,7889,7890],[7415,7416,7890],[7415,7890,7891],[7414,7415,7891],[7414,7891,7892],[7413,7414,7892],[7413,7892,7893],[7412,7413,7893],[7412,7893,7894],[7411,7412,7894],[7411,7894,7895],[7410,7411,7895],[7410,7895,7896],[7409,7410,7896],[7409,7896,7897],[7408,7409,7897],[7408,7897,7898],[7407,7408,7898],[7407,7898,7899],[7406,7407,7899],[7406,7899,7900],[7405,7406,7900],[7405,7900,7901],[7404,7405,7901],[7404,7901,7902],[7403,7404,7902],[7403,7902,7903],[7402,7403,7903],[7402,7903,7904],[7401,7402,7904],[7401,7904,7905],[7400,7401,7905],[7400,7905,7906],[7399,7400,7906],[7399,7906,7907],[7398,7399,7907],[7398,7907,7908],[7397,7398,7908],[7397,7908,7909],[7396,7397,7909],[7396,7909,7910],[7395,7396,7910],[7395,7910,7911],[7394,7395,7911],[7394,7911,7912],[7393,7394,7912],[7393,7912,7913],[7392,7393,7913],[7392,7913,7914],[7391,7392,7914],[7391,7914,7915],[7390,7391,7915],[7390,7915,3855],[4,7390,3855],[7886,73,72],[7886,72,7916],[7887,7886,7916],[7887,7916,7917],[7888,7887,7917],[7888,7917,7918],[7889,7888,7918],[7889,7918,7919],[7890,7889,7919],[7890,7919,7920],[7891,7890,7920],[7891,7920,7921],[7892,7891,7921],[7892,7921,7922],[7893,7892,7922],[7893,7922,7923],[7894,7893,7923],[7894,7923,7924],[7895,7894,7924],[7895,7924,7925],[7896,7895,7925],[7896,7925,7926],[7897,7896,7926],[7897,7926,7927],[7898,7897,7927],[7898,7927,7928],[7899,7898,7928],[7899,7928,7929],[7900,7899,7929],[7900,7929,7930],[7901,7900,7930],[7901,7930,7931],[7902,7901,7931],[7902,7931,7932],[7903,7902,7932],[7903,7932,7933],[7904,7903,7933],[7904,7933,7934],[7905,7904,7934],[7905,7934,7935],[7906,7905,7935],[7906,7935,7936],[7907,7906,7936],[7907,7936,7937],[7908,7907,7937],[7908,7937,7938],[7909,7908,7938],[7909,7938,7939],[7910,7909,7939],[7910,7939,7940],[7911,7910,7940],[7911,7940,7941],[7912,7911,7941],[7912,7941,7942],[7913,7912,7942],[7913,7942,7943],[7914,7913,7943],[7914,7943,7944],[7915,7914,7944],[7915,7944,3854],[3855,7915,3854],[7916,72,71],[7916,71,7945],[7917,7916,7945],[7917,7945,7946],[7918,7917,7946],[7918,7946,7947],[7919,7918,7947],[7919,7947,7948],[7920,7919,7948],[7920,7948,7949],[7921,7920,7949],[7921,7949,7950],[7922,7921,7950],[7922,7950,7951],[7923,7922,7951],[7923,7951,7952],[7924,7923,7952],[7924,7952,7953],[7925,7924,7953],[7925,7953,7954],[7926,7925,7954],[7926,7954,7955],[7927,7926,7955],[7927,7955,7956],[7928,7927,7956],[7928,7956,7957],[7929,7928,7957],[7929,7957,7958],[7930,7929,7958],[7930,7958,7959],[7931,7930,7959],[7931,7959,7960],[7932,7931,7960],[7932,7960,7961],[7933,7932,7961],[7933,7961,7962],[7934,7933,7962],[7934,7962,7963],[7935,7934,7963],[7935,7963,7964],[7936,7935,7964],[7936,7964,7965],[7937,7936,7965],[7937,7965,7966],[7938,7937,7966],[7938,7966,7967],[7939,7938,7967],[7939,7967,7968],[7940,7939,7968],[7940,7968,7969],[7941,7940,7969],[7941,7969,7970],[7942,7941,7970],[7942,7970,7971],[7943,7942,7971],[7943,7971,7972],[7944,7943,7972],[7944,7972,3853],[3854,7944,3853],[7945,71,70],[7945,70,7973],[7946,7945,7973],[7946,7973,7974],[7947,7946,7974],[7947,7974,7975],[7948,7947,7975],[7948,7975,7976],[7949,7948,7976],[7949,7976,7977],[7950,7949,7977],[7950,7977,7978],[7951,7950,7978],[7951,7978,7979],[7952,7951,7979],[7952,7979,7980],[7953,7952,7980],[7953,7980,7981],[7954,7953,7981],[7954,7981,7982],[7955,7954,7982],[7955,7982,7983],[7956,7955,7983],[7956,7983,7984],[7957,7956,7984],[7957,7984,7985],[7958,7957,7985],[7958,7985,7986],[7959,7958,7986],[7959,7986,7987],[7960,7959,7987],[7960,7987,7988],[7961,7960,7988],[7961,7988,7989],[7962,7961,7989],[7962,7989,7990],[7963,7962,7990],[7963,7990,7991],[7964,7963,7991],[7964,7991,7992],[7965,7964,7992],[7965,7992,7993],[7966,7965,7993],[7966,7993,7994],[7967,7966,7994],[7967,7994,7995],[7968,7967,7995],[7968,7995,7996],[7969,7968,7996],[7969,7996,7997],[7970,7969,7997],[7970,7997,7998],[7971,7970,7998],[7971,7998,7999],[7972,7971,7999],[7972,7999,3852],[3853,7972,3852],[7973,70,69],[7973,69,8000],[7974,7973,8000],[7974,8000,8001],[7975,7974,8001],[7975,8001,8002],[7976,7975,8002],[7976,8002,8003],[7977,7976,8003],[7977,8003,8004],[7978,7977,8004],[7978,8004,8005],[7979,7978,8005],[7979,8005,8006],[7980,7979,8006],[7980,8006,8007],[7981,7980,8007],[7981,8007,8008],[7982,7981,8008],[7982,8008,8009],[7983,7982,8009],[7983,8009,8010],[7984,7983,8010],[7984,8010,8011],[7985,7984,8011],[7985,8011,8012],[7986,7985,8012],[7986,8012,8013],[7987,7986,8013],[7987,8013,8014],[7988,7987,8014],[7988,8014,8015],[7989,7988,8015],[7989,8015,8016],[7990,7989,8016],[7990,8016,8017],[7991,7990,8017],[7991,8017,8018],[7992,7991,8018],[7992,8018,8019],[7993,7992,8019],[7993,8019,8020],[7994,7993,8020],[7994,8020,8021],[7995,7994,8021],[7995,8021,8022],[7996,7995,8022],[7996,8022,8023],[7997,7996,8023],[7997,8023,8024],[7998,7997,8024],[7998,8024,8025],[7999,7998,8025],[7999,8025,3851],[3852,7999,3851],[8000,69,68],[8000,68,8026],[8001,8000,8026],[8001,8026,8027],[8002,8001,8027],[8002,8027,8028],[8003,8002,8028],[8003,8028,8029],[8004,8003,8029],[8004,8029,8030],[8005,8004,8030],[8005,8030,8031],[8006,8005,8031],[8006,8031,8032],[8007,8006,8032],[8007,8032,8033],[8008,8007,8033],[8008,8033,8034],[8009,8008,8034],[8009,8034,8035],[8010,8009,8035],[8010,8035,8036],[8011,8010,8036],[8011,8036,8037],[8012,8011,8037],[8012,8037,8038],[8013,8012,8038],[8013,8038,8039],[8014,8013,8039],[8014,8039,8040],[8015,8014,8040],[8015,8040,8041],[8016,8015,8041],[8016,8041,8042],[8017,8016,8042],[8017,8042,8043],[8018,8017,8043],[8018,8043,8044],[8019,8018,8044],[8019,8044,8045],[8020,8019,8045],[8020,8045,8046],[8021,8020,8046],[8021,8046,8047],[8022,8021,8047],[8022,8047,8048],[8023,8022,8048],[8023,8048,8049],[8024,8023,8049],[8024,8049,8050],[8025,8024,8050],[8025,8050,3850],[3851,8025,3850],[8026,68,67],[8026,67,8051],[8027,8026,8051],[8027,8051,8052],[8028,8027,8052],[8028,8052,8053],[8029,8028,8053],[8029,8053,8054],[8030,8029,8054],[8030,8054,8055],[8031,8030,8055],[8031,8055,8056],[8032,8031,8056],[8032,8056,8057],[8033,8032,8057],[8033,8057,8058],[8034,8033,8058],[8034,8058,8059],[8035,8034,8059],[8035,8059,8060],[8036,8035,8060],[8036,8060,8061],[8037,8036,8061],[8037,8061,8062],[8038,8037,8062],[8038,8062,8063],[8039,8038,8063],[8039,8063,8064],[8040,8039,8064],[8040,8064,8065],[8041,8040,8065],[8041,8065,8066],[8042,8041,8066],[8042,8066,8067],[8043,8042,8067],[8043,8067,8068],[8044,8043,8068],[8044,8068,8069],[8045,8044,8069],[8045,8069,8070],[8046,8045,8070],[8046,8070,8071],[8047,8046,8071],[8047,8071,8072],[8048,8047,8072],[8048,8072,8073],[8049,8048,8073],[8049,8073,8074],[8050,8049,8074],[8050,8074,3849],[3850,8050,3849],[8051,67,66],[8051,66,8075],[8052,8051,8075],[8052,8075,8076],[8053,8052,8076],[8053,8076,8077],[8054,8053,8077],[8054,8077,8078],[8055,8054,8078],[8055,8078,8079],[8056,8055,8079],[8056,8079,8080],[8057,8056,8080],[8057,8080,8081],[8058,8057,8081],[8058,8081,8082],[8059,8058,8082],[8059,8082,8083],[8060,8059,8083],[8060,8083,8084],[8061,8060,8084],[8061,8084,8085],[8062,8061,8085],[8062,8085,8086],[8063,8062,8086],[8063,8086,8087],[8064,8063,8087],[8064,8087,8088],[8065,8064,8088],[8065,8088,8089],[8066,8065,8089],[8066,8089,8090],[8067,8066,8090],[8067,8090,8091],[8068,8067,8091],[8068,8091,8092],[8069,8068,8092],[8069,8092,8093],[8070,8069,8093],[8070,8093,8094],[8071,8070,8094],[8071,8094,8095],[8072,8071,8095],[8072,8095,8096],[8073,8072,8096],[8073,8096,8097],[8074,8073,8097],[8074,8097,3848],[3849,8074,3848],[8075,66,65],[8075,65,8098],[8076,8075,8098],[8076,8098,8099],[8077,8076,8099],[8077,8099,8100],[8078,8077,8100],[8078,8100,8101],[8079,8078,8101],[8079,8101,8102],[8080,8079,8102],[8080,8102,8103],[8081,8080,8103],[8081,8103,8104],[8082,8081,8104],[8082,8104,8105],[8083,8082,8105],[8083,8105,8106],[8084,8083,8106],[8084,8106,8107],[8085,8084,8107],[8085,8107,8108],[8086,8085,8108],[8086,8108,8109],[8087,8086,8109],[8087,8109,8110],[8088,8087,8110],[8088,8110,8111],[8089,8088,8111],[8089,8111,8112],[8090,8089,8112],[8090,8112,8113],[8091,8090,8113],[8091,8113,8114],[8092,8091,8114],[8092,8114,8115],[8093,8092,8115],[8093,8115,8116],[8094,8093,8116],[8094,8116,8117],[8095,8094,8117],[8095,8117,8118],[8096,8095,8118],[8096,8118,8119],[8097,8096,8119],[8097,8119,3847],[3848,8097,3847],[8098,65,64],[8098,64,8120],[8099,8098,8120],[8099,8120,8121],[8100,8099,8121],[8100,8121,8122],[8101,8100,8122],[8101,8122,8123],[8102,8101,8123],[8102,8123,8124],[8103,8102,8124],[8103,8124,8125],[8104,8103,8125],[8104,8125,8126],[8105,8104,8126],[8105,8126,8127],[8106,8105,8127],[8106,8127,8128],[8107,8106,8128],[8107,8128,8129],[8108,8107,8129],[8108,8129,8130],[8109,8108,8130],[8109,8130,8131],[8110,8109,8131],[8110,8131,8132],[8111,8110,8132],[8111,8132,8133],[8112,8111,8133],[8112,8133,8134],[8113,8112,8134],[8113,8134,8135],[8114,8113,8135],[8114,8135,8136],[8115,8114,8136],[8115,8136,8137],[8116,8115,8137],[8116,8137,8138],[8117,8116,8138],[8117,8138,8139],[8118,8117,8139],[8118,8139,8140],[8119,8118,8140],[8119,8140,3846],[3847,8119,3846],[8120,64,63],[8120,63,8141],[8121,8120,8141],[8121,8141,8142],[8122,8121,8142],[8122,8142,8143],[8123,8122,8143],[8123,8143,8144],[8124,8123,8144],[8124,8144,8145],[8125,8124,8145],[8125,8145,8146],[8126,8125,8146],[8126,8146,8147],[8127,8126,8147],[8127,8147,8148],[8128,8127,8148],[8128,8148,8149],[8129,8128,8149],[8129,8149,8150],[8130,8129,8150],[8130,8150,8151],[8131,8130,8151],[8131,8151,8152],[8132,8131,8152],[8132,8152,8153],[8133,8132,8153],[8133,8153,8154],[8134,8133,8154],[8134,8154,8155],[8135,8134,8155],[8135,8155,8156],[8136,8135,8156],[8136,8156,8157],[8137,8136,8157],[8137,8157,8158],[8138,8137,8158],[8138,8158,8159],[8139,8138,8159],[8139,8159,8160],[8140,8139,8160],[8140,8160,3845],[3846,8140,3845],[8141,63,62],[8141,62,8161],[8142,8141,8161],[8142,8161,8162],[8143,8142,8162],[8143,8162,8163],[8144,8143,8163],[8144,8163,8164],[8145,8144,8164],[8145,8164,8165],[8146,8145,8165],[8146,8165,8166],[8147,8146,8166],[8147,8166,8167],[8148,8147,8167],[8148,8167,8168],[8149,8148,8168],[8149,8168,8169],[8150,8149,8169],[8150,8169,8170],[8151,8150,8170],[8151,8170,8171],[8152,8151,8171],[8152,8171,8172],[8153,8152,8172],[8153,8172,8173],[8154,8153,8173],[8154,8173,8174],[8155,8154,8174],[8155,8174,8175],[8156,8155,8175],[8156,8175,8176],[8157,8156,8176],[8157,8176,8177],[8158,8157,8177],[8158,8177,8178],[8159,8158,8178],[8159,8178,8179],[8160,8159,8179],[8160,8179,3844],[3845,8160,3844],[8161,62,61],[8161,61,8180],[8162,8161,8180],[8162,8180,8181],[8163,8162,8181],[8163,8181,8182],[8164,8163,8182],[8164,8182,8183],[8165,8164,8183],[8165,8183,8184],[8166,8165,8184],[8166,8184,8185],[8167,8166,8185],[8167,8185,8186],[8168,8167,8186],[8168,8186,8187],[8169,8168,8187],[8169,8187,8188],[8170,8169,8188],[8170,8188,8189],[8171,8170,8189],[8171,8189,8190],[8172,8171,8190],[8172,8190,8191],[8173,8172,8191],[8173,8191,8192],[8174,8173,8192],[8174,8192,8193],[8175,8174,8193],[8175,8193,8194],[8176,8175,8194],[8176,8194,8195],[8177,8176,8195],[8177,8195,8196],[8178,8177,8196],[8178,8196,8197],[8179,8178,8197],[8179,8197,3843],[3844,8179,3843],[8180,61,60],[8180,60,8198],[8181,8180,8198],[8181,8198,8199],[8182,8181,8199],[8182,8199,8200],[8183,8182,8200],[8183,8200,8201],[8184,8183,8201],[8184,8201,8202],[8185,8184,8202],[8185,8202,8203],[8186,8185,8203],[8186,8203,8204],[8187,8186,8204],[8187,8204,8205],[8188,8187,8205],[8188,8205,8206],[8189,8188,8206],[8189,8206,8207],[8190,8189,8207],[8190,8207,8208],[8191,8190,8208],[8191,8208,8209],[8192,8191,8209],[8192,8209,8210],[8193,8192,8210],[8193,8210,8211],[8194,8193,8211],[8194,8211,8212],[8195,8194,8212],[8195,8212,8213],[8196,8195,8213],[8196,8213,8214],[8197,8196,8214],[8197,8214,3842],[3843,8197,3842],[8198,60,59],[8198,59,8215],[8199,8198,8215],[8199,8215,8216],[8200,8199,8216],[8200,8216,8217],[8201,8200,8217],[8201,8217,8218],[8202,8201,8218],[8202,8218,8219],[8203,8202,8219],[8203,8219,8220],[8204,8203,8220],[8204,8220,8221],[8205,8204,8221],[8205,8221,8222],[8206,8205,8222],[8206,8222,8223],[8207,8206,8223],[8207,8223,8224],[8208,8207,8224],[8208,8224,8225],[8209,8208,8225],[8209,8225,8226],[8210,8209,8226],[8210,8226,8227],[8211,8210,8227],[8211,8227,8228],[8212,8211,8228],[8212,8228,8229],[8213,8212,8229],[8213,8229,8230],[8214,8213,8230],[8214,8230,3841],[3842,8214,3841],[8215,59,58],[8215,58,8231],[8216,8215,8231],[8216,8231,8232],[8217,8216,8232],[8217,8232,8233],[8218,8217,8233],[8218,8233,8234],[8219,8218,8234],[8219,8234,8235],[8220,8219,8235],[8220,8235,8236],[8221,8220,8236],[8221,8236,8237],[8222,8221,8237],[8222,8237,8238],[8223,8222,8238],[8223,8238,8239],[8224,8223,8239],[8224,8239,8240],[8225,8224,8240],[8225,8240,8241],[8226,8225,8241],[8226,8241,8242],[8227,8226,8242],[8227,8242,8243],[8228,8227,8243],[8228,8243,8244],[8229,8228,8244],[8229,8244,8245],[8230,8229,8245],[8230,8245,3840],[3841,8230,3840],[8231,58,57],[8231,57,8246],[8232,8231,8246],[8232,8246,8247],[8233,8232,8247],[8233,8247,8248],[8234,8233,8248],[8234,8248,8249],[8235,8234,8249],[8235,8249,8250],[8236,8235,8250],[8236,8250,8251],[8237,8236,8251],[8237,8251,8252],[8238,8237,8252],[8238,8252,8253],[8239,8238,8253],[8239,8253,8254],[8240,8239,8254],[8240,8254,8255],[8241,8240,8255],[8241,8255,8256],[8242,8241,8256],[8242,8256,8257],[8243,8242,8257],[8243,8257,8258],[8244,8243,8258],[8244,8258,8259],[8245,8244,8259],[8245,8259,3839],[3840,8245,3839],[8246,57,56],[8246,56,8260],[8247,8246,8260],[8247,8260,8261],[8248,8247,8261],[8248,8261,8262],[8249,8248,8262],[8249,8262,8263],[8250,8249,8263],[8250,8263,8264],[8251,8250,8264],[8251,8264,8265],[8252,8251,8265],[8252,8265,8266],[8253,8252,8266],[8253,8266,8267],[8254,8253,8267],[8254,8267,8268],[8255,8254,8268],[8255,8268,8269],[8256,8255,8269],[8256,8269,8270],[8257,8256,8270],[8257,8270,8271],[8258,8257,8271],[8258,8271,8272],[8259,8258,8272],[8259,8272,3838],[3839,8259,3838],[8260,56,55],[8260,55,8273],[8261,8260,8273],[8261,8273,8274],[8262,8261,8274],[8262,8274,8275],[8263,8262,8275],[8263,8275,8276],[8264,8263,8276],[8264,8276,8277],[8265,8264,8277],[8265,8277,8278],[8266,8265,8278],[8266,8278,8279],[8267,8266,8279],[8267,8279,8280],[8268,8267,8280],[8268,8280,8281],[8269,8268,8281],[8269,8281,8282],[8270,8269,8282],[8270,8282,8283],[8271,8270,8283],[8271,8283,8284],[8272,8271,8284],[8272,8284,3837],[3838,8272,3837],[8273,55,54],[8273,54,8285],[8274,8273,8285],[8274,8285,8286],[8275,8274,8286],[8275,8286,8287],[8276,8275,8287],[8276,8287,8288],[8277,8276,8288],[8277,8288,8289],[8278,8277,8289],[8278,8289,8290],[8279,8278,8290],[8279,8290,8291],[8280,8279,8291],[8280,8291,8292],[8281,8280,8292],[8281,8292,8293],[8282,8281,8293],[8282,8293,8294],[8283,8282,8294],[8283,8294,8295],[8284,8283,8295],[8284,8295,3836],[3837,8284,3836],[8285,54,53],[8285,53,8296],[8286,8285,8296],[8286,8296,8297],[8287,8286,8297],[8287,8297,8298],[8288,8287,8298],[8288,8298,8299],[8289,8288,8299],[8289,8299,8300],[8290,8289,8300],[8290,8300,8301],[8291,8290,8301],[8291,8301,8302],[8292,8291,8302],[8292,8302,8303],[8293,8292,8303],[8293,8303,8304],[8294,8293,8304],[8294,8304,8305],[8295,8294,8305],[8295,8305,3835],[3836,8295,3835],[8296,53,52],[8296,52,8306],[8297,8296,8306],[8297,8306,8307],[8298,8297,8307],[8298,8307,8308],[8299,8298,8308],[8299,8308,8309],[8300,8299,8309],[8300,8309,8310],[8301,8300,8310],[8301,8310,8311],[8302,8301,8311],[8302,8311,8312],[8303,8302,8312],[8303,8312,8313],[8304,8303,8313],[8304,8313,8314],[8305,8304,8314],[8305,8314,3834],[3835,8305,3834],[8306,52,51],[8306,51,8315],[8307,8306,8315],[8307,8315,8316],[8308,8307,8316],[8308,8316,8317],[8309,8308,8317],[8309,8317,8318],[8310,8309,8318],[8310,8318,8319],[8311,8310,8319],[8311,8319,8320],[8312,8311,8320],[8312,8320,8321],[8313,8312,8321],[8313,8321,8322],[8314,8313,8322],[8314,8322,3833],[3834,8314,3833],[8315,51,50],[8315,50,8323],[8316,8315,8323],[8316,8323,8324],[8317,8316,8324],[8317,8324,8325],[8318,8317,8325],[8318,8325,8326],[8319,8318,8326],[8319,8326,8327],[8320,8319,8327],[8320,8327,8328],[8321,8320,8328],[8321,8328,8329],[8322,8321,8329],[8322,8329,3832],[3833,8322,3832],[8323,50,49],[8323,49,8330],[8324,8323,8330],[8324,8330,8331],[8325,8324,8331],[8325,8331,8332],[8326,8325,8332],[8326,8332,8333],[8327,8326,8333],[8327,8333,8334],[8328,8327,8334],[8328,8334,8335],[8329,8328,8335],[8329,8335,3831],[3832,8329,3831],[8330,49,48],[8330,48,8336],[8331,8330,8336],[8331,8336,8337],[8332,8331,8337],[8332,8337,8338],[8333,8332,8338],[8333,8338,8339],[8334,8333,8339],[8334,8339,8340],[8335,8334,8340],[8335,8340,3830],[3831,8335,3830],[8336,48,47],[8336,47,8341],[8337,8336,8341],[8337,8341,8342],[8338,8337,8342],[8338,8342,8343],[8339,8338,8343],[8339,8343,8344],[8340,8339,8344],[8340,8344,3829],[3830,8340,3829],[8341,47,46],[8341,46,8345],[8342,8341,8345],[8342,8345,8346],[8343,8342,8346],[8343,8346,8347],[8344,8343,8347],[8344,8347,3828],[3829,8344,3828],[8345,46,45],[8345,45,8348],[8346,8345,8348],[8346,8348,8349],[8347,8346,8349],[8347,8349,3827],[3828,8347,3827],[8348,45,44],[8348,44,8350],[8349,8348,8350],[8349,8350,3826],[3827,8349,3826],[8350,44,43],[8350,43,3825],[3826,8350,3825],[3825,43,0],[6893,11,6366],[6893,6366,8351],[6892,6893,8351],[6892,8351,8352],[6891,6892,8352],[6891,8352,8353],[6890,6891,8353],[6890,8353,8354],[6889,6890,8354],[6889,8354,8355],[6888,6889,8355],[6888,8355,8356],[6887,6888,8356],[6887,8356,8357],[6886,6887,8357],[6886,8357,8358],[6885,6886,8358],[6885,8358,8359],[6884,6885,8359],[6884,8359,8360],[6883,6884,8360],[6883,8360,8361],[6882,6883,8361],[6882,8361,8362],[6881,6882,8362],[6881,8362,8363],[6880,6881,8363],[6880,8363,8364],[6879,6880,8364],[6879,8364,8365],[6878,6879,8365],[6878,8365,8366],[6877,6878,8366],[6877,8366,8367],[6876,6877,8367],[6876,8367,8368],[6875,6876,8368],[6875,8368,8369],[6874,6875,8369],[6874,8369,8370],[6873,6874,8370],[6873,8370,8371],[6872,6873,8371],[6872,8371,8372],[6871,6872,8372],[6871,8372,8373],[6870,6871,8373],[6870,8373,8374],[6869,6870,8374],[6869,8374,8375],[6868,6869,8375],[6868,8375,8376],[6867,6868,8376],[6867,8376,8377],[6866,6867,8377],[6866,8377,8378],[6865,6866,8378],[6865,8378,8379],[6864,6865,8379],[6864,8379,8380],[6863,6864,8380],[6863,8380,104],[8,6863,104],[8351,6366,6365],[8351,6365,8381],[8352,8351,8381],[8352,8381,8382],[8353,8352,8382],[8353,8382,8383],[8354,8353,8383],[8354,8383,8384],[8355,8354,8384],[8355,8384,8385],[8356,8355,8385],[8356,8385,8386],[8357,8356,8386],[8357,8386,8387],[8358,8357,8387],[8358,8387,8388],[8359,8358,8388],[8359,8388,8389],[8360,8359,8389],[8360,8389,8390],[8361,8360,8390],[8361,8390,8391],[8362,8361,8391],[8362,8391,8392],[8363,8362,8392],[8363,8392,8393],[8364,8363,8393],[8364,8393,8394],[8365,8364,8394],[8365,8394,8395],[8366,8365,8395],[8366,8395,8396],[8367,8366,8396],[8367,8396,8397],[8368,8367,8397],[8368,8397,8398],[8369,8368,8398],[8369,8398,8399],[8370,8369,8399],[8370,8399,8400],[8371,8370,8400],[8371,8400,8401],[8372,8371,8401],[8372,8401,8402],[8373,8372,8402],[8373,8402,8403],[8374,8373,8403],[8374,8403,8404],[8375,8374,8404],[8375,8404,8405],[8376,8375,8405],[8376,8405,8406],[8377,8376,8406],[8377,8406,8407],[8378,8377,8407],[8378,8407,8408],[8379,8378,8408],[8379,8408,8409],[8380,8379,8409],[8380,8409,103],[104,8380,103],[8381,6365,6364],[8381,6364,8410],[8382,8381,8410],[8382,8410,8411],[8383,8382,8411],[8383,8411,8412],[8384,8383,8412],[8384,8412,8413],[8385,8384,8413],[8385,8413,8414],[8386,8385,8414],[8386,8414,8415],[8387,8386,8415],[8387,8415,8416],[8388,8387,8416],[8388,8416,8417],[8389,8388,8417],[8389,8417,8418],[8390,8389,8418],[8390,8418,8419],[8391,8390,8419],[8391,8419,8420],[8392,8391,8420],[8392,8420,8421],[8393,8392,8421],[8393,8421,8422],[8394,8393,8422],[8394,8422,8423],[8395,8394,8423],[8395,8423,8424],[8396,8395,8424],[8396,8424,8425],[8397,8396,8425],[8397,8425,8426],[8398,8397,8426],[8398,8426,8427],[8399,8398,8427],[8399,8427,8428],[8400,8399,8428],[8400,8428,8429],[8401,8400,8429],[8401,8429,8430],[8402,8401,8430],[8402,8430,8431],[8403,8402,8431],[8403,8431,8432],[8404,8403,8432],[8404,8432,8433],[8405,8404,8433],[8405,8433,8434],[8406,8405,8434],[8406,8434,8435],[8407,8406,8435],[8407,8435,8436],[8408,8407,8436],[8408,8436,8437],[8409,8408,8437],[8409,8437,102],[103,8409,102],[8410,6364,6363],[8410,6363,8438],[8411,8410,8438],[8411,8438,8439],[8412,8411,8439],[8412,8439,8440],[8413,8412,8440],[8413,8440,8441],[8414,8413,8441],[8414,8441,8442],[8415,8414,8442],[8415,8442,8443],[8416,8415,8443],[8416,8443,8444],[8417,8416,8444],[8417,8444,8445],[8418,8417,8445],[8418,8445,8446],[8419,8418,8446],[8419,8446,8447],[8420,8419,8447],[8420,8447,8448],[8421,8420,8448],[8421,8448,8449],[8422,8421,8449],[8422,8449,8450],[8423,8422,8450],[8423,8450,8451],[8424,8423,8451],[8424,8451,8452],[8425,8424,8452],[8425,8452,8453],[8426,8425,8453],[8426,8453,8454],[8427,8426,8454],[8427,8454,8455],[8428,8427,8455],[8428,8455,8456],[8429,8428,8456],[8429,8456,8457],[8430,8429,8457],[8430,8457,8458],[8431,8430,8458],[8431,8458,8459],[8432,8431,8459],[8432,8459,8460],[8433,8432,8460],[8433,8460,8461],[8434,8433,8461],[8434,8461,8462],[8435,8434,8462],[8435,8462,8463],[8436,8435,8463],[8436,8463,8464],[8437,8436,8464],[8437,8464,101],[102,8437,101],[8438,6363,6362],[8438,6362,8465],[8439,8438,8465],[8439,8465,8466],[8440,8439,8466],[8440,8466,8467],[8441,8440,8467],[8441,8467,8468],[8442,8441,8468],[8442,8468,8469],[8443,8442,8469],[8443,8469,8470],[8444,8443,8470],[8444,8470,8471],[8445,8444,8471],[8445,8471,8472],[8446,8445,8472],[8446,8472,8473],[8447,8446,8473],[8447,8473,8474],[8448,8447,8474],[8448,8474,8475],[8449,8448,8475],[8449,8475,8476],[8450,8449,8476],[8450,8476,8477],[8451,8450,8477],[8451,8477,8478],[8452,8451,8478],[8452,8478,8479],[8453,8452,8479],[8453,8479,8480],[8454,8453,8480],[8454,8480,8481],[8455,8454,8481],[8455,8481,8482],[8456,8455,8482],[8456,8482,8483],[8457,8456,8483],[8457,8483,8484],[8458,8457,8484],[8458,8484,8485],[8459,8458,8485],[8459,8485,8486],[8460,8459,8486],[8460,8486,8487],[8461,8460,8487],[8461,8487,8488],[8462,8461,8488],[8462,8488,8489],[8463,8462,8489],[8463,8489,8490],[8464,8463,8490],[8464,8490,100],[101,8464,100],[8465,6362,6361],[8465,6361,8491],[8466,8465,8491],[8466,8491,8492],[8467,8466,8492],[8467,8492,8493],[8468,8467,8493],[8468,8493,8494],[8469,8468,8494],[8469,8494,8495],[8470,8469,8495],[8470,8495,8496],[8471,8470,8496],[8471,8496,8497],[8472,8471,8497],[8472,8497,8498],[8473,8472,8498],[8473,8498,8499],[8474,8473,8499],[8474,8499,8500],[8475,8474,8500],[8475,8500,8501],[8476,8475,8501],[8476,8501,8502],[8477,8476,8502],[8477,8502,8503],[8478,8477,8503],[8478,8503,8504],[8479,8478,8504],[8479,8504,8505],[8480,8479,8505],[8480,8505,8506],[8481,8480,8506],[8481,8506,8507],[8482,8481,8507],[8482,8507,8508],[8483,8482,8508],[8483,8508,8509],[8484,8483,8509],[8484,8509,8510],[8485,8484,8510],[8485,8510,8511],[8486,8485,8511],[8486,8511,8512],[8487,8486,8512],[8487,8512,8513],[8488,8487,8513],[8488,8513,8514],[8489,8488,8514],[8489,8514,8515],[8490,8489,8515],[8490,8515,99],[100,8490,99],[8491,6361,6360],[8491,6360,8516],[8492,8491,8516],[8492,8516,8517],[8493,8492,8517],[8493,8517,8518],[8494,8493,8518],[8494,8518,8519],[8495,8494,8519],[8495,8519,8520],[8496,8495,8520],[8496,8520,8521],[8497,8496,8521],[8497,8521,8522],[8498,8497,8522],[8498,8522,8523],[8499,8498,8523],[8499,8523,8524],[8500,8499,8524],[8500,8524,8525],[8501,8500,8525],[8501,8525,8526],[8502,8501,8526],[8502,8526,8527],[8503,8502,8527],[8503,8527,8528],[8504,8503,8528],[8504,8528,8529],[8505,8504,8529],[8505,8529,8530],[8506,8505,8530],[8506,8530,8531],[8507,8506,8531],[8507,8531,8532],[8508,8507,8532],[8508,8532,8533],[8509,8508,8533],[8509,8533,8534],[8510,8509,8534],[8510,8534,8535],[8511,8510,8535],[8511,8535,8536],[8512,8511,8536],[8512,8536,8537],[8513,8512,8537],[8513,8537,8538],[8514,8513,8538],[8514,8538,8539],[8515,8514,8539],[8515,8539,98],[99,8515,98],[8516,6360,6359],[8516,6359,8540],[8517,8516,8540],[8517,8540,8541],[8518,8517,8541],[8518,8541,8542],[8519,8518,8542],[8519,8542,8543],[8520,8519,8543],[8520,8543,8544],[8521,8520,8544],[8521,8544,8545],[8522,8521,8545],[8522,8545,8546],[8523,8522,8546],[8523,8546,8547],[8524,8523,8547],[8524,8547,8548],[8525,8524,8548],[8525,8548,8549],[8526,8525,8549],[8526,8549,8550],[8527,8526,8550],[8527,8550,8551],[8528,8527,8551],[8528,8551,8552],[8529,8528,8552],[8529,8552,8553],[8530,8529,8553],[8530,8553,8554],[8531,8530,8554],[8531,8554,8555],[8532,8531,8555],[8532,8555,8556],[8533,8532,8556],[8533,8556,8557],[8534,8533,8557],[8534,8557,8558],[8535,8534,8558],[8535,8558,8559],[8536,8535,8559],[8536,8559,8560],[8537,8536,8560],[8537,8560,8561],[8538,8537,8561],[8538,8561,8562],[8539,8538,8562],[8539,8562,97],[98,8539,97],[8540,6359,6358],[8540,6358,8563],[8541,8540,8563],[8541,8563,8564],[8542,8541,8564],[8542,8564,8565],[8543,8542,8565],[8543,8565,8566],[8544,8543,8566],[8544,8566,8567],[8545,8544,8567],[8545,8567,8568],[8546,8545,8568],[8546,8568,8569],[8547,8546,8569],[8547,8569,8570],[8548,8547,8570],[8548,8570,8571],[8549,8548,8571],[8549,8571,8572],[8550,8549,8572],[8550,8572,8573],[8551,8550,8573],[8551,8573,8574],[8552,8551,8574],[8552,8574,8575],[8553,8552,8575],[8553,8575,8576],[8554,8553,8576],[8554,8576,8577],[8555,8554,8577],[8555,8577,8578],[8556,8555,8578],[8556,8578,8579],[8557,8556,8579],[8557,8579,8580],[8558,8557,8580],[8558,8580,8581],[8559,8558,8581],[8559,8581,8582],[8560,8559,8582],[8560,8582,8583],[8561,8560,8583],[8561,8583,8584],[8562,8561,8584],[8562,8584,96],[97,8562,96],[8563,6358,6357],[8563,6357,8585],[8564,8563,8585],[8564,8585,8586],[8565,8564,8586],[8565,8586,8587],[8566,8565,8587],[8566,8587,8588],[8567,8566,8588],[8567,8588,8589],[8568,8567,8589],[8568,8589,8590],[8569,8568,8590],[8569,8590,8591],[8570,8569,8591],[8570,8591,8592],[8571,8570,8592],[8571,8592,8593],[8572,8571,8593],[8572,8593,8594],[8573,8572,8594],[8573,8594,8595],[8574,8573,8595],[8574,8595,8596],[8575,8574,8596],[8575,8596,8597],[8576,8575,8597],[8576,8597,8598],[8577,8576,8598],[8577,8598,8599],[8578,8577,8599],[8578,8599,8600],[8579,8578,8600],[8579,8600,8601],[8580,8579,8601],[8580,8601,8602],[8581,8580,8602],[8581,8602,8603],[8582,8581,8603],[8582,8603,8604],[8583,8582,8604],[8583,8604,8605],[8584,8583,8605],[8584,8605,95],[96,8584,95],[8585,6357,6356],[8585,6356,8606],[8586,8585,8606],[8586,8606,8607],[8587,8586,8607],[8587,8607,8608],[8588,8587,8608],[8588,8608,8609],[8589,8588,8609],[8589,8609,8610],[8590,8589,8610],[8590,8610,8611],[8591,8590,8611],[8591,8611,8612],[8592,8591,8612],[8592,8612,8613],[8593,8592,8613],[8593,8613,8614],[8594,8593,8614],[8594,8614,8615],[8595,8594,8615],[8595,8615,8616],[8596,8595,8616],[8596,8616,8617],[8597,8596,8617],[8597,8617,8618],[8598,8597,8618],[8598,8618,8619],[8599,8598,8619],[8599,8619,8620],[8600,8599,8620],[8600,8620,8621],[8601,8600,8621],[8601,8621,8622],[8602,8601,8622],[8602,8622,8623],[8603,8602,8623],[8603,8623,8624],[8604,8603,8624],[8604,8624,8625],[8605,8604,8625],[8605,8625,94],[95,8605,94],[8606,6356,6355],[8606,6355,8626],[8607,8606,8626],[8607,8626,8627],[8608,8607,8627],[8608,8627,8628],[8609,8608,8628],[8609,8628,8629],[8610,8609,8629],[8610,8629,8630],[8611,8610,8630],[8611,8630,8631],[8612,8611,8631],[8612,8631,8632],[8613,8612,8632],[8613,8632,8633],[8614,8613,8633],[8614,8633,8634],[8615,8614,8634],[8615,8634,8635],[8616,8615,8635],[8616,8635,8636],[8617,8616,8636],[8617,8636,8637],[8618,8617,8637],[8618,8637,8638],[8619,8618,8638],[8619,8638,8639],[8620,8619,8639],[8620,8639,8640],[8621,8620,8640],[8621,8640,8641],[8622,8621,8641],[8622,8641,8642],[8623,8622,8642],[8623,8642,8643],[8624,8623,8643],[8624,8643,8644],[8625,8624,8644],[8625,8644,93],[94,8625,93],[8626,6355,6354],[8626,6354,8645],[8627,8626,8645],[8627,8645,8646],[8628,8627,8646],[8628,8646,8647],[8629,8628,8647],[8629,8647,8648],[8630,8629,8648],[8630,8648,8649],[8631,8630,8649],[8631,8649,8650],[8632,8631,8650],[8632,8650,8651],[8633,8632,8651],[8633,8651,8652],[8634,8633,8652],[8634,8652,8653],[8635,8634,8653],[8635,8653,8654],[8636,8635,8654],[8636,8654,8655],[8637,8636,8655],[8637,8655,8656],[8638,8637,8656],[8638,8656,8657],[8639,8638,8657],[8639,8657,8658],[8640,8639,8658],[8640,8658,8659],[8641,8640,8659],[8641,8659,8660],[8642,8641,8660],[8642,8660,8661],[8643,8642,8661],[8643,8661,8662],[8644,8643,8662],[8644,8662,92],[93,8644,92],[8645,6354,6353],[8645,6353,8663],[8646,8645,8663],[8646,8663,8664],[8647,8646,8664],[8647,8664,8665],[8648,8647,8665],[8648,8665,8666],[8649,8648,8666],[8649,8666,8667],[8650,8649,8667],[8650,8667,8668],[8651,8650,8668],[8651,8668,8669],[8652,8651,8669],[8652,8669,8670],[8653,8652,8670],[8653,8670,8671],[8654,8653,8671],[8654,8671,8672],[8655,8654,8672],[8655,8672,8673],[8656,8655,8673],[8656,8673,8674],[8657,8656,8674],[8657,8674,8675],[8658,8657,8675],[8658,8675,8676],[8659,8658,8676],[8659,8676,8677],[8660,8659,8677],[8660,8677,8678],[8661,8660,8678],[8661,8678,8679],[8662,8661,8679],[8662,8679,91],[92,8662,91],[8663,6353,6352],[8663,6352,8680],[8664,8663,8680],[8664,8680,8681],[8665,8664,8681],[8665,8681,8682],[8666,8665,8682],[8666,8682,8683],[8667,8666,8683],[8667,8683,8684],[8668,8667,8684],[8668,8684,8685],[8669,8668,8685],[8669,8685,8686],[8670,8669,8686],[8670,8686,8687],[8671,8670,8687],[8671,8687,8688],[8672,8671,8688],[8672,8688,8689],[8673,8672,8689],[8673,8689,8690],[8674,8673,8690],[8674,8690,8691],[8675,8674,8691],[8675,8691,8692],[8676,8675,8692],[8676,8692,8693],[8677,8676,8693],[8677,8693,8694],[8678,8677,8694],[8678,8694,8695],[8679,8678,8695],[8679,8695,90],[91,8679,90],[8680,6352,6351],[8680,6351,8696],[8681,8680,8696],[8681,8696,8697],[8682,8681,8697],[8682,8697,8698],[8683,8682,8698],[8683,8698,8699],[8684,8683,8699],[8684,8699,8700],[8685,8684,8700],[8685,8700,8701],[8686,8685,8701],[8686,8701,8702],[8687,8686,8702],[8687,8702,8703],[8688,8687,8703],[8688,8703,8704],[8689,8688,8704],[8689,8704,8705],[8690,8689,8705],[8690,8705,8706],[8691,8690,8706],[8691,8706,8707],[8692,8691,8707],[8692,8707,8708],[8693,8692,8708],[8693,8708,8709],[8694,8693,8709],[8694,8709,8710],[8695,8694,8710],[8695,8710,89],[90,8695,89],[8696,6351,6350],[8696,6350,8711],[8697,8696,8711],[8697,8711,8712],[8698,8697,8712],[8698,8712,8713],[8699,8698,8713],[8699,8713,8714],[8700,8699,8714],[8700,8714,8715],[8701,8700,8715],[8701,8715,8716],[8702,8701,8716],[8702,8716,8717],[8703,8702,8717],[8703,8717,8718],[8704,8703,8718],[8704,8718,8719],[8705,8704,8719],[8705,8719,8720],[8706,8705,8720],[8706,8720,8721],[8707,8706,8721],[8707,8721,8722],[8708,8707,8722],[8708,8722,8723],[8709,8708,8723],[8709,8723,8724],[8710,8709,8724],[8710,8724,88],[89,8710,88],[8711,6350,6349],[8711,6349,8725],[8712,8711,8725],[8712,8725,8726],[8713,8712,8726],[8713,8726,8727],[8714,8713,8727],[8714,8727,8728],[8715,8714,8728],[8715,8728,8729],[8716,8715,8729],[8716,8729,8730],[8717,8716,8730],[8717,8730,8731],[8718,8717,8731],[8718,8731,8732],[8719,8718,8732],[8719,8732,8733],[8720,8719,8733],[8720,8733,8734],[8721,8720,8734],[8721,8734,8735],[8722,8721,8735],[8722,8735,8736],[8723,8722,8736],[8723,8736,8737],[8724,8723,8737],[8724,8737,87],[88,8724,87],[8725,6349,6348],[8725,6348,8738],[8726,8725,8738],[8726,8738,8739],[8727,8726,8739],[8727,8739,8740],[8728,8727,8740],[8728,8740,8741],[8729,8728,8741],[8729,8741,8742],[8730,8729,8742],[8730,8742,8743],[8731,8730,8743],[8731,8743,8744],[8732,8731,8744],[8732,8744,8745],[8733,8732,8745],[8733,8745,8746],[8734,8733,8746],[8734,8746,8747],[8735,8734,8747],[8735,8747,8748],[8736,8735,8748],[8736,8748,8749],[8737,8736,8749],[8737,8749,86],[87,8737,86],[8738,6348,6347],[8738,6347,8750],[8739,8738,8750],[8739,8750,8751],[8740,8739,8751],[8740,8751,8752],[8741,8740,8752],[8741,8752,8753],[8742,8741,8753],[8742,8753,8754],[8743,8742,8754],[8743,8754,8755],[8744,8743,8755],[8744,8755,8756],[8745,8744,8756],[8745,8756,8757],[8746,8745,8757],[8746,8757,8758],[8747,8746,8758],[8747,8758,8759],[8748,8747,8759],[8748,8759,8760],[8749,8748,8760],[8749,8760,85],[86,8749,85],[8750,6347,6346],[8750,6346,8761],[8751,8750,8761],[8751,8761,8762],[8752,8751,8762],[8752,8762,8763],[8753,8752,8763],[8753,8763,8764],[8754,8753,8764],[8754,8764,8765],[8755,8754,8765],[8755,8765,8766],[8756,8755,8766],[8756,8766,8767],[8757,8756,8767],[8757,8767,8768],[8758,8757,8768],[8758,8768,8769],[8759,8758,8769],[8759,8769,8770],[8760,8759,8770],[8760,8770,84],[85,8760,84],[8761,6346,6345],[8761,6345,8771],[8762,8761,8771],[8762,8771,8772],[8763,8762,8772],[8763,8772,8773],[8764,8763,8773],[8764,8773,8774],[8765,8764,8774],[8765,8774,8775],[8766,8765,8775],[8766,8775,8776],[8767,8766,8776],[8767,8776,8777],[8768,8767,8777],[8768,8777,8778],[8769,8768,8778],[8769,8778,8779],[8770,8769,8779],[8770,8779,83],[84,8770,83],[8771,6345,6344],[8771,6344,8780],[8772,8771,8780],[8772,8780,8781],[8773,8772,8781],[8773,8781,8782],[8774,8773,8782],[8774,8782,8783],[8775,8774,8783],[8775,8783,8784],[8776,8775,8784],[8776,8784,8785],[8777,8776,8785],[8777,8785,8786],[8778,8777,8786],[8778,8786,8787],[8779,8778,8787],[8779,8787,82],[83,8779,82],[8780,6344,6343],[8780,6343,8788],[8781,8780,8788],[8781,8788,8789],[8782,8781,8789],[8782,8789,8790],[8783,8782,8790],[8783,8790,8791],[8784,8783,8791],[8784,8791,8792],[8785,8784,8792],[8785,8792,8793],[8786,8785,8793],[8786,8793,8794],[8787,8786,8794],[8787,8794,81],[82,8787,81],[8788,6343,6342],[8788,6342,8795],[8789,8788,8795],[8789,8795,8796],[8790,8789,8796],[8790,8796,8797],[8791,8790,8797],[8791,8797,8798],[8792,8791,8798],[8792,8798,8799],[8793,8792,8799],[8793,8799,8800],[8794,8793,8800],[8794,8800,80],[81,8794,80],[8795,6342,6341],[8795,6341,8801],[8796,8795,8801],[8796,8801,8802],[8797,8796,8802],[8797,8802,8803],[8798,8797,8803],[8798,8803,8804],[8799,8798,8804],[8799,8804,8805],[8800,8799,8805],[8800,8805,79],[80,8800,79],[8801,6341,6340],[8801,6340,8806],[8802,8801,8806],[8802,8806,8807],[8803,8802,8807],[8803,8807,8808],[8804,8803,8808],[8804,8808,8809],[8805,8804,8809],[8805,8809,78],[79,8805,78],[8806,6340,6339],[8806,6339,8810],[8807,8806,8810],[8807,8810,8811],[8808,8807,8811],[8808,8811,8812],[8809,8808,8812],[8809,8812,77],[78,8809,77],[8810,6339,6338],[8810,6338,8813],[8811,8810,8813],[8811,8813,8814],[8812,8811,8814],[8812,8814,76],[77,8812,76],[8813,6338,6337],[8813,6337,8815],[8814,8813,8815],[8814,8815,75],[76,8814,75],[8815,6337,6336],[8815,6336,74],[75,8815,74],[74,6336,7],[6305,6,8846],[6305,8846,8847],[6306,6305,8847],[6306,8847,8848],[6307,6306,8848],[6307,8848,8849],[6308,6307,8849],[6308,8849,8850],[6309,6308,8850],[6309,8850,8851],[6310,6309,8851],[6310,8851,8852],[6311,6310,8852],[6311,8852,8853],[6312,6311,8853],[6312,8853,8854],[6313,6312,8854],[6313,8854,8855],[6314,6313,8855],[6314,8855,8856],[6315,6314,8856],[6315,8856,8857],[6316,6315,8857],[6316,8857,8858],[6317,6316,8858],[6317,8858,8859],[6318,6317,8859],[6318,8859,8860],[6319,6318,8860],[6319,8860,8861],[6320,6319,8861],[6320,8861,8862],[6321,6320,8862],[6321,8862,8863],[6322,6321,8863],[6322,8863,8864],[6323,6322,8864],[6323,8864,8865],[6324,6323,8865],[6324,8865,8866],[6325,6324,8866],[6325,8866,8867],[6326,6325,8867],[6326,8867,8868],[6327,6326,8868],[6327,8868,8869],[6328,6327,8869],[6328,8869,8870],[6329,6328,8870],[6329,8870,8871],[6330,6329,8871],[6330,8871,8872],[6331,6330,8872],[6331,8872,8873],[6332,6331,8873],[6332,8873,8874],[6333,6332,8874],[6333,8874,8875],[6334,6333,8875],[6334,8875,8876],[6335,6334,8876],[6335,8876,631],[7,6335,631],[8847,8846,8845],[8847,8845,8877],[8848,8847,8877],[8848,8877,8878],[8849,8848,8878],[8849,8878,8879],[8850,8849,8879],[8850,8879,8880],[8851,8850,8880],[8851,8880,8881],[8852,8851,8881],[8852,8881,8882],[8853,8852,8882],[8853,8882,8883],[8854,8853,8883],[8854,8883,8884],[8855,8854,8884],[8855,8884,8885],[8856,8855,8885],[8856,8885,8886],[8857,8856,8886],[8857,8886,8887],[8858,8857,8887],[8858,8887,8888],[8859,8858,8888],[8859,8888,8889],[8860,8859,8889],[8860,8889,8890],[8861,8860,8890],[8861,8890,8891],[8862,8861,8891],[8862,8891,8892],[8863,8862,8892],[8863,8892,8893],[8864,8863,8893],[8864,8893,8894],[8865,8864,8894],[8865,8894,8895],[8866,8865,8895],[8866,8895,8896],[8867,8866,8896],[8867,8896,8897],[8868,8867,8897],[8868,8897,8898],[8869,8868,8898],[8869,8898,8899],[8870,8869,8899],[8870,8899,8900],[8871,8870,8900],[8871,8900,8901],[8872,8871,8901],[8872,8901,8902],[8873,8872,8902],[8873,8902,8903],[8874,8873,8903],[8874,8903,8904],[8875,8874,8904],[8875,8904,8905],[8876,8875,8905],[8876,8905,630],[631,8876,630],[8877,8845,8844],[8877,8844,8906],[8878,8877,8906],[8878,8906,8907],[8879,8878,8907],[8879,8907,8908],[8880,8879,8908],[8880,8908,8909],[8881,8880,8909],[8881,8909,8910],[8882,8881,8910],[8882,8910,8911],[8883,8882,8911],[8883,8911,8912],[8884,8883,8912],[8884,8912,8913],[8885,8884,8913],[8885,8913,8914],[8886,8885,8914],[8886,8914,8915],[8887,8886,8915],[8887,8915,8916],[8888,8887,8916],[8888,8916,8917],[8889,8888,8917],[8889,8917,8918],[8890,8889,8918],[8890,8918,8919],[8891,8890,8919],[8891,8919,8920],[8892,8891,8920],[8892,8920,8921],[8893,8892,8921],[8893,8921,8922],[8894,8893,8922],[8894,8922,8923],[8895,8894,8923],[8895,8923,8924],[8896,8895,8924],[8896,8924,8925],[8897,8896,8925],[8897,8925,8926],[8898,8897,8926],[8898,8926,8927],[8899,8898,8927],[8899,8927,8928],[8900,8899,8928],[8900,8928,8929],[8901,8900,8929],[8901,8929,8930],[8902,8901,8930],[8902,8930,8931],[8903,8902,8931],[8903,8931,8932],[8904,8903,8932],[8904,8932,8933],[8905,8904,8933],[8905,8933,629],[630,8905,629],[8906,8844,8843],[8906,8843,8934],[8907,8906,8934],[8907,8934,8935],[8908,8907,8935],[8908,8935,8936],[8909,8908,8936],[8909,8936,8937],[8910,8909,8937],[8910,8937,8938],[8911,8910,8938],[8911,8938,8939],[8912,8911,8939],[8912,8939,8940],[8913,8912,8940],[8913,8940,8941],[8914,8913,8941],[8914,8941,8942],[8915,8914,8942],[8915,8942,8943],[8916,8915,8943],[8916,8943,8944],[8917,8916,8944],[8917,8944,8945],[8918,8917,8945],[8918,8945,8946],[8919,8918,8946],[8919,8946,8947],[8920,8919,8947],[8920,8947,8948],[8921,8920,8948],[8921,8948,8949],[8922,8921,8949],[8922,8949,8950],[8923,8922,8950],[8923,8950,8951],[8924,8923,8951],[8924,8951,8952],[8925,8924,8952],[8925,8952,8953],[8926,8925,8953],[8926,8953,8954],[8927,8926,8954],[8927,8954,8955],[8928,8927,8955],[8928,8955,8956],[8929,8928,8956],[8929,8956,8957],[8930,8929,8957],[8930,8957,8958],[8931,8930,8958],[8931,8958,8959],[8932,8931,8959],[8932,8959,8960],[8933,8932,8960],[8933,8960,628],[629,8933,628],[8934,8843,8842],[8934,8842,8961],[8935,8934,8961],[8935,8961,8962],[8936,8935,8962],[8936,8962,8963],[8937,8936,8963],[8937,8963,8964],[8938,8937,8964],[8938,8964,8965],[8939,8938,8965],[8939,8965,8966],[8940,8939,8966],[8940,8966,8967],[8941,8940,8967],[8941,8967,8968],[8942,8941,8968],[8942,8968,8969],[8943,8942,8969],[8943,8969,8970],[8944,8943,8970],[8944,8970,8971],[8945,8944,8971],[8945,8971,8972],[8946,8945,8972],[8946,8972,8973],[8947,8946,8973],[8947,8973,8974],[8948,8947,8974],[8948,8974,8975],[8949,8948,8975],[8949,8975,8976],[8950,8949,8976],[8950,8976,8977],[8951,8950,8977],[8951,8977,8978],[8952,8951,8978],[8952,8978,8979],[8953,8952,8979],[8953,8979,8980],[8954,8953,8980],[8954,8980,8981],[8955,8954,8981],[8955,8981,8982],[8956,8955,8982],[8956,8982,8983],[8957,8956,8983],[8957,8983,8984],[8958,8957,8984],[8958,8984,8985],[8959,8958,8985],[8959,8985,8986],[8960,8959,8986],[8960,8986,627],[628,8960,627],[8961,8842,8841],[8961,8841,8987],[8962,8961,8987],[8962,8987,8988],[8963,8962,8988],[8963,8988,8989],[8964,8963,8989],[8964,8989,8990],[8965,8964,8990],[8965,8990,8991],[8966,8965,8991],[8966,8991,8992],[8967,8966,8992],[8967,8992,8993],[8968,8967,8993],[8968,8993,8994],[8969,8968,8994],[8969,8994,8995],[8970,8969,8995],[8970,8995,8996],[8971,8970,8996],[8971,8996,8997],[8972,8971,8997],[8972,8997,8998],[8973,8972,8998],[8973,8998,8999],[8974,8973,8999],[8974,8999,9000],[8975,8974,9000],[8975,9000,9001],[8976,8975,9001],[8976,9001,9002],[8977,8976,9002],[8977,9002,9003],[8978,8977,9003],[8978,9003,9004],[8979,8978,9004],[8979,9004,9005],[8980,8979,9005],[8980,9005,9006],[8981,8980,9006],[8981,9006,9007],[8982,8981,9007],[8982,9007,9008],[8983,8982,9008],[8983,9008,9009],[8984,8983,9009],[8984,9009,9010],[8985,8984,9010],[8985,9010,9011],[8986,8985,9011],[8986,9011,626],[627,8986,626],[8987,8841,8840],[8987,8840,9012],[8988,8987,9012],[8988,9012,9013],[8989,8988,9013],[8989,9013,9014],[8990,8989,9014],[8990,9014,9015],[8991,8990,9015],[8991,9015,9016],[8992,8991,9016],[8992,9016,9017],[8993,8992,9017],[8993,9017,9018],[8994,8993,9018],[8994,9018,9019],[8995,8994,9019],[8995,9019,9020],[8996,8995,9020],[8996,9020,9021],[8997,8996,9021],[8997,9021,9022],[8998,8997,9022],[8998,9022,9023],[8999,8998,9023],[8999,9023,9024],[9000,8999,9024],[9000,9024,9025],[9001,9000,9025],[9001,9025,9026],[9002,9001,9026],[9002,9026,9027],[9003,9002,9027],[9003,9027,9028],[9004,9003,9028],[9004,9028,9029],[9005,9004,9029],[9005,9029,9030],[9006,9005,9030],[9006,9030,9031],[9007,9006,9031],[9007,9031,9032],[9008,9007,9032],[9008,9032,9033],[9009,9008,9033],[9009,9033,9034],[9010,9009,9034],[9010,9034,9035],[9011,9010,9035],[9011,9035,625],[626,9011,625],[9012,8840,8839],[9012,8839,9036],[9013,9012,9036],[9013,9036,9037],[9014,9013,9037],[9014,9037,9038],[9015,9014,9038],[9015,9038,9039],[9016,9015,9039],[9016,9039,9040],[9017,9016,9040],[9017,9040,9041],[9018,9017,9041],[9018,9041,9042],[9019,9018,9042],[9019,9042,9043],[9020,9019,9043],[9020,9043,9044],[9021,9020,9044],[9021,9044,9045],[9022,9021,9045],[9022,9045,9046],[9023,9022,9046],[9023,9046,9047],[9024,9023,9047],[9024,9047,9048],[9025,9024,9048],[9025,9048,9049],[9026,9025,9049],[9026,9049,9050],[9027,9026,9050],[9027,9050,9051],[9028,9027,9051],[9028,9051,9052],[9029,9028,9052],[9029,9052,9053],[9030,9029,9053],[9030,9053,9054],[9031,9030,9054],[9031,9054,9055],[9032,9031,9055],[9032,9055,9056],[9033,9032,9056],[9033,9056,9057],[9034,9033,9057],[9034,9057,9058],[9035,9034,9058],[9035,9058,624],[625,9035,624],[9036,8839,8838],[9036,8838,9059],[9037,9036,9059],[9037,9059,9060],[9038,9037,9060],[9038,9060,9061],[9039,9038,9061],[9039,9061,9062],[9040,9039,9062],[9040,9062,9063],[9041,9040,9063],[9041,9063,9064],[9042,9041,9064],[9042,9064,9065],[9043,9042,9065],[9043,9065,9066],[9044,9043,9066],[9044,9066,9067],[9045,9044,9067],[9045,9067,9068],[9046,9045,9068],[9046,9068,9069],[9047,9046,9069],[9047,9069,9070],[9048,9047,9070],[9048,9070,9071],[9049,9048,9071],[9049,9071,9072],[9050,9049,9072],[9050,9072,9073],[9051,9050,9073],[9051,9073,9074],[9052,9051,9074],[9052,9074,9075],[9053,9052,9075],[9053,9075,9076],[9054,9053,9076],[9054,9076,9077],[9055,9054,9077],[9055,9077,9078],[9056,9055,9078],[9056,9078,9079],[9057,9056,9079],[9057,9079,9080],[9058,9057,9080],[9058,9080,623],[624,9058,623],[9059,8838,8837],[9059,8837,9081],[9060,9059,9081],[9060,9081,9082],[9061,9060,9082],[9061,9082,9083],[9062,9061,9083],[9062,9083,9084],[9063,9062,9084],[9063,9084,9085],[9064,9063,9085],[9064,9085,9086],[9065,9064,9086],[9065,9086,9087],[9066,9065,9087],[9066,9087,9088],[9067,9066,9088],[9067,9088,9089],[9068,9067,9089],[9068,9089,9090],[9069,9068,9090],[9069,9090,9091],[9070,9069,9091],[9070,9091,9092],[9071,9070,9092],[9071,9092,9093],[9072,9071,9093],[9072,9093,9094],[9073,9072,9094],[9073,9094,9095],[9074,9073,9095],[9074,9095,9096],[9075,9074,9096],[9075,9096,9097],[9076,9075,9097],[9076,9097,9098],[9077,9076,9098],[9077,9098,9099],[9078,9077,9099],[9078,9099,9100],[9079,9078,9100],[9079,9100,9101],[9080,9079,9101],[9080,9101,622],[623,9080,622],[9081,8837,8836],[9081,8836,9102],[9082,9081,9102],[9082,9102,9103],[9083,9082,9103],[9083,9103,9104],[9084,9083,9104],[9084,9104,9105],[9085,9084,9105],[9085,9105,9106],[9086,9085,9106],[9086,9106,9107],[9087,9086,9107],[9087,9107,9108],[9088,9087,9108],[9088,9108,9109],[9089,9088,9109],[9089,9109,9110],[9090,9089,9110],[9090,9110,9111],[9091,9090,9111],[9091,9111,9112],[9092,9091,9112],[9092,9112,9113],[9093,9092,9113],[9093,9113,9114],[9094,9093,9114],[9094,9114,9115],[9095,9094,9115],[9095,9115,9116],[9096,9095,9116],[9096,9116,9117],[9097,9096,9117],[9097,9117,9118],[9098,9097,9118],[9098,9118,9119],[9099,9098,9119],[9099,9119,9120],[9100,9099,9120],[9100,9120,9121],[9101,9100,9121],[9101,9121,621],[622,9101,621],[9102,8836,8835],[9102,8835,9122],[9103,9102,9122],[9103,9122,9123],[9104,9103,9123],[9104,9123,9124],[9105,9104,9124],[9105,9124,9125],[9106,9105,9125],[9106,9125,9126],[9107,9106,9126],[9107,9126,9127],[9108,9107,9127],[9108,9127,9128],[9109,9108,9128],[9109,9128,9129],[9110,9109,9129],[9110,9129,9130],[9111,9110,9130],[9111,9130,9131],[9112,9111,9131],[9112,9131,9132],[9113,9112,9132],[9113,9132,9133],[9114,9113,9133],[9114,9133,9134],[9115,9114,9134],[9115,9134,9135],[9116,9115,9135],[9116,9135,9136],[9117,9116,9136],[9117,9136,9137],[9118,9117,9137],[9118,9137,9138],[9119,9118,9138],[9119,9138,9139],[9120,9119,9139],[9120,9139,9140],[9121,9120,9140],[9121,9140,620],[621,9121,620],[9122,8835,8834],[9122,8834,9141],[9123,9122,9141],[9123,9141,9142],[9124,9123,9142],[9124,9142,9143],[9125,9124,9143],[9125,9143,9144],[9126,9125,9144],[9126,9144,9145],[9127,9126,9145],[9127,9145,9146],[9128,9127,9146],[9128,9146,9147],[9129,9128,9147],[9129,9147,9148],[9130,9129,9148],[9130,9148,9149],[9131,9130,9149],[9131,9149,9150],[9132,9131,9150],[9132,9150,9151],[9133,9132,9151],[9133,9151,9152],[9134,9133,9152],[9134,9152,9153],[9135,9134,9153],[9135,9153,9154],[9136,9135,9154],[9136,9154,9155],[9137,9136,9155],[9137,9155,9156],[9138,9137,9156],[9138,9156,9157],[9139,9138,9157],[9139,9157,9158],[9140,9139,9158],[9140,9158,619],[620,9140,619],[9141,8834,8833],[9141,8833,9159],[9142,9141,9159],[9142,9159,9160],[9143,9142,9160],[9143,9160,9161],[9144,9143,9161],[9144,9161,9162],[9145,9144,9162],[9145,9162,9163],[9146,9145,9163],[9146,9163,9164],[9147,9146,9164],[9147,9164,9165],[9148,9147,9165],[9148,9165,9166],[9149,9148,9166],[9149,9166,9167],[9150,9149,9167],[9150,9167,9168],[9151,9150,9168],[9151,9168,9169],[9152,9151,9169],[9152,9169,9170],[9153,9152,9170],[9153,9170,9171],[9154,9153,9171],[9154,9171,9172],[9155,9154,9172],[9155,9172,9173],[9156,9155,9173],[9156,9173,9174],[9157,9156,9174],[9157,9174,9175],[9158,9157,9175],[9158,9175,618],[619,9158,618],[9159,8833,8832],[9159,8832,9176],[9160,9159,9176],[9160,9176,9177],[9161,9160,9177],[9161,9177,9178],[9162,9161,9178],[9162,9178,9179],[9163,9162,9179],[9163,9179,9180],[9164,9163,9180],[9164,9180,9181],[9165,9164,9181],[9165,9181,9182],[9166,9165,9182],[9166,9182,9183],[9167,9166,9183],[9167,9183,9184],[9168,9167,9184],[9168,9184,9185],[9169,9168,9185],[9169,9185,9186],[9170,9169,9186],[9170,9186,9187],[9171,9170,9187],[9171,9187,9188],[9172,9171,9188],[9172,9188,9189],[9173,9172,9189],[9173,9189,9190],[9174,9173,9190],[9174,9190,9191],[9175,9174,9191],[9175,9191,617],[618,9175,617],[9176,8832,8831],[9176,8831,9192],[9177,9176,9192],[9177,9192,9193],[9178,9177,9193],[9178,9193,9194],[9179,9178,9194],[9179,9194,9195],[9180,9179,9195],[9180,9195,9196],[9181,9180,9196],[9181,9196,9197],[9182,9181,9197],[9182,9197,9198],[9183,9182,9198],[9183,9198,9199],[9184,9183,9199],[9184,9199,9200],[9185,9184,9200],[9185,9200,9201],[9186,9185,9201],[9186,9201,9202],[9187,9186,9202],[9187,9202,9203],[9188,9187,9203],[9188,9203,9204],[9189,9188,9204],[9189,9204,9205],[9190,9189,9205],[9190,9205,9206],[9191,9190,9206],[9191,9206,616],[617,9191,616],[9192,8831,8830],[9192,8830,9207],[9193,9192,9207],[9193,9207,9208],[9194,9193,9208],[9194,9208,9209],[9195,9194,9209],[9195,9209,9210],[9196,9195,9210],[9196,9210,9211],[9197,9196,9211],[9197,9211,9212],[9198,9197,9212],[9198,9212,9213],[9199,9198,9213],[9199,9213,9214],[9200,9199,9214],[9200,9214,9215],[9201,9200,9215],[9201,9215,9216],[9202,9201,9216],[9202,9216,9217],[9203,9202,9217],[9203,9217,9218],[9204,9203,9218],[9204,9218,9219],[9205,9204,9219],[9205,9219,9220],[9206,9205,9220],[9206,9220,615],[616,9206,615],[9207,8830,8829],[9207,8829,9221],[9208,9207,9221],[9208,9221,9222],[9209,9208,9222],[9209,9222,9223],[9210,9209,9223],[9210,9223,9224],[9211,9210,9224],[9211,9224,9225],[9212,9211,9225],[9212,9225,9226],[9213,9212,9226],[9213,9226,9227],[9214,9213,9227],[9214,9227,9228],[9215,9214,9228],[9215,9228,9229],[9216,9215,9229],[9216,9229,9230],[9217,9216,9230],[9217,9230,9231],[9218,9217,9231],[9218,9231,9232],[9219,9218,9232],[9219,9232,9233],[9220,9219,9233],[9220,9233,614],[615,9220,614],[9221,8829,8828],[9221,8828,9234],[9222,9221,9234],[9222,9234,9235],[9223,9222,9235],[9223,9235,9236],[9224,9223,9236],[9224,9236,9237],[9225,9224,9237],[9225,9237,9238],[9226,9225,9238],[9226,9238,9239],[9227,9226,9239],[9227,9239,9240],[9228,9227,9240],[9228,9240,9241],[9229,9228,9241],[9229,9241,9242],[9230,9229,9242],[9230,9242,9243],[9231,9230,9243],[9231,9243,9244],[9232,9231,9244],[9232,9244,9245],[9233,9232,9245],[9233,9245,613],[614,9233,613],[9234,8828,8827],[9234,8827,9246],[9235,9234,9246],[9235,9246,9247],[9236,9235,9247],[9236,9247,9248],[9237,9236,9248],[9237,9248,9249],[9238,9237,9249],[9238,9249,9250],[9239,9238,9250],[9239,9250,9251],[9240,9239,9251],[9240,9251,9252],[9241,9240,9252],[9241,9252,9253],[9242,9241,9253],[9242,9253,9254],[9243,9242,9254],[9243,9254,9255],[9244,9243,9255],[9244,9255,9256],[9245,9244,9256],[9245,9256,612],[613,9245,612],[9246,8827,8826],[9246,8826,9257],[9247,9246,9257],[9247,9257,9258],[9248,9247,9258],[9248,9258,9259],[9249,9248,9259],[9249,9259,9260],[9250,9249,9260],[9250,9260,9261],[9251,9250,9261],[9251,9261,9262],[9252,9251,9262],[9252,9262,9263],[9253,9252,9263],[9253,9263,9264],[9254,9253,9264],[9254,9264,9265],[9255,9254,9265],[9255,9265,9266],[9256,9255,9266],[9256,9266,611],[612,9256,611],[9257,8826,8825],[9257,8825,9267],[9258,9257,9267],[9258,9267,9268],[9259,9258,9268],[9259,9268,9269],[9260,9259,9269],[9260,9269,9270],[9261,9260,9270],[9261,9270,9271],[9262,9261,9271],[9262,9271,9272],[9263,9262,9272],[9263,9272,9273],[9264,9263,9273],[9264,9273,9274],[9265,9264,9274],[9265,9274,9275],[9266,9265,9275],[9266,9275,610],[611,9266,610],[9267,8825,8824],[9267,8824,9276],[9268,9267,9276],[9268,9276,9277],[9269,9268,9277],[9269,9277,9278],[9270,9269,9278],[9270,9278,9279],[9271,9270,9279],[9271,9279,9280],[9272,9271,9280],[9272,9280,9281],[9273,9272,9281],[9273,9281,9282],[9274,9273,9282],[9274,9282,9283],[9275,9274,9283],[9275,9283,609],[610,9275,609],[9276,8824,8823],[9276,8823,9284],[9277,9276,9284],[9277,9284,9285],[9278,9277,9285],[9278,9285,9286],[9279,9278,9286],[9279,9286,9287],[9280,9279,9287],[9280,9287,9288],[9281,9280,9288],[9281,9288,9289],[9282,9281,9289],[9282,9289,9290],[9283,9282,9290],[9283,9290,608],[609,9283,608],[9284,8823,8822],[9284,8822,9291],[9285,9284,9291],[9285,9291,9292],[9286,9285,9292],[9286,9292,9293],[9287,9286,9293],[9287,9293,9294],[9288,9287,9294],[9288,9294,9295],[9289,9288,9295],[9289,9295,9296],[9290,9289,9296],[9290,9296,607],[608,9290,607],[9291,8822,8821],[9291,8821,9297],[9292,9291,9297],[9292,9297,9298],[9293,9292,9298],[9293,9298,9299],[9294,9293,9299],[9294,9299,9300],[9295,9294,9300],[9295,9300,9301],[9296,9295,9301],[9296,9301,606],[607,9296,606],[9297,8821,8820],[9297,8820,9302],[9298,9297,9302],[9298,9302,9303],[9299,9298,9303],[9299,9303,9304],[9300,9299,9304],[9300,9304,9305],[9301,9300,9305],[9301,9305,605],[606,9301,605],[9302,8820,8819],[9302,8819,9306],[9303,9302,9306],[9303,9306,9307],[9304,9303,9307],[9304,9307,9308],[9305,9304,9308],[9305,9308,604],[605,9305,604],[9306,8819,8818],[9306,8818,9309],[9307,9306,9309],[9307,9309,9310],[9308,9307,9310],[9308,9310,603],[604,9308,603],[9309,8818,8817],[9309,8817,9311],[9310,9309,9311],[9310,9311,602],[603,9310,602],[9311,8817,8816],[9311,8816,601],[602,9311,601],[601,8816,3],[8846,6,5839],[8846,5839,9312],[8845,8846,9312],[8845,9312,9313],[8844,8845,9313],[8844,9313,9314],[8843,8844,9314],[8843,9314,9315],[8842,8843,9315],[8842,9315,9316],[8841,8842,9316],[8841,9316,9317],[8840,8841,9317],[8840,9317,9318],[8839,8840,9318],[8839,9318,9319],[8838,8839,9319],[8838,9319,9320],[8837,8838,9320],[8837,9320,9321],[8836,8837,9321],[8836,9321,9322],[8835,8836,9322],[8835,9322,9323],[8834,8835,9323],[8834,9323,9324],[8833,8834,9324],[8833,9324,9325],[8832,8833,9325],[8832,9325,9326],[8831,8832,9326],[8831,9326,9327],[8830,8831,9327],[8830,9327,9328],[8829,8830,9328],[8829,9328,9329],[8828,8829,9329],[8828,9329,9330],[8827,8828,9330],[8827,9330,9331],[8826,8827,9331],[8826,9331,9332],[8825,8826,9332],[8825,9332,9333],[8824,8825,9333],[8824,9333,9334],[8823,8824,9334],[8823,9334,9335],[8822,8823,9335],[8822,9335,9336],[8821,8822,9336],[8821,9336,9337],[8820,8821,9337],[8820,9337,9338],[8819,8820,9338],[8819,9338,9339],[8818,8819,9339],[8818,9339,9340],[8817,8818,9340],[8817,9340,9341],[8816,8817,9341],[8816,9341,1685],[3,8816,1685],[9312,5839,5838],[9312,5838,9342],[9313,9312,9342],[9313,9342,9343],[9314,9313,9343],[9314,9343,9344],[9315,9314,9344],[9315,9344,9345],[9316,9315,9345],[9316,9345,9346],[9317,9316,9346],[9317,9346,9347],[9318,9317,9347],[9318,9347,9348],[9319,9318,9348],[9319,9348,9349],[9320,9319,9349],[9320,9349,9350],[9321,9320,9350],[9321,9350,9351],[9322,9321,9351],[9322,9351,9352],[9323,9322,9352],[9323,9352,9353],[9324,9323,9353],[9324,9353,9354],[9325,9324,9354],[9325,9354,9355],[9326,9325,9355],[9326,9355,9356],[9327,9326,9356],[9327,9356,9357],[9328,9327,9357],[9328,9357,9358],[9329,9328,9358],[9329,9358,9359],[9330,9329,9359],[9330,9359,9360],[9331,9330,9360],[9331,9360,9361],[9332,9331,9361],[9332,9361,9362],[9333,9332,9362],[9333,9362,9363],[9334,9333,9363],[9334,9363,9364],[9335,9334,9364],[9335,9364,9365],[9336,9335,9365],[9336,9365,9366],[9337,9336,9366],[9337,9366,9367],[9338,9337,9367],[9338,9367,9368],[9339,9338,9368],[9339,9368,9369],[9340,9339,9369],[9340,9369,9370],[9341,9340,9370],[9341,9370,1684],[1685,9341,1684],[9342,5838,5837],[9342,5837,9371],[9343,9342,9371],[9343,9371,9372],[9344,9343,9372],[9344,9372,9373],[9345,9344,9373],[9345,9373,9374],[9346,9345,9374],[9346,9374,9375],[9347,9346,9375],[9347,9375,9376],[9348,9347,9376],[9348,9376,9377],[9349,9348,9377],[9349,9377,9378],[9350,9349,9378],[9350,9378,9379],[9351,9350,9379],[9351,9379,9380],[9352,9351,9380],[9352,9380,9381],[9353,9352,9381],[9353,9381,9382],[9354,9353,9382],[9354,9382,9383],[9355,9354,9383],[9355,9383,9384],[9356,9355,9384],[9356,9384,9385],[9357,9356,9385],[9357,9385,9386],[9358,9357,9386],[9358,9386,9387],[9359,9358,9387],[9359,9387,9388],[9360,9359,9388],[9360,9388,9389],[9361,9360,9389],[9361,9389,9390],[9362,9361,9390],[9362,9390,9391],[9363,9362,9391],[9363,9391,9392],[9364,9363,9392],[9364,9392,9393],[9365,9364,9393],[9365,9393,9394],[9366,9365,9394],[9366,9394,9395],[9367,9366,9395],[9367,9395,9396],[9368,9367,9396],[9368,9396,9397],[9369,9368,9397],[9369,9397,9398],[9370,9369,9398],[9370,9398,1683],[1684,9370,1683],[9371,5837,5836],[9371,5836,9399],[9372,9371,9399],[9372,9399,9400],[9373,9372,9400],[9373,9400,9401],[9374,9373,9401],[9374,9401,9402],[9375,9374,9402],[9375,9402,9403],[9376,9375,9403],[9376,9403,9404],[9377,9376,9404],[9377,9404,9405],[9378,9377,9405],[9378,9405,9406],[9379,9378,9406],[9379,9406,9407],[9380,9379,9407],[9380,9407,9408],[9381,9380,9408],[9381,9408,9409],[9382,9381,9409],[9382,9409,9410],[9383,9382,9410],[9383,9410,9411],[9384,9383,9411],[9384,9411,9412],[9385,9384,9412],[9385,9412,9413],[9386,9385,9413],[9386,9413,9414],[9387,9386,9414],[9387,9414,9415],[9388,9387,9415],[9388,9415,9416],[9389,9388,9416],[9389,9416,9417],[9390,9389,9417],[9390,9417,9418],[9391,9390,9418],[9391,9418,9419],[9392,9391,9419],[9392,9419,9420],[9393,9392,9420],[9393,9420,9421],[9394,9393,9421],[9394,9421,9422],[9395,9394,9422],[9395,9422,9423],[9396,9395,9423],[9396,9423,9424],[9397,9396,9424],[9397,9424,9425],[9398,9397,9425],[9398,9425,1682],[1683,9398,1682],[9399,5836,5835],[9399,5835,9426],[9400,9399,9426],[9400,9426,9427],[9401,9400,9427],[9401,9427,9428],[9402,9401,9428],[9402,9428,9429],[9403,9402,9429],[9403,9429,9430],[9404,9403,9430],[9404,9430,9431],[9405,9404,9431],[9405,9431,9432],[9406,9405,9432],[9406,9432,9433],[9407,9406,9433],[9407,9433,9434],[9408,9407,9434],[9408,9434,9435],[9409,9408,9435],[9409,9435,9436],[9410,9409,9436],[9410,9436,9437],[9411,9410,9437],[9411,9437,9438],[9412,9411,9438],[9412,9438,9439],[9413,9412,9439],[9413,9439,9440],[9414,9413,9440],[9414,9440,9441],[9415,9414,9441],[9415,9441,9442],[9416,9415,9442],[9416,9442,9443],[9417,9416,9443],[9417,9443,9444],[9418,9417,9444],[9418,9444,9445],[9419,9418,9445],[9419,9445,9446],[9420,9419,9446],[9420,9446,9447],[9421,9420,9447],[9421,9447,9448],[9422,9421,9448],[9422,9448,9449],[9423,9422,9449],[9423,9449,9450],[9424,9423,9450],[9424,9450,9451],[9425,9424,9451],[9425,9451,1681],[1682,9425,1681],[9426,5835,5834],[9426,5834,9452],[9427,9426,9452],[9427,9452,9453],[9428,9427,9453],[9428,9453,9454],[9429,9428,9454],[9429,9454,9455],[9430,9429,9455],[9430,9455,9456],[9431,9430,9456],[9431,9456,9457],[9432,9431,9457],[9432,9457,9458],[9433,9432,9458],[9433,9458,9459],[9434,9433,9459],[9434,9459,9460],[9435,9434,9460],[9435,9460,9461],[9436,9435,9461],[9436,9461,9462],[9437,9436,9462],[9437,9462,9463],[9438,9437,9463],[9438,9463,9464],[9439,9438,9464],[9439,9464,9465],[9440,9439,9465],[9440,9465,9466],[9441,9440,9466],[9441,9466,9467],[9442,9441,9467],[9442,9467,9468],[9443,9442,9468],[9443,9468,9469],[9444,9443,9469],[9444,9469,9470],[9445,9444,9470],[9445,9470,9471],[9446,9445,9471],[9446,9471,9472],[9447,9446,9472],[9447,9472,9473],[9448,9447,9473],[9448,9473,9474],[9449,9448,9474],[9449,9474,9475],[9450,9449,9475],[9450,9475,9476],[9451,9450,9476],[9451,9476,1680],[1681,9451,1680],[9452,5834,5833],[9452,5833,9477],[9453,9452,9477],[9453,9477,9478],[9454,9453,9478],[9454,9478,9479],[9455,9454,9479],[9455,9479,9480],[9456,9455,9480],[9456,9480,9481],[9457,9456,9481],[9457,9481,9482],[9458,9457,9482],[9458,9482,9483],[9459,9458,9483],[9459,9483,9484],[9460,9459,9484],[9460,9484,9485],[9461,9460,9485],[9461,9485,9486],[9462,9461,9486],[9462,9486,9487],[9463,9462,9487],[9463,9487,9488],[9464,9463,9488],[9464,9488,9489],[9465,9464,9489],[9465,9489,9490],[9466,9465,9490],[9466,9490,9491],[9467,9466,9491],[9467,9491,9492],[9468,9467,9492],[9468,9492,9493],[9469,9468,9493],[9469,9493,9494],[9470,9469,9494],[9470,9494,9495],[9471,9470,9495],[9471,9495,9496],[9472,9471,9496],[9472,9496,9497],[9473,9472,9497],[9473,9497,9498],[9474,9473,9498],[9474,9498,9499],[9475,9474,9499],[9475,9499,9500],[9476,9475,9500],[9476,9500,1679],[1680,9476,1679],[9477,5833,5832],[9477,5832,9501],[9478,9477,9501],[9478,9501,9502],[9479,9478,9502],[9479,9502,9503],[9480,9479,9503],[9480,9503,9504],[9481,9480,9504],[9481,9504,9505],[9482,9481,9505],[9482,9505,9506],[9483,9482,9506],[9483,9506,9507],[9484,9483,9507],[9484,9507,9508],[9485,9484,9508],[9485,9508,9509],[9486,9485,9509],[9486,9509,9510],[9487,9486,9510],[9487,9510,9511],[9488,9487,9511],[9488,9511,9512],[9489,9488,9512],[9489,9512,9513],[9490,9489,9513],[9490,9513,9514],[9491,9490,9514],[9491,9514,9515],[9492,9491,9515],[9492,9515,9516],[9493,9492,9516],[9493,9516,9517],[9494,9493,9517],[9494,9517,9518],[9495,9494,9518],[9495,9518,9519],[9496,9495,9519],[9496,9519,9520],[9497,9496,9520],[9497,9520,9521],[9498,9497,9521],[9498,9521,9522],[9499,9498,9522],[9499,9522,9523],[9500,9499,9523],[9500,9523,1678],[1679,9500,1678],[9501,5832,5831],[9501,5831,9524],[9502,9501,9524],[9502,9524,9525],[9503,9502,9525],[9503,9525,9526],[9504,9503,9526],[9504,9526,9527],[9505,9504,9527],[9505,9527,9528],[9506,9505,9528],[9506,9528,9529],[9507,9506,9529],[9507,9529,9530],[9508,9507,9530],[9508,9530,9531],[9509,9508,9531],[9509,9531,9532],[9510,9509,9532],[9510,9532,9533],[9511,9510,9533],[9511,9533,9534],[9512,9511,9534],[9512,9534,9535],[9513,9512,9535],[9513,9535,9536],[9514,9513,9536],[9514,9536,9537],[9515,9514,9537],[9515,9537,9538],[9516,9515,9538],[9516,9538,9539],[9517,9516,9539],[9517,9539,9540],[9518,9517,9540],[9518,9540,9541],[9519,9518,9541],[9519,9541,9542],[9520,9519,9542],[9520,9542,9543],[9521,9520,9543],[9521,9543,9544],[9522,9521,9544],[9522,9544,9545],[9523,9522,9545],[9523,9545,1677],[1678,9523,1677],[9524,5831,5830],[9524,5830,9546],[9525,9524,9546],[9525,9546,9547],[9526,9525,9547],[9526,9547,9548],[9527,9526,9548],[9527,9548,9549],[9528,9527,9549],[9528,9549,9550],[9529,9528,9550],[9529,9550,9551],[9530,9529,9551],[9530,9551,9552],[9531,9530,9552],[9531,9552,9553],[9532,9531,9553],[9532,9553,9554],[9533,9532,9554],[9533,9554,9555],[9534,9533,9555],[9534,9555,9556],[9535,9534,9556],[9535,9556,9557],[9536,9535,9557],[9536,9557,9558],[9537,9536,9558],[9537,9558,9559],[9538,9537,9559],[9538,9559,9560],[9539,9538,9560],[9539,9560,9561],[9540,9539,9561],[9540,9561,9562],[9541,9540,9562],[9541,9562,9563],[9542,9541,9563],[9542,9563,9564],[9543,9542,9564],[9543,9564,9565],[9544,9543,9565],[9544,9565,9566],[9545,9544,9566],[9545,9566,1676],[1677,9545,1676],[9546,5830,5829],[9546,5829,9567],[9547,9546,9567],[9547,9567,9568],[9548,9547,9568],[9548,9568,9569],[9549,9548,9569],[9549,9569,9570],[9550,9549,9570],[9550,9570,9571],[9551,9550,9571],[9551,9571,9572],[9552,9551,9572],[9552,9572,9573],[9553,9552,9573],[9553,9573,9574],[9554,9553,9574],[9554,9574,9575],[9555,9554,9575],[9555,9575,9576],[9556,9555,9576],[9556,9576,9577],[9557,9556,9577],[9557,9577,9578],[9558,9557,9578],[9558,9578,9579],[9559,9558,9579],[9559,9579,9580],[9560,9559,9580],[9560,9580,9581],[9561,9560,9581],[9561,9581,9582],[9562,9561,9582],[9562,9582,9583],[9563,9562,9583],[9563,9583,9584],[9564,9563,9584],[9564,9584,9585],[9565,9564,9585],[9565,9585,9586],[9566,9565,9586],[9566,9586,1675],[1676,9566,1675],[9567,5829,5828],[9567,5828,9587],[9568,9567,9587],[9568,9587,9588],[9569,9568,9588],[9569,9588,9589],[9570,9569,9589],[9570,9589,9590],[9571,9570,9590],[9571,9590,9591],[9572,9571,9591],[9572,9591,9592],[9573,9572,9592],[9573,9592,9593],[9574,9573,9593],[9574,9593,9594],[9575,9574,9594],[9575,9594,9595],[9576,9575,9595],[9576,9595,9596],[9577,9576,9596],[9577,9596,9597],[9578,9577,9597],[9578,9597,9598],[9579,9578,9598],[9579,9598,9599],[9580,9579,9599],[9580,9599,9600],[9581,9580,9600],[9581,9600,9601],[9582,9581,9601],[9582,9601,9602],[9583,9582,9602],[9583,9602,9603],[9584,9583,9603],[9584,9603,9604],[9585,9584,9604],[9585,9604,9605],[9586,9585,9605],[9586,9605,1674],[1675,9586,1674],[9587,5828,5827],[9587,5827,9606],[9588,9587,9606],[9588,9606,9607],[9589,9588,9607],[9589,9607,9608],[9590,9589,9608],[9590,9608,9609],[9591,9590,9609],[9591,9609,9610],[9592,9591,9610],[9592,9610,9611],[9593,9592,9611],[9593,9611,9612],[9594,9593,9612],[9594,9612,9613],[9595,9594,9613],[9595,9613,9614],[9596,9595,9614],[9596,9614,9615],[9597,9596,9615],[9597,9615,9616],[9598,9597,9616],[9598,9616,9617],[9599,9598,9617],[9599,9617,9618],[9600,9599,9618],[9600,9618,9619],[9601,9600,9619],[9601,9619,9620],[9602,9601,9620],[9602,9620,9621],[9603,9602,9621],[9603,9621,9622],[9604,9603,9622],[9604,9622,9623],[9605,9604,9623],[9605,9623,1673],[1674,9605,1673],[9606,5827,5826],[9606,5826,9624],[9607,9606,9624],[9607,9624,9625],[9608,9607,9625],[9608,9625,9626],[9609,9608,9626],[9609,9626,9627],[9610,9609,9627],[9610,9627,9628],[9611,9610,9628],[9611,9628,9629],[9612,9611,9629],[9612,9629,9630],[9613,9612,9630],[9613,9630,9631],[9614,9613,9631],[9614,9631,9632],[9615,9614,9632],[9615,9632,9633],[9616,9615,9633],[9616,9633,9634],[9617,9616,9634],[9617,9634,9635],[9618,9617,9635],[9618,9635,9636],[9619,9618,9636],[9619,9636,9637],[9620,9619,9637],[9620,9637,9638],[9621,9620,9638],[9621,9638,9639],[9622,9621,9639],[9622,9639,9640],[9623,9622,9640],[9623,9640,1672],[1673,9623,1672],[9624,5826,5825],[9624,5825,9641],[9625,9624,9641],[9625,9641,9642],[9626,9625,9642],[9626,9642,9643],[9627,9626,9643],[9627,9643,9644],[9628,9627,9644],[9628,9644,9645],[9629,9628,9645],[9629,9645,9646],[9630,9629,9646],[9630,9646,9647],[9631,9630,9647],[9631,9647,9648],[9632,9631,9648],[9632,9648,9649],[9633,9632,9649],[9633,9649,9650],[9634,9633,9650],[9634,9650,9651],[9635,9634,9651],[9635,9651,9652],[9636,9635,9652],[9636,9652,9653],[9637,9636,9653],[9637,9653,9654],[9638,9637,9654],[9638,9654,9655],[9639,9638,9655],[9639,9655,9656],[9640,9639,9656],[9640,9656,1671],[1672,9640,1671],[9641,5825,5824],[9641,5824,9657],[9642,9641,9657],[9642,9657,9658],[9643,9642,9658],[9643,9658,9659],[9644,9643,9659],[9644,9659,9660],[9645,9644,9660],[9645,9660,9661],[9646,9645,9661],[9646,9661,9662],[9647,9646,9662],[9647,9662,9663],[9648,9647,9663],[9648,9663,9664],[9649,9648,9664],[9649,9664,9665],[9650,9649,9665],[9650,9665,9666],[9651,9650,9666],[9651,9666,9667],[9652,9651,9667],[9652,9667,9668],[9653,9652,9668],[9653,9668,9669],[9654,9653,9669],[9654,9669,9670],[9655,9654,9670],[9655,9670,9671],[9656,9655,9671],[9656,9671,1670],[1671,9656,1670],[9657,5824,5823],[9657,5823,9672],[9658,9657,9672],[9658,9672,9673],[9659,9658,9673],[9659,9673,9674],[9660,9659,9674],[9660,9674,9675],[9661,9660,9675],[9661,9675,9676],[9662,9661,9676],[9662,9676,9677],[9663,9662,9677],[9663,9677,9678],[9664,9663,9678],[9664,9678,9679],[9665,9664,9679],[9665,9679,9680],[9666,9665,9680],[9666,9680,9681],[9667,9666,9681],[9667,9681,9682],[9668,9667,9682],[9668,9682,9683],[9669,9668,9683],[9669,9683,9684],[9670,9669,9684],[9670,9684,9685],[9671,9670,9685],[9671,9685,1669],[1670,9671,1669],[9672,5823,5822],[9672,5822,9686],[9673,9672,9686],[9673,9686,9687],[9674,9673,9687],[9674,9687,9688],[9675,9674,9688],[9675,9688,9689],[9676,9675,9689],[9676,9689,9690],[9677,9676,9690],[9677,9690,9691],[9678,9677,9691],[9678,9691,9692],[9679,9678,9692],[9679,9692,9693],[9680,9679,9693],[9680,9693,9694],[9681,9680,9694],[9681,9694,9695],[9682,9681,9695],[9682,9695,9696],[9683,9682,9696],[9683,9696,9697],[9684,9683,9697],[9684,9697,9698],[9685,9684,9698],[9685,9698,1668],[1669,9685,1668],[9686,5822,5821],[9686,5821,9699],[9687,9686,9699],[9687,9699,9700],[9688,9687,9700],[9688,9700,9701],[9689,9688,9701],[9689,9701,9702],[9690,9689,9702],[9690,9702,9703],[9691,9690,9703],[9691,9703,9704],[9692,9691,9704],[9692,9704,9705],[9693,9692,9705],[9693,9705,9706],[9694,9693,9706],[9694,9706,9707],[9695,9694,9707],[9695,9707,9708],[9696,9695,9708],[9696,9708,9709],[9697,9696,9709],[9697,9709,9710],[9698,9697,9710],[9698,9710,1667],[1668,9698,1667],[9699,5821,5820],[9699,5820,9711],[9700,9699,9711],[9700,9711,9712],[9701,9700,9712],[9701,9712,9713],[9702,9701,9713],[9702,9713,9714],[9703,9702,9714],[9703,9714,9715],[9704,9703,9715],[9704,9715,9716],[9705,9704,9716],[9705,9716,9717],[9706,9705,9717],[9706,9717,9718],[9707,9706,9718],[9707,9718,9719],[9708,9707,9719],[9708,9719,9720],[9709,9708,9720],[9709,9720,9721],[9710,9709,9721],[9710,9721,1666],[1667,9710,1666],[9711,5820,5819],[9711,5819,9722],[9712,9711,9722],[9712,9722,9723],[9713,9712,9723],[9713,9723,9724],[9714,9713,9724],[9714,9724,9725],[9715,9714,9725],[9715,9725,9726],[9716,9715,9726],[9716,9726,9727],[9717,9716,9727],[9717,9727,9728],[9718,9717,9728],[9718,9728,9729],[9719,9718,9729],[9719,9729,9730],[9720,9719,9730],[9720,9730,9731],[9721,9720,9731],[9721,9731,1665],[1666,9721,1665],[9722,5819,5818],[9722,5818,9732],[9723,9722,9732],[9723,9732,9733],[9724,9723,9733],[9724,9733,9734],[9725,9724,9734],[9725,9734,9735],[9726,9725,9735],[9726,9735,9736],[9727,9726,9736],[9727,9736,9737],[9728,9727,9737],[9728,9737,9738],[9729,9728,9738],[9729,9738,9739],[9730,9729,9739],[9730,9739,9740],[9731,9730,9740],[9731,9740,1664],[1665,9731,1664],[9732,5818,5817],[9732,5817,9741],[9733,9732,9741],[9733,9741,9742],[9734,9733,9742],[9734,9742,9743],[9735,9734,9743],[9735,9743,9744],[9736,9735,9744],[9736,9744,9745],[9737,9736,9745],[9737,9745,9746],[9738,9737,9746],[9738,9746,9747],[9739,9738,9747],[9739,9747,9748],[9740,9739,9748],[9740,9748,1663],[1664,9740,1663],[9741,5817,5816],[9741,5816,9749],[9742,9741,9749],[9742,9749,9750],[9743,9742,9750],[9743,9750,9751],[9744,9743,9751],[9744,9751,9752],[9745,9744,9752],[9745,9752,9753],[9746,9745,9753],[9746,9753,9754],[9747,9746,9754],[9747,9754,9755],[9748,9747,9755],[9748,9755,1662],[1663,9748,1662],[9749,5816,5815],[9749,5815,9756],[9750,9749,9756],[9750,9756,9757],[9751,9750,9757],[9751,9757,9758],[9752,9751,9758],[9752,9758,9759],[9753,9752,9759],[9753,9759,9760],[9754,9753,9760],[9754,9760,9761],[9755,9754,9761],[9755,9761,1661],[1662,9755,1661],[9756,5815,5814],[9756,5814,9762],[9757,9756,9762],[9757,9762,9763],[9758,9757,9763],[9758,9763,9764],[9759,9758,9764],[9759,9764,9765],[9760,9759,9765],[9760,9765,9766],[9761,9760,9766],[9761,9766,1660],[1661,9761,1660],[9762,5814,5813],[9762,5813,9767],[9763,9762,9767],[9763,9767,9768],[9764,9763,9768],[9764,9768,9769],[9765,9764,9769],[9765,9769,9770],[9766,9765,9770],[9766,9770,1659],[1660,9766,1659],[9767,5813,5812],[9767,5812,9771],[9768,9767,9771],[9768,9771,9772],[9769,9768,9772],[9769,9772,9773],[9770,9769,9773],[9770,9773,1658],[1659,9770,1658],[9771,5812,5811],[9771,5811,9774],[9772,9771,9774],[9772,9774,9775],[9773,9772,9775],[9773,9775,1657],[1658,9773,1657],[9774,5811,5810],[9774,5810,9776],[9775,9774,9776],[9775,9776,1656],[1657,9775,1656],[9776,5810,5809],[9776,5809,1655],[1656,9776,1655],[1655,5809,2],[3266,11,6862],[3266,6862,9777],[3265,3266,9777],[3265,9777,9778],[3264,3265,9778],[3264,9778,9779],[3263,3264,9779],[3263,9779,9780],[3262,3263,9780],[3262,9780,9781],[3261,3262,9781],[3261,9781,9782],[3260,3261,9782],[3260,9782,9783],[3259,3260,9783],[3259,9783,9784],[3258,3259,9784],[3258,9784,9785],[3257,3258,9785],[3257,9785,9786],[3256,3257,9786],[3256,9786,9787],[3255,3256,9787],[3255,9787,9788],[3254,3255,9788],[3254,9788,9789],[3253,3254,9789],[3253,9789,9790],[3252,3253,9790],[3252,9790,9791],[3251,3252,9791],[3251,9791,9792],[3250,3251,9792],[3250,9792,9793],[3249,3250,9793],[3249,9793,9794],[3248,3249,9794],[3248,9794,9795],[3247,3248,9795],[3247,9795,9796],[3246,3247,9796],[3246,9796,9797],[3245,3246,9797],[3245,9797,9798],[3244,3245,9798],[3244,9798,9799],[3243,3244,9799],[3243,9799,9800],[3242,3243,9800],[3242,9800,9801],[3241,3242,9801],[3241,9801,9802],[3240,3241,9802],[3240,9802,9803],[3239,3240,9803],[3239,9803,9804],[3238,3239,9804],[3238,9804,9805],[3237,3238,9805],[3237,9805,9806],[3236,3237,9806],[3236,9806,2770],[10,3236,2770],[9777,6862,6861],[9777,6861,9807],[9778,9777,9807],[9778,9807,9808],[9779,9778,9808],[9779,9808,9809],[9780,9779,9809],[9780,9809,9810],[9781,9780,9810],[9781,9810,9811],[9782,9781,9811],[9782,9811,9812],[9783,9782,9812],[9783,9812,9813],[9784,9783,9813],[9784,9813,9814],[9785,9784,9814],[9785,9814,9815],[9786,9785,9815],[9786,9815,9816],[9787,9786,9816],[9787,9816,9817],[9788,9787,9817],[9788,9817,9818],[9789,9788,9818],[9789,9818,9819],[9790,9789,9819],[9790,9819,9820],[9791,9790,9820],[9791,9820,9821],[9792,9791,9821],[9792,9821,9822],[9793,9792,9822],[9793,9822,9823],[9794,9793,9823],[9794,9823,9824],[9795,9794,9824],[9795,9824,9825],[9796,9795,9825],[9796,9825,9826],[9797,9796,9826],[9797,9826,9827],[9798,9797,9827],[9798,9827,9828],[9799,9798,9828],[9799,9828,9829],[9800,9799,9829],[9800,9829,9830],[9801,9800,9830],[9801,9830,9831],[9802,9801,9831],[9802,9831,9832],[9803,9802,9832],[9803,9832,9833],[9804,9803,9833],[9804,9833,9834],[9805,9804,9834],[9805,9834,9835],[9806,9805,9835],[9806,9835,2769],[2770,9806,2769],[9807,6861,6860],[9807,6860,9836],[9808,9807,9836],[9808,9836,9837],[9809,9808,9837],[9809,9837,9838],[9810,9809,9838],[9810,9838,9839],[9811,9810,9839],[9811,9839,9840],[9812,9811,9840],[9812,9840,9841],[9813,9812,9841],[9813,9841,9842],[9814,9813,9842],[9814,9842,9843],[9815,9814,9843],[9815,9843,9844],[9816,9815,9844],[9816,9844,9845],[9817,9816,9845],[9817,9845,9846],[9818,9817,9846],[9818,9846,9847],[9819,9818,9847],[9819,9847,9848],[9820,9819,9848],[9820,9848,9849],[9821,9820,9849],[9821,9849,9850],[9822,9821,9850],[9822,9850,9851],[9823,9822,9851],[9823,9851,9852],[9824,9823,9852],[9824,9852,9853],[9825,9824,9853],[9825,9853,9854],[9826,9825,9854],[9826,9854,9855],[9827,9826,9855],[9827,9855,9856],[9828,9827,9856],[9828,9856,9857],[9829,9828,9857],[9829,9857,9858],[9830,9829,9858],[9830,9858,9859],[9831,9830,9859],[9831,9859,9860],[9832,9831,9860],[9832,9860,9861],[9833,9832,9861],[9833,9861,9862],[9834,9833,9862],[9834,9862,9863],[9835,9834,9863],[9835,9863,2768],[2769,9835,2768],[9836,6860,6859],[9836,6859,9864],[9837,9836,9864],[9837,9864,9865],[9838,9837,9865],[9838,9865,9866],[9839,9838,9866],[9839,9866,9867],[9840,9839,9867],[9840,9867,9868],[9841,9840,9868],[9841,9868,9869],[9842,9841,9869],[9842,9869,9870],[9843,9842,9870],[9843,9870,9871],[9844,9843,9871],[9844,9871,9872],[9845,9844,9872],[9845,9872,9873],[9846,9845,9873],[9846,9873,9874],[9847,9846,9874],[9847,9874,9875],[9848,9847,9875],[9848,9875,9876],[9849,9848,9876],[9849,9876,9877],[9850,9849,9877],[9850,9877,9878],[9851,9850,9878],[9851,9878,9879],[9852,9851,9879],[9852,9879,9880],[9853,9852,9880],[9853,9880,9881],[9854,9853,9881],[9854,9881,9882],[9855,9854,9882],[9855,9882,9883],[9856,9855,9883],[9856,9883,9884],[9857,9856,9884],[9857,9884,9885],[9858,9857,9885],[9858,9885,9886],[9859,9858,9886],[9859,9886,9887],[9860,9859,9887],[9860,9887,9888],[9861,9860,9888],[9861,9888,9889],[9862,9861,9889],[9862,9889,9890],[9863,9862,9890],[9863,9890,2767],[2768,9863,2767],[9864,6859,6858],[9864,6858,9891],[9865,9864,9891],[9865,9891,9892],[9866,9865,9892],[9866,9892,9893],[9867,9866,9893],[9867,9893,9894],[9868,9867,9894],[9868,9894,9895],[9869,9868,9895],[9869,9895,9896],[9870,9869,9896],[9870,9896,9897],[9871,9870,9897],[9871,9897,9898],[9872,9871,9898],[9872,9898,9899],[9873,9872,9899],[9873,9899,9900],[9874,9873,9900],[9874,9900,9901],[9875,9874,9901],[9875,9901,9902],[9876,9875,9902],[9876,9902,9903],[9877,9876,9903],[9877,9903,9904],[9878,9877,9904],[9878,9904,9905],[9879,9878,9905],[9879,9905,9906],[9880,9879,9906],[9880,9906,9907],[9881,9880,9907],[9881,9907,9908],[9882,9881,9908],[9882,9908,9909],[9883,9882,9909],[9883,9909,9910],[9884,9883,9910],[9884,9910,9911],[9885,9884,9911],[9885,9911,9912],[9886,9885,9912],[9886,9912,9913],[9887,9886,9913],[9887,9913,9914],[9888,9887,9914],[9888,9914,9915],[9889,9888,9915],[9889,9915,9916],[9890,9889,9916],[9890,9916,2766],[2767,9890,2766],[9891,6858,6857],[9891,6857,9917],[9892,9891,9917],[9892,9917,9918],[9893,9892,9918],[9893,9918,9919],[9894,9893,9919],[9894,9919,9920],[9895,9894,9920],[9895,9920,9921],[9896,9895,9921],[9896,9921,9922],[9897,9896,9922],[9897,9922,9923],[9898,9897,9923],[9898,9923,9924],[9899,9898,9924],[9899,9924,9925],[9900,9899,9925],[9900,9925,9926],[9901,9900,9926],[9901,9926,9927],[9902,9901,9927],[9902,9927,9928],[9903,9902,9928],[9903,9928,9929],[9904,9903,9929],[9904,9929,9930],[9905,9904,9930],[9905,9930,9931],[9906,9905,9931],[9906,9931,9932],[9907,9906,9932],[9907,9932,9933],[9908,9907,9933],[9908,9933,9934],[9909,9908,9934],[9909,9934,9935],[9910,9909,9935],[9910,9935,9936],[9911,9910,9936],[9911,9936,9937],[9912,9911,9937],[9912,9937,9938],[9913,9912,9938],[9913,9938,9939],[9914,9913,9939],[9914,9939,9940],[9915,9914,9940],[9915,9940,9941],[9916,9915,9941],[9916,9941,2765],[2766,9916,2765],[9917,6857,6856],[9917,6856,9942],[9918,9917,9942],[9918,9942,9943],[9919,9918,9943],[9919,9943,9944],[9920,9919,9944],[9920,9944,9945],[9921,9920,9945],[9921,9945,9946],[9922,9921,9946],[9922,9946,9947],[9923,9922,9947],[9923,9947,9948],[9924,9923,9948],[9924,9948,9949],[9925,9924,9949],[9925,9949,9950],[9926,9925,9950],[9926,9950,9951],[9927,9926,9951],[9927,9951,9952],[9928,9927,9952],[9928,9952,9953],[9929,9928,9953],[9929,9953,9954],[9930,9929,9954],[9930,9954,9955],[9931,9930,9955],[9931,9955,9956],[9932,9931,9956],[9932,9956,9957],[9933,9932,9957],[9933,9957,9958],[9934,9933,9958],[9934,9958,9959],[9935,9934,9959],[9935,9959,9960],[9936,9935,9960],[9936,9960,9961],[9937,9936,9961],[9937,9961,9962],[9938,9937,9962],[9938,9962,9963],[9939,9938,9963],[9939,9963,9964],[9940,9939,9964],[9940,9964,9965],[9941,9940,9965],[9941,9965,2764],[2765,9941,2764],[9942,6856,6855],[9942,6855,9966],[9943,9942,9966],[9943,9966,9967],[9944,9943,9967],[9944,9967,9968],[9945,9944,9968],[9945,9968,9969],[9946,9945,9969],[9946,9969,9970],[9947,9946,9970],[9947,9970,9971],[9948,9947,9971],[9948,9971,9972],[9949,9948,9972],[9949,9972,9973],[9950,9949,9973],[9950,9973,9974],[9951,9950,9974],[9951,9974,9975],[9952,9951,9975],[9952,9975,9976],[9953,9952,9976],[9953,9976,9977],[9954,9953,9977],[9954,9977,9978],[9955,9954,9978],[9955,9978,9979],[9956,9955,9979],[9956,9979,9980],[9957,9956,9980],[9957,9980,9981],[9958,9957,9981],[9958,9981,9982],[9959,9958,9982],[9959,9982,9983],[9960,9959,9983],[9960,9983,9984],[9961,9960,9984],[9961,9984,9985],[9962,9961,9985],[9962,9985,9986],[9963,9962,9986],[9963,9986,9987],[9964,9963,9987],[9964,9987,9988],[9965,9964,9988],[9965,9988,2763],[2764,9965,2763],[9966,6855,6854],[9966,6854,9989],[9967,9966,9989],[9967,9989,9990],[9968,9967,9990],[9968,9990,9991],[9969,9968,9991],[9969,9991,9992],[9970,9969,9992],[9970,9992,9993],[9971,9970,9993],[9971,9993,9994],[9972,9971,9994],[9972,9994,9995],[9973,9972,9995],[9973,9995,9996],[9974,9973,9996],[9974,9996,9997],[9975,9974,9997],[9975,9997,9998],[9976,9975,9998],[9976,9998,9999],[9977,9976,9999],[9977,9999,10000],[9978,9977,10000],[9978,10000,10001],[9979,9978,10001],[9979,10001,10002],[9980,9979,10002],[9980,10002,10003],[9981,9980,10003],[9981,10003,10004],[9982,9981,10004],[9982,10004,10005],[9983,9982,10005],[9983,10005,10006],[9984,9983,10006],[9984,10006,10007],[9985,9984,10007],[9985,10007,10008],[9986,9985,10008],[9986,10008,10009],[9987,9986,10009],[9987,10009,10010],[9988,9987,10010],[9988,10010,2762],[2763,9988,2762],[9989,6854,6853],[9989,6853,10011],[9990,9989,10011],[9990,10011,10012],[9991,9990,10012],[9991,10012,10013],[9992,9991,10013],[9992,10013,10014],[9993,9992,10014],[9993,10014,10015],[9994,9993,10015],[9994,10015,10016],[9995,9994,10016],[9995,10016,10017],[9996,9995,10017],[9996,10017,10018],[9997,9996,10018],[9997,10018,10019],[9998,9997,10019],[9998,10019,10020],[9999,9998,10020],[9999,10020,10021],[10000,9999,10021],[10000,10021,10022],[10001,10000,10022],[10001,10022,10023],[10002,10001,10023],[10002,10023,10024],[10003,10002,10024],[10003,10024,10025],[10004,10003,10025],[10004,10025,10026],[10005,10004,10026],[10005,10026,10027],[10006,10005,10027],[10006,10027,10028],[10007,10006,10028],[10007,10028,10029],[10008,10007,10029],[10008,10029,10030],[10009,10008,10030],[10009,10030,10031],[10010,10009,10031],[10010,10031,2761],[2762,10010,2761],[10011,6853,6852],[10011,6852,10032],[10012,10011,10032],[10012,10032,10033],[10013,10012,10033],[10013,10033,10034],[10014,10013,10034],[10014,10034,10035],[10015,10014,10035],[10015,10035,10036],[10016,10015,10036],[10016,10036,10037],[10017,10016,10037],[10017,10037,10038],[10018,10017,10038],[10018,10038,10039],[10019,10018,10039],[10019,10039,10040],[10020,10019,10040],[10020,10040,10041],[10021,10020,10041],[10021,10041,10042],[10022,10021,10042],[10022,10042,10043],[10023,10022,10043],[10023,10043,10044],[10024,10023,10044],[10024,10044,10045],[10025,10024,10045],[10025,10045,10046],[10026,10025,10046],[10026,10046,10047],[10027,10026,10047],[10027,10047,10048],[10028,10027,10048],[10028,10048,10049],[10029,10028,10049],[10029,10049,10050],[10030,10029,10050],[10030,10050,10051],[10031,10030,10051],[10031,10051,2760],[2761,10031,2760],[10032,6852,6851],[10032,6851,10052],[10033,10032,10052],[10033,10052,10053],[10034,10033,10053],[10034,10053,10054],[10035,10034,10054],[10035,10054,10055],[10036,10035,10055],[10036,10055,10056],[10037,10036,10056],[10037,10056,10057],[10038,10037,10057],[10038,10057,10058],[10039,10038,10058],[10039,10058,10059],[10040,10039,10059],[10040,10059,10060],[10041,10040,10060],[10041,10060,10061],[10042,10041,10061],[10042,10061,10062],[10043,10042,10062],[10043,10062,10063],[10044,10043,10063],[10044,10063,10064],[10045,10044,10064],[10045,10064,10065],[10046,10045,10065],[10046,10065,10066],[10047,10046,10066],[10047,10066,10067],[10048,10047,10067],[10048,10067,10068],[10049,10048,10068],[10049,10068,10069],[10050,10049,10069],[10050,10069,10070],[10051,10050,10070],[10051,10070,2759],[2760,10051,2759],[10052,6851,6850],[10052,6850,10071],[10053,10052,10071],[10053,10071,10072],[10054,10053,10072],[10054,10072,10073],[10055,10054,10073],[10055,10073,10074],[10056,10055,10074],[10056,10074,10075],[10057,10056,10075],[10057,10075,10076],[10058,10057,10076],[10058,10076,10077],[10059,10058,10077],[10059,10077,10078],[10060,10059,10078],[10060,10078,10079],[10061,10060,10079],[10061,10079,10080],[10062,10061,10080],[10062,10080,10081],[10063,10062,10081],[10063,10081,10082],[10064,10063,10082],[10064,10082,10083],[10065,10064,10083],[10065,10083,10084],[10066,10065,10084],[10066,10084,10085],[10067,10066,10085],[10067,10085,10086],[10068,10067,10086],[10068,10086,10087],[10069,10068,10087],[10069,10087,10088],[10070,10069,10088],[10070,10088,2758],[2759,10070,2758],[10071,6850,6849],[10071,6849,10089],[10072,10071,10089],[10072,10089,10090],[10073,10072,10090],[10073,10090,10091],[10074,10073,10091],[10074,10091,10092],[10075,10074,10092],[10075,10092,10093],[10076,10075,10093],[10076,10093,10094],[10077,10076,10094],[10077,10094,10095],[10078,10077,10095],[10078,10095,10096],[10079,10078,10096],[10079,10096,10097],[10080,10079,10097],[10080,10097,10098],[10081,10080,10098],[10081,10098,10099],[10082,10081,10099],[10082,10099,10100],[10083,10082,10100],[10083,10100,10101],[10084,10083,10101],[10084,10101,10102],[10085,10084,10102],[10085,10102,10103],[10086,10085,10103],[10086,10103,10104],[10087,10086,10104],[10087,10104,10105],[10088,10087,10105],[10088,10105,2757],[2758,10088,2757],[10089,6849,6848],[10089,6848,10106],[10090,10089,10106],[10090,10106,10107],[10091,10090,10107],[10091,10107,10108],[10092,10091,10108],[10092,10108,10109],[10093,10092,10109],[10093,10109,10110],[10094,10093,10110],[10094,10110,10111],[10095,10094,10111],[10095,10111,10112],[10096,10095,10112],[10096,10112,10113],[10097,10096,10113],[10097,10113,10114],[10098,10097,10114],[10098,10114,10115],[10099,10098,10115],[10099,10115,10116],[10100,10099,10116],[10100,10116,10117],[10101,10100,10117],[10101,10117,10118],[10102,10101,10118],[10102,10118,10119],[10103,10102,10119],[10103,10119,10120],[10104,10103,10120],[10104,10120,10121],[10105,10104,10121],[10105,10121,2756],[2757,10105,2756],[10106,6848,6847],[10106,6847,10122],[10107,10106,10122],[10107,10122,10123],[10108,10107,10123],[10108,10123,10124],[10109,10108,10124],[10109,10124,10125],[10110,10109,10125],[10110,10125,10126],[10111,10110,10126],[10111,10126,10127],[10112,10111,10127],[10112,10127,10128],[10113,10112,10128],[10113,10128,10129],[10114,10113,10129],[10114,10129,10130],[10115,10114,10130],[10115,10130,10131],[10116,10115,10131],[10116,10131,10132],[10117,10116,10132],[10117,10132,10133],[10118,10117,10133],[10118,10133,10134],[10119,10118,10134],[10119,10134,10135],[10120,10119,10135],[10120,10135,10136],[10121,10120,10136],[10121,10136,2755],[2756,10121,2755],[10122,6847,6846],[10122,6846,10137],[10123,10122,10137],[10123,10137,10138],[10124,10123,10138],[10124,10138,10139],[10125,10124,10139],[10125,10139,10140],[10126,10125,10140],[10126,10140,10141],[10127,10126,10141],[10127,10141,10142],[10128,10127,10142],[10128,10142,10143],[10129,10128,10143],[10129,10143,10144],[10130,10129,10144],[10130,10144,10145],[10131,10130,10145],[10131,10145,10146],[10132,10131,10146],[10132,10146,10147],[10133,10132,10147],[10133,10147,10148],[10134,10133,10148],[10134,10148,10149],[10135,10134,10149],[10135,10149,10150],[10136,10135,10150],[10136,10150,2754],[2755,10136,2754],[10137,6846,6845],[10137,6845,10151],[10138,10137,10151],[10138,10151,10152],[10139,10138,10152],[10139,10152,10153],[10140,10139,10153],[10140,10153,10154],[10141,10140,10154],[10141,10154,10155],[10142,10141,10155],[10142,10155,10156],[10143,10142,10156],[10143,10156,10157],[10144,10143,10157],[10144,10157,10158],[10145,10144,10158],[10145,10158,10159],[10146,10145,10159],[10146,10159,10160],[10147,10146,10160],[10147,10160,10161],[10148,10147,10161],[10148,10161,10162],[10149,10148,10162],[10149,10162,10163],[10150,10149,10163],[10150,10163,2753],[2754,10150,2753],[10151,6845,6844],[10151,6844,10164],[10152,10151,10164],[10152,10164,10165],[10153,10152,10165],[10153,10165,10166],[10154,10153,10166],[10154,10166,10167],[10155,10154,10167],[10155,10167,10168],[10156,10155,10168],[10156,10168,10169],[10157,10156,10169],[10157,10169,10170],[10158,10157,10170],[10158,10170,10171],[10159,10158,10171],[10159,10171,10172],[10160,10159,10172],[10160,10172,10173],[10161,10160,10173],[10161,10173,10174],[10162,10161,10174],[10162,10174,10175],[10163,10162,10175],[10163,10175,2752],[2753,10163,2752],[10164,6844,6843],[10164,6843,10176],[10165,10164,10176],[10165,10176,10177],[10166,10165,10177],[10166,10177,10178],[10167,10166,10178],[10167,10178,10179],[10168,10167,10179],[10168,10179,10180],[10169,10168,10180],[10169,10180,10181],[10170,10169,10181],[10170,10181,10182],[10171,10170,10182],[10171,10182,10183],[10172,10171,10183],[10172,10183,10184],[10173,10172,10184],[10173,10184,10185],[10174,10173,10185],[10174,10185,10186],[10175,10174,10186],[10175,10186,2751],[2752,10175,2751],[10176,6843,6842],[10176,6842,10187],[10177,10176,10187],[10177,10187,10188],[10178,10177,10188],[10178,10188,10189],[10179,10178,10189],[10179,10189,10190],[10180,10179,10190],[10180,10190,10191],[10181,10180,10191],[10181,10191,10192],[10182,10181,10192],[10182,10192,10193],[10183,10182,10193],[10183,10193,10194],[10184,10183,10194],[10184,10194,10195],[10185,10184,10195],[10185,10195,10196],[10186,10185,10196],[10186,10196,2750],[2751,10186,2750],[10187,6842,6841],[10187,6841,10197],[10188,10187,10197],[10188,10197,10198],[10189,10188,10198],[10189,10198,10199],[10190,10189,10199],[10190,10199,10200],[10191,10190,10200],[10191,10200,10201],[10192,10191,10201],[10192,10201,10202],[10193,10192,10202],[10193,10202,10203],[10194,10193,10203],[10194,10203,10204],[10195,10194,10204],[10195,10204,10205],[10196,10195,10205],[10196,10205,2749],[2750,10196,2749],[10197,6841,6840],[10197,6840,10206],[10198,10197,10206],[10198,10206,10207],[10199,10198,10207],[10199,10207,10208],[10200,10199,10208],[10200,10208,10209],[10201,10200,10209],[10201,10209,10210],[10202,10201,10210],[10202,10210,10211],[10203,10202,10211],[10203,10211,10212],[10204,10203,10212],[10204,10212,10213],[10205,10204,10213],[10205,10213,2748],[2749,10205,2748],[10206,6840,6839],[10206,6839,10214],[10207,10206,10214],[10207,10214,10215],[10208,10207,10215],[10208,10215,10216],[10209,10208,10216],[10209,10216,10217],[10210,10209,10217],[10210,10217,10218],[10211,10210,10218],[10211,10218,10219],[10212,10211,10219],[10212,10219,10220],[10213,10212,10220],[10213,10220,2747],[2748,10213,2747],[10214,6839,6838],[10214,6838,10221],[10215,10214,10221],[10215,10221,10222],[10216,10215,10222],[10216,10222,10223],[10217,10216,10223],[10217,10223,10224],[10218,10217,10224],[10218,10224,10225],[10219,10218,10225],[10219,10225,10226],[10220,10219,10226],[10220,10226,2746],[2747,10220,2746],[10221,6838,6837],[10221,6837,10227],[10222,10221,10227],[10222,10227,10228],[10223,10222,10228],[10223,10228,10229],[10224,10223,10229],[10224,10229,10230],[10225,10224,10230],[10225,10230,10231],[10226,10225,10231],[10226,10231,2745],[2746,10226,2745],[10227,6837,6836],[10227,6836,10232],[10228,10227,10232],[10228,10232,10233],[10229,10228,10233],[10229,10233,10234],[10230,10229,10234],[10230,10234,10235],[10231,10230,10235],[10231,10235,2744],[2745,10231,2744],[10232,6836,6835],[10232,6835,10236],[10233,10232,10236],[10233,10236,10237],[10234,10233,10237],[10234,10237,10238],[10235,10234,10238],[10235,10238,2743],[2744,10235,2743],[10236,6835,6834],[10236,6834,10239],[10237,10236,10239],[10237,10239,10240],[10238,10237,10240],[10238,10240,2742],[2743,10238,2742],[10239,6834,6833],[10239,6833,10241],[10240,10239,10241],[10240,10241,2741],[2742,10240,2741],[10241,6833,6832],[10241,6832,2740],[2741,10241,2740],[2740,6832,9]]"),gr={vertices:lS,faces:hS},_r=JSON.parse("[0.46170029044151306,0.7283868193626404,0.6714981198310852,0.46814262866973877,-1.6117089986801147,0.4958019554615021,0.35770031809806824,0,-1.5782711505889893,0.41376686096191406,0.3872867226600647,0.27976563572883606,0.45916947722435,0.4630763530731201,0.37564900517463684,0.35124096274375916,0.3389868438243866,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.45978134870529175,0.45398837327957153,0.44612693786621094,0.43593305349349976,0.42083320021629333,0.3958621621131897,0.3687256872653961,0.3347852826118469,0.28874826431274414,0.21883180737495422,0.17253094911575317,0.14117884635925293,0.12398815900087357,0.08543244749307632,-0.0197449978441,-0.7828658819198608,-1.8497413396835327,-1.9154011011123657,-1.932921290397644,-1.9445594549179077,-1.9513611793518066,-1.954359769821167,-1.9500371217727661,-1.926662564277649,-1.8565974235534668,-1.7188962697982788,-1.6571013927459717,-1.6480450630187988,-1.6377040147781372,-1.6209999322891235,-1.6142901182174683,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.09417219460010529,-0.4210168719291687,-0.2722606956958771,-0.09605477005243301,-0.1886705756187439,-0.4916999638080597,-1.1184481382369995,-1.6466413736343384,-1.5884160995483398,-1.5781482458114624,0.4730885624885559,0.46386292576789856,0.3653399348258972,0.34344467520713806,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.47301891446113586,0.4418029487133026,0.3570864200592041,0.3464943766593933,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4631703197956085,0.4231051504611969,0.3511476516723633,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4459249675273895,0.4011819660663605,0.3556083142757416,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.42215320467948914,0.39029502868652344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.389761358499527,0.34999212622642517,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3509088456630707,0.2893182933330536,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.315141499042511,0.2689730226993561,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2787677049636841,0.24505357444286346,0.21116387844085693,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21646840870380402,0.1990307718515396,0.1728920191526413,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1697591245174408,0.15499842166900635,0.1284104585647583,0.11531826853752136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.13463963568210602,0.11974702030420303,0.11365839093923569,0.10501710325479507,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.11735400557518005,0.10526484251022339,0.09877657145261765,0.08516812324523926,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.09861388802528381,0.09316998720169067,0.08244337886571884,0.07469560205936432,0.05861898511648178,0,0,0,0,0,0,0,0,0,0,0,0,0.047386303544044495,0.06389258056879044,0.06672241538763046,0.05500815436244011,0.03581882268190384,0.01147516816854477,0,0,0,0,0,0,0,0,0,0,-0.07626830041408539,0.004949077498167753,0.03338455408811569,0.005297450348734856,-0.010468597523868084,-0.10968633741140366,-1.176086187362671,0,0,0,0,0,0,0,0,-1.2967960834503174,-0.17922215163707733,-0.079995296895504,-0.11155938357114792,-0.27631691098213196,-1.3755974769592285,-1.644038438796997,0,0,0,0,0,0,0,-1.8486006259918213,-1.491167426109314,-0.507190465927124,-0.9108732342720032,-1.5625934600830078,-1.7163758277893066,-1.7373303174972534,-1.5171961784362793,0,0,0,0,0,-1.9041838645935059,-1.8386188745498657,-1.7104727029800415,-1.7210524082183838,-1.7838189601898193,-1.79555082321167,-1.7601085901260376,-1.35944402217865,-0.43394941091537476,0,0,0,-1.9260568618774414,-1.8854198455810547,-1.8365176916122437,-1.8319576978683472,-1.833330512046814,-1.8314218521118164,-1.737447738647461,-0.8674505949020386,-0.04358413442969322,-0.04913659021258354,0,-1.9339478015899658,-1.8934664726257324,-1.8629968166351318,-1.8608094453811646,-1.8506643772125244,-1.837051272392273,-1.6005163192749023,-0.24417605996131897,-0.030889902263879776,-0.07553961127996445,-1.9354749917984009,-1.8949048519134521,-1.866249442100525,-1.861171841621399,-1.8563437461853027,-1.8362287282943726,-1.4108656644821167,-0.17971351742744446,-0.044746264815330505,-1.928091049194336,-1.8739162683486938,-1.844631552696228,-1.840228796005249,-1.8504925966262817,-1.7879887819290161,-0.3868923485279083,-0.33421429991722107,-1.8886290788650513,-1.821358323097229,-1.7810468673706055,-1.7826108932495117,-1.8267865180969238,-1.5863784551620483,-0.20786459743976593,-1.8042961359024048,-1.7461620569229126,-1.7150673866271973,-1.7269365787506104,-1.7870594263076782,-0.40206199884414673,-1.6997003555297852,-1.6916372776031494,-1.6807323694229126,-1.7301326990127563,-1.5243335962295532,-1.6636568307876587,-1.6778090000152588,-1.6770755052566528,-1.7592718601226807,-1.6420676708221436,-1.6212044954299927,-1.6705256700515747,-1.6108773946762085,-1.5906550884246826,-1.598983645439148,0.44326406717300415,0.42970171570777893,0.43249180912971497,0.4374849498271942,0.4499586522579193,0.4655894339084625,0.47946491837501526,0.46716997027397156,0.43062445521354675,0.47023308277130127,-0.11811359226703644,-0.9627423882484436,-0.7842757105827332,-0.2318730652332306,0.6753597855567932,0.7218163013458252,0.7250970602035522,0.7169949412345886,0.6932851076126099,0.596748411655426,0.570425808429718,0.5575510859489441,0.5425288677215576,0.49010908603668213,0.43162307143211365,0.3950321078300476,0.38530662655830383,0.4194163978099823,0.4374370276927948,0.44721803069114685,0.4581964612007141,0.46190258860588074,0.45083239674568176,0.4330606758594513,0.45944586396217346,0.39343366026878357,0.37511327862739563,0.3960377871990204,0.43026530742645264,0.4768640995025635,0.5176066160202026,0.5160912275314331,0.4970572292804718,0.4437400996685028,0.44614121317863464,0.45499223470687866,0.4628744125366211,0.46983492374420166,0.48079708218574524,0.4833291172981262,0.4794023334980011,0.49513742327690125,0.5152266621589661,0,0,0,0,0,0,0,0,0,0.4424428641796112,0.4443684220314026,0.45123550295829773,0.45879557728767395,0.4702475368976593,0.47694844007492065,0.4843803942203522,0.4915677309036255,0.45696794986724854,0.4573162794113159,-0.07823682576417923,-0.21921315789222717,0.13464365899562836,0.673922598361969,0.7047410607337952,0.7235206961631775,0.7211278676986694,0.6904219388961792,0.5842822194099426,0.567603588104248,0.5582882761955261,0.5451551675796509,0.5188274383544922,0.4434516131877899,0.4098234176635742,0.4219615161418915,0.395397812128067,0.41536760330200195,0.4325549304485321,0.4446805417537689,0.45026686787605286,0.45410192012786865,0.44785115122795105,0.4619252383708954,0.4761606752872467,0.4808286726474762,0.4878426790237427,0.4901541769504547,0.473378449678421,0.32290130853652954,0.345151424407959,0.5182939171791077,0.6527791023254395,0.6789047122001648,0.7109549045562744,0.7158335447311401,0.6777666807174683,0.572708785533905,0.5644324421882629,0.555046558380127,0.5445833206176758,0.5311874151229858,0.44792696833610535,0.4116061329841614,0.34768325090408325,0.37495875358581543,0.39895114302635193,0.4035954177379608,0.4287412166595459,0.3677235245704651,0.3755914568901062,0.3991265892982483,0.4410802125930786,0.46608710289001465,0.4783250391483307,0.48306939005851746,0.4818849265575409,0.4806106686592102,0.23931992053985596,0.2504008114337921,0.5721468329429626,0.6314795017242432,0.6854456067085266,0.7048218250274658,0.6761075854301453,0.5643865466117859,0.5607085824012756,0.5529447197914124,0.5425045490264893,0.5314912796020508,0.46571266651153564,0.41681376099586487,0.3951440751552582,0.27928426861763,0.3466019630432129,0.35926756262779236,0.4069710671901703,0.34541067481040955,0.3487604856491089,0.3484935462474823,0.3542361855506897,0.3664622902870178,0.401691198348999,0.45524221658706665,0.4806324243545532,0.4837947189807892,0.2821253836154938,0.15401077270507812,0.3883824348449707,0.5981110334396362,0.661089301109314,0.6488907337188721,0.5634154677391052,0.5602409839630127,0.5512463450431824,0.5409972667694092,0.5208945274353027,0.4670391082763672,0.43347692489624023,0.41059768199920654,0.2781718373298645,0.2910110354423523,0.32054874300956726,0.3394218981266022,0.34159621596336365,0.34249162673950195,0.3421565294265747,0.34588637948036194,0.3533574044704437,0.3804982304573059,0.4131263196468353,0.4798257052898407,0.48316559195518494,0.2928881049156189,0.12344319373369217,0.4519883692264557,0.5473279356956482,0.578913152217865,0.5573770403862,0.5564652681350708,0.5528997778892517,0.5426875948905945,0.509997546672821,0.4659216105937958,0.43536660075187683,0.42537444829940796,0.3547210991382599,0.29410144686698914,0.3232091963291168,0.32994142174720764,0,0,0.33738964796066284,0.3435373306274414,0.34695175290107727,0.36358413100242615,0.4034096300601959,0.4874442219734192,0.48188167810440063,0.17886479198932648,0.22470684349536896,0.5401355028152466,0.5469220280647278,0.5534570217132568,0.5577419400215149,0.5535749197006226,0.5418673157691956,0.5175992846488953,0.4838894009590149,0.43713629245758057,0.42762085795402527,0.41458532214164734,0.3497783839702606,0.3226325213909149,0.32391637563705444,0,0,0,0.3426717221736908,0.3503204882144928,0.3592917323112488,0.3817249536514282,0.491555392742157,0.47460246086120605,0.048029638826847076,0.4376099407672882,0.535932183265686,0.5510991811752319,0.5589337944984436,0.5544324517250061,0.5446808338165283,0.5281177163124084,0.4888654351234436,0.4412083029747009,0.42903754115104675,0.4225130081176758,0.40887776017189026,0.3416846990585327,0.34643301367759705,0,0,0,0,0,0.3599204123020172,0.46538877487182617,0.5014535188674927,0.31111401319503784,0.19487309455871582,0.5124838948249817,0.538399875164032,0.5551912188529968,0.5537065267562866,0.5469112992286682,0.5311850309371948,0.49583885073661804,0.44898900389671326,0.4316815137863159,0.4273330271244049,0.4146515727043152,0.40144652128219604,0.39721906185150146,0,0,0,0,0,0,0,0.42156484723091125,0.31193503737449646,0.42215466499328613,0.51077800989151,0.5360373854637146,0.5516448020935059,0.5469186305999756,0.532537579536438,0.5040903687477112,0.4471379220485687,0.4336186945438385,0.42950862646102905,0.4257151186466217,0.4178369343280792,0.4972623884677887,0,0,0,0,0,0,0,0,0.37188073992729187,0.39145413041114807,0.4950537085533142,0.5271458625793457,0.5435275435447693,0.5324254631996155,0.5119484663009644,0.4428391754627228,0.4308921694755554,0.42932260036468506,0.4273627698421478,0.42647475004196167,0.41850119829177856,0,0,0,0,0,0,0,0,0.3539925813674927,0.37425878643989563,0.49282070994377136,0.5302342772483826,0.5308976173400879,0.5155619382858276,0.4422062933444977,0.4307287931442261,0.42980170249938965,0.4274062216281891,0.4272700548171997,0.42974990606307983,0,0,0,0,0,0,0,0,0.346908301115036,0.35699009895324707,0.4868552088737488,0.5199406743049622,0.5176039934158325,0.45203787088394165,0.43038123846054077,0.4293849766254425,0.42740580439567566,0.42587098479270935,0.4286012053489685,0,0,0,0,0,0,0,0,0.33271756768226624,0.3860381841659546,0.48976296186447144,0.5106709003448486,0.492465615272522,0.43174317479133606,0.4290708005428314,0.42734771966934204,0.4260694682598114,0.4269753396511078,0,0,0,0,0,0,0,0,0,0.4616699516773224,0.48717620968818665,0.49542754888534546,0.4475189745426178,0.42928585410118103,0.4282172620296478,0.42771467566490173,0.43150487542152405,0,0,0,0,0,0,0,0,0,0.46565350890159607,0.47857722640037537,0.462902694940567,0.43313881754875183,0.42847684025764465,0.43158990144729614,0.4371671974658966,0,0,0,0,0,0,0,0,0,0.4648264944553375,0.45810097455978394,0.44291478395462036,0.43180394172668457,0.432250052690506,0.4411570727825165,0,0,0,0,0,0,0,0,0,0.44989854097366333,0.44480136036872864,0.443222314119339,0.4342317581176758,0.44268596172332764,0,0,0,0,0,0,0,0,0,0.42390012741088867,0.43967363238334656,0.4376530349254608,0.4501669108867645,0,0,0,0,0,0,0,0,0,0.42856767773628235,0.44094526767730713,0.4541884958744049,0,0,0,0,0,0,0,0,0,0,0.46677231788635254,0,0,0,0,0,0,0,0,0,0.4988354444503784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.46830928325653076,0.4737553000450134,0.4789443910121918,0.48024052381515503,0.4811033606529236,0.4784228801727295,0.47890323400497437,0.4768555462360382,0.4668304920196533,0.4477604329586029,0.44288912415504456,0.43943125009536743,0.4160439074039459,0.39505720138549805,0.3687605857849121,0.3519957363605499,0.3300674259662628,0.33862486481666565,0.2924767732620239,0.25062963366508484,0.21714292466640472,0.18977969884872437,0.17116816341876984,0.2367742508649826,0.34753116965293884,0.4079405665397644,0.40012505650520325,0.4425522983074188,0.5284706950187683,0.6219092607498169,0.6907849907875061,0.7500982880592346,0.7560919523239136,0.7529067993164062,0.7472074627876282,0.7423447370529175,0.7384438514709473,0.7358142733573914,0.7320080995559692,0.7299662232398987,0.7263054847717285,0.7238130569458008,0.7214527130126953,0.7190388441085815,0.7168903946876526,0.7147270441055298,0.7126367688179016,0.709135890007019,0.7007938623428345,0.6693060994148254,0.5601422190666199,0.5475701093673706,0.5316219925880432,0.5019900798797607,0.4401463270187378,0.39464259147644043,0.3796257972717285,0.4293408989906311,0.4463457763195038,0.45376473665237427,0.4593728482723236,0.46647125482559204,0.44294676184654236,0.44387874007225037,0.4475758671760559,0.4411119818687439,0.4263370931148529,0.42864757776260376,0.40858641266822815,0.3315623700618744,0.34426218271255493,0.3941745460033417,0.41294577717781067,0.4074581563472748,0.3892691433429718,0.3669830858707428,0.345944881439209,0.3161216378211975,0.2931538224220276,0.24717678129673004,0.210632786154747,0.18219821155071259,0.20440532267093658,0.5038036704063416,0.6843915581703186,0.7031203508377075,0.7155901193618774,0.7187522649765015,0.7169010043144226,0.7286337018013,0.741143524646759,0.7508813738822937,0.42466750741004944,0.43048617243766785,0.4195474088191986,0.41496777534484863,0.3996012806892395,0.37406373023986816,0.3450254499912262,0.37685489654541016,0.39586877822875977,0.40190398693084717,0.4007074236869812,0.3866966962814331,0.36813631653785706,0.3528081178665161,0.32278239727020264,0.29366040229797363,0.24027083814144135,0.18477626144886017,0.22590363025665283,0.5344278216362,0.7117530107498169,0.7337034344673157,0.7372245788574219,0.737561047077179,0.7415691018104553,0.7450329661369324,0.7488530278205872,0.7545915842056274,0.7546647787094116,0.42460665106773376,0.4245120882987976,0.42375287413597107,0.4150741994380951,0.3871919810771942,0.3751271963119507,0.3899937570095062,0.39740893244743347,0.3985842764377594,0.39539477229118347,0.382330060005188,0.36480796337127686,0.3527255952358246,0.33368411660194397,0.30449122190475464,0.24348869919776917,0.2453194260597229,0.5931580066680908,0.720941424369812,0.7355288863182068,0.7360539436340332,0.7374805212020874,0.7365673780441284,0.7370866537094116,0.7409244775772095,0.7445366978645325,0.748561441898346,0.7520371675491333,0.4386545419692993,0.4414697289466858,0.43587666749954224,0.3976135551929474,0.38903239369392395,0.39582359790802,0.3962160646915436,0.39412885904312134,0.38590800762176514,0.3769436776638031,0.3628652095794678,0.3427031338214874,0.33940091729164124,0.3151642084121704,0.26590511202812195,0.5188265442848206,0.7132055759429932,0.7320177555084229,0.7360906600952148,0.7351848483085632,0.7336265444755554,0.7327172756195068,0.7351680397987366,0.7374688386917114,0.7404592037200928,0.742615282535553,0.7446289658546448,0.4547532796859741,0.4561205804347992,0.40908801555633545,0.39606812596321106,0.4024737477302551,0.42012280225753784,0.42489877343177795,0.43315187096595764,0.440839022397995,0.41604888439178467,0.37941354513168335,0.34306663274765015,0.30562204122543335,0.2946780025959015,0.6867245435714722,0.7274602651596069,0.7355297207832336,0.7352557182312012,0.7341734170913696,0.7325447797775269,0.7324919700622559,0.7343597412109375,0.7359157204627991,0.7379458546638489,0.7402316927909851,0.7416242361068726,0.4684062600135803,0.4144538342952728,0.4128868579864502,0.4289836585521698,0.44629696011543274,0.4625716507434845,0.47213509678840637,0.4769057631492615,0.4705910384654999,0.45898452401161194,0.44420522451400757,0.44153523445129395,0.5085713863372803,0.7075885534286499,0.7331196069717407,0.7358289361000061,0.7361651659011841,0.7333561182022095,0.7327708005905151,0.7331199645996094,0.7334622144699097,0.7356529831886292,0.7369983792304993,0.7379159331321716,0.7384462356567383,0.4417071044445038,0.4274669289588928,0.4492415487766266,0.46275535225868225,0.4749157130718231,0.48067620396614075,0.48424988985061646,0.4878529906272888,0.49001041054725647,0.4884136915206909,0.4887942969799042,0.591900110244751,0.7211488485336304,0.7407997250556946,0.7383146286010742,0.7350516319274902,0.7324467897415161,0.7303126454353333,0.7306931018829346,0.7321199774742126,0.7339675426483154,0.7352153658866882,0.7369970083236694,0.7365899085998535,0.4357239603996277,0.4693383276462555,0.4780111312866211,0.4842802584171295,0.48526838421821594,0.48883184790611267,0.4932496249675751,0.4981606602668762,0.5004569292068481,0.5093955993652344,0.6214674711227417,0.7258094549179077,0.7413564920425415,0.7396965622901917,0.7332291007041931,0.728586733341217,0.7253004312515259,0.7264084815979004,0.7286596298217773,0.7302684187889099,0.7325308918952942,0.7338439226150513,0.7335604429244995,0.47884127497673035,0.4911435842514038,0.49183252453804016,0.493308424949646,0.48704051971435547,0.4890376627445221,0.496401846408844,0.491413950920105,0.5600081086158752,0.696710467338562,0.7309229373931885,0.7367079257965088,0.731231689453125,0.7253681421279907,0.7203940153121948,0.7197937965393066,0.7208629846572876,0.7228249311447144,0.725682258605957,0.728426456451416,0.7297008633613586,0.7304023504257202,0.499155730009079,0.5079325437545776,0.5075045228004456,0.5027631521224976,0.4980778396129608,0.5059311985969543,0.6299406886100769,0.7279424071311951,0.7561357021331787,0.7525115013122559,0.7475321888923645,0.7306475043296814,0.7177969217300415,0.7150903940200806,0.7151396870613098,0.7161659002304077,0.7180267572402954,0.7205826640129089,0.7236382961273193,0.726016104221344,0.7273046374320984,-0.7559656500816345,-1.20524001121521,-1.2799427509307861,-1.1951326131820679,-0.7709855437278748,0.7395232319831848,0.7668787837028503,0.7710829377174377,0.7690998911857605,0.7610740661621094,0.7386298775672913,0.7137929201126099,0.7129274606704712,0.713424563407898,0.7138575911521912,0.7142326831817627,0.7169917821884155,0.71924889087677,0.7221581935882568,0.7234766483306885,-1.2814855575561523,-1.2928006649017334,-1.2715740203857422,-1.1040490865707397,0.5647763609886169,0.7667365074157715,0.7710274457931519,0.7699848413467407,0.7640770077705383,0.7474679350852966,0.712517499923706,0.7121821045875549,0.7120673656463623,0.7121249437332153,0.7128075957298279,0.7138969302177429,0.716134250164032,0.718801736831665,0.7209795117378235,-1.0280369520187378,-1.0382580757141113,-0.9811168313026428,-0.34107452630996704,0.7610271573066711,0.7708974480628967,0.7680665254592896,0.7657859325408936,0.7557263970375061,0.7150816321372986,0.7112290263175964,0.7111629247665405,0.7108640670776367,0.7114645838737488,0.712405800819397,0.7138145565986633,0.715556263923645,0.7181126475334167,-0.4167217016220093,-0.31626996397972107,0.19578726589679718,0.7430083155632019,0.7679389715194702,0.7690452337265015,0.7672277688980103,0.760964572429657,0.735709011554718,0.7118217945098877,0.7105891704559326,0.7101975679397583,0.7100268006324768,0.7111839056015015,0.712756335735321,0.7144100069999695,0.7161335349082947,0.6744206547737122,0.6868974566459656,0.7334253787994385,0.7588156461715698,0.7665688991546631,0.7680032253265381,0.7660201787948608,0.7526464462280273,0.7206137776374817,0.7130993604660034,0.7108564972877502,0.7103882431983948,0.7103448510169983,0.7118311524391174,0.7136852741241455,0.7148715257644653,0.7251995801925659,0.7400248050689697,0.7516963481903076,0.76613450050354,0.7695820331573486,0.7689498066902161,0.7624285221099854,0.7427088618278503,0.7197605967521667,0.7147846221923828,0.7111772894859314,0.7096527814865112,0.7107581496238708,0.7117220163345337,0.7132786512374878,0.7351837754249573,0.745864987373352,0.7633458971977234,0.770613968372345,0.7698934078216553,0.7665409445762634,0.7543759346008301,0.7304235100746155,0.7169758677482605,0.7156436443328857,0.7117401957511902,0.7109764218330383,0.7091808319091797,0.7108897566795349,0.7328627705574036,0.7592464685440063,0.7689769268035889,0.7701113820075989,0.7675694823265076,0.7550692558288574,0.7210426926612854,0.6980684995651245,0.7088380455970764,0.7145913243293762,0.7112062573432922,0.7034032940864563,0.7010208964347839,0.7400004863739014,0.762199342250824,0.7630640864372253,0.7602877020835876,0.7457249760627747,0.6787509918212891,0.6261844038963318,0.6094945073127747,0.595523476600647,0.5711738467216492,0.583251416683197,0.6047219038009644,0.6998969912528992,0.732347309589386,0.703249990940094,0.6548292636871338,0.5881287455558777,0.5680109262466431,0.5625496506690979,0.5491285920143127,0.5406809449195862,0.5424221158027649,0.5550194978713989,0.5727736353874207,0.569610059261322,0.5608744025230408,0.5523050427436829,0.5581507086753845,0.5495812296867371,0.5360956192016602,0.5225138664245605,0.5207205414772034,0.5344904661178589,0.5473130941390991,0.543875515460968,0.5415721535682678,0.5515266060829163,0.543848991394043,0.5329797863960266,0.5106456875801086,0.49225062131881714,0.5099183917045593,0.519824206829071,0.5153772830963135,0.5333507061004639,0.5462204217910767,0.5409160852432251,0.5215380191802979,0.47969701886177063,0.4633060395717621,0.47958141565322876,0.4992790222167969,0.5193572640419006,0.521419882774353,0.4974103271961212,0.47360190749168396,0.4285624623298645,0.4407559037208557,0.463148832321167,0.4555045962333679,0.4437234401702881,0.4352312684059143,0.3991663455963135,0.39449623227119446,0.4060593247413635,0.4290870428085327,0.43821120262145996,0.4338071048259735,0.4169035851955414,0.4369542598724365,0.44347673654556274,0.44559088349342346,0.4386652708053589,0.4470209777355194,0.45311635732650757,0.4492391347885132,0.45590952038764954,0.45861688256263733,0.7419807314872742,0.7478281855583191,0.74497389793396,0.7466756105422974,0.7547065019607544,0.7653676271438599,0.7686426043510437,0.7682050466537476,0.7680103182792664,0.7663333415985107,0.7668754458427429,0.7657973170280457,0.76889967918396,0.7731667160987854,0.7756533026695251,0.7767924070358276,0.7779389023780823,0.7786800861358643,0.7783441543579102,0.7766923308372498,0.7721075415611267,0.7661545872688293,0.7356783747673035,0.6818295121192932,0.6468228697776794,0.546511709690094,0.13961930572986603,0.41331008076667786,0.6222847104072571,0.6428209543228149,0.6678988337516785,0.594889223575592,0.5219045281410217,0.4681955575942993,0.4294672906398773,0.40658116340637207,0.3893429934978485,0.3742715120315552,0.3052443861961365,0.20534062385559082,0.14871816337108612,0.16057586669921875,0.22606372833251953,0.24645408987998962,0.2599848806858063,0.2552039623260498,0.25481292605400085,0.2532501518726349,0.2729497253894806,0.3247518837451935,0.3508228063583374,0.36195287108421326,0.35243210196495056,0.3814399540424347,0.4037129580974579,0.46914252638816833,0.5095586776733398,0.5007454752922058,0.4797239899635315,0.47058865427970886,0.4751657545566559,0.4745974540710449,0.7553754448890686,0.7555723190307617,0.757398247718811,0.7648672461509705,0.7730169892311096,0.7726342082023621,0.7695926427841187,0.7639909386634827,0.7595168948173523,0.7572073340415955,0.7583535313606262,0.7597308158874512,0.7666264772415161,0.7714180946350098,0.7733827233314514,0.7750540971755981,0.776957631111145,0.7772872447967529,0.7770276069641113,0.7750237584114075,0.7698342204093933,0.75551438331604,0.711739718914032,0.6500203609466553,0.17428895831108093,-0.5548813343048096,-0.6841862201690674,-0.44432318210601807,0.4054153263568878,0.5823488235473633,0.7565397024154663,0.7561796307563782,0.7657750844955444,0.7707937359809875,0.7715329527854919,0.7689040303230286,0.7638201713562012,0.7539653778076172,0.7464195489883423,0.745614767074585,0.7527964115142822,0.7563818097114563,0.7636271119117737,0.7697340846061707,0.7730404734611511,0.7748187184333801,0.7765845060348511,0.7768712639808655,0.7764222025871277,0.7726410627365112,0.7650206685066223,0.7381519079208374,0.675887942314148,0.4559616446495056,-0.6496565341949463,-0.8128060698509216,-0.7838055491447449,-0.45444729924201965,0.42196547985076904,0.7520692348480225,0.7547415494918823,0.7604924440383911,0.7626238465309143,0.7647299766540527,0.7633667588233948,0.7570413947105408,0.7453019022941589,0.7394993305206299,0.7402987480163574,0.7465575337409973,0.7521867752075195,0.7606167793273926,0.7682549953460693,0.7728330492973328,0.7754639983177185,0.7763655781745911,0.7762293219566345,0.7749266624450684,0.7695802450180054,0.7542898058891296,0.7107076644897461,0.6205924153327942,-0.5421562194824219,-0.7862051725387573,-0.703409731388092,-0.48509517312049866,0.13084977865219116,0.7454016208648682,0.7482559680938721,0.7498794794082642,0.7515268921852112,0.752714216709137,0.7544751763343811,0.7509669661521912,0.7416332364082336,0.7339432239532471,0.7381080985069275,0.7426695227622986,0.7508756518363953,0.7618166208267212,0.7703805565834045,0.7738803029060364,0.7762821316719055,0.7765270471572876,0.7758007049560547,0.7717798352241516,0.7604842185974121,0.7223699688911438,0.610108494758606,0.13256894052028656,-0.42135000228881836,-0.3699589669704437,-0.11636612564325333,0.294147253036499,0.7413023114204407,0.7382585406303406,0.7387305498123169,0.7397938966751099,0.7432201504707336,0.745627224445343,0.74522465467453,0.7370362281799316,0.7330667972564697,0.7372822165489197,0.7428231239318848,0.7563198208808899,0.7680758833885193,0.7735655307769775,0.7764713764190674,0.7764711380004883,0.7745870351791382,0.7695353627204895,0.7529478073120117,0.6938880085945129,0.5312416553497314,0.3041805922985077,-0.053156182169914246,-0.16315573453903198,0.02254580892622471,0.28785941004753113,0.7359203696250916,0.7342079281806946,0.7330998182296753,0.7336534857749939,0.7352516651153564,0.7375121116638184,0.738013505935669,0.733353853225708,0.7346102595329285,0.7384345531463623,0.7512072920799255,0.766955554485321,0.7729517817497253,0.7750340700149536,0.7751408219337463,0.7716379761695862,0.7634326219558716,0.7310373783111572,0.651161789894104,0.4419063329696655,0.3633745610713959,0.2409813106060028,0.24206186830997467,0.3160839080810547,0.3785049617290497,0.7326207160949707,0.7309570908546448,0.7286971211433411,0.727397084236145,0.7299180030822754,0.7324932217597961,0.7337601184844971,0.7310632467269897,0.7333231568336487,0.7467044591903687,0.7642854452133179,0.7710592746734619,0.7730292677879333,0.7715475559234619,0.7656797766685486,0.7507129311561584,0.7075164914131165,0.5537246465682983,0.4071594476699829,0.43973177671432495,0.33385249972343445,0.27496233582496643,0.2850005030632019,0.2654884457588196,0.7296772003173828,0.7261320948600769,0.7233092784881592,0.7225314378738403,0.7240286469459534,0.7276427149772644,0.7291324138641357,0.7300149202346802,0.741076648235321,0.7627084255218506,0.7690721750259399,0.7698230743408203,0.7656989097595215,0.7539841532707214,0.729881227016449,0.6681914925575256,0.47578755021095276,0.41670313477516174,0.45752081274986267,0.37525954842567444,0.24974507093429565,0.21821260452270508,0.1775255650281906,0.725378692150116,0.7224929332733154,0.7195872068405151,0.7190947532653809,0.720733642578125,0.7229917645454407,0.7240060567855835,0.736896812915802,0.7590237855911255,0.7652851343154907,0.7637879848480225,0.7545536756515503,0.7408789992332458,0.7042553424835205,0.5522017478942871,0.43594494462013245,0.4368845820426941,0.4528358280658722,0.38005322217941284,0.239585742354393,0.17707577347755432,0.1218615472316742,0.7222912907600403,0.7190857529640198,0.7174450159072876,0.7163968086242676,0.71707683801651,0.7191052436828613,0.7353467345237732,0.7527193427085876,0.7603955268859863,0.7557355761528015,0.7463591694831848,0.7206587195396423,0.6492639780044556,0.4771994650363922,0.4428218603134155,0.44957637786865234,0.3730965554714203,0.3453698456287384,0.29970794916152954,0.19372384250164032,0.1597931981086731,0.7204394340515137,0.7173541188240051,0.7144258618354797,0.7138606309890747,0.7135249972343445,0.7307023406028748,0.7467502355575562,0.7526975274085999,0.7451032400131226,0.7340111136436462,0.6890890002250671,0.5177567005157471,0.42619988322257996,0.4539143443107605,0.4589851498603821,0.3427598178386688,0.2956892251968384,0.2651095688343048,0.2770584523677826,0.2652960419654846,0.7177562117576599,0.7146044373512268,0.7117630839347839,0.7105514407157898,0.719580888748169,0.7359235286712646,0.7398420572280884,0.7273645401000977,0.6732370853424072,0.539689838886261,0.40881386399269104,0.38049742579460144,0.41753071546554565,0.42470818758010864,0.3289204239845276,0.2853357791900635,0.2678218483924866,0.2649238705635071,0.2689466178417206,0.715390145778656,0.7114174962043762,0.7085964679718018,0.7058176398277283,0.7226611375808716,0.7245432138442993,0.7060874104499817,0.6102293133735657,0.33984988927841187,0.3016032874584198,0.31423696875572205,0.35980045795440674,0.35632339119911194,0.3249342739582062,0.29171696305274963,0.26826176047325134,0.25895947217941284,0.2671116590499878,0.7126311659812927,0.7076869010925293,0.7038347125053406,0.7121022343635559,0.704389750957489,0.6861182451248169,0.4912962019443512,0.14294713735580444,0.2029387205839157,0.26428914070129395,0.2898564338684082,0.26705461740493774,0.26483216881752014,0.26689866185188293,0.2650390565395355,0.2579496204853058,0.25418972969055176,0.7094509601593018,0.7054291367530823,0.6999219655990601,0.6953501105308533,0.6728890538215637,0.33743706345558167,0.08382739126682281,0.14605088531970978,0.21019470691680908,0.16159328818321228,0.17018204927444458,0.17686694860458374,0.2256941944360733,0.24999339878559113,0.2519703805446625,0.24998004734516144,0.7059603333473206,0.6985662579536438,0.6941266655921936,0.6761763691902161,0.36642614006996155,0.07592305541038513,0.07802324742078781,0.11997109651565552,0.11028395593166351,0.11055806279182434,0.15725907683372498,0.20114977657794952,0.2503873109817505,0.261720210313797,0.24770230054855347,0.6987924575805664,0.6929928660392761,0.6715379953384399,0.4736781120300293,0.08925368636846542,0.08495734632015228,0.08674263954162598,0.07569461315870285,0.08671164512634277,0.14913977682590485,0.20228688418865204,0.2605862319469452,0.2667854428291321,0.250152051448822,0.6873137950897217,0.6561071276664734,0.36270514130592346,0.12312844395637512,0.1199633926153183,0.1345849484205246,0.14704899489879608,0.15088054537773132,0.20999613404273987,0.24568676948547363,0.2875809967517853,0.2962513267993927,0.27975335717201233,0.5656377077102661,0.4885219931602478,0.42403870820999146,0.3438999354839325,0.3266223967075348,0.26211023330688477,0.244626984000206,0.2900690734386444,0.31489691138267517,0.3410917818546295,0.36620667576789856,0.32267680764198303,0.5397719740867615,0.5258613228797913,0.4888322949409485,0.4557831585407257,0.42168453335762024,0.361055463552475,0.34065356850624084,0.3718790113925934,0.38899895548820496,0.395685076713562,0.37083837389945984,0.5399118065834045,0.521181583404541,0.4932047128677368,0.46258023381233215,0.42423683404922485,0.4038254916667938,0.39714986085891724,0.40651342272758484,0.40881940722465515,0.39570382237434387,0.5166194438934326,0.49662113189697266,0.4749903082847595,0.4498406648635864,0.4300782084465027,0.41981738805770874,0.4150051474571228,0.41451334953308105,0.39881631731987,0.4825637638568878,0.4727745056152344,0.4496176838874817,0.43627387285232544,0.4229978024959564,0.4140335023403168,0.4078734219074249,0.40443870425224304,0.4347701072692871,0.42365342378616333,0.4185869097709656,0.41792798042297363,0.4188724160194397,0.4210507273674011,0.41613972187042236,0.3969171345233917,0.4010404646396637,0.4024045765399933,0.4063209295272827,0.43953073024749756,0.45753228664398193,0.3898151218891144,0.3945794403553009,0.39714688062667847,0.44177475571632385,0.49824678897857666,0.4208899438381195,0.422601580619812,0.43998050689697266,0.48016345500946045,0.4439147412776947,0.45615875720977783,0.4604738652706146,0.4635533094406128,0.4637879431247711,0.4692433476448059,0.717230498790741,0.705481767654419,0.6888670325279236,0.6696978211402893,0.66471266746521,0.6568126678466797,0.6665697693824768,0.6425758600234985,0.5468261241912842,0.47797104716300964,0.3805682957172394,0.38231369853019714,0.38885557651519775,0.4088693857192993,0.395447701215744,0.3823810815811157,0.34432554244995117,0.32098838686943054,0.2986573874950409,0.2734346091747284,0.2680125832557678,0.2522541284561157,0.25017571449279785,0.25153788924217224,0.2508188486099243,0.2594943940639496,0.26763466000556946,0.29093268513679504,0.32740139961242676,0.38599711656570435,0.44759565591812134,0.7152082324028015,0.7290206551551819,0.7380340099334717,0.7425693869590759,0.7438259720802307,0.7460464835166931,0.7468742728233337,0.7480747699737549,0.7499015927314758,0.7516121864318848,0.7535194754600525,0.7583181858062744,0.7639524340629578,0.7523568868637085,0.7137729525566101,0.6712462902069092,0.613685131072998,0.5755196809768677,0.5587053894996643,0.5461439490318298,0.5259827375411987,0.4820808470249176,0.42673009634017944,0.37901875376701355,0.3521718978881836,0.3169247806072235,0.3095734417438507,0.3243497312068939,0.34584343433380127,0.391865998506546,0.4524582624435425,0.735364556312561,0.7294518351554871,0.726067304611206,0.7195730209350586,0.7125948071479797,0.7074723243713379,0.7061005234718323,0.4166629910469055,0.6971116065979004,0.6740732789039612,0.590506374835968,0.49105432629585266,0.46499496698379517,0.46971991658210754,0.4691694974899292,0.4509453773498535,0.42880532145500183,0.3920682966709137,0.35022497177124023,0.3276987671852112,0.299202024936676,0.29122379422187805,0.2753409147262573,0.27161309123039246,0.27350133657455444,0.2669888138771057,0.27166658639907837,0.2979210317134857,0.3262832760810852,0.38372984528541565,0.7376847863197327,0.732971727848053,0.7299904823303223,0.7263888120651245,0.7208343744277954,0.46889668703079224,-0.3625491261482239,0.06563431024551392,0.7347992658615112,0.7216845750808716,0.6863458752632141,0.5877323746681213,0.5368528366088867,0.5158628225326538,0.5014949440956116,0.48946547508239746,0.47330617904663086,0.43606680631637573,0.3967568874359131,0.3649870753288269,0.33806732296943665,0.3113747835159302,0.2928435206413269,0.2774199843406677,0.2708714008331299,0.2607967257499695,0.27495038509368896,0.2971498668193817,0.3347075581550598,0.7390356659889221,0.7354643940925598,0.7346475124359131,0.7312456369400024,0.7266783714294434,-0.3058302700519562,-0.3506109416484833,0.5689577460289001,0.7486907243728638,0.7377011775970459,0.7136201858520508,0.6643208861351013,0.6097288727760315,0.5582199692726135,0.5309503078460693,0.5204837918281555,0.4996781647205353,0.471945583820343,0.4416676163673401,0.41333672404289246,0.3678641617298126,0.33436331152915955,0.30510833859443665,0.28262296319007874,0.27163082361221313,0.26820409297943115,0.28011471033096313,0.3068355619907379,0.7392985224723816,0.7376332879066467,0.7348566055297852,0.7339967489242554,0.7299115657806396,0.6186872720718384,0.749396562576294,0.7580270767211914,0.7585858702659607,0.7516805529594421,0.7301328778266907,0.6973777413368225,0.6591975688934326,0.6005357503890991,0.55269855260849,0.5354764461517334,0.5192118883132935,0.5002634525299072,0.4777410924434662,0.4372820556163788,0.4007285237312317,0.3574720323085785,0.3202064633369446,0.28947848081588745,0.27466168999671936,0.27288463711738586,0.28748729825019836,0.7447124719619751,0.740610659122467,0.7411807179450989,0.7440791130065918,0.7527049779891968,0.7586458921432495,0.7650423645973206,0.7668790817260742,0.7657079100608826,0.7600778937339783,0.745064377784729,0.7244840264320374,0.6946580410003662,0.6475192308425903,0.5825607180595398,0.5554938316345215,0.5415658354759216,0.523215115070343,0.5071015954017639,0.4736313223838806,0.42838194966316223,0.3864106833934784,0.34854620695114136,0.314321368932724,0.2930421531200409,0.2789871096611023,0.7554249167442322,0.7492582201957703,0.7514716386795044,0.7601220607757568,0.765511691570282,0.7713369727134705,0.7728495597839355,0.7729499936103821,0.7705982327461243,0.7656501531600952,0.7561941146850586,0.7409875392913818,0.7217288017272949,0.6808103919029236,0.6245847344398499,0.5743128657341003,0.5532020330429077,0.5356945395469666,0.5197165012359619,0.4922102689743042,0.45286715030670166,0.4087570011615753,0.3652399480342865,0.33484145998954773,0.3176470100879669,0.762640655040741,0.7597715854644775,0.7631270885467529,0.7694815993309021,0.7747981548309326,0.7767354249954224,0.7771316170692444,0.7757799029350281,0.7741000652313232,0.7689361572265625,0.7621496319770813,0.7533746361732483,0.7368196249008179,0.7087490558624268,0.6597045063972473,0.6099732518196106,0.5698915719985962,0.5468947291374207,0.5288853645324707,0.5062764883041382,0.47142595052719116,0.42288288474082947,0.3824925720691681,0.35902220010757446,0.7668898105621338,0.7688420414924622,0.7719549536705017,0.7770563364028931,0.7792768478393555,0.7808324098587036,0.7797752618789673,0.7788114547729492,0.7762061357498169,0.7725921869277954,0.7654402852058411,0.7586647272109985,0.746760904788971,0.7250902056694031,0.6851080060005188,0.6343481540679932,0.5916871428489685,0.5605476498603821,0.5412455797195435,0.5219408869743347,0.4890345633029938,0.44133639335632324,0.40604156255722046,0.7702791094779968,0.7731048464775085,0.7769681811332703,0.780927300453186,0.7822362780570984,0.782427966594696,0.7819225192070007,0.7808898687362671,0.7780235409736633,0.7748863101005554,0.7713663578033447,0.7650964260101318,0.7560513019561768,0.7381928563117981,0.7075438499450684,0.6686040163040161,0.6241356730461121,0.5771522521972656,0.5520573258399963,0.5360692143440247,0.5084916353225708,0.4644341468811035,0.7719088196754456,0.7757181525230408,0.7793374061584473,0.7817128896713257,0.7826558947563171,0.7827504277229309,0.7826526761054993,0.7820454239845276,0.7802008986473083,0.7774531841278076,0.7749649286270142,0.7699136137962341,0.7630966901779175,0.7489573359489441,0.7284473180770874,0.6972695589065552,0.6481062769889832,0.5904079675674438,0.5576390624046326,0.5438269972801208,0.5202072858810425,0.7730944156646729,0.7765913605690002,0.7803630232810974,0.7824678421020508,0.7829429507255554,0.7829036116600037,0.7822768092155457,0.7821685075759888,0.7811141014099121,0.7790160775184631,0.776096761226654,0.7731373310089111,0.7682099938392639,0.7566068768501282,0.7407208681106567,0.7121661901473999,0.6550047397613525,0.5934674739837646,0.5581077933311462,0.546196460723877,0.7736316323280334,0.778258204460144,0.7811504006385803,0.782208263874054,0.7830507159233093,0.7835375666618347,0.7828556895256042,0.7823219895362854,0.781335175037384,0.7806201577186584,0.7787463068962097,0.7749584913253784,0.7714310884475708,0.761391818523407,0.7445101737976074,0.7146474123001099,0.6550665497779846,0.5863901376724243,0.5587758421897888,0.7751466035842896,0.7788645625114441,0.7813332080841064,0.7820315957069397,0.7828606367111206,0.7833969593048096,0.7834374904632568,0.7829480171203613,0.7818136215209961,0.7803824543952942,0.7796198129653931,0.7778398990631104,0.7729594111442566,0.764341413974762,0.7476614117622375,0.709521472454071,0.6390569806098938,0.5818719267845154,0.777434766292572,0.7798923850059509,0.7812862992286682,0.7822355031967163,0.7830271124839783,0.7831956744194031,0.7833859920501709,0.7832337617874146,0.7824657559394836,0.7813743948936462,0.7801622152328491,0.7780688405036926,0.7742789387702942,0.7677363753318787,0.7473258376121521,0.6990970373153687,0.6290568709373474,0.7780947089195251,0.7800369262695312,0.781123161315918,0.7817355990409851,0.7825026512145996,0.7829872369766235,0.7830922603607178,0.7830597758293152,0.7828414440155029,0.7823735475540161,0.7810133099555969,0.7788951396942139,0.7751559615135193,0.7670072913169861,0.738699734210968,0.6901897192001343,0.7795226573944092,0.7805179357528687,0.7810221314430237,0.7817502021789551,0.7823352813720703,0.7827135920524597,0.7826833128929138,0.7830837368965149,0.7827344536781311,0.7824326753616333,0.7813494801521301,0.7789405584335327,0.7757861614227295,0.7641025185585022,0.7296655178070068,0.7794042229652405,0.7804241180419922,0.780620276927948,0.78145432472229,0.7819845080375671,0.7824811935424805,0.7821922898292542,0.7822716236114502,0.7822458148002625,0.7813445925712585,0.7805985808372498,0.7789377570152283,0.7745007872581482,0.7599050998687744,0.7795411348342896,0.7796115279197693,0.7800499200820923,0.7800517678260803,0.7802137136459351,0.7806351780891418,0.7806755900382996,0.7808390259742737,0.7807890772819519,0.7805622816085815,0.7792622447013855,0.7764126658439636,0.7697179913520813,0.7783008813858032,0.7782451510429382,0.7784663438796997,0.7784067392349243,0.7779490947723389,0.7785183787345886,0.7790951728820801,0.7790456414222717,0.777427613735199,0.7762801051139832,0.7738668918609619,0.7720862627029419,0.7753903865814209,0.7750101089477539,0.7730993628501892,0.7699018716812134,0.7684611082077026,0.7696729302406311,0.769689679145813,0.7669206857681274,0.7657910585403442,0.7638097405433655,0.7612223029136658,0.7694302797317505,0.7654111981391907,0.7556564807891846,0.726396381855011,0.7119634747505188,0.722560703754425,0.7434591054916382,0.7538856863975525,0.7549842000007629,0.7545514702796936,0.7556168437004089,0.7331904768943787,0.6938284039497375,0.6778591275215149,0.6859666705131531,0.7144469022750854,0.7405613660812378,0.7502474188804626,0.7519201636314392,0.7088288068771362,0.6765559911727905,0.6642202734947205,0.6669337153434753,0.699264645576477,0.7297442555427551,0.7438388466835022,0.7490476369857788,0.6661917567253113,0.655717670917511,0.6249384880065918,0.6910488605499268,0.7201605439186096,0.7399477958679199,0.7462474703788757,0.6466706395149231,0.6551782488822937,0.67936772108078,0.7169460654258728,0.7365337014198303,0.7446738481521606,0.6437737345695496,0.6731631755828857,0.71333909034729,0.7331002354621887,0.7423278093338013,0.6552135944366455,0.7040992379188538,0.7295939922332764,0.7393705248832703,0.676920473575592,0.7231311798095703,0.7357686161994934,0.7003975510597229,0.7277433276176453,0.7114214301109314,0.5146629214286804,0.5206611752510071,0.5187877416610718,0.5148426294326782,0.5085426568984985,0.5026004910469055,0.4980901777744293,0.4957382380962372,0.4918065369129181,0.4914396405220032,0.4916096329689026,0.48906779289245605,0.48814907670021057,0.48605310916900635,0.47616973519325256,0.4591653347015381,0.4204901456832886,0.24187731742858887,0.13330452144145966,0.07001443952322006,0.21377235651016235,0.3452889621257782,0.4408005475997925,0.4769616723060608,0.4816097021102905,0.47831445932388306,0.46954870223999023,0.4291873574256897,0.41674384474754333,0.41615158319473267,0.4206307530403137,0.49937689304351807,0.5088540315628052,0.5067716240882874,0.5017349720001221,0.49871182441711426,0.49275439977645874,0.4876616299152374,0.48301219940185547,0.47948673367500305,0.477978378534317,0.4782537817955017,0.48033905029296875,0.4843983054161072,0.48728036880493164,0.4925953149795532,0.5002827644348145,0.5056511163711548,0.5124824047088623,0.5134325623512268,0.44287851452827454,0.2299986183643341,0.08231402933597565,0.04951448366045952,0.04160885140299797,0.040144313126802444,0.04491095244884491,0.11208311468362808,0.14557646214962006,0.18102477490901947,0.2113107293844223,0.29451149702072144,0.4421050548553467,0.4525138735771179,0.4748828411102295,0.48380178213119507,0.484933078289032,0.4847124516963959,0.48207321763038635,0.47963303327560425,0.47721198201179504,0.4729357659816742,0.469378799200058,0.4642484188079834,0.45878395438194275,0.4453814923763275,0.425090491771698,0.2843218445777893,0.08108725398778915,0.046481333673000336,0.037658754736185074,0.034559283405542374,0.03325972706079483,0.03243725001811981,0.03209922835230827,0.03181958571076393,0.03185277059674263,0.032299648970365524,0.03267126902937889,0.0338396318256855,0.0360797718167305,0.04458378255367279,0.11071861535310745,0.5163261890411377,0.5197353959083557,0.5160331726074219,0.5116314888000488,0.5054203271865845,0.500559389591217,0.4974309206008911,0.49581819772720337,0.49476125836372375,0.49278974533081055,0.4911728799343109,0.4909055233001709,0.4847639203071594,0.47715604305267334,0.46421220898628235,0.44328057765960693,0.39751189947128296,0.2300829142332077,0.22673772275447845,0.28628021478652954,0.4218677878379822,0.46779656410217285,0.47427719831466675,0.48112034797668457,0.4814680218696594,0.4784618318080902,0.4807286262512207,0.48232218623161316,0.47485625743865967,0.459929883480072,0.5182042717933655,0.5169693231582642,0.513721764087677,0.5087897181510925,0.5032548904418945,0.49748414754867554,0.49505022168159485,0.49532315135002136,0.495818167924881,0.49349460005760193,0.4922783672809601,0.4858866035938263,0.4783778190612793,0.4656277894973755,0.46319520473480225,0.428069531917572,0.32149356603622437,0.32009294629096985,0.39528578519821167,0.4374622702598572,0.46281588077545166,0.470497190952301,0.4736160337924957,0.4773271083831787,0.4764815866947174,0.4772263765335083,0.48166003823280334,0.4834499657154083,0.46767473220825195,0.5136704444885254,0.5121748447418213,0.509275496006012,0.505378782749176,0.49980512261390686,0.4943123161792755,0.4930558204650879,0.493407279253006,0.4952825605869293,0.49448251724243164,0.48838451504707336,0.4807840883731842,0.46981072425842285,0.47384464740753174,0.4299982488155365,0.405150830745697,0.37914183735847473,0.41779059171676636,0.4444766938686371,0.45786982774734497,0.46263110637664795,0.4679837226867676,0.4731720983982086,0.4747758209705353,0.48088571429252625,0.4833631217479706,0.48497188091278076,0.4820955693721771,0.5090871453285217,0.5074831247329712,0.5050526857376099,0.5005462765693665,0.495290070772171,0.49100056290626526,0.49031153321266174,0.4910714328289032,0.4927012324333191,0.49028435349464417,0.48221930861473083,0.47261109948158264,0.4796937108039856,0.45962169766426086,0.41005176305770874,0.40137577056884766,0.4283970594406128,0.4446948170661926,0.4494549036026001,0.4528653919696808,0.46322646737098694,0.46809810400009155,0.4739856421947479,0.4806510806083679,0.4835561513900757,0.4859012961387634,0.4846022427082062,0.5029635429382324,0.5012530088424683,0.49949321150779724,0.4961771070957184,0.4908180236816406,0.48775529861450195,0.48769697546958923,0.48826703429222107,0.48690932989120483,0.48261088132858276,0.47440004348754883,0.4762977659702301,0.4736509621143341,0.41383251547813416,0.40441638231277466,0.4191155433654785,0.44182994961738586,0.4461371898651123,0.4503573179244995,0.460416704416275,0.4647723138332367,0.4708860516548157,0.47804081439971924,0.48273766040802,0.4841015338897705,0.48544231057167053,0.4955005645751953,0.49589917063713074,0.49249282479286194,0.49040597677230835,0.4867931008338928,0.48410943150520325,0.48539111018180847,0.48301923274993896,0.47847312688827515,0.4743189513683319,0.47595155239105225,0.4778180420398712,0.41564249992370605,0.39217713475227356,0.4259343147277832,0.4342403709888458,0.44237378239631653,0.4487714469432831,0.45977887511253357,0.4651740789413452,0.4709914028644562,0.4769691526889801,0.4799376130104065,0.4821089506149292,0.4832494854927063,0.48875224590301514,0.4881620705127716,0.484127014875412,0.48310375213623047,0.4808695316314697,0.48128023743629456,0.48156464099884033,0.47617989778518677,0.4703870117664337,0.4717137813568115,0.49573513865470886,0.42684438824653625,0.37447965145111084,0.4247456192970276,0.42242664098739624,0.4377790093421936,0.4471130669116974,0.45495182275772095,0.4634971022605896,0.46882686018943787,0.4728492796421051,0.4783783555030823,0.4793177545070648,0.48197299242019653,0.48168668150901794,0.48016995191574097,0.4757649898529053,0.47303441166877747,0.47395193576812744,0.4750564992427826,0.47663605213165283,0.4691700041294098,0.4656125605106354,0.4803268015384674,0.4678683578968048,0.3139972686767578,0.264386385679245,0.40367206931114197,0.42437079548835754,0.4385840594768524,0.4498336911201477,0.4592120945453644,0.46581968665122986,0.46966230869293213,0.47413262724876404,0.4774363338947296,0.47813892364501953,0.47547170519828796,0.46381303668022156,0.4609089195728302,0.4639433026313782,0.46616849303245544,0.46847736835479736,0.4677850902080536,0.46124446392059326,0.46531468629837036,0.47289252281188965,0.24947252869606018,0.11032009869813919,0.13350000977516174,0.38830888271331787,0.42780765891075134,0.4419977068901062,0.4508856236934662,0.4617360532283783,0.4666076600551605,0.47002285718917847,0.47246527671813965,0.47412580251693726,0.4678042531013489,0.45283010601997375,0.4455607831478119,0.44980865716934204,0.45295700430870056,0.4583522081375122,0.4542676508426666,0.445477694272995,0.39015093445777893,0.09683199226856232,0.07923982292413712,0.07672082632780075,0.10348153859376907,0.37873128056526184,0.4306127429008484,0.44313809275627136,0.450673371553421,0.4613216519355774,0.46618011593818665,0.46715593338012695,0.46945488452911377,0.46408113837242126,0.4483809173107147,0.430222749710083,0.4342593848705292,0.43860289454460144,0.4411579370498657,0.4274389445781708,0.39974069595336914,0.08715283870697021,0.06107812374830246,0.057983990758657455,0.06750573217868805,0.08999010175466537,0.356005996465683,0.4298686683177948,0.44155749678611755,0.44758471846580505,0.4575854539871216,0.4619588851928711,0.46513259410858154,0.4640851616859436,0.4440588057041168,0.42419689893722534,0.4157032370567322,0.41970664262771606,0.4121910333633423,0.3736726939678192,0.10594965517520905,0.05744161456823349,0.05179482325911522,0.050742004066705704,0.05962207540869713,0.08164819329977036,0.32209110260009766,0.4267227351665497,0.4375838339328766,0.4456489682197571,0.4534457325935364,0.4591706693172455,0.4670567810535431,0.445406049489975,0.42435771226882935,0.40490907430648804,0.3908267319202423,0.3491649627685547,0.1328551471233368,0.055985014885663986,0.04714568331837654,0.04366643726825714,0.04572063311934471,0.05234462767839432,0.07056901603937149,0.22987978160381317,0.41928064823150635,0.43469512462615967,0.4440355598926544,0.44848790764808655,0.4721669554710388,0.4520259499549866,0.4211849570274353,0.3886350989341736,0.3310685455799103,0.10385433584451675,0.0537240095436573,0.04345863312482834,0.04120910167694092,0.04061197489500046,0.04210253059864044,0.04728902131319046,0.0569106787443161,0.11995332688093185,0.41035908460617065,0.4290662407875061,0.4350508749485016,0.47782188653945923,0.45671385526657104,0.420100599527359,0.3788917362689972,0.12003806978464127,0.054428599774837494,0.044472355395555496,0.03996358811855316,0.03849545493721962,0.03890533372759819,0.03989443928003311,0.0440058596432209,0.05058908089995384,0.08061957359313965,0.30430904030799866,0.41515791416168213,0.48513293266296387,0.46006694436073303,0.4245983362197876,0.2145296186208725,0.05993572250008583,0.045189738273620605,0.03969979286193848,0.03797704353928566,0.03801591321825981,0.03799610957503319,0.03908948227763176,0.041145797818899155,0.046673811972141266,0.06665558367967606,0.11597713083028793,0.4909789562225342,0.4573121666908264,0.2511349320411682,0.07015430927276611,0.047283392399549484,0.039888858795166016,0.03770263120532036,0.03726484999060631,0.037269286811351776,0.037578683346509933,0.03807760402560234,0.039362117648124695,0.04375484958291054,0.05454142391681671,0.49074262380599976,0.2864592373371124,0.06716642528772354,0.04725182056427002,0.04031318426132202,0.03748775273561478,0.03661767765879631,0.03630640357732773,0.03593510761857033,0.03640400245785713,0.03673233464360237,0.03788407891988754,0.041043877601623535,0.3191102147102356,0.07665587216615677,0.04441060125827789,0.040088292211294174,0.03690250590443611,0.03573364391922951,0.03551274165511131,0.03523293882608414,0.03494718670845032,0.03544236347079277,0.0356864333152771,0.035982318222522736,0.1085827574133873,0.04418191313743591,0.0382675938308239,0.03673166036605835,0.035352591425180435,0.03429412841796875,0.03374580293893814,0.033942800015211105,0.03421866148710251,0.03434886410832405,0.034557096660137177,0.05280209705233574,0.039343275129795074,0.036472585052251816,0.034833915531635284,0.03364695981144905,0.033249299973249435,0.033166904002428055,0.03311798721551895,0.03300553932785988,0.033417973667383194,0.03963145241141319,0.03620303049683571,0.03429216146469116,0.03321313485503197,0.0328320749104023,0.03253409266471863,0.03247483819723129,0.032413870096206665,0.03249354287981987,0.03626960143446922,0.03382832184433937,0.0333080030977726,0.032702188938856125,0.032454654574394226,0.032295383512973785,0.03219278156757355,0.032080356031656265,0.0347752720117569,0.03330393135547638,0.03278092294931412,0.03243757039308548,0.03218734636902809,0.032078370451927185,0.03179692104458809,0.03461601585149765,0.03276243433356285,0.03266708552837372,0.03234114125370979,0.03221018612384796,0.03188745677471161,0.034877825528383255,0.03330143541097641,0.03273502364754677,0.03238509222865105,0.03226957470178604,0.03565533459186554,0.03427097201347351,0.03319866582751274,0.032441653311252594,0.047705668956041336,0.035498201847076416,0.03425635024905205,0.06652236729860306,0.03732549771666527,0.07644418627023697,0.33003535866737366,0.2606078088283539,0.13578377664089203,0.07961459457874298,0.05521842837333679,0.07877969741821289,0.1439240574836731,0.22769007086753845,0.37335193157196045,0.523160457611084,0.531131386756897,0.5297553539276123,0.5277966260910034,0.5251743197441101,0.5203486084938049,0.5138958692550659,0.506492555141449,0.49904757738113403,0.46263378858566284,0.4196222126483917,0.2953343987464905,0.1297674924135208,0.04327038303017616,0.039762891829013824,0.04725094512104988,0.04794648662209511,0.05022565647959709,0.24850289523601532,0.41984304785728455,0.34530535340309143,0.34648120403289795,0.34488025307655334,0.3300352692604065,0.3362310826778412,0.3592485189437866,0.40606001019477844,0.4281560182571411,0.45706436038017273,0.4848282039165497,0.47301703691482544,0.46842700242996216,0.4702630043029785,0.47154346108436584,0.46458619832992554,0.45363298058509827,0.436918169260025,0.41825857758522034,0.41615352034568787,0.43833670020103455,0.45118826627731323,0.49337825179100037,0.5314587950706482,0.5543274283409119,0.5666698813438416,0.5719106197357178,0.5719813704490662,0.7304712533950806,0.7426930665969849,0.7378506660461426,0.7140109539031982,0.6052147746086121,0.49529826641082764,0.3775162398815155,0.39622747898101807,0.4118816554546356,0.4161122739315033,0.4286557137966156,0.47191688418388367,0.4903331696987152,0.5055239796638489,0.49923208355903625,0.48876622319221497,0.4881189465522766,0.4858953654766083,0.48462361097335815,0.4863603115081787,0.4875442385673523,0.4803561568260193,0.47352322936058044,0.4673609435558319,0.4638082683086395,0.4607607126235962,0.4556160569190979,0.45563212037086487,0.462468683719635,0.4590446352958679,0.44827374815940857,0.05339565873146057,0.051231831312179565,-0.013642960228025913,-0.024639621376991272,0.010644698515534401,0.009235468693077564,0.5054470896720886,0.47423356771469116,0.44448843598365784,0.33926644921302795,0.15663909912109375,0.3277495801448822,0.4671967029571533,0.5247501730918884,0.5407902002334595,0.5412970781326294,0.5397931933403015,0.536435604095459,0.5324137210845947,0.5277482271194458,0.5222449898719788,0.517569899559021,0.5133482813835144,0.5097390413284302,0.5067240595817566,0.5059797763824463,0.5049206018447876,0.5010815858840942,0.3626581132411957,0.1415351927280426,0.05910569801926613,0.04291783645749092,0.04273068159818649,0.04618263617157936,0.04441080614924431,0.03908546268939972,0.6028550267219543,0.6387194395065308,0.6598649621009827,0.6457194089889526,0.5708494782447815,0.43764039874076843,0.5264532566070557,0.5570708513259888,0.5591306686401367,0.5571502447128296,0.5541111826896667,0.5490162372589111,0.5459146499633789,0.5407750010490417,0.5370852947235107,0.5337210297584534,0.5301198363304138,0.5257745981216431,0.5206896066665649,0.5220708250999451,0.5232365727424622,0.5228444337844849,0.5195938944816589,0.41649842262268066,0.22859415411949158,0.11674915999174118,0.06100352481007576,0.040114279836416245,0.028608093038201332,0.7235690951347351,0.7328694462776184,0.7380053400993347,0.7401205897331238,0.7399876713752747,0.7392898797988892,0.7347051501274109,0.7254011034965515,0.6772490739822388,0.5759172439575195,0.5730206370353699,0.5673012137413025,0.5620294809341431,0.5570672750473022,0.5542991757392883,0.5542311072349548,0.5522413849830627,0.548961877822876,0.5471689701080322,0.5478618144989014,0.5481112599372864,0.5471662878990173,0.5449451804161072,0.5287966728210449,0.4292641282081604,0.3226073682308197,0.21494491398334503,0.09812366962432861,0.7412910461425781,0.7424854636192322,0.7423920035362244,0.7434417605400085,0.7435391545295715,0.7432378530502319,0.7420300245285034,0.7399533987045288,0.7334238290786743,0.7115057706832886,0.5888508558273315,0.5747137665748596,0.5697342753410339,0.5624062418937683,0.5584149956703186,0.5583197474479675,0.5582736730575562,0.557712733745575,0.5579778552055359,0.5603190660476685,0.5607340931892395,0.5598787665367126,0.5567689538002014,0.5513247847557068,0.5443066358566284,0.34692779183387756,0.14414656162261963,0.7427330613136292,0.7419710159301758,0.741243839263916,0.7399361729621887,0.738814651966095,0.7350035905838013,0.7206906080245972,0.6275619864463806,0.5676841139793396,0.5542768239974976,0.5344055891036987,0.5328442454338074,0.5314066410064697,0.5311921238899231,0.5331070423126221,0.5312842726707458,0.5319666862487793,0.533237874507904,0.5388402938842773,0.5457698106765747,0.5525782704353333,0.5538250207901001,0.5469181537628174,0.43734660744667053,0.1639406979084015,0.09257696568965912,0.6855829358100891,0.587839663028717,0.5676996111869812,0.5641699433326721,0.5637780427932739,0.5634264349937439,0.5617870092391968,0.5587281584739685,0.5551291704177856,0.5488137602806091,0.5398596525192261,0.5300243496894836,0.521056056022644,0.5144935846328735,0.5091710090637207,0.5048469305038452,0.5004085898399353,0.49548736214637756,0.49114522337913513,0.48240262269973755,0.43970179557800293,0.24501127004623413,0.06104539707303047,0.05477367714047432,0.05127796158194542,0.565690279006958,0.5642539858818054,0.5663809180259705,0.5675305724143982,0.5654042363166809,0.5623032450675964,0.5592629313468933,0.5552601218223572,0.5507566332817078,0.5436683893203735,0.5315167307853699,0.5179129242897034,0.5039787292480469,0.49529629945755005,0.48942404985427856,0.48465874791145325,0.4790487289428711,0.4657333493232727,0.43726181983947754,0.42206400632858276,0.44303253293037415,0.45904943346977234,0.4647427201271057,0.47032710909843445,0.5718173384666443,0.5676703453063965,0.5638583302497864,0.55952388048172,0.5561037659645081,0.5536775588989258,0.5505180358886719,0.5496154427528381,0.5426146388053894,0.5331557393074036,0.5205387473106384,0.5081989765167236,0.4959436058998108,0.48605459928512573,0.4753675162792206,0.4518173635005951,0.44597354531288147,0.4210919141769409,0.39854976534843445,0.41811734437942505,0.44447749853134155,0.44720277190208435,0.4491014778614044,0.562030017375946,0.5569342970848083,0.5539275407791138,0.5477867722511292,0.5450620055198669,0.5418210625648499,0.5369109511375427,0.5321723222732544,0.52583247423172,0.5229374766349792,0.5173384547233582,0.5062726736068726,0.49641215801239014,0.4371683895587921,0.33217352628707886,0.29537102580070496,0.2696850299835205,0.36358964443206787,0.40451115369796753,0.42163723707199097,0.4276528060436249,0.44717445969581604,0.5472790002822876,0.5417494177818298,0.5368831753730774,0.5320305228233337,0.5257736444473267,0.5195149779319763,0.5181319117546082,0.5200713872909546,0.5192468762397766,0.5121598243713379,0.5029319524765015,0.49364107847213745,0.4378969073295593,0.29954683780670166,0.24581864476203918,0.2309681922197342,0.24597984552383423,0.3446081578731537,0.4199681580066681,0.4300273358821869,0.4412722587585449,0.5257257223129272,0.5199990272521973,0.514801025390625,0.5081924200057983,0.501531183719635,0.499036580324173,0.5059075951576233,0.511999249458313,0.5094514489173889,0.5023126006126404,0.4954845905303955,0.4697894752025604,0.45213326811790466,0.2102137804031372,0.18632099032402039,0.20880286395549774,0.38953351974487305,0.4217357039451599,0.43539878726005554,0.44425168633461,0.4881226122379303,0.47440674901008606,0.47299647331237793,0.4760989248752594,0.48520857095718384,0.4970565140247345,0.504457950592041,0.5044641494750977,0.5002437233924866,0.49633318185806274,0.4800727367401123,0.4179171919822693,0.4248684048652649,0.406208336353302,0.39265504479408264,0.41083091497421265,0.4238514006137848,0.4342867136001587,0.44597676396369934,0.44535863399505615,0.4422692060470581,0.45165908336639404,0.46823036670684814,0.4864099621772766,0.49369314312934875,0.49900513887405396,0.5017654299736023,0.49592339992523193,0.492052286863327,0.45258766412734985,0.42483916878700256,0.4104499816894531,0.41058069467544556,0.414651095867157,0.42443451285362244,0.43414634466171265,0.4483340382575989,0.43072834610939026,0.4241015613079071,0.4292716979980469,0.44667258858680725,0.4634239971637726,0.4782845675945282,0.4851425290107727,0.489886075258255,0.4881843328475952,0.46686795353889465,0.44313979148864746,0.4228563904762268,0.4245847165584564,0.42554542422294617,0.4362034499645233,0.443808376789093,0.45332810282707214,0.40106913447380066,0.3990590274333954,0.406177818775177,0.42088085412979126,0.4395298659801483,0.45503899455070496,0.46288371086120605,0.4658812880516052,0.458122193813324,0.4476335942745209,0.43905168771743774,0.43916067481040955,0.44222527742385864,0.44961193203926086,0.4558497369289398,0.46391499042510986,0.4146783947944641,0.4260556697845459,0.4384727478027344,0.4424838721752167,0.446631520986557,0.4522915482521057,0.4491993188858032,0.45276519656181335,0.45013687014579773,0.4514610767364502,0.45238396525382996,0.45653483271598816,0.4630492031574249,0.4652668833732605,0.4717792570590973,0.4412230849266052,0.4443392753601074,0.45037683844566345,0.4528096318244934,0.4538608193397522,0.45431971549987793,0.4582480788230896,0.46267592906951904,0.4631129205226898,0.463660329580307,0.4665397107601166,0.46951910853385925,0.4753834009170532,0.4809730648994446,0.45595791935920715,0.4587370455265045,0.46094486117362976,0.4629477858543396,0.46625420451164246,0.4674292802810669,0.4687942564487457,0.4699101746082306,0.4709979295730591,0.47239404916763306,0.47847962379455566,0.4841315448284149,0.4889355003833771,0.466259241104126,0.46929559111595154,0.4695483446121216,0.46996399760246277,0.4705236852169037,0.4710686504840851,0.4722622036933899,0.47263267636299133,0.47541099786758423,0.48137593269348145,0.4858749508857727,0.4898810386657715,0.4712666869163513,0.47125303745269775,0.4719352722167969,0.4718937873840332,0.4711835980415344,0.4712672531604767,0.47223931550979614,0.4760042130947113,0.4808688163757324,0.4842747747898102,0.4872300922870636,0.47045379877090454,0.4687248468399048,0.46876227855682373,0.46986785531044006,0.47018492221832275,0.47112351655960083,0.47233182191848755,0.47611764073371887,0.48156973719596863,0.4847189784049988,0.4664593040943146,0.46643275022506714,0.4661024808883667,0.46750688552856445,0.46823057532310486,0.47008606791496277,0.47197628021240234,0.4775688350200653,0.4860815703868866,0.4732896387577057,0.4722740352153778,0.4680747091770172,0.46803513169288635,0.47060564160346985,0.4772591292858124,0.4896017014980316,0.49743539094924927,0.48070549964904785,0.4784882962703705,0.4782029986381531,0.4842916429042816,0.483603298664093,0.4831460118293762,0.497715026140213,0.45900866389274597,0.4575498700141907,0.4591095745563507,0.45286697149276733,0.4616313576698303,0.4751212000846863,0.4339015781879425,0.4218270778656006,0.4186299443244934,0.42447951436042786,0.43785837292671204,0.3851659297943115,0.38126516342163086,0.3935175836086273,0.4109066128730774,0.3449913561344147,0.3680993318557739,0.3848505914211273,0.3406616151332855,0.36765238642692566,0.35841938853263855,0.5777561068534851,0.4320995807647705,0.368800550699234,0.2688329815864563,0.12548217177391052,0.0949913039803505,0.06648796051740646,0.031614627689123154,-0.029707152396440506,-0.07314211875200272,-0.09650098532438278,-0.10713249444961548,-0.1067318543791771,-0.10081259906291962,-0.09220915287733078,-0.07645147293806076,-0.04134826362133026,-0.019882194697856903,-0.032515548169612885,-0.07405133545398712,-0.10983990132808685,-0.15724900364875793,-0.19318680465221405,-0.23520676791667938,-0.38029745221138,-0.7765135169029236,-1.128717303276062,-1.3756657838821411,-1.497639775276184,-1.5473865270614624,-1.5817666053771973,0.46643465757369995,0.46592333912849426,0.46206241846084595,0.45216619968414307,0.4398035705089569,0.4279371500015259,0.40337467193603516,0.38376227021217346,0.36198970675468445,0.3217526376247406,0.2719697654247284,0.28872111439704895,0.2809890806674957,0.24802204966545105,-0.21431608498096466,-1.469129204750061,-1.5638844966888428,-1.5732476711273193,-1.5909606218338013,-1.5977659225463867,-1.6043612957000732,-1.6082863807678223,-1.6113994121551514,-1.6218562126159668,-1.6284639835357666,-1.6346635818481445,-1.633165717124939,-1.6359646320343018,-1.6381263732910156,-1.63399338722229,-1.6282004117965698,-1.5941730737686157,-1.5655957460403442,-1.5195602178573608,-1.3909634351730347,-1.1633577346801758,-0.8108213543891907,-0.4091961979866028,-0.24145933985710144,-0.19378706812858582,-0.1596355140209198,-0.10829699039459229,-0.05741240084171295,-0.015978679060935974,-0.0008343576337210834,-0.027055105194449425,-0.055192284286022186,-0.07766101509332657,-0.08146043866872787,-0.07778026163578033,-0.07639656215906143,-0.05691978707909584,-0.01110690739005804,0.039075203239917755,0.07259249687194824,0.09172254800796509,0.10878069698810577,0.157333105802536,0.3205721974372864,0.3942217528820038,0.4616129398345947,-1.6022223234176636,-1.5716893672943115,-1.5256412029266357,-1.4164988994598389,-1.203879475593567,-0.859199583530426,-0.44211646914482117,-0.24332177639007568,-0.1946907341480255,-0.14542047679424286,-0.07313480228185654,-0.024972744286060333,0.01873060315847397,0.02504056878387928,-0.006708212196826935,-0.03147623687982559,-0.04936728626489639,-0.04771871119737625,-0.04703444987535477,-0.03172382339835167,0.015934010967612267,0.05710964649915695,0.08334489911794662,0.10401666909456253,0.1040530651807785,0.11894802749156952,0.1576702743768692,0.27232304215431213,0.35115450620651245,-1.6152697801589966,-1.5709954500198364,-1.5401439666748047,-1.4268110990524292,-1.230713963508606,-0.9357767701148987,-0.5050925612449646,-0.26305583119392395,-0.18853403627872467,-0.09402164071798325,-0.014381201937794685,0.028662456199526787,0.06081296131014824,0.05246572569012642,0.02831605076789856,0.009971865452826023,0.002378719625994563,0.009420131333172321,0.025780534371733665,0.05273222178220749,0.08906815946102142,0.10873813182115555,0.11585243791341782,0.1105777770280838,0.12080155313014984,0.12535999715328217,0.1628282219171524,0.21575599908828735,-1.6124796867370605,-1.5726653337478638,-1.5380094051361084,-1.436147928237915,-1.277114748954773,-0.9588684439659119,-0.6349160671234131,-0.28527167439460754,-0.1399412602186203,0.011823081411421299,0.0862143486738205,0.10988019406795502,0.12445870041847229,0.11388209462165833,0.0911407619714737,0.08852453529834747,0.09065259248018265,0.10402610152959824,0.11839395761489868,0.1311524510383606,0.1399417668581009,0.1410408914089203,0.14651882648468018,0.14315558969974518,0.1388261765241623,0.12451428920030594,0.14874492585659027,-1.608703851699829,-1.5797706842422485,-1.5369455814361572,-1.4300605058670044,-1.3029913902282715,-1.1080468893051147,-0.7876859307289124,-0.21994242072105408,0.03140505403280258,0.1723308265209198,0.2232656627893448,0.22663819789886475,0.20449599623680115,0.19923089444637299,0.1965218484401703,0.18512724339962006,0.18794609606266022,0.19604627788066864,0.19034995138645172,0.18622086942195892,0.18445679545402527,0.1856430023908615,0.177277609705925,0.16569401323795319,0.14348772168159485,0.14740899205207825,-1.6108486652374268,-1.578887939453125,-1.5288413763046265,-1.4486004114151,-1.3575191497802734,-1.2537853717803955,-1.0616931915283203,0.014240060932934284,0.24742168188095093,0.301717609167099,0.3002401292324066,0.27041494846343994,0.2807372808456421,0.2760319709777832,0.2702353894710541,0.25771692395210266,0.25428321957588196,0.24338699877262115,0.2329687774181366,0.22281819581985474,0.2230912297964096,0.21008841693401337,0.19923755526542664,0.1540176272392273,0.14054431021213531,-1.6064597368240356,-1.574235439300537,-1.524787187576294,-1.4731594324111938,-1.4202604293823242,-1.3407694101333618,-0.9487476348876953,0.2693542540073395,0.3349840044975281,0.3239764869213104,0.280846506357193,0.31230682134628296,0.3328125774860382,0.3264499306678772,0.3113252520561218,0.29794782400131226,0.28282225131988525,0.28653162717819214,0.2826642692089081,0.26871180534362793,0.24598631262779236,0.22205007076263428,0.18774476647377014,0.14792224764823914,-1.5917115211486816,-1.5741119384765625,-1.53524911403656,-1.502474069595337,-1.4884458780288696,-1.3770381212234497,0.2749459147453308,0.34668269753456116,0.2695249319076538,0.25810539722442627,0.28406819701194763,0.35704004764556885,0.36568230390548706,0.361409455537796,0.34527918696403503,0.3296402394771576,0.33109214901924133,0.32893362641334534,0.3153415620326996,0.29942628741264343,0.2480991780757904,0.22392240166664124,0.17316721379756927,-1.5853182077407837,-1.569260835647583,-1.5558085441589355,-1.5312696695327759,-1.478004813194275,0.15902367234230042,0.3261800706386566,0.17907147109508514,0.19168539345264435,0.23559735715389252,0.31802886724472046,0.3902488350868225,0.3847586214542389,0.3728325068950653,0.3538108170032501,0.3385373055934906,0.3455776572227478,0.3385562002658844,0.33376604318618774,0.30199798941612244,0.25240978598594666,0.2028432935476303,-1.5859456062316895,-1.5630525350570679,-1.5446666479110718,-1.5175334215164185,-0.9616971015930176,0.2867606282234192,0.1690714806318283,0.19209754467010498,0.21043820679187775,0.23027949035167694,0.3474730849266052,0.4042947292327881,0.39828184247016907,0.3866722583770752,0.3685795068740845,0.35736873745918274,0.34116947650909424,0.34576719999313354,0.33639195561408997,0.2878970205783844,0.24202390015125275,-1.5763665437698364,-1.556115984916687,-1.5341163873672485,-1.4282420873641968,0.23841315507888794,0.19752620160579681,0.20802661776542664,0.23939505219459534,0.2685975134372711,0.3239927589893341,0.40816622972488403,0.4094141125679016,0.4004237949848175,0.3898909389972687,0.3763464093208313,0.3696710169315338,0.35370615124702454,0.3494649827480316,0.3373537063598633,0.26607033610343933,-1.5697474479675293,-1.54181706905365,-1.4903457164764404,0.12320776283740997,0.2398303896188736,0.24915872514247894,0.2676388919353485,0.2959292232990265,0.3298857510089874,0.3900963366031647,0.4214703440666199,0.4159981310367584,0.40650245547294617,0.3919943869113922,0.37908855080604553,0.3641936182975769,0.35359108448028564,0.3601152002811432,0.3350614011287689,-1.558143138885498,-1.5126253366470337,-0.43405210971832275,0.2865637242794037,0.2879725992679596,0.30071181058883667,0.31748417019844055,0.37134015560150146,0.41269391775131226,0.40018409490585327,0.3639678657054901,0.4089316129684448,0.4116154909133911,0.39791443943977356,0.3791261613368988,0.3620467782020569,0.34824809432029724,0.3610111176967621,-1.5256472826004028,-0.8713834285736084,0.2780076563358307,0.3251935541629791,0.3420039415359497,0.3650657832622528,0.3958221971988678,0.43676838278770447,0.4111471176147461,0.3034451901912689,0.31935811042785645,0.41318368911743164,0.4138180613517761,0.39743518829345703,0.3784654140472412,0.3639433681964874,0.3411383032798767,-1.2099206447601318,0.2543208599090576,0.32523462176322937,0.3584144115447998,0.3809238076210022,0.4186592996120453,0.4574246406555176,0.4284305274486542,0.3619309365749359,0.27352792024612427,0.2826589345932007,0.3987569212913513,0.40905827283859253,0.39820191264152527,0.3827628195285797,0.3596023619174957,0.12559600174427032,0.30448466539382935,0.34540650248527527,0.38768014311790466,0.42377614974975586,0.45899850130081177,0.4358062744140625,0.395639568567276,0.33677875995635986,0.2513304352760315,0.27186936140060425,0.4004637897014618,0.4129147231578827,0.403083473443985,0.38087552785873413,0.2868262231349945,0.33392590284347534,0.36969873309135437,0.4219817817211151,0.4648129642009735,0.4551917016506195,0.4235039949417114,0.38458192348480225,0.3361949026584625,0.24888721108436584,0.2604016363620758,0.380788654088974,0.4122121036052704,0.402715265750885,0.3132323622703552,0.34346505999565125,0.393743634223938,0.4610034227371216,0.4581773579120636,0.4413410723209381,0.4185847342014313,0.39188191294670105,0.35948455333709717,0.2893652021884918,0.3378094434738159,0.4198932349681854,0.4225050210952759,0.3267779052257538,0.3396911919116974,0.4345442056655884,0.45736315846443176,0.45188918709754944,0.4366500675678253,0.42343732714653015,0.4119497239589691,0.4049486815929413,0.38588830828666687,0.47872981429100037,0.4509250223636627,0.3076443374156952,0.4048991799354553,0.4424695074558258,0.4475661516189575,0.4434798061847687,0.44015586376190186,0.44424593448638916,0.44377872347831726,0.4538719952106476,0.48611339926719666,0.47752389311790466,0.3707342743873596,0.42004474997520447,0.43675413727760315,0.44287991523742676,0.44605568051338196,0.4661140739917755,0.4801408052444458,0.49199286103248596,0.4872928559780121,0.4800107479095459,0.3943127989768982,0.4248453378677368,0.43734002113342285,0.44944989681243896,0.4698914885520935,0.48915228247642517,0.4948465824127197,0.4901858866214752,0.4860924482345581,0.4066607356071472,0.43089503049850464,0.44852888584136963,0.4712359607219696,0.4934242069721222,0.497516393661499,0.4937688410282135,0.4882093667984009,0.4234618544578552,0.44303765892982483,0.46639734506607056,0.4909619688987732,0.49943384528160095,0.495044082403183,0.4902900457382202,0.43391314148902893,0.4576088786125183,0.48593875765800476,0.49897581338882446,0.49727848172187805,0.49163705110549927,0.4477684497833252,0.47611889243125916,0.4953893721103668,0.4980616271495819,0.4931252896785736,0.4620696008205414,0.48708221316337585,0.4979884624481201,0.4947642683982849,0.4788443446159363,0.49633944034576416,0.49451425671577454,0.48390331864356995,0.49073413014411926,0.48598212003707886,-1.5759934186935425,-1.4962468147277832,-1.282360315322876,-1.0280574560165405,-0.6863203048706055,-0.42485928535461426,-0.2545492947101593,-0.20176224410533905,-0.15472686290740967,0.08188480883836746,0.3298511207103729,0.33915984630584717,0.3029707074165344,0.32230353355407715,0.3633408844470978,0.4102168381214142,0.42918047308921814,0.44492724537849426,0.45635977387428284,0.4667673408985138,0.47784996032714844,0.4895802140235901,0.49965599179267883,0.5026494860649109,0.5036754012107849,0.5059580206871033,0.5085733532905579,0.5104659199714661,0.5116519927978516,0.5065304636955261,0.5000144243240356,-1.5342743396759033,-1.3940932750701904,-1.198716640472412,-0.9178910851478577,-0.5585132241249084,-0.322020024061203,-0.22599144279956818,-0.17631211876869202,-0.10015561431646347,0.17296691238880157,0.3152928650379181,0.3816743791103363,0.3704417645931244,0.4009764492511749,0.41346636414527893,0.4319124221801758,0.44633451104164124,0.4620479941368103,0.4699014723300934,0.48061785101890564,0.4901542663574219,0.49287042021751404,0.49197623133659363,0.492882639169693,0.49273255467414856,0.49149975180625916,0.4865502417087555,0.47856375575065613,0.47315800189971924,0.459785521030426,-1.4584665298461914,-1.2936460971832275,-1.0490057468414307,-0.7084818482398987,-0.39389246702194214,-0.24066369235515594,-0.19241057336330414,-0.14807897806167603,0.011657267808914185,0.19934265315532684,0.27723428606987,0.3589968681335449,0.3888240456581116,0.4065866768360138,0.42219823598861694,0.4438944160938263,0.45374777913093567,0.46393659710884094,0.4740127921104431,0.47664156556129456,0.47318345308303833,0.47151342034339905,0.47120997309684753,0.46367013454437256,0.45740798115730286,0.44334036111831665,0.4334576725959778,0.41928720474243164,0.398001104593277,-1.3480347394943237,-1.124269723892212,-0.7644413709640503,-0.4239199757575989,-0.24692627787590027,-0.20025266706943512,-0.167972132563591,-0.06557170301675797,0.14170558750629425,0.22670012712478638,0.2788534164428711,0.3325650095939636,0.36992573738098145,0.39472004771232605,0.41958704590797424,0.4348304271697998,0.4446336328983307,0.4509115517139435,0.4502115249633789,0.45007386803627014,0.4408625066280365,0.42990246415138245,0.4163595139980316,0.40086600184440613,0.38440874218940735,0.3771759867668152,0.3616243004798889,0.34156545996665955,-1.1507710218429565,-0.8105493783950806,-0.413530170917511,-0.24232663214206696,-0.20165999233722687,-0.17325563728809357,-0.09693527966737747,0.10302988439798355,0.19478817284107208,0.24030333757400513,0.2815590798854828,0.31563836336135864,0.35082152485847473,0.3711426854133606,0.3944486677646637,0.4061366319656372,0.408028781414032,0.4092050790786743,0.40447381138801575,0.3952634632587433,0.38665974140167236,0.36346372961997986,0.33739274740219116,0.3216087520122528,0.31626778841018677,0.3121093213558197,0.301727294921875,-0.7921367287635803,-0.4314838647842407,-0.23995234072208405,-0.2017512321472168,-0.17233458161354065,-0.10623199492692947,0.07365383207798004,0.1776786595582962,0.20747902989387512,0.24670624732971191,0.2706277668476105,0.2965863049030304,0.31499534845352173,0.3265778720378876,0.34763219952583313,0.34619826078414917,0.3421119749546051,0.3438538908958435,0.32782337069511414,0.31744053959846497,0.29350900650024414,0.2753064036369324,0.2519277334213257,0.2598903775215149,0.26080483198165894,0.26273250579833984,-0.3830452561378479,-0.2407059520483017,-0.20030783116817474,-0.16903817653656006,-0.10605818778276443,0.0469864197075367,0.1632377803325653,0.19141855835914612,0.2151685506105423,0.22845172882080078,0.24799752235412598,0.26431766152381897,0.26710259914398193,0.2794831693172455,0.2999778687953949,0.29885321855545044,0.29065802693367004,0.2628738284111023,0.24061182141304016,0.2204752266407013,0.21262933313846588,0.22142694890499115,0.22068308293819427,0.23023879528045654,0.24071745574474335,-0.23883387446403503,-0.20103533565998077,-0.16161037981510162,-0.09612829983234406,0.045773208141326904,0.13718588650226593,0.17376708984375,0.1872800886631012,0.19656910002231598,0.20769496262073517,0.22035926580429077,0.21908816695213318,0.21690991520881653,0.23115284740924835,0.2323775440454483,0.2028285562992096,0.1858813464641571,0.18262246251106262,0.17996062338352203,0.16644424200057983,0.17958404123783112,0.19136440753936768,0.2115810066461563,0.2303687334060669,-0.19755838811397552,-0.1596297174692154,-0.08612842112779617,0.052829209715127945,0.12699393928050995,0.15448544919490814,0.17028361558914185,0.168100044131279,0.16493777930736542,0.17150257527828217,0.1647157371044159,0.15591485798358917,0.1571376919746399,0.153021439909935,0.13558584451675415,0.12319784611463547,0.12159119546413422,0.12376566231250763,0.1353032886981964,0.15164174139499664,0.1729687601327896,0.19500072300434113,0.22598415613174438,-0.15618611872196198,-0.08856064826250076,0.027482355013489723,0.10624665766954422,0.13038547337055206,0.1494010090827942,0.15123000741004944,0.13026517629623413,0.11920278519392014,0.11721819639205933,0.10337056964635849,0.09820564836263657,0.09327269345521927,0.07893676310777664,0.0731324777007103,0.07625637948513031,0.08985716104507446,0.10200526565313339,0.13403688371181488,0.15868906676769257,0.1847504824399948,0.21331262588500977,-0.09525791555643082,-0.01445299293845892,0.07619643211364746,0.09813554584980011,0.11026601493358612,0.11100500077009201,0.09456511586904526,0.07003851234912872,0.06162433698773384,0.0492582730948925,0.03865926340222359,0.03579257056117058,0.027628401294350624,0.026857707649469376,0.034914810210466385,0.054931093007326126,0.07741532474756241,0.11086305975914001,0.14936861395835876,0.1776973009109497,0.21592698991298676,-0.057985465973615646,0.028819803148508072,0.060060713440179825,0.05892636999487877,0.05918031558394432,0.03840512037277222,0.009793365374207497,-0.004581388086080551,-0.015742866322398186,-0.021456727758049965,-0.023340798914432526,-0.025619927793741226,-0.014518587850034237,-0.0020244449842721224,0.024050701409578323,0.057985108345746994,0.09565523266792297,0.13175472617149353,0.17424286901950836,0.21658945083618164,-0.0322524793446064,0.013616949319839478,0.010106611996889114,-0.008313680067658424,-0.03370755910873413,-0.0615135096013546,-0.08091335743665695,-0.09554168581962585,-0.09977485984563828,-0.08867711573839188,-0.0773051381111145,-0.06361011415719986,-0.0419635996222496,-0.012165668420493603,0.020474327728152275,0.07007592171430588,0.11797325313091278,0.17196980118751526,0.23172397911548615,-0.016648048534989357,-0.03599484637379646,-0.05731862410902977,-0.08994386345148087,-0.12799109518527985,-0.1504698246717453,-0.16109293699264526,-0.16657663881778717,-0.15700285136699677,-0.14294873178005219,-0.11559797078371048,-0.09233694523572922,-0.062370460480451584,-0.01474466361105442,0.040919605642557144,0.10599164664745331,0.16953504085540771,0.23768651485443115,-0.046786773949861526,-0.08451295644044876,-0.11901294440031052,-0.1434258073568344,-0.1619112640619278,-0.17459018528461456,-0.18191289901733398,-0.18891166150569916,-0.18726249039173126,-0.17782017588615417,-0.15965287387371063,-0.12173908203840256,-0.06331896036863327,0.004703152924776077,0.07884261757135391,0.1599644124507904,0.24355144798755646,-0.08534246683120728,-0.11264260113239288,-0.13198021054267883,-0.1589568704366684,-0.17238691449165344,-0.18050391972064972,-0.1878475695848465,-0.19668734073638916,-0.19367021322250366,-0.1797795295715332,-0.1587487757205963,-0.11267521977424622,-0.038148120045661926,0.05155929923057556,0.15398409962654114,0.25334101915359497,-0.10405648499727249,-0.12627235054969788,-0.149451345205307,-0.1646645963191986,-0.17517492175102234,-0.18481437861919403,-0.19122639298439026,-0.1950392723083496,-0.18779930472373962,-0.17122091352939606,-0.1451236754655838,-0.08264569938182831,0.014261838048696518,0.15052267909049988,0.2661984860897064,-0.11426783353090286,-0.14052286744117737,-0.15629474818706512,-0.16616813838481903,-0.1744728833436966,-0.1825554370880127,-0.1908070296049118,-0.184745654463768,-0.17582084238529205,-0.15472714602947235,-0.11340892314910889,-0.012471274472773075,0.14498338103294373,0.2795219123363495,-0.1263737827539444,-0.1430542767047882,-0.15465061366558075,-0.16358833014965057,-0.16909222304821014,-0.17397813498973846,-0.1748427301645279,-0.1682286411523819,-0.15771283209323883,-0.12361329048871994,-0.013260130770504475,0.14587923884391785,0.313705176115036,-0.1293139010667801,-0.13958068192005157,-0.1466791033744812,-0.1534750610589981,-0.15808476507663727,-0.16058579087257385,-0.15419533848762512,-0.13853652775287628,-0.10381956398487091,-0.009663840755820274,0.11441226303577423,0.2851582467556,-0.12403465807437897,-0.13102009892463684,-0.1332789659500122,-0.13414037227630615,-0.13227726519107819,-0.12880761921405792,-0.10738089680671692,-0.06643238663673401,-0.006450258661061525,0.10157399624586105,0.22987188398838043,-0.10895837098360062,-0.10879623144865036,-0.10567715018987656,-0.10346190631389618,-0.09010794758796692,-0.06824591755867004,-0.027892589569091797,0.043208763003349304,0.12229526787996292,0.2069798707962036,-0.0804930254817009,-0.07363534718751907,-0.06932542473077774,-0.050523195415735245,-0.01699814945459366,0.01060766912996769,0.09317383170127869,0.1776942014694214,0.3152809143066406,-0.02836819738149643,-0.018726671114563942,-0.005386939272284508,0.007919642142951488,0.04483301565051079,0.12414270639419556,0.25028204917907715,0.376382052898407,0.026453744620084763,0.03259587287902832,0.04336913302540779,0.05127568915486336,0.09672227501869202,0.2622496783733368,0.4936898350715637,0.07337852567434311,0.08653172850608826,0.08690512180328369,0.08797436207532883,0.1339510977268219,0.5178142189979553,0.10663069039583206,0.10823018103837967,0.11268878728151321,0.149683877825737,0.43429726362228394,0.21107695996761322,0.29417428374290466,0.2533181309700012,0.40085282921791077,0.3527817726135254,0.33865639567375183,0.4778231382369995,0.39420562982559204,0.44436904788017273,0.5354829430580139,-1.625859260559082,-1.620082139968872,-1.6209028959274292,-1.6040157079696655,-1.5863529443740845,-1.6413105726242065,-1.680172324180603,-1.684776782989502,-1.6962436437606812,-1.642447829246521,-1.5714404582977295,-1.4062262773513794,-1.0377650260925293,-0.6456736922264099,-0.6115351915359497,-0.7447649240493774,-0.6577706336975098,-0.4462589621543884,-0.43135231733322144,-0.3795318603515625,-0.3472428619861603,-0.3089028000831604,-0.2704716920852661,-0.0499541200697422,0.35949209332466125,0.4019628167152405,0.36534735560417175,0.32540902495384216,0.3043034076690674,0.28285691142082214,0.35316410660743713,-1.5690078735351562,-1.5557299852371216,-1.5009498596191406,-1.4049171209335327,-1.302814245223999,-1.2948007583618164,-1.2820792198181152,-1.297057032585144,-1.136436104774475,-0.9305464625358582,-0.694280207157135,-0.5424445271492004,-0.6161885261535645,-0.9447442889213562,-0.9073389172554016,-0.7402899265289307,-0.5629122853279114,-0.49464863538742065,-0.5751750469207764,-0.4953072965145111,-0.34053388237953186,-0.30013182759284973,-0.23962238430976868,0.25700098276138306,0.4205359220504761,0.4135946035385132,0.36513087153434753,0.3301037847995758,0.30051785707473755,0.32858631014823914,-1.4447053670883179,-1.3877238035202026,-1.228479027748108,-0.9768194556236267,-0.8819567561149597,-0.7647047638893127,-0.6906211972236633,-0.5844305753707886,-0.48504218459129333,-0.4348953664302826,-0.43644940853118896,-0.6966877579689026,-1.1355514526367188,-1.028506875038147,-0.7668885588645935,-0.5702568292617798,-0.5341484546661377,-0.551058292388916,-0.610338568687439,-0.3970741331577301,-0.32193973660469055,-0.29087933897972107,0.02980179898440838,0.4164832830429077,0.46536001563072205,0.4224875271320343,0.3695675730705261,0.33113792538642883,0.3067280948162079,-1.1847683191299438,-1.065902590751648,-0.8173982501029968,-0.6474777460098267,-0.5006844997406006,-0.4262182116508484,-0.39043372869491577,-0.36390793323516846,-0.3812841773033142,-0.492483526468277,-0.7226876616477966,-1.1954383850097656,-1.1471784114837646,-0.8237167000770569,-0.5122351050376892,-0.48924729228019714,-0.5589922070503235,-0.5909093022346497,-0.5769836902618408,-0.3758830428123474,-0.3183353841304779,-0.26556694507598877,0.3440019488334656,0.48401615023612976,0.4736628234386444,0.4212331473827362,0.3705959618091583,0.35061943531036377,-0.8330692648887634,-0.6615060567855835,-0.5297694802284241,-0.3981623351573944,-0.3404260277748108,-0.32138094305992126,-0.31903815269470215,-0.32867443561553955,-0.46590936183929443,-0.7495641708374023,-1.1393457651138306,-1.1485369205474854,-0.8980342745780945,-0.5992462038993835,-0.40655985474586487,-0.4894237518310547,-0.4950385093688965,-0.5491870641708374,-0.39317652583122253,-0.3397755026817322,-0.3169703185558319,0.049953438341617584,0.4645214378833771,0.5049408078193665,0.48057860136032104,0.41562098264694214,0.38701438903808594,-0.5239545702934265,-0.44667357206344604,-0.36610037088394165,-0.28990888595581055,-0.2818852961063385,-0.2745584547519684,-0.27343180775642395,-0.3178945779800415,-0.6074813604354858,-1.0107206106185913,-1.1421273946762085,-0.9638674855232239,-0.6853770613670349,-0.3753732144832611,-0.3507414758205414,-0.4147782325744629,-0.4365801513195038,-0.3480530083179474,-0.3420129120349884,-0.32413625717163086,-0.3029782772064209,0.3647603988647461,0.4930259883403778,0.50064617395401,0.4818932116031647,0.4452783465385437,-0.3360443413257599,-0.2836201786994934,-0.2538602948188782,-0.23708388209342957,-0.22957365214824677,-0.2333979308605194,-0.24908261001110077,-0.3190588653087616,-0.7510416507720947,-0.9946884512901306,-0.888485848903656,-0.48950502276420593,-0.3703262209892273,-0.3417716324329376,-0.3423895835876465,-0.34186333417892456,-0.3409007489681244,-0.3367784917354584,-0.32925572991371155,-0.3116092383861542,0.1437542587518692,0.45293694734573364,0.48913833498954773,0.4739234447479248,0.4629317820072174,-0.23288503289222717,-0.21293611824512482,-0.19046838581562042,-0.18645155429840088,-0.1909983605146408,-0.19958172738552094,-0.20559827983379364,-0.21862056851387024,-0.2650453746318817,-0.37651798129081726,-0.3275794982910156,-0.3246516287326813,-0.33132365345954895,-0.33405348658561707,-0.336222380399704,-0.3364003002643585,-0.3336680829524994,-0.3280996084213257,-0.31612810492515564,-0.22857478260993958,0.312229722738266,0.4503619372844696,0.4610194265842438,0.46320614218711853,-0.18138790130615234,-0.14282409846782684,-0.09797711670398712,-0.02611353248357773,0.01858651265501976,-0.07157327234745026,-0.13289430737495422,-0.17611534893512726,-0.24007245898246765,-0.27828049659729004,-0.29736578464508057,-0.3131689727306366,-0.32229477167129517,-0.3256821930408478,-0.3361144959926605,-0.3353639841079712,-0.3323431611061096,-0.32407113909721375,-0.3369406759738922,0.1025908961892128,0.33993276953697205,0.3969353139400482,0.443088561296463,-0.06730706244707108,0.1352233737707138,0.2881539463996887,0.3286120593547821,0.31150561571121216,0.25857049226760864,0.1112370640039444,-0.06697223335504532,-0.15726996958255768,-0.23264318704605103,-0.27322524785995483,-0.29956620931625366,-0.3108523488044739,-0.31588342785835266,-0.3188728392124176,-0.3160252571105957,-0.31066885590553284,-0.2961248457431793,-0.09110552072525024,0.05192040652036667,0.09821366518735886,0.21163177490234375,0.2780006229877472,0.3503285050392151,0.34809428453445435,0.33431217074394226,0.2999219596385956,0.22066329419612885,0.16334304213523865,0.11905067414045334,0.09005515277385712,-0.03671731427311897,-0.19973094761371613,-0.2773757874965668,-0.29459431767463684,-0.2977147400379181,-0.29914483428001404,-0.29365774989128113,-0.27877968549728394,-0.2604404389858246,-0.20205767452716827,-0.14542922377586365,0.0182129368185997,0.34815746545791626,0.2894112765789032,0.24729681015014648,0.23855577409267426,0.21214985847473145,0.1995927393436432,0.19310085475444794,0.2275620400905609,0.23795366287231445,0.18172043561935425,-0.004548043943941593,-0.16078276932239532,-0.23857799172401428,-0.2682599127292633,-0.26763400435447693,-0.25215277075767517,-0.22170238196849823,-0.18693260848522186,-0.15039969980716705,-0.04479231312870979,0.25877273082733154,0.23449452221393585,0.22260890901088715,0.22268597781658173,0.2229255735874176,0.23463967442512512,0.2547580897808075,0.28956520557403564,0.3290325105190277,0.31733545660972595,0.2760827839374542,0.24823704361915588,0.13668473064899445,-0.059100762009620667,-0.12922894954681396,-0.12254036217927933,-0.10974584519863129,-0.1121685802936554,-0.05176877602934837,0.26081714034080505,0.25307485461235046,0.2521688938140869,0.25704458355903625,0.26408320665359497,0.28835925459861755,0.32335951924324036,0.35253119468688965,0.3795504868030548,0.3874237835407257,0.3864491283893585,0.38389861583709717,0.3835863471031189,0.323265939950943,0.21554528176784515,0.0976887047290802,0.05394939333200455,0.009780851192772388,0.3051029145717621,0.2952355742454529,0.2955132722854614,0.30104953050613403,0.3308902382850647,0.3590030074119568,0.3860441744327545,0.3964303135871887,0.4087204039096832,0.4171569049358368,0.427113801240921,0.42666012048721313,0.43195727467536926,0.4352636933326721,0.4238172173500061,0.36829674243927,0.276602566242218,0.3500109314918518,0.34796589612960815,0.3518039584159851,0.3680726885795593,0.38371628522872925,0.4019432067871094,0.4097864329814911,0.4200793504714966,0.4306773841381073,0.43855395913124084,0.4445893168449402,0.44701260328292847,0.4484330415725708,0.4608667492866516,0.46338921785354614,0.4442373514175415,0.3854873478412628,0.37968605756759644,0.3905569911003113,0.4017535150051117,0.4114576280117035,0.42298075556755066,0.4294250011444092,0.4397163987159729,0.44747841358184814,0.45220622420310974,0.4549657702445984,0.4571853578090668,0.46144840121269226,0.47740352153778076,0.4735674262046814,0.4245983362197876,0.4186869263648987,0.41826218366622925,0.4224223494529724,0.429659903049469,0.4372035562992096,0.44656261801719666,0.45150768756866455,0.45702770352363586,0.46220630407333374,0.46299833059310913,0.46842074394226074,0.47581249475479126,0.48398450016975403,0.4416196942329407,0.43895310163497925,0.4378912150859833,0.4396343231201172,0.4466407895088196,0.45186764001846313,0.45950227975845337,0.4645232856273651,0.4695015549659729,0.47281771898269653,0.47354111075401306,0.47522249817848206,0.48287931084632874,0.4526349604129791,0.45313113927841187,0.45288124680519104,0.4555021822452545,0.46144387125968933,0.46559938788414,0.46920761466026306,0.47166091203689575,0.4757031500339508,0.47822436690330505,0.48041069507598877,0.48517492413520813,0.4612200856208801,0.4617207944393158,0.4620385766029358,0.4644497036933899,0.4687299430370331,0.4718150794506073,0.4757727384567261,0.4804622530937195,0.4817647933959961,0.4832804799079895,0.4880617558956146,0.4728057086467743,0.4728488028049469,0.4703895151615143,0.4721294939517975,0.4741698205471039,0.4798682928085327,0.48132026195526123,0.48457321524620056,0.4868474304676056,0.4883555769920349,0.4849948287010193,0.47848331928253174,0.4781533181667328,0.4782974421977997,0.48098060488700867,0.48283854126930237,0.48647168278694153,0.488341748714447,0.49019137024879456,0.49402785301208496,0.48881715536117554,0.48714280128479004,0.4857340455055237,0.48662233352661133,0.48910364508628845,0.49128037691116333,0.49171096086502075,0.5001855492591858,0.49626511335372925,0.4923608601093292,0.49157077074050903,0.4926597774028778,0.49375683069229126,0.4953668713569641,0.5068778395652771,0.5025747418403625,0.5012024641036987,0.5006355047225952,0.49999865889549255,0.4988822638988495,0.5116419196128845,0.509906530380249,0.5081631541252136,0.5061337351799011,0.5035781264305115,0.5161532759666443,0.5154454708099365,0.5135895013809204,0.5108070373535156,0.5193843841552734,0.5198720693588257,0.5180352926254272,0.5183069705963135,0.5208534002304077,0.5177704691886902,0.6949358582496643,0.7107540965080261,0.7199317812919617,0.7274448871612549,0.7311382293701172,0.7327797412872314,0.7329800724983215,0.7327610850334167,0.7330243587493896,0.7321662902832031,0.7317853569984436,0.731823205947876,0.7311568856239319,0.7324203252792358,0.7349970936775208,0.7366251349449158,0.7379104495048523,0.7368144989013672,0.7328765988349915,0.7285170555114746,0.728610634803772,0.7294670939445496,0.7316699624061584,0.7318731546401978,0.7324033379554749,0.7302462458610535,0.7204886674880981,0.6734417080879211,0.6419623494148254,0.5413738489151001,0.4674723446369171,0.4665808081626892,0.479688435792923,0.4806027412414551,0.48054420948028564,0.4756720960140228,0.48134711384773254,0.48326414823532104,0.48321622610092163,0.485809326171875,0.4878287613391876,0.49014168977737427,0.4932299554347992,0.4981728196144104,0.5022271275520325,0.5095219612121582,0.5164293050765991,0.52460116147995,0.5309131741523743,0.5361034274101257,0.5349002480506897,0.445483535528183,0.26051783561706543,0.15021561086177826,0.18342924118041992,0.2248113453388214,0.3330000340938568,0.4089719355106354,0.44610023498535156,0.41835057735443115,0.4325655996799469,0.4115617871284485,0.4275859296321869,0.4402492046356201,0.44488638639450073,0.4558129608631134,0.47518789768218994,0.4861126244068146,0.48975861072540283,0.4942903220653534,0.49792954325675964,0.5015612840652466,0.5046644806861877,0.509139358997345,0.5140855312347412,0.5211740136146545,0.5313574075698853,0.5380212068557739,0.5436999201774597,0.549037754535675,0.5511975288391113,0.5249286890029907,0.46935951709747314,0.4247702360153198,0.49148765206336975,0.5895825028419495,0.6620874404907227,0.6615396738052368,0.6023603677749634,0.5177108645439148,0.3690078854560852,0.3790909945964813,0.39831581711769104,0.4164831340312958,0.44543781876564026,0.476838082075119,0.4935070276260376,0.49813076853752136,0.5023125410079956,0.506791353225708,0.5108543634414673,0.5136435627937317,0.5192718505859375,0.5256547927856445,0.5344005823135376,0.5416628122329712,0.5467532277107239,0.5519144535064697,0.5563344955444336,0.5601077675819397,0.5634730458259583,0.5831485986709595,0.6567798852920532,0.7236939072608948,0.7459601759910583,0.7454845905303955,0.7189489006996155,0.6532135009765625,0.3372684717178345,0.3625931441783905,0.38218045234680176,0.4064614176750183,0.4411488473415375,0.4758189022541046,0.49915820360183716,0.5048524737358093,0.5097835063934326,0.5141700506210327,0.5189084410667419,0.5243701934814453,0.5290382504463196,0.5363128781318665,0.5431771874427795,0.5492992997169495,0.5529758930206299,0.5566272139549255,0.5634937882423401,0.566383957862854,0.6051694750785828,0.6953923106193542,0.7426114678382874,0.7615419030189514,0.7619159817695618,0.7512208819389343,0.7256293296813965,0.3331487476825714,0.35899484157562256,0.3780379295349121,0.39605188369750977,0.43553367257118225,0.4753708839416504,0.5046554803848267,0.5112882852554321,0.51790452003479,0.5235599279403687,0.5275498032569885,0.5336517691612244,0.5394686460494995,0.5448582172393799,0.5494304299354553,0.5556074976921082,0.5592506527900696,0.5659139752388,0.5712034106254578,0.6087725758552551,0.6861478090286255,0.7344955205917358,0.7589484453201294,0.766132116317749,0.7632336616516113,0.7474872469902039,0.3518473505973816,0.36742502450942993,0.38338789343833923,0.406997948884964,0.42934247851371765,0.46669554710388184,0.5017986297607422,0.5208830237388611,0.5278177857398987,0.5327740907669067,0.5392147898674011,0.5430665612220764,0.5478473901748657,0.5515145063400269,0.5561354160308838,0.5624534487724304,0.5703962445259094,0.5744850039482117,0.6001464128494263,0.6616265177726746,0.7084375023841858,0.7442190647125244,0.7579885721206665,0.7613063454627991,0.7460319399833679,0.37156379222869873,0.38704052567481995,0.40264394879341125,0.4217575490474701,0.4483397603034973,0.47409191727638245,0.5166122913360596,0.5309935212135315,0.537572979927063,0.5421686172485352,0.545596182346344,0.5491266846656799,0.5529730319976807,0.5583402514457703,0.5658353567123413,0.5720228552818298,0.5759825706481934,0.5855228900909424,0.6283003091812134,0.6849783658981323,0.7176107168197632,0.7363497018814087,0.7403922080993652,0.7251037359237671,0.4033488929271698,0.41686153411865234,0.4324158728122711,0.44916218519210815,0.4661707878112793,0.49400895833969116,0.5281936526298523,0.5392987728118896,0.5447301864624023,0.5489512085914612,0.551480770111084,0.554044783115387,0.5592286586761475,0.5657287836074829,0.5719226598739624,0.5764952898025513,0.5794034004211426,0.589468777179718,0.6398366689682007,0.6747145056724548,0.6939122676849365,0.6958720088005066,0.7142168283462524,0.44223904609680176,0.45392030477523804,0.46936312317848206,0.4831426739692688,0.49703487753868103,0.522950291633606,0.5389487147331238,0.545759379863739,0.5496056079864502,0.5527787208557129,0.5551267862319946,0.5594729781150818,0.5656988620758057,0.5716353058815002,0.5753507614135742,0.5797233581542969,0.5815399885177612,0.5884581804275513,0.620620846748352,0.6399219632148743,0.6453062295913696,0.7084599137306213,0.49128031730651855,0.49348658323287964,0.5068830251693726,0.5167844891548157,0.5262361764907837,0.5362732410430908,0.5460634231567383,0.5505258440971375,0.555753231048584,0.5583505630493164,0.5622893571853638,0.5674828290939331,0.5725115537643433,0.5760725140571594,0.5786846876144409,0.5809876322746277,0.5826665163040161,0.586452841758728,0.5954793691635132,0.6465816497802734,0.7080036997795105,0.5264489054679871,0.5302701592445374,0.5340284109115601,0.5389953851699829,0.5413182377815247,0.5480634570121765,0.554521918296814,0.5581130385398865,0.5606406331062317,0.5642069578170776,0.5692643523216248,0.5744702816009521,0.5769261717796326,0.5792496204376221,0.5803700685501099,0.5826737880706787,0.5871749520301819,0.5980343222618103,0.6623533964157104,0.7105053663253784,0.5467814803123474,0.548637330532074,0.5491093993186951,0.5503607988357544,0.5520859360694885,0.556010365486145,0.5598064064979553,0.5628511905670166,0.5650070905685425,0.5684419274330139,0.5739904046058655,0.5771937966346741,0.5793523788452148,0.5830304026603699,0.6096078157424927,0.6552398800849915,0.6903111338615417,0.7123048901557922,0.7236814498901367,0.5585669875144958,0.5578613877296448,0.5582037568092346,0.5575597286224365,0.559960126876831,0.5623564124107361,0.5646297335624695,0.5666154026985168,0.5705397725105286,0.5782383680343628,0.597888171672821,0.6336920261383057,0.6871910095214844,0.7164768576622009,0.7309996485710144,0.7346593141555786,0.7351797819137573,0.7355647683143616,0.5735870003700256,0.5705456137657166,0.569217324256897,0.5689567923545837,0.570077121257782,0.5716458559036255,0.5758653879165649,0.5889126658439636,0.6365309357643127,0.6941505074501038,0.7236505746841431,0.7331176996231079,0.7390852570533752,0.7416841387748718,0.7427423596382141,0.7424175143241882,0.7407381534576416,0.5998143553733826,0.5916708111763,0.5898441076278687,0.5915723443031311,0.5940407514572144,0.6066985130310059,0.650397777557373,0.7101001143455505,0.7318642139434814,0.7370073199272156,0.74104905128479,0.743667483329773,0.7444912195205688,0.7444702982902527,0.7443535327911377,0.742835521697998,0.6498492956161499,0.6343364715576172,0.6316298246383667,0.6460897326469421,0.6821480989456177,0.7192988991737366,0.736687958240509,0.7421358227729797,0.7430084347724915,0.7436189651489258,0.7445878982543945,0.7456578612327576,0.7457300424575806,0.7449411749839783,0.7426661252975464,0.6965200901031494,0.689964234828949,0.7047516703605652,0.7307594418525696,0.7404291033744812,0.7439080476760864,0.7459347248077393,0.7458991408348083,0.7457240223884583,0.74627685546875,0.7464027404785156,0.7461287975311279,0.7446305155754089,0.7422992587089539,0.7423192262649536,0.7421336770057678,0.7443258166313171,0.7466294169425964,0.746712327003479,0.7468633055686951,0.746933102607727,0.7468103766441345,0.746539294719696,0.746440589427948,0.7457846999168396,0.7446972727775574,0.7410971522331238,0.7527722120285034,0.74952632188797,0.7483538389205933,0.747948169708252,0.7477008700370789,0.7468591332435608,0.7469459176063538,0.7467101216316223,0.746074378490448,0.7452448606491089,0.7439368367195129,0.7395346164703369,0.7517082095146179,0.7495207786560059,0.7484955787658691,0.7483839392662048,0.7474967837333679,0.7470905780792236,0.7468696236610413,0.7456128597259521,0.7447195053100586,0.7429586052894592,0.7389932870864868,0.7508918046951294,0.7493644952774048,0.7484589219093323,0.7478240728378296,0.747154951095581,0.7463135719299316,0.7452242374420166,0.7434366941452026,0.7422206997871399,0.7385929226875305,0.7496532797813416,0.7488351464271545,0.7479838728904724,0.7470821738243103,0.7459965348243713,0.7453353404998779,0.743568480014801,0.7421529293060303,0.7392100095748901,0.7488815784454346,0.7477838397026062,0.7470996975898743,0.7459935545921326,0.7450231909751892,0.7432291507720947,0.7418574094772339,0.739263117313385,0.7477209568023682,0.7469311952590942,0.7458284497261047,0.745073676109314,0.7432584166526794,0.741462767124176,0.7398571372032166,0.7471166253089905,0.7462183237075806,0.7452521920204163,0.7435430884361267,0.7418949604034424,0.7394786477088928,0.7463915348052979,0.745123565196991,0.7438498139381409,0.7415225505828857,0.7396610379219055,0.7440422177314758,0.7434231042861938,0.740684986114502,0.7397785186767578,0.7419421076774597,0.7393512725830078,0.737541139125824,0.7359575629234314,0.7348501086235046,0.7280281782150269,0.6092742085456848,0.519711434841156,0.228312149643898,0.16630849242210388,0.24247127771377563,0.2465054839849472,0.2643395960330963,0.2629641592502594,0.2978622019290924,0.3368009924888611,0.37440794706344604,0.4131745398044586,0.4336874186992645,0.4394371509552002,0.42363864183425903,0.40306010842323303,0.3736436665058136,0.34640735387802124,0.3092750608921051,0.28237149119377136,0.277582049369812,0.3057914674282074,0.3504781424999237,0.3601726293563843,0.3884226679801941,0.42057478427886963,0.41566070914268494,0.39146652817726135,0.36979931592941284,0.34756481647491455,0.3426244556903839,0.5852534174919128,0.6833265423774719,0.7299020886421204,0.7417581081390381,0.743253231048584,0.6674383282661438,0.5747940540313721,0.573628842830658,0.5594094395637512,0.5441616773605347,0.49504804611206055,0.4492926001548767,0.4312053322792053,0.4185660779476166,0.41848188638687134,0.4326150417327881,0.44995999336242676,0.46187353134155273,0.4728012681007385,0.4722359776496887,0.47183147072792053,0.47635966539382935,0.4934191405773163,0.46059373021125793,0.4329969584941864,0.4119717478752136,0.3933185636997223,0.37278518080711365,0.35488566756248474,0.3442344069480896,0.6546482443809509,0.7151929140090942,0.7371653914451599,0.7438806891441345,0.7397067546844482,0.5848435759544373,0.574735164642334,0.5656638741493225,0.5506572127342224,0.5125510692596436,0.45570579171180725,0.42019084095954895,0.4048447608947754,0.40815266966819763,0.4272407293319702,0.44363972544670105,0.4575120210647583,0.4680572748184204,0.4726969003677368,0.4717581868171692,0.47723400592803955,0.49704405665397644,0.47142738103866577,0.4424499571323395,0.4239810109138489,0.4064476788043976,0.3866015672683716,0.3850066363811493,0.3612780272960663,0.6963273286819458,0.7294263243675232,0.7428032159805298,0.7440845370292664,0.7267571091651917,0.5755542516708374,0.5701587796211243,0.5561432242393494,0.5374212265014648,0.4625505805015564,0.4161490797996521,0.3944227695465088,0.3924379348754883,0.41034525632858276,0.4359928369522095,0.4517571032047272,0.46110206842422485,0.46861618757247925,0.471011757850647,0.4779132008552551,0.4993007481098175,0.47699829936027527,0.44500312209129333,0.43428510427474976,0.4191124737262726,0.4056244492530823,0.3920542895793915,0.3818970024585724,0.7230631113052368,0.7391773462295532,0.7445827126502991,0.7427127957344055,0.6803349852561951,0.5748372673988342,0.5624163746833801,0.5483288764953613,0.49452510476112366,0.4205271005630493,0.4020344913005829,0.39070823788642883,0.3980216681957245,0.4223951995372772,0.44391635060310364,0.45386266708374023,0.46259385347366333,0.46704915165901184,0.4738422930240631,0.4964320659637451,0.5032185912132263,0.4490194618701935,0.4321760833263397,0.42042866349220276,0.4102587103843689,0.39567896723747253,0.39159637689590454,0.7340590953826904,0.7419727444648743,0.7441824674606323,0.734194278717041,0.5778235197067261,0.5683773756027222,0.5561240315437317,0.5336042642593384,0.47367236018180847,0.4348294734954834,0.41543737053871155,0.4010225534439087,0.40708276629447937,0.4306216537952423,0.4470835328102112,0.4558933675289154,0.46233153343200684,0.469868928194046,0.4886457324028015,0.49941959977149963,0.4568929076194763,0.42960384488105774,0.41692283749580383,0.4015950560569763,0.39822426438331604,0.40803974866867065,0.738152265548706,0.7423052191734314,0.7400403022766113,0.7081940174102783,0.5743692517280579,0.5643775463104248,0.5544595718383789,0.5196369886398315,0.48523595929145813,0.4550918936729431,0.4338545501232147,0.40992093086242676,0.4205944240093231,0.4370831549167633,0.4494900107383728,0.455823689699173,0.46503737568855286,0.47761592268943787,0.4966416656970978,0.4730030298233032,0.4315784275531769,0.40952321887016296,0.3965471088886261,0.3924233019351959,0.38787025213241577,0.7374904155731201,0.7410260438919067,0.7316620945930481,0.5927347540855408,0.5684450268745422,0.5607659816741943,0.5526328086853027,0.5280776023864746,0.4951375424861908,0.46611452102661133,0.4421137273311615,0.41722923517227173,0.4287196397781372,0.4415162205696106,0.45062142610549927,0.4595804214477539,0.4707292914390564,0.4942028224468231,0.46149951219558716,0.4314291477203369,0.40538957715034485,0.38994264602661133,0.38307127356529236,0.3762442469596863,0.7377375364303589,0.7364799976348877,0.7036715149879456,0.5735055208206177,0.5651121735572815,0.5593124628067017,0.5468446612358093,0.524324357509613,0.4948523938655853,0.4688641428947449,0.4430738687515259,0.4301386773586273,0.4357278347015381,0.44488707184791565,0.45528748631477356,0.4662754237651825,0.4842645227909088,0.47295263409614563,0.4327912926673889,0.3986411988735199,0.3848721385002136,0.36991652846336365,0.3625938892364502,0.7357031106948853,0.7262971997261047,0.6338967680931091,0.5714396834373474,0.5641899704933167,0.5578917264938354,0.5408044457435608,0.5172772407531738,0.4944859445095062,0.4675582945346832,0.4478805363178253,0.444356232881546,0.4439047574996948,0.45314061641693115,0.46552371978759766,0.482862651348114,0.47340455651283264,0.4334005117416382,0.3890898823738098,0.36182188987731934,0.33940011262893677,0.33188435435295105,0.7291363477706909,0.6980195641517639,0.5776364207267761,0.571567714214325,0.5644139051437378,0.5535366535186768,0.5341799259185791,0.5128664374351501,0.49078211188316345,0.4642747938632965,0.44540899991989136,0.4529290795326233,0.46574586629867554,0.47176918387413025,0.4833604097366333,0.4818057119846344,0.4405651390552521,0.3926267623901367,0.35168886184692383,0.3234248161315918,0.2917217016220093,0.7218812704086304,0.6707451939582825,0.5794363617897034,0.5711969137191772,0.564645528793335,0.547382116317749,0.5262567400932312,0.505490243434906,0.47744396328926086,0.43070855736732483,0.4307151138782501,0.46466636657714844,0.4821609854698181,0.48728838562965393,0.4952581524848938,0.4561668932437897,0.41345760226249695,0.3658296763896942,0.3211137354373932,0.2942739427089691,0.7131829261779785,0.6426630020141602,0.5989493131637573,0.5775154232978821,0.5614046454429626,0.539419412612915,0.514738142490387,0.4905957281589508,0.4321056008338928,0.41892009973526,0.438584566116333,0.4746054708957672,0.4942643642425537,0.49778228998184204,0.4789149761199951,0.4403799772262573,0.39505088329315186,0.34494224190711975,0.30706652998924255,0.7065287232398987,0.6377426385879517,0.6092588901519775,0.5687521696090698,0.5533146858215332,0.5278521180152893,0.5033431053161621,0.44003015756607056,0.413272887468338,0.42131367325782776,0.44745877385139465,0.4861910045146942,0.5048880577087402,0.5018373727798462,0.4539390206336975,0.4256289005279541,0.3823482096195221,0.3375992476940155,0.7029633522033691,0.6480159759521484,0.6139526963233948,0.5638726353645325,0.5461342930793762,0.5125643610954285,0.4498089551925659,0.4164004921913147,0.41073742508888245,0.4280124008655548,0.4598824977874756,0.4973846971988678,0.4951513111591339,0.48200443387031555,0.44134020805358887,0.4145078659057617,0.3751576244831085,0.7036048769950867,0.6565966010093689,0.6285943984985352,0.5636388659477234,0.5327069759368896,0.47348296642303467,0.4260786771774292,0.40751728415489197,0.4121156334877014,0.4309849441051483,0.46931785345077515,0.48560112714767456,0.4789547324180603,0.4562150239944458,0.43618887662887573,0.4016321301460266,0.7073568105697632,0.6714580059051514,0.6357046365737915,0.5601755976676941,0.5182498097419739,0.4431363344192505,0.4093033969402313,0.40491005778312683,0.4130989909172058,0.4363306760787964,0.4642590880393982,0.4759673774242401,0.45826995372772217,0.45173379778862,0.4398372173309326,0.7108274102210999,0.6876248717308044,0.6069962978363037,0.5505660176277161,0.48434731364250183,0.41755127906799316,0.4053714871406555,0.3990809917449951,0.403742253780365,0.433014839887619,0.45807600021362305,0.45732831954956055,0.44403955340385437,0.44616562128067017,0.7133168578147888,0.6955168843269348,0.5719811916351318,0.5353703498840332,0.4535174071788788,0.40639516711235046,0.39701223373413086,0.3864865303039551,0.39701446890830994,0.41504967212677,0.43394941091537476,0.43817248940467834,0.4340322017669678,0.7169636487960815,0.6939197778701782,0.5620917677879333,0.5143787860870361,0.4438391327857971,0.39676496386528015,0.3765549659729004,0.37483641505241394,0.37502163648605347,0.39263638854026794,0.4153028726577759,0.41365158557891846,0.7187552452087402,0.670353889465332,0.5521942973136902,0.4988197684288025,0.43186935782432556,0.38515692949295044,0.36282530426979065,0.35659030079841614,0.3551328182220459,0.3666214346885681,0.3831976652145386,0.7198426723480225,0.6041162610054016,0.5441471338272095,0.4812780022621155,0.4137933552265167,0.36624598503112793,0.3464711606502533,0.3305152356624603,0.3250892162322998,0.33716100454330444,0.7188682556152344,0.5734990239143372,0.5344446301460266,0.4567777216434479,0.38815075159072876,0.341889888048172,0.29738953709602356,0.28501662611961365,0.29536867141723633,0.7072170972824097,0.5642173290252686,0.5151369571685791,0.41403907537460327,0.33482998609542847,0.2584865987300873,0.2547377347946167,0.2611428499221802,0.6942132711410522,0.5565147995948792,0.4809383451938629,0.3533029556274414,0.2590329647064209,0.22052721679210663,0.2396399974822998,0.6775379180908203,0.5442036986351013,0.4263911545276642,0.26888760924339294,0.20142656564712524,0.22453077137470245,0.6441963315010071,0.5208076238632202,0.2767070531845093,0.1971905529499054,0.1793186515569687,0.6283323168754578,0.41244930028915405,0.09695727378129959,0.1379469931125641,0.6089548468589783,0.35224252939224243,0.023070240393280983,0.6043775081634521,0.4803975820541382,0.6089943647384644,0.3892962336540222,0.42327749729156494,0.4394678771495819,0.46855899691581726,0.48732665181159973,0.49490246176719666,0.5022962093353271,0.5061284303665161,0.5021052956581116,0.48850253224372864,0.4779380261898041,0.4755387306213379,0.47874608635902405,0.4830203354358673,0.49044325947761536,0.4774147868156433,0.4649794399738312,0.4498881697654724,0.43172210454940796,0.4260616898536682,0.419628381729126,0.41007161140441895,0.39590710401535034,0.3753151595592499,0.37276893854141235,0.3692917227745056,0.3639833629131317,0.37024345993995667,0.35485872626304626,0,0,0,0,0,0,0,0,0.4259134829044342,0.4278181791305542,0.42030760645866394,0.41024336218833923,0.3851953148841858,0.31025058031082153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.5913333892822266,-0.40621960163116455,0.016402676701545715,0.41507604718208313,0.43502077460289,0.4498650133609772,0.464236319065094,0.47553908824920654,0.4833698272705078,0.5041285753250122,0.5077038407325745,0.5011986494064331,0.4965786635875702,0.5019453167915344,0.47521859407424927,0.4632118344306946,0.46871891617774963,0.481037974357605,0.48827895522117615,0.4839308559894562,0.4804193079471588,0.4760468602180481,0.4708958864212036,0.46530061960220337,0.46286889910697937,0.4665206968784332,0.46459054946899414,0.3533308207988739,0.05301463231444359,-0.18543782830238342,-0.34063151478767395,-0.2942561209201813,-0.3013473451137543,0.45156508684158325,0.4672890603542328,0.48957133293151855,0.4957289397716522,0.5011467933654785,0.5038185119628906,0.5070798993110657,0.5114812254905701,0.5092112421989441,0.5066867470741272,0.5094624161720276,0.5060707926750183,0.461677223443985,0.4570966362953186,0.4714468717575073,0.4828023314476013,0.48930320143699646,0.4858410954475403,0.48240208625793457,0.47776108980178833,0.4727262556552887,0.4717569649219513,0.4707042872905731,0.455146461725235,0.11326554417610168,-0.23546071350574493,-0.371636301279068,-0.39525237679481506,-0.478496789932251,0.4690631628036499,0.49428725242614746,0.5060988068580627,0.5019261240959167,0.5020391941070557,0.5046651363372803,0.5167818069458008,0.509523332118988,0.49898266792297363,0.5038647055625916,0.5046899318695068,0.5044797658920288,0.49228012561798096,0.4268917739391327,0.42644235491752625,0.4606167674064636,0.4808698892593384,0.48680856823921204,0.48308265209198,0.4802761375904083,0.4770517647266388,0.4728701412677765,0.4646165668964386,0.41414356231689453,-0.11795519292354584,-0.5438580513000488,-0.5220105051994324,-0.5673567652702332,0.4990557134151459,0.5096948146820068,0.5077080130577087,0.5010480880737305,0.501301646232605,0.5153447389602661,0.5080958604812622,0.46609801054000854,0.46108341217041016,0.4668674170970917,0.5020577907562256,0.5047531127929688,0.5065767765045166,0.42803502082824707,0.39260029792785645,0.43049395084381104,0.466108113527298,0.4787186086177826,0.4780217707157135,0.4764663875102997,0.47352495789527893,0.46593084931373596,0.44744911789894104,-0.018809188157320023,-0.48391208052635193,-0.7057083249092102,0,0.5034340620040894,0.5063421726226807,0.5061354041099548,0.5029374361038208,0.5113347172737122,0.5075779557228088,0.4702008366584778,0.4518606662750244,0.45747506618499756,0.46766021847724915,0.48435935378074646,0.5023989677429199,0.5069975256919861,0.5044726729393005,0.46579456329345703,0.42949000000953674,0.4418085217475891,0.4699682295322418,0.47129136323928833,0.46570852398872375,0.46208807826042175,0.4503626525402069,0.12722834944725037,-0.39305374026298523,-0.731346607208252,0,0.5026432275772095,0.5045117139816284,0.5045997500419617,0.5121665000915527,0.5185484886169434,0.49383097887039185,0.4592568874359131,0.45463818311691284,0.4559091627597809,0.4715130031108856,0.4903089702129364,0.5064111948013306,0.5113706588745117,0.5052892565727234,0.5002590417861938,0.485249400138855,0.47933921217918396,0.46631184220314026,0.467899352312088,0.4610748887062073,0.4505046308040619,0.19285045564174652,-0.2728302776813507,-0.5482572913169861,0,0.5039955973625183,0.5027264356613159,0.5055981874465942,0.512001633644104,0.5053607225418091,0.46685782074928284,0.42908698320388794,0.43704238533973694,0.44162237644195557,0.46453428268432617,0.4887911379337311,0.5049194693565369,0.5089795589447021,0.5032179951667786,0.4985409379005432,0.4814433157444,0.4769273102283478,0.4766799807548523,0.47322404384613037,0.47415491938591003,0.18120382726192474,0.10940583050251007,-0.3830034136772156,0,0.4979182779788971,0.4972391128540039,0.5026180744171143,0.5021122097969055,0.4807405173778534,0.4477865993976593,0.40907078981399536,0.40514448285102844,0.42861318588256836,0.4461917579174042,0.4747505187988281,0.4944509267807007,0.4854825437068939,0.4922903776168823,0.47620484232902527,0.465268611907959,0.471981406211853,0.481125146150589,0.48833468556404114,0.3998694121837616,0.23545166850090027,0.13407833874225616,-0.2860680818557739,0.4916267991065979,0.4878814220428467,0.4941680133342743,0.4877375364303589,0.46320053935050964,0.437793493270874,0.40106916427612305,0.3853246867656708,0.3652544319629669,0.35302111506462097,0.39844954013824463,0.43087634444236755,0.445721298456192,0.46453702449798584,0.446675181388855,0.4557005763053894,0.4756021499633789,0.4877915680408478,0.49125561118125916,0.44268113374710083,0.2568472623825073,0,0.482736736536026,0.4807389974594116,0.4864957630634308,0.4552014172077179,0.43243202567100525,0.4232425093650818,0.3761501610279083,0.34467801451683044,0.28786391019821167,0.2705509662628174,0.29514071345329285,0.3435600996017456,0.2708425223827362,0.24535676836967468,0.45953884720802307,0.4401318430900574,0.4734918773174286,0.48824968934059143,0.49534544348716736,0.4315004348754883,0.2983148992061615,0.47660771012306213,0.4764050841331482,0.4835091233253479,0.45757704973220825,0.4044933319091797,0.35366690158843994,0.31960442662239075,0.29014793038368225,0.2595948874950409,0.22837282717227936,0.27593255043029785,0.27841508388519287,0.24663031101226807,0.40986254811286926,0.4574163258075714,0.4593106508255005,0.4754440188407898,0.4876711368560791,0.49582672119140625,0,0.47677773237228394,0.47593003511428833,0.4748709797859192,0.4796411395072937,0.4552266001701355,0.38531380891799927,0.3452455401420593,0.31336256861686707,0.2641024589538574,0.2316707819700241,0.24560829997062683,0.2912582457065582,0.4794761538505554,0.4717506170272827,0.46067386865615845,0.4236255884170532,0.4687546193599701,0.4879554212093353,0.494020938873291,0.4762769341468811,0.4761962890625,0.47479116916656494,0.47680142521858215,0.4713265597820282,0.44853436946868896,0.46724599599838257,0.44588324427604675,0.3338865041732788,0.2454569786787033,0.23930111527442932,0.45754578709602356,0.5183143615722656,0.48396655917167664,0.4813707172870636,0.3947153687477112,0.47242748737335205,0.4940723776817322,0.47763752937316895,0.476593554019928,0.4757847189903259,0.4755539298057556,0.46506720781326294,0.46473994851112366,0.47017258405685425,0.4677778482437134,0.4404102861881256,0.28828948736190796,0.4061289429664612,0.5150901079177856,0.5172264575958252,0.5116472840309143,0.4888533055782318,0.4109432101249695,0.4780096709728241,0.4814150333404541,0.4782314598560333,0.47931161522865295,0.47743698954582214,0.4737078845500946,0.46971577405929565,0.46799179911613464,0.46922433376312256,0.4607614576816559,0.4284957945346832,0.4797952175140381,0.5222105979919434,0.5184300541877747,0.5181964635848999,0.42167675495147705,0.4547919034957886,0.4906154274940491,0.48742228746414185,0.48328274488449097,0.4850969910621643,0.4766900837421417,0.4659844636917114,0.4659561812877655,0.4686357378959656,0.46992647647857666,0.4763113856315613,0.5115330219268799,0.5190672874450684,0.5198768973350525,0.5057829022407532,0.2724423408508301,0.4762992262840271,0.47714561223983765,0.4809463918209076,0.4824972152709961,0.4711983799934387,0.458490788936615,0.4621336758136749,0.4681277573108673,0.4732809066772461,0.4903852343559265,0.44194045662879944,0.5195696949958801,0.5123007893562317,0.4540371000766754,0.46234554052352905,0.4758135974407196,0.4791283905506134,0.48027217388153076,0.4635910391807556,0.44611695408821106,0.43735817074775696,0.46524518728256226,0.49011504650115967,0.3872217833995819,0.5143899321556091,0.5151559710502625,0.4766051769256592,0.44724634289741516,0.4606846570968628,0.47082117199897766,0.4717239439487457,0.4546399712562561,0.4319484531879425,0.4307585060596466,0.4748586416244507,0.475288987159729,0.48741865158081055,0.5001932382583618,0.4460449516773224,0.43867793679237366,0.4473249614238739,0.45573690533638,0.44417765736579895,0.43921059370040894,0.4499911367893219,0.4561977982521057,0.4827995002269745,0.4557296931743622,0.48183712363243103,0.3565722405910492,0.42986103892326355,0.4381244480609894,0.432841032743454,0.42754125595092773,0.4309305250644684,0.4598691165447235,0.49687808752059937,0.45951858162879944,0.4394226372241974,0.41070014238357544,0.41656360030174255,0.42790403962135315,0.4215538501739502,0.41449660062789917,0.4250662624835968,0.4298476576805115,0.419613242149353,0.48895713686943054,0.4388641119003296,0.3983679711818695,0.4087127149105072,0.41361385583877563,0.4110466539859772,0.3985224962234497,0.3892781734466553,0.42417240142822266,0.4430653154850006,0.3849257230758667,0.4029710292816162,0.4100685715675354,0.40377235412597656,0.40035098791122437,0.40384894609451294,0.4284461438655853,0.38205912709236145,0.3878026604652405,0.3974061906337738,0.38861238956451416,0.3930136561393738,0.40855690836906433,0.36195120215415955,0.36594659090042114,0.35762789845466614,0.36996543407440186,0.3954121172428131,0.3359321355819702,0.3221910893917084,0.3113943636417389,0.36408305168151855,0.2928113043308258,0.2710414230823517,0.28749075531959534,0.27832120656967163,0,0,0.4187238812446594,0.4233837127685547,0.4272973835468292,0.45106321573257446,0.4770553410053253,0.49505630135536194,0.5020744800567627,0.4921916723251343,0.4860391616821289,0.47532880306243896,0.4622223973274231,0.4565620720386505,0.45877712965011597,0.4696555733680725,0.4774032533168793,0.4864768087863922,0.4870588481426239,0.4863964915275574,0.4879017174243927,0.48987099528312683,0.49258580803871155,0.4928699731826782,0.4844664931297302,0.4829362630844116,0.4758322238922119,0.47630152106285095,0.48037466406822205,0.4809415340423584,0.4778997600078583,0.397318035364151,0.34402191638946533,-1.5508203506469727,-1.1952106952667236,-0.3545037508010864,-0.02750837430357933,0.0866653099656105,0.10483977198600769,0.11610615998506546,0.11633993685245514,0.08555841445922852,0.06487050652503967,0.05867302790284157,0.05597607046365738,0.07999154180288315,0.1328684240579605,0.1616947501897812,0.21404637396335602,0.3620866537094116,0.3814845085144043,0.34199094772338867,0.3329537510871887,0.4215169847011566,0.4298727512359619,0.44944027066230774,0.4646884799003601,0.45983824133872986,-0.12751254439353943,0.140577495098114,0.35306721925735474,0.3085717558860779,0.32192134857177734,0.2852270007133484,-1.561422348022461,-1.517561674118042,-1.4849624633789062,-1.3932671546936035,-1.2099859714508057,-0.8454325199127197,-0.7020168900489807,-0.5647147297859192,-0.42140311002731323,-0.34085381031036377,-0.3252590298652649,-0.31468823552131653,-0.3317048251628876,-0.38754069805145264,-0.3567008376121521,-0.34581321477890015,-0.3368462026119232,-0.29191258549690247,-0.14787288010120392,-0.12101855129003525,-0.06573628634214401,0.09417292475700378,0.21470843255519867,0.2607489228248596,0.272609144449234,0.2783111333847046,0.29233747720718384,0.3019348084926605,0.3275110721588135,0.34824463725090027,0.3818351626396179,0.3682878911495209,0.4693015515804291,0.47490793466567993,0.48087820410728455,0.4816169738769531,0.48197031021118164,0.48266640305519104,0.48537465929985046,0.49037811160087585,0.4884960651397705,0.4867640435695648,0.4846232235431671,0.4840662181377411,0.48438796401023865,0.48682376742362976,0.48596441745758057,0.4813588857650757,0.4668850004673004,0.46109598875045776,0.4647079408168793,0.48241791129112244,0.49592506885528564,0.502402126789093,0.5058998465538025,0.5008828043937683,0.47574394941329956,0.44049108028411865,0.423185795545578,0.4163758158683777,0.4060475528240204,0.37181901931762695,0.4631040692329407,0.47154733538627625,0.47500884532928467,0.4758453667163849,0.48463472723960876,0.4894680678844452,0.4863453805446625,0.4811381995677948,0.48026716709136963,0.48189830780029297,0.48264840245246887,0.4827386140823364,0.48632481694221497,0.4877880811691284,0.4857787489891052,0.4812796413898468,0.4653589427471161,0.4725956320762634,0.4871712625026703,0.5030015707015991,0.5080538392066956,0.5089740753173828,0.49518439173698425,0.46295487880706787,0.42302265763282776,0.40089961886405945,0.39224550127983093,0.3778228759765625,0.4430883824825287,0.4591591954231262,0.4655810296535492,0.46396535634994507,0.4771067202091217,0.4875088036060333,0.48265790939331055,0.4769761562347412,0.4734983742237091,0.4763079285621643,0.4804988205432892,0.48207971453666687,0.4840693473815918,0.4873981773853302,0.4869573712348938,0.4866456985473633,0.48429790139198303,0.4831441640853882,0.49929937720298767,0.509072482585907,0.5132867693901062,0.5068561434745789,0.4759935736656189,0.43521660566329956,0.3921430706977844,0.38097357749938965,0.3719782829284668,0.3582131564617157,0.3962537944316864,0.44994494318962097,0.46151161193847656,0.4707695245742798,0.4829867482185364,0.4771977961063385,0.4711979031562805,0.4665167033672333,0.466593474149704,0.4741303622722626,0.47929802536964417,0.4813060164451599,0.48598966002464294,0.49000832438468933,0.4910673201084137,0.4949924051761627,0.5085204243659973,0.5137661099433899,0.5086761713027954,0.5069782733917236,0.49554288387298584,0.44556349515914917,0.3984883427619934,0.36663350462913513,0.3508869707584381,0.33717671036720276,0.3282638192176819,0.3810420632362366,0.44676485657691956,0.4689282178878784,0.4756883978843689,0.4717155694961548,0.46969273686408997,0.4668281078338623,0.46303412318229675,0.46317678689956665,0.47209903597831726,0.47774606943130493,0.47543904185295105,0.48857200145721436,0.4934925436973572,0.5000408887863159,0.5154709815979004,0.5181035995483398,0.5005722045898438,0.4729819595813751,0.42403748631477356,0.38107600808143616,0.3590890169143677,0.33587658405303955,0.3257419764995575,0.30984362959861755,0.30177247524261475,0.48647186160087585,0.48028764128685,0.4785490334033966,0.4743250608444214,0.47029396891593933,0.46666982769966125,0.46228858828544617,0.4514446556568146,0.4577895402908325,0.4667959213256836,0.46530061960220337,0.46369850635528564,0.4920319616794586,0.4940197169780731,0.5020536780357361,0.49796751141548157,0.45694202184677124,0.3942156732082367,0.35439974069595337,0.3528784215450287,0.34713566303253174,0.33769357204437256,0.32395800948143005,0.3129822909832001,0.29870590567588806,0.41393619775772095,0.284814715385437,0.45266854763031006,0.47176748514175415,0.46285873651504517,0.4543834924697876,0.44913628697395325,0.4490094482898712,0.45702406764030457,0.47128137946128845,0.4405888319015503,0.4618884027004242,0.47730740904808044,0.4575447142124176,0.420634388923645,0.39306187629699707,0.39435508847236633,0.3876769542694092,0.3718893527984619,0.35702255368232727,0.3359134793281555,0.32804760336875916,0.3006286323070526,0.2855702340602875,0.4525204300880432,0.489853173494339,0.491915762424469,0.4803105592727661,0.4438354969024658,0.4426981210708618,0.44461995363235474,0.43381351232528687,0.46268802881240845,0.4633271396160126,0.45655718445777893,0.4620673656463623,0.46454039216041565,0.46131300926208496,0.42909327149391174,0.43368518352508545,0.45192739367485046,0.4149104356765747,0.37467122077941895,0.35571905970573425,0.32729777693748474,0.31482571363449097,0.29036688804626465,0.4324418306350708,0.4814712703227997,0.5003757476806641,0.4909017086029053,0.46928727626800537,0.4369201064109802,0.41076067090034485,0.4245871305465698,0.4269210994243622,0.455942302942276,0.46757379174232483,0.35108792781829834,0.4769167900085449,0.4850132465362549,0.49898919463157654,0.5045297741889954,0.4942949414253235,0.4148561358451843,0.3713308274745941,0.3336193561553955,0.3004242181777954,0.27528876066207886,0.42183589935302734,0.4665006101131439,0.49785420298576355,0.48978033661842346,0.47585928440093994,0.4395177364349365,0.40677231550216675,0.3599790632724762,0.37395361065864563,0.4138115346431732,0.44521406292915344,0.42307621240615845,0.47199922800064087,0.5053654313087463,0.5111475586891174,0.5115829706192017,0.44431403279304504,0.38687434792518616,0.3379393219947815,0.2947618365287781,0.216969832777977,0.41463255882263184,0.4634329378604889,0.4695758819580078,0.48150867223739624,0.4113416373729706,0.3903515636920929,0.3680703341960907,0.3544270694255829,0.34859371185302734,0.4434888958930969,0.38348400592803955,0.11853675544261932,0.4161878824234009,0.5015339851379395,0.5104023814201355,0.4911084473133087,0.4249524474143982,0.3649665117263794,0.25308674573898315,0.10239502787590027,0.3673132658004761,0.3718871474266052,0.4366549253463745,0.434451162815094,0.38798385858535767,0.3647187650203705,0.3541436493396759,0.3524112403392792,0.3520814776420593,0.4025742709636688,0.14710009098052979,-0.21050237119197845,0.160465806722641,0.329461932182312,0.4119839072227478,0.3897814154624939,0.29501810669898987,0.10637133568525314,-0.05075260251760483,0.4229774475097656,0.4210423231124878,0.4338822066783905,0.4108179807662964,0.3712877929210663,0.36157792806625366,0.35374149680137634,0.3414335250854492,0.30394217371940613,-0.034163154661655426,-0.16232094168663025,-0.2539352476596832,-0.27079179883003235,-0.2707628905773163,-0.12823258340358734,-0.14939023554325104,-0.10337435454130173,-0.06307753175497055,0.4550682008266449,0.45328375697135925,0.4402179718017578,0.3752835690975189,0.3470122814178467,0.3668331205844879,0.35554611682891846,0.30870628356933594,0.09917456656694412,-0.20295514166355133,-0.2570488452911377,-0.28640201687812805,-0.29129016399383545,-0.29438331723213196,-0.29281002283096313,-0.2972276210784912,-0.3069661557674408,0.3857761323451996,0.4572798013687134,0.4438248872756958,0.26341262459754944,0.2946317493915558,0.36812442541122437,0.3472882807254791,0.3564406633377075,0.05925588682293892,-0.28238242864608765,-0.29570895433425903,-0.3010410666465759,-0.31109818816185,-0.3169634938240051,-0.3254304528236389,-0.3296433985233307,0.29612913727760315,0.4352618157863617,0.3824339210987091,0.24998317658901215,0.24415291845798492,0.3739573657512665,0.3880787491798401,0.32855623960494995,-0.28736990690231323,-0.31415462493896484,-0.3191416561603546,-0.3242746889591217,-0.3302203118801117,-0.33560270071029663,-0.3384673595428467,0.29616880416870117,0.22914259135723114,0.2426731437444687,0.15662966668605804,0.23713257908821106,0.38322603702545166,0.3745390772819519,-0.21613194048404694,-0.3077316880226135,-0.31849896907806396,-0.49600332975387573,-0.38115939497947693,-0.34438684582710266,-0.34653908014297485,0.28957876563072205,0.2666339576244354,0.1453859657049179,0.14135976135730743,0.1974254548549652,0.13068579137325287,0.04320232570171356,-0.13399124145507812,-0.23390676081180573,-0.33597531914711,-0.3157210946083069,-0.35177987813949585,-0.3717076778411865,0.16079434752464294,0.15022097527980804,0.24334782361984253,0.20535634458065033,0.11045841872692108,-0.057855650782585144,-0.1429416984319687,-0.18362364172935486,-0.23425748944282532,-0.271357923746109,-0.282924622297287,-0.3041159510612488,0.0072269742377102375,0.10923025757074356,0.2928357720375061,0.2964915335178375,0.1998501420021057,-0.03389999270439148,-0.16418854892253876,-0.2176275998353958,-0.2569693922996521,-0.28004732728004456,-0.2900886535644531,0.05494678020477295,0.10102946311235428,0.12178003042936325,0.1408250629901886,0.10056877136230469,-0.063552126288414,-0.19795149564743042,-0.2518638074398041,-0.2655080556869507,-0.28659412264823914,0.08586306869983673,0.11120960861444473,0.10782603174448013,0.09999954700469971,0.07618309557437897,-0.14021804928779602,-0.23289363086223602,-0.2636018395423889,-0.2893633246421814,0.10658574104309082,0.10703791677951813,0.09631531685590744,0.059197768568992615,-0.23601584136486053,-0.18186192214488983,-0.2697806656360626,-0.37623393535614014,0.11151201277971268,0.09433634579181671,0.0655599981546402,-0.053555574268102646,-0.21526645123958588,-0.25622737407684326,-0.37746062874794006,0.0975092425942421,0.08096188306808472,-0.05505531653761864,-0.26587072014808655,-0.23978552222251892,-0.4141615927219391,0.08078692853450775,-0.08385587483644485,-0.43611833453178406,-0.22986841201782227,-0.611242949962616,-0.05972546339035034,-0.48269230127334595,-0.38269922137260437,-0.8520176410675049,-0.4382479190826416,-0.6888764500617981,-1.0353065729141235,-0.9357767701148987,-1.2175178527832031,-1.4627996683120728,-1.63669753074646,-1.6527879238128662,-1.6656535863876343,-1.681982398033142,-1.6903163194656372,-1.7009167671203613,-1.7526953220367432,-1.8625211715698242,-1.941142201423645,-1.9594123363494873,-1.9665329456329346,-1.9605846405029297,-1.961150884628296,-1.9585260152816772,-1.9548158645629883,-1.9547289609909058,-1.9466842412948608,-1.9186676740646362,-1.8723509311676025,-1.7177119255065918,-1.6477489471435547,-1.6342774629592896,-1.6259773969650269,-1.6300127506256104,-1.6331883668899536,-1.6377909183502197,-1.649204134941101,-1.653121829032898,-1.6461955308914185,-1.6247756481170654,-1.615225911140442,0.32012176513671875,0.2815750241279602,0.3023923337459564,0.3282657861709595,0.3671127259731293,0.3786603808403015,0.2122366577386856,-0.21811652183532715,-0.2723430097103119,-0.31145843863487244,-0.3426602780818939,-0.3759877383708954,-0.4197957217693329,-0.4583079516887665,-0.5209723114967346,-0.6033271551132202,-0.9850954413414001,-1.5082746744155884,-1.7251678705215454,-1.777475118637085,-1.797149419784546,-1.812878966331482,-1.8203704357147217,-1.8163175582885742,-1.7863901853561401,-1.7364659309387207,-1.6670360565185547,-1.6526204347610474,-1.6461842060089111,-1.6431785821914673,0.3023325204849243,0.2889074683189392,0.3079126477241516,0.3341125249862671,0.3641333281993866,0.31302785873413086,-0.10779259353876114,-0.2424667626619339,-0.2799536883831024,-0.3144965171813965,-0.34417107701301575,-0.3943001329898834,-0.4807369112968445,-0.5398705005645752,-0.811288058757782,-1.3362160921096802,-1.6960558891296387,-1.7879117727279663,-1.8149733543395996,-1.8276115655899048,-1.8367537260055542,-1.8414324522018433,-1.843130350112915,-1.8451478481292725,-1.8232924938201904,-1.7560125589370728,-1.6893221139907837,-1.6737619638442993,-1.6582634449005127,0.28114914894104004,0.2854045629501343,0.3059506416320801,0.32627272605895996,0.3290504515171051,-0.016540102660655975,-0.2036697417497635,-0.2523041069507599,-0.2841348946094513,-0.3219935894012451,-0.35888078808784485,-0.46783486008644104,-0.6255342960357666,-1.075124740600586,-1.5731065273284912,-1.7721060514450073,-1.810437798500061,-1.8274011611938477,-1.8367975950241089,-1.8432142734527588,-1.8484903573989868,-1.8511897325515747,-1.8551417589187622,-1.855173110961914,-1.828468918800354,-1.743371844291687,-1.7024471759796143,-1.6845831871032715,0.2729911804199219,0.27745288610458374,0.2991863787174225,0.2994620203971863,0.0862637311220169,-0.1697256863117218,-0.22305582463741302,-0.25399985909461975,-0.28691521286964417,-0.33498817682266235,-0.43299585580825806,-0.6628279685974121,-1.2307519912719727,-1.6603800058364868,-1.790284514427185,-1.818243384361267,-1.8312965631484985,-1.837692141532898,-1.8433347940444946,-1.848569631576538,-1.8526549339294434,-1.8555887937545776,-1.8598073720932007,-1.8651148080825806,-1.8228929042816162,-1.7295321226119995,-1.6960406303405762,0.2653127908706665,0.2640022337436676,0.2362140566110611,0.07168710976839066,-0.15458957850933075,-0.20578309893608093,-0.2343498021364212,-0.2679738998413086,-0.31566742062568665,-0.4331721365451813,-0.7089373469352722,-1.3654539585113525,-1.7038673162460327,-1.7946233749389648,-1.8194468021392822,-1.830224871635437,-1.836738109588623,-1.8403693437576294,-1.8455885648727417,-1.849785327911377,-1.8533473014831543,-1.857533574104309,-1.8642070293426514,-1.869280219078064,-1.8038063049316406,-1.7163596153259277,0.24050961434841156,0.1980099380016327,0.04539588838815689,-0.13856437802314758,-0.1892704963684082,-0.21980561316013336,-0.2524746060371399,-0.2967761158943176,-0.40484413504600525,-0.7464722990989685,-1.378921389579773,-1.7073841094970703,-1.7961674928665161,-1.8191922903060913,-1.826690673828125,-1.8342140913009644,-1.8378645181655884,-1.8419010639190674,-1.8471899032592773,-1.8518729209899902,-1.856378197669983,-1.8630313873291016,-1.8706676959991455,-1.8730002641677856,-1.7772032022476196,0.20232300460338593,0.07166622579097748,-0.11949633061885834,-0.17820964753627777,-0.2085857093334198,-0.23589147627353668,-0.27267327904701233,-0.36135175824165344,-0.5967857241630554,-1.3158899545669556,-1.6911873817443848,-1.7876055240631104,-1.8139125108718872,-1.824711561203003,-1.8312536478042603,-1.836277961730957,-1.840016484260559,-1.8448606729507446,-1.8485912084579468,-1.853589415550232,-1.8602699041366577,-1.8677480220794678,-1.8797152042388916,-1.866772174835205,0.13637369871139526,-0.08764860033988953,-0.16291308403015137,-0.20424339175224304,-0.22942981123924255,-0.2546318769454956,-0.32728442549705505,-0.4957506060600281,-1.130439281463623,-1.6266372203826904,-1.7720434665679932,-1.804761290550232,-1.8194150924682617,-1.8286701440811157,-1.8326035737991333,-1.836565375328064,-1.8428494930267334,-1.8470999002456665,-1.8505889177322388,-1.8563700914382935,-1.8656429052352905,-1.8788121938705444,-1.9124245643615723,-0.010702329687774181,-0.14690019190311432,-0.1921597719192505,-0.222152978181839,-0.24637596309185028,-0.284270703792572,-0.42967796325683594,-0.7424325942993164,-1.5095021724700928,-1.7528996467590332,-1.7952500581741333,-1.8119854927062988,-1.82138991355896,-1.8277760744094849,-1.8328930139541626,-1.8374203443527222,-1.843186378479004,-1.846407175064087,-1.8514140844345093,-1.8609471321105957,-1.8772433996200562,-1.9236594438552856,-0.11243122816085815,-0.17751556634902954,-0.20919498801231384,-0.23475800454616547,-0.2598358690738678,-0.37985682487487793,-0.5346042513847351,-1.0914589166641235,-1.671432614326477,-1.7739603519439697,-1.7992475032806396,-1.8108594417572021,-1.819350004196167,-1.8265037536621094,-1.8308157920837402,-1.8364959955215454,-1.8420649766921997,-1.8475117683410645,-1.8554023504257202,-1.8744486570358276,-1.9348374605178833,-0.1496286392211914,-0.19516071677207947,-0.2260642945766449,-0.24965044856071472,-0.33385780453681946,-0.4799244999885559,-0.7663243412971497,-1.4806150197982788,-1.7268422842025757,-1.7792716026306152,-1.7958227396011353,-1.8078495264053345,-1.8140727281570435,-1.8211383819580078,-1.8291354179382324,-1.835572361946106,-1.840528130531311,-1.848341464996338,-1.8684757947921753,-1.9256854057312012,-0.1782185286283493,-0.2167140394449234,-0.24708206951618195,-0.31896135210990906,-0.42800283432006836,-0.6059021353721619,-1.1344631910324097,-1.6018402576446533,-1.7270524501800537,-1.7713866233825684,-1.7876262664794922,-1.7975993156433105,-1.8048412799835205,-1.8129985332489014,-1.823012113571167,-1.8344206809997559,-1.841189980506897,-1.8577908277511597,-1.9167431592941284,-0.2079482078552246,-0.26070547103881836,-0.3474522829055786,-0.4231274724006653,-0.5632062554359436,-0.9335678219795227,-1.3958457708358765,-1.6394095420837402,-1.7229433059692383,-1.7556909322738647,-1.768887996673584,-1.782524585723877,-1.7892438173294067,-1.7974978685379028,-1.8172078132629395,-1.829576849937439,-1.843961477279663,-1.9109042882919312,-0.34017670154571533,-0.3541657030582428,-0.40985774993896484,-0.5155758261680603,-0.8418839573860168,-1.3669180870056152,-1.5005656480789185,-1.608248233795166,-1.687058925628662,-1.7212834358215332,-1.7384282350540161,-1.7558974027633667,-1.7609707117080688,-1.7850574254989624,-1.8122762441635132,-1.829334020614624,-1.9034425020217896,-0.3511045575141907,-0.384219229221344,-0.4448296129703522,-0.6015673279762268,-1.3242052793502808,-1.4982576370239258,-1.5162452459335327,-1.5678997039794922,-1.6352055072784424,-1.6706814765930176,-1.6970469951629639,-1.7158533334732056,-1.7470711469650269,-1.7790418863296509,-1.8107547760009766,-1.8976976871490479,-0.36772456765174866,-0.3869035243988037,-0.5549676418304443,-1.1222635507583618,-1.4820431470870972,-1.5398154258728027,-1.5327407121658325,-1.573237419128418,-1.6043553352355957,-1.6590845584869385,-1.6826812028884888,-1.716966986656189,-1.759751796722412,-1.8013203144073486,-1.8820387125015259,-0.3702198266983032,-0.4436037540435791,-0.7222493886947632,-1.3618992567062378,-1.5639923810958862,-1.5746424198150635,-1.5728683471679688,-1.5928642749786377,-1.6217135190963745,-1.6594687700271606,-1.6901884078979492,-1.7244585752487183,-1.787195086479187,-1.863695502281189,-0.36360856890678406,-0.4462468922138214,-1.0505213737487793,-1.464058518409729,-1.588146686553955,-1.5772178173065186,-1.5871694087982178,-1.615545630455017,-1.635105013847351,-1.6678773164749146,-1.685803771018982,-1.7109453678131104,-1.8286409378051758,-0.3799756169319153,-0.6166441440582275,-1.2080273628234863,-1.5202972888946533,-1.5846481323242188,-1.5811539888381958,-1.5982996225357056,-1.6217045783996582,-1.638153314590454,-1.6564748287200928,-1.653763771057129,-1.698241949081421,-0.396180123090744,-0.8599686026573181,-1.3592780828475952,-1.5411368608474731,-1.5741418600082397,-1.586215615272522,-1.6078174114227295,-1.628393292427063,-1.6438486576080322,-1.6469745635986328,-1.6463127136230469,-0.5402784943580627,-1.0210329294204712,-1.4245506525039673,-1.5280958414077759,-1.5742506980895996,-1.5930447578430176,-1.6194968223571777,-1.6408352851867676,-1.6406835317611694,-1.6402485370635986,-0.7024321556091309,-1.157175064086914,-1.455481767654419,-1.5340684652328491,-1.5803992748260498,-1.6087636947631836,-1.6312658786773682,-1.6412705183029175,-1.6401222944259644,-0.8439889550209045,-1.2660866975784302,-1.4820014238357544,-1.5567424297332764,-1.5923329591751099,-1.6123597621917725,-1.6319729089736938,-1.637038230895996,-0.9925670623779297,-1.3761941194534302,-1.5156779289245605,-1.5854285955429077,-1.60408353805542,-1.6208336353302002,-1.6346209049224854,-1.1090419292449951,-1.4483104944229126,-1.5637116432189941,-1.5933364629745483,-1.6078559160232544,-1.6335673332214355,-1.3715049028396606,-1.523098111152649,-1.5838993787765503,-1.6033506393432617,-1.624783992767334,-1.4824848175048828,-1.5503894090652466,-1.6001039743423462,-1.6369999647140503,-1.5317323207855225,-1.5886701345443726,-1.6323964595794678,-1.5651451349258423,-1.626307487487793,-1.5995031595230103,-1.6287740468978882,-1.6366446018218994,-1.6627483367919922,-1.664096474647522,-1.6438288688659668,-1.6326791048049927,-1.6268872022628784,-1.626503825187683,-1.6280479431152344,-1.6474838256835938,-1.7493808269500732,-1.8993184566497803,-1.9462664127349854,-1.9631884098052979,-1.9713932275772095,-1.9725483655929565,-1.9778039455413818,-1.9717921018600464,-1.9698694944381714,-1.9697380065917969,-1.9597408771514893,-1.9375801086425781,-1.849497675895691,-1.7273820638656616,-1.693289041519165,-1.6816508769989014,-1.6745911836624146,-1.666589617729187,-1.6572880744934082,-1.6441500186920166,-1.6406855583190918,-1.6541482210159302,-1.6680747270584106,-1.650073528289795,-1.6406806707382202,-1.6300265789031982,-1.6337676048278809,-1.6436408758163452,-1.6812835931777954,-1.8428547382354736,-1.9361894130706787,-1.9664241075515747,-1.9803277254104614,-1.9843062162399292,-1.9900437593460083,-1.9939733743667603,-1.9900239706039429,-1.980614185333252,-1.964203953742981,-1.9487974643707275,-1.9250439405441284,-1.8216148614883423,-1.7184076309204102,-1.684616208076477,-1.6711394786834717,-1.666566252708435,-1.6649068593978882,-1.6609070301055908,-1.6510833501815796,-1.6469519138336182,-1.6528358459472656,-1.6554948091506958,-1.64323091506958,-1.6333847045898438,-1.6535353660583496,-1.7189728021621704,-1.811128854751587,-1.9602786302566528,-1.982078194618225,-1.9925774335861206,-1.996610403060913,-2.0025634765625,-2.0046117305755615,-2.0090243816375732,-2.013761043548584,-1.9951870441436768,-1.9712278842926025,-1.952702522277832,-1.9211887121200562,-1.7997974157333374,-1.709993839263916,-1.680835485458374,-1.666765809059143,-1.6632574796676636,-1.6668896675109863,-1.6635184288024902,-1.6563656330108643,-1.6463295221328735,-1.6491241455078125,-1.6424986124038696,-1.6395760774612427,-1.7009562253952026,-1.822969675064087,-1.930062174797058,-1.9797470569610596,-1.9999916553497314,-2.0112268924713135,-2.0160861015319824,-2.0168988704681396,-2.0162224769592285,-2.0137484073638916,-2.0162768363952637,-2.0069799423217773,-1.9873342514038086,-1.9672939777374268,-1.934611201286316,-1.7895426750183105,-1.709321141242981,-1.683010220527649,-1.6678626537322998,-1.6653300523757935,-1.6640526056289673,-1.6633906364440918,-1.657042384147644,-1.6583776473999023,-1.6601189374923706,-1.6747475862503052,-1.7696977853775024,-1.888849139213562,-1.9789042472839355,-1.9921324253082275,-1.999435305595398,-2.010885715484619,-2.012822389602661,-2.0130252838134766,-2.013474941253662,-2.0130436420440674,-2.0127620697021484,-2.006277561187744,-1.9982731342315674,-1.9854143857955933,-1.945207118988037,-1.79242742061615,-1.71417236328125,-1.69338858127594,-1.6726856231689453,-1.6665641069412231,-1.661532998085022,-1.660056471824646,-1.6538413763046265,-1.7322396039962769,-1.7913373708724976,-1.9117215871810913,-1.9647469520568848,-1.9841516017913818,-1.995177984237671,-2.002347946166992,-2.006843328475952,-2.0097620487213135,-2.010333299636841,-2.0105361938476562,-2.0105457305908203,-2.0101256370544434,-2.0101020336151123,-2.001861095428467,-1.9953372478485107,-1.9501221179962158,-1.7995893955230713,-1.7136726379394531,-1.6954872608184814,-1.679461121559143,-1.6649034023284912,-1.6601313352584839,-1.6633702516555786,-1.6501981019973755,-1.8910391330718994,-1.954403281211853,-1.9777886867523193,-1.9858297109603882,-1.9938868284225464,-1.9997345209121704,-2.0024213790893555,-2.0042285919189453,-2.0052645206451416,-2.005502462387085,-2.006165027618408,-2.006730794906616,-2.0074331760406494,-2.0051305294036865,-1.9975982904434204,-1.952488899230957,-1.8090370893478394,-1.7158929109573364,-1.6910932064056396,-1.675864577293396,-1.667367696762085,-1.6655309200286865,-1.6587516069412231,-1.6480852365493774,-1.9575048685073853,-1.9742848873138428,-1.9842838048934937,-1.990559697151184,-1.9954144954681396,-1.9985125064849854,-1.9997456073760986,-1.9997777938842773,-2.0003139972686768,-2.001828193664551,-2.0018928050994873,-1.9984760284423828,-1.9974865913391113,-1.9965740442276,-1.9664655923843384,-1.815321683883667,-1.721022367477417,-1.6916884183883667,-1.6737769842147827,-1.6663647890090942,-1.659866213798523,-1.6509137153625488,-1.637016773223877,-1.9662387371063232,-1.9742202758789062,-1.9801403284072876,-1.9862686395645142,-1.9913978576660156,-1.9933401346206665,-1.9938069581985474,-1.992431640625,-1.9928992986679077,-1.9910972118377686,-1.990425705909729,-1.9886188507080078,-1.9901875257492065,-1.969864010810852,-1.8395580053329468,-1.7308416366577148,-1.691227912902832,-1.676988959312439,-1.6658800840377808,-1.6617971658706665,-1.6421406269073486,-1.632224202156067,-1.963775634765625,-1.97243070602417,-1.9758325815200806,-1.9814473390579224,-1.9852969646453857,-1.978554606437683,-1.9776678085327148,-1.9797674417495728,-1.9824775457382202,-1.985746145248413,-1.9839099645614624,-1.9845999479293823,-1.967288613319397,-1.8327584266662598,-1.7284239530563354,-1.6845167875289917,-1.670931339263916,-1.6621760129928589,-1.6543854475021362,-1.6409629583358765,-1.629746675491333,-1.9637212753295898,-1.970178484916687,-1.9743202924728394,-1.9738249778747559,-1.9700697660446167,-1.9704729318618774,-1.9730587005615234,-1.9772984981536865,-1.9806321859359741,-1.982964277267456,-1.9823997020721436,-1.9562128782272339,-1.8220757246017456,-1.7309693098068237,-1.6776305437088013,-1.6634352207183838,-1.6554639339447021,-1.6472172737121582,-1.6322393417358398,-1.624989628791809,-1.960133671760559,-1.9645742177963257,-1.9678871631622314,-1.9669281244277954,-1.969498872756958,-1.9747214317321777,-1.9812886714935303,-1.9837982654571533,-1.983627200126648,-1.975519061088562,-1.9297497272491455,-1.8266990184783936,-1.753366231918335,-1.692206621170044,-1.6615904569625854,-1.65492582321167,-1.6390329599380493,-1.6296958923339844,-1.6208008527755737,-1.9412684440612793,-1.953258991241455,-1.9613784551620483,-1.9629391431808472,-1.9685829877853394,-1.9749912023544312,-1.9785895347595215,-1.9702033996582031,-1.9442696571350098,-1.8717496395111084,-1.80222749710083,-1.7631756067276,-1.7167130708694458,-1.6689131259918213,-1.6504381895065308,-1.6404094696044922,-1.6288390159606934,-1.6165331602096558,-1.923652172088623,-1.933753490447998,-1.9473485946655273,-1.9524080753326416,-1.9499820470809937,-1.9379743337631226,-1.9064459800720215,-1.8593058586120605,-1.8071515560150146,-1.7772338390350342,-1.7540051937103271,-1.720330834388733,-1.677760124206543,-1.6473275423049927,-1.6250724792480469,-1.6171866655349731,-1.6054517030715942,-1.9027671813964844,-1.907029151916504,-1.9161933660507202,-1.9074859619140625,-1.8796257972717285,-1.8309186697006226,-1.794716477394104,-1.769323706626892,-1.7647420167922974,-1.760353446006775,-1.7228946685791016,-1.6867830753326416,-1.6507056951522827,-1.6218273639678955,-1.607407808303833,-1.5917764902114868,-1.7428970336914062,-1.8251540660858154,-1.8434652090072632,-1.8407291173934937,-1.813709020614624,-1.7679136991500854,-1.7543234825134277,-1.7414265871047974,-1.734500765800476,-1.727350115776062,-1.702802300453186,-1.6759642362594604,-1.6324213743209839,-1.597360372543335,-1.5586906671524048,-0.1252879947423935,-0.26190343499183655,-0.45849278569221497,-0.638014018535614,-0.8251234889030457,-0.7757221460342407,-0.7623137831687927,-1.0250966548919678,-1.3138459920883179,-1.5008388757705688,-1.436340570449829,-1.3254865407943726,-0.9047901630401611,-0.5070247054100037,0.06107929348945618,0.04190487042069435,0.01950981840491295,0.0073210326954722404,-0.01100343931466341,-0.024970643222332,-0.044039998203516006,-0.059069257229566574,-0.0676940530538559,-0.03266222029924393,0.014523401856422424,0.12206624448299408,0.1950864940881729,0.1158856749534607,0.10843099653720856,0.10066857933998108,0.08934740722179413,0.07985380291938782,0.07808178663253784,0.07463816553354263,0.08134867995977402,0.10022861510515213,0.13789823651313782,0.19339165091514587,0.2375255972146988,0.14009369909763336,0.14062626659870148,0.1414192169904709,0.13061685860157013,0.11342448741197586,0.10950452089309692,0.10791096836328506,0.1288929283618927,0.14274214208126068,0.1847853660583496,0.23357635736465454,0.1741897612810135,0.17608611285686493,0.17735834419727325,0.17079026997089386,0.15494942665100098,0.1518174707889557,0.15475042164325714,0.16413229703903198,0.18428345024585724,0.22471745312213898,0.21254542469978333,0.21804416179656982,0.21427549421787262,0.20773877203464508,0.19463613629341125,0.19181394577026367,0.20567597448825836,0.22811464965343475,0.2712864875793457,0.2890079617500305,0.2879103422164917,0.28536251187324524,0.28154945373535156,0.2725418508052826,0.2793903946876526,0.299883633852005,0.32832080125808716,0.3425939083099365,0.33784180879592896,0.3399603068828583,0.34207019209861755,0.3453398048877716,0.3547177016735077,0.36914902925491333,0.3789953887462616,0.38345807790756226,0.3846624791622162,0.387757271528244,0.38921642303466797,0.39648517966270447,0.40074437856674194,0.4052550792694092,0.4073425233364105,0.4119590222835541,0.4177233874797821,0.41685009002685547,0.42125359177589417,0.4277210533618927,0.43197932839393616,0.4366966187953949,0.43873491883277893,0.4479241967201233,0.4455092251300812,0.4518394470214844,0.45734313130378723,0.15592831373214722,0.1916125863790512,0.3060886561870575,0.6533670425415039,0.6376953125,-0.061129797250032425,0.017390605062246323,0.13501162827014923,0.0730220302939415,0.04774364456534386,0.04613117501139641,0.06116284430027008,0.39486461877822876,0.458897203207016,0.42156198620796204,0.3128211796283722,0.1893620491027832,0.11188142001628876,0.07882406562566757,0.07341563701629639,0.07204744964838028,0.09352903813123703,0.12396956235170364,0.14084921777248383,0.13989610970020294,0.11018373817205429,0.07581187039613724,-0.043007586151361465,-0.5035147070884705,-1.5633505582809448,-0.7312936186790466,-0.7949215173721313,0.20049789547920227,0.717926561832428,0.7237024903297424,0.7064604163169861,0.5844498872756958,0.5000777840614319,0.34410321712493896,0.23439250886440277,0.3197389245033264,0.3348572552204132,0.3458412289619446,0.3335539996623993,0.2806456685066223,0.19103272259235382,0.1280181109905243,0.09480277448892593,0.08406808972358704,0.09989207237958908,0.11023211479187012,0.1187225803732872,0.13650956749916077,0.15236157178878784,0.14227308332920074,0.11112874746322632,0.04935579374432564,-0.07955113053321838,-1.1871540546417236,-0.917695939540863,-0.6914166808128357,-0.05577860772609711,0,0,0,0,0.47987839579582214,0.3861737847328186,0.2205418199300766,0.19451290369033813,0.19944538176059723,0.19716836512088776,0.18522290885448456,0.1614435315132141,0.13298532366752625,0.12306804955005646,0.12148593366146088,0.12414894253015518,0.1307762712240219,0.12127402424812317,0.10607358068227768,0.10889876633882523,0.12003146857023239,0.11055508255958557,0.0775981992483139,0.005425227805972099,-0.24021559953689575,0,0,0,0,0,0,0,0,0.21482697129249573,0.15627114474773407,0.14648747444152832,0.14151453971862793,0.1396099030971527,0.13716158270835876,0.13780775666236877,0.14736352860927582,0.15458941459655762,0.15612930059432983,0.15580426156520844,0.13925623893737793,0.10647621005773544,0.0643296167254448,0.05748501420021057,0.05271879956126213,0.05142202228307724,0.002637062221765518,-0.10951757431030273,0,0,0,0,0,0,0,0,0,0.1369355469942093,0.13139823079109192,0.13204894959926605,0.13709022104740143,0.14600804448127747,0.1606111079454422,0.17212434113025665,0.17625202238559723,0.18006639182567596,0.1731267273426056,0.14920152723789215,0.11737223714590073,0.07785739749670029,0.04996159300208092,0.01079596858471632,-0.01732010580599308,-0.08594000339508057,0,0,0,0,0,0,0,0,0.09443443268537521,0.11812343448400497,0.13136442005634308,0.15064644813537598,0.1636086255311966,0.17515991628170013,0.17939582467079163,0.1845194399356842,0.18676352500915527,0.1908699870109558,0.17914624512195587,0.157993346452713,0.11488854885101318,0.08088161051273346,0.04487096518278122,0.0216527059674263,-0.03804278373718262,0,0,0,0,0,0,0,0,0.10154873877763748,0.1302156299352646,0.14317715167999268,0.14670516550540924,0.16316452622413635,0.1783139705657959,0.1837519407272339,0.19018511474132538,0.19005684554576874,0.17970791459083557,0.16204102337360382,0.15826654434204102,0.11241399496793747,0.051996972411870956,0.018978143110871315,-0.011804689653217793,0,0,0,0,0,0,0,0,0,0,0.15898729860782623,0.17162345349788666,0.1853640228509903,0.19317159056663513,0.19026443362236023,0.1739259511232376,0.14531058073043823,0.12324624508619308,0.10035144537687302,0.07295437157154083,-0.020725935697555542,-0.4539327621459961,-0.7805760502815247,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.15671683847904205,0.13248105347156525,0.11268004029989243,0.0826588049530983,0.033139441162347794,-0.008982159197330475,-0.1803891360759735,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12163593620061874,0.020750759169459343,-0.03310536965727806,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.47630903124809265,0.48222288489341736,0.48629701137542725,0.48910751938819885,0.4902118146419525,0.48172900080680847,0.4737146496772766,0.46627411246299744,0.4583405554294586,0.45738187432289124,0.4589562714099884,0.46362775564193726,0.4703023433685303,0.4819086790084839,0.4845243990421295,0.47577527165412903,0.46300697326660156,0.444573312997818,0.440585196018219,0.440388947725296,0.4389089047908783,0.4374343752861023,0.4357500374317169,0.4376637041568756,0.4376645088195801,0.43901166319847107,0.4380652904510498,0.43433675169944763,0.4181387722492218,0.3670635223388672,0.36475539207458496,0.38062816858291626,0.40858450531959534,0.43269890546798706,0.4509600102901459,0.4597015976905823,0.48100849986076355,0.4915210008621216,0.5045709013938904,0.49861088395118713,0.4894845187664032,0.47334662079811096,0.4768368601799011,0.4902479648590088,0.4786277413368225,0.4663022756576538,0.453131765127182,0.4401036500930786,0.42778706550598145,0.4134629964828491,0.40812766551971436,0.39337190985679626,0.38517701625823975,0.3728758692741394,0.367035448551178,0.3658219873905182,0.3796805739402771,0.40768808126449585,0.4094691276550293,0,0,0.37229859828948975,0.4087054431438446,0.4237198531627655,0.42821192741394043,0.43429526686668396,0.4596494734287262,0.47186601161956787,0.4950394630432129,0.4889819920063019,0.4788047969341278,0.4678928852081299,0.4806920886039734,0.46354764699935913,0.4547215700149536,0.4445677697658539,0.43832314014434814,0.4319342076778412,0.4164527952671051,0.40608856081962585,0.40295764803886414,0.3913551867008209,0.36660391092300415,0.3607264757156372,0.36951977014541626,0.39096173644065857,0.42063382267951965,0.4283123314380646,0.41338086128234863,0,0.41992631554603577,0.41185033321380615,0.4060235023498535,0.40780752897262573,0.413431853055954,0.43762102723121643,0.46997353434562683,0.48377928137779236,0.48320600390434265,0.46583497524261475,0.47184887528419495,0.4594045579433441,0.4502297639846802,0.4390983581542969,0.43928587436676025,0.43552252650260925,0.42846599221229553,0.42012929916381836,0.41110000014305115,0.3890606164932251,0.362303763628006,0.35507386922836304,0.3628307282924652,0.39935302734375,0.4310622811317444,0.4392188489437103,0,0,0.4306497871875763,0.42978617548942566,0.4173923432826996,0.4210566580295563,0.43256404995918274,0.44475463032722473,0.46549975872039795,0.46988925337791443,0.46035465598106384,0.450727254152298,0.44303643703460693,0.44564002752304077,0.4403611421585083,0.44050827622413635,0.4407055675983429,0.4362790584564209,0.43009689450263977,0.428825706243515,0.4113844335079193,0.37904077768325806,0.3628925383090973,0.37414249777793884,0.41646379232406616,0.4438011348247528,0.4514719545841217,0.4378863275051117,0,0.4334997236728668,0.4310758113861084,0.4284414052963257,0.42426106333732605,0.424780935049057,0.4340443015098572,0.4507163465023041,0.4441881477832794,0.4217691123485565,0.42576277256011963,0.4376273453235626,0.44568297266960144,0.4451499283313751,0.4438997805118561,0.44479498267173767,0.44945427775382996,0.44641152024269104,0.44606640934944153,0.42711207270622253,0.408814400434494,0.41188374161720276,0.4363616704940796,0.45013758540153503,0.4584340751171112,0.45110955834388733,0,0.4351104497909546,0.43292102217674255,0.4295303225517273,0.4274756610393524,0.41941139101982117,0.4104689657688141,0.4126707911491394,0.40777984261512756,0.4246344268321991,0.42690566182136536,0.4406750202178955,0.4489061236381531,0.45508047938346863,0.45502549409866333,0.4587132930755615,0.47469934821128845,0.48734498023986816,0.4681946933269501,0.46256712079048157,0.4491632878780365,0.44361159205436707,0.4546681046485901,0.47210460901260376,0.48814666271209717,0,0.4366694688796997,0.4352761507034302,0.433114618062973,0.42912930250167847,0.41752761602401733,0.40639764070510864,0.4108611047267914,0.4309863746166229,0.4329948425292969,0.43827834725379944,0.45084694027900696,0.45935431122779846,0.4659713804721832,0.46748024225234985,0.4848596751689911,0.5046995282173157,0.5037567615509033,0.4904778003692627,0.4644402265548706,0.4590666592121124,0.46251025795936584,0.5083800554275513,0.5419286489486694,0,0.43841537833213806,0.44102367758750916,0.44745516777038574,0.458831250667572,0.43315190076828003,0.42046111822128296,0.4316213130950928,0.4341636002063751,0.44105327129364014,0.4502497911453247,0.4661247730255127,0.47381022572517395,0.47626805305480957,0.49684756994247437,0.5230733156204224,0.5241904258728027,0.49722740054130554,0.4764614999294281,0.465847373008728,0.4618973731994629,0.4791231155395508,0.5399535298347473,0.5222181677818298,0.4386895000934601,0.44438469409942627,0.45614585280418396,0.4721544086933136,0.45790114998817444,0.449239045381546,0.4438800811767578,0.4431604743003845,0.44722431898117065,0.4607624113559723,0.4786101281642914,0.48951295018196106,0.5000807642936707,0.5195931196212769,0.5192497968673706,0.509336531162262,0.4854948818683624,0.47095996141433716,0.4655628502368927,0.47151118516921997,0.5422672033309937,0.5229990482330322,0.4414048492908478,0.4504231810569763,0.4630553126335144,0.4778057932853699,0.47518083453178406,0.46640631556510925,0.45701852440834045,0.4528166949748993,0.45353633165359497,0.47670936584472656,0.4903428256511688,0.5006905198097229,0.5125974416732788,0.5105310678482056,0.51036137342453,0.5045506954193115,0.48884856700897217,0.47942641377449036,0.4792075455188751,0.5363976955413818,0.526861846446991,0.44412505626678467,0.45468369126319885,0.4746246635913849,0.48634713888168335,0.4831535518169403,0.4756741225719452,0.4705953598022461,0.470696359872818,0.4797990620136261,0.4904990792274475,0.5001060962677002,0.5093387365341187,0.5094546675682068,0.5082812905311584,0.5045955777168274,0.5003353953361511,0.4856022894382477,0.47538813948631287,0.5202959775924683,0.5259556770324707,0.44477856159210205,0.4664487838745117,0.4816760718822479,0.49199816584587097,0.4898468255996704,0.4828072786331177,0.4836038053035736,0.48728132247924805,0.494310587644577,0.5010706186294556,0.5080409646034241,0.5095207691192627,0.5068660974502563,0.5022350549697876,0.5006067156791687,0.4853415787220001,0.47523948550224304,0.47929197549819946,0.5227454304695129,0.45492932200431824,0.4771965444087982,0.4879172444343567,0.49367043375968933,0.4931897819042206,0.49010974168777466,0.4895450174808502,0.4962679147720337,0.5041526556015015,0.5096815228462219,0.5090870261192322,0.5066210627555847,0.5020807385444641,0.4997193515300751,0.4855373501777649,0.477207213640213,0.4763748049736023,0.5211677551269531,0.47034192085266113,0.4841242730617523,0.49105602502822876,0.49449944496154785,0.49503883719444275,0.49571698904037476,0.4985327124595642,0.503487765789032,0.5068241953849792,0.5079531073570251,0.5057300925254822,0.5024498701095581,0.5001285672187805,0.49231961369514465,0.4806010127067566,0.4853358566761017,0.5126659870147705,0.479117751121521,0.48844093084335327,0.4930870532989502,0.4956393837928772,0.49447476863861084,0.4964818060398102,0.49975308775901794,0.5007734298706055,0.5045450329780579,0.5049286484718323,0.5027836561203003,0.5013184547424316,0.4953622817993164,0.4909832775592804,0.49422702193260193,0.5060790181159973,0.4868493974208832,0.4919741749763489,0.49436458945274353,0.4931381344795227,0.49440476298332214,0.49754539132118225,0.4987961947917938,0.5017390847206116,0.5033007860183716,0.5020328760147095,0.4990330934524536,0.4957427978515625,0.4920724928379059,0.4927581548690796,0.505304217338562,0.49003827571868896,0.4908393919467926,0.49079281091690063,0.49121493101119995,0.49345582723617554,0.497005820274353,0.4989127814769745,0.4998120963573456,0.4998944401741028,0.4932093322277069,0.49174296855926514,0.4922833740711212,0.49002721905708313,0.49606555700302124,0.48314934968948364,0.4826468527317047,0.48420771956443787,0.4888345003128052,0.49416232109069824,0.4983387887477875,0.496609628200531,0.4941425323486328,0.49030178785324097,0.4891607165336609,0.4920177757740021,0.4947783648967743,0.5075088739395142,0.4734647572040558,0.4765273332595825,0.48146137595176697,0.48617276549339294,0.4953678250312805,0.4974355697631836,0.4938548505306244,0.4887493848800659,0.4854336082935333,0.49328163266181946,0.5035497546195984,0.5152944922447205,0.4650513529777527,0.4735351502895355,0.4802328646183014,0.489019513130188,0.49936479330062866,0.49469509720802307,0.48731258511543274,0.4814632534980774,0.4939451217651367,0.5106176137924194,0.5179867148399353,0.4645773470401764,0.4748328924179077,0.48609045147895813,0.4972245395183563,0.49727579951286316,0.48847368359565735,0.4805489182472229,0.4966473877429962,0.5107025504112244,0.5196974873542786,0.4679277837276459,0.4836180806159973,0.4950209856033325,0.49768683314323425,0.4894565939903259,0.4801805317401886,0.500072181224823,0.5042701363563538,0.49929434061050415,0.47680366039276123,0.490526407957077,0.49770984053611755,0.49122878909111023,0.48433417081832886,0.48336172103881836,0.4842965304851532,0.4777238368988037,0.4847981929779053,0.4940206706523895,0.4922831654548645,0.4838929772377014,0.4813101589679718,0.4636215269565582,0.435866117477417,0.48950567841529846,0.491280198097229,0.48425376415252686,0.4765106737613678,0.48008301854133606,0.4310459494590759,0.4923221170902252,0.4882313013076782,0.4781659245491028,0.4689711630344391,0.4527759850025177,0.48837393522262573,0.48185938596725464,0.46874770522117615,0.46653035283088684,0.4854842722415924,0.4753827750682831,0.4539574682712555,0.4803370535373688,0.4632774293422699,0.4716649055480957,0.3577563464641571,0.39730098843574524,0.43631115555763245,0.439265638589859,0.4381534457206726,0.4376870393753052,0.4371604025363922,0.43589815497398376,0.4359375536441803,0.4364858865737915,0.4372554421424866,0.43773284554481506,0.43823057413101196,0.44215625524520874,0.4588315784931183,0.4738970398902893,0.48209884762763977,0.4686594605445862,0.46024632453918457,0.44895699620246887,0.439594566822052,0.43869349360466003,0.44236433506011963,0.45459046959877014,0.464979350566864,0.47391921281814575,0.48470595479011536,0.48920154571533203,0.48524269461631775,0.4814017415046692,0.3754350244998932,0.41710278391838074,0.4403020143508911,0.43907108902931213,0.4381294548511505,0.4373748004436493,0.4375489354133606,0.4381324350833893,0.4391095042228699,0.4398663341999054,0.43971455097198486,0.43996214866638184,0.44036421179771423,0.4396287500858307,0.4510009288787842,0.4756171703338623,0.45839691162109375,0.43794018030166626,0.4342327117919922,0.4288800060749054,0.42723092436790466,0.4282589852809906,0.4357059597969055,0.44917526841163635,0.4610942006111145,0.4734446704387665,0.4849354922771454,0.4841924011707306,0.48120713233947754,0.4003830552101135,0.4320172667503357,0.4448499381542206,0.44267818331718445,0.44282644987106323,0.44221723079681396,0.4468398988246918,0.4474298059940338,0.44716987013816833,0.4444792568683624,0.44111186265945435,0.4408462941646576,0.4399261474609375,0.43874064087867737,0.4359418749809265,0.414539098739624,0.4093899428844452,0.4152495563030243,0.4146324694156647,0.41418206691741943,0.4178871214389801,0.42128291726112366,0.42835959792137146,0.44555366039276123,0.46495020389556885,0.4788525402545929,0.48633065819740295,0.48314011096954346,0.4210357666015625,0.44873592257499695,0.45113328099250793,0.4552640914916992,0.4564468562602997,0.4595892131328583,0.461551308631897,0.4602024555206299,0.4518367648124695,0.4389338791370392,0.4387006163597107,0.43949249386787415,0.4377775192260742,0.4329756498336792,0.39660874009132385,0.3458687961101532,0.3606851100921631,0.3847607672214508,0.3964337110519409,0.4024374783039093,0.4050782024860382,0.4158411920070648,0.4356149435043335,0.4555111825466156,0.4758740961551666,0.49003031849861145,0.48922261595726013,0.43922868371009827,0.4555533826351166,0.4603072702884674,0.46532607078552246,0.46987205743789673,0.4704136550426483,0.4675092399120331,0.45889997482299805,0.4413694143295288,0.43600231409072876,0.43705204129219055,0.43729615211486816,0.43816614151000977,0.4174351990222931,0.3545641601085663,0.3186347782611847,0.32737067341804504,0.3641135096549988,0.3709958493709564,0.3856241703033447,0.4005632698535919,0.42475181818008423,0.4425106644630432,0.4671732485294342,0.48626410961151123,0.49951040744781494,0.4434356391429901,0.4604797959327698,0.4672047793865204,0.4735529124736786,0.4752805531024933,0.4718429446220398,0.4607197046279907,0.4483430087566376,0.4358426034450531,0.43315622210502625,0.434063583612442,0.43619418144226074,0.436067134141922,0.39182546734809875,0.3237495422363281,0.30399495363235474,0.3200224041938782,0.3355579078197479,0.3569405972957611,0.37120023369789124,0.41227132081985474,0.421159565448761,0.44483575224876404,0.4818148910999298,0.5018346905708313,0.4235655963420868,0.45508527755737305,0.46543052792549133,0.4687999188899994,0.47197431325912476,0.4676719605922699,0.4570842981338501,0.44274359941482544,0.43542206287384033,0.4307941794395447,0.43142440915107727,0.43336668610572815,0.4328043460845947,0.36436575651168823,0.31318017840385437,0.29999643564224243,0.3148999810218811,0.3293667137622833,0.35216283798217773,0.38400694727897644,0.4044536352157593,0.4123423993587494,0.45572254061698914,0.4787423014640808,0.38234201073646545,0.40856796503067017,0.4323928654193878,0.4514613151550293,0.4623996913433075,0.4613465666770935,0.4519038200378418,0.43916791677474976,0.4366604685783386,0.4333949387073517,0.4277228116989136,0.427024245262146,0.4260377883911133,0.360129714012146,0.32672348618507385,0.316180944442749,0.3281785845756531,0.3416197597980499,0.35713690519332886,0.38950660824775696,0.404742568731308,0.43449610471725464,0.4300244450569153,0.35171759128570557,0.36433112621307373,0.37198641896247864,0.3994920551776886,0.4285728335380554,0.45010629296302795,0.4465895891189575,0.4428178369998932,0.4380013346672058,0.43382400274276733,0.4285052716732025,0.42250439524650574,0.4154660999774933,0.35333988070487976,0.3299316167831421,0.3400026559829712,0.34693244099617004,0.35338205099105835,0.3829333186149597,0.40155819058418274,0.4227496087551117,0.39405524730682373,0.3244108557701111,0.3373682498931885,0.34967339038848877,0.3707330822944641,0.3981567323207855,0.44087672233581543,0.4425179064273834,0.4421153962612152,0.4416697323322296,0.44391366839408875,0.441458523273468,0.4189862310886383,0.3952472507953644,0.38935020565986633,0.3802821636199951,0.36316636204719543,0.36567947268486023,0.3801199793815613,0.40919360518455505,0.4190138578414917,0.3638441264629364,0.2854968011379242,0.312415212392807,0.34927231073379517,0.36370521783828735,0.3964768350124359,0.43409866094589233,0.4439016878604889,0.45015284419059753,0.4557010531425476,0.46180933713912964,0.45941877365112305,0.4254794418811798,0.416942834854126,0.3977605104446411,0.39233529567718506,0.38641607761383057,0.38387221097946167,0.40821391344070435,0.40719643235206604,0.35950300097465515,0.2892952263355255,0.30554720759391785,0.35022157430648804,0.39228615164756775,0.425387978553772,0.45539215207099915,0.4624815583229065,0.4635576009750366,0.4659496247768402,0.46490511298179626,0.45501887798309326,0.4352166950702667,0.4189518094062805,0.404794842004776,0.3897647261619568,0.39322489500045776,0.39260250329971313,0.39425143599510193,0.3673616945743561,0.31589189171791077,0.33674392104148865,0.37163999676704407,0.42069011926651,0.47300758957862854,0.4730064868927002,0.47022029757499695,0.4691339135169983,0.4687991738319397,0.46352362632751465,0.45034709572792053,0.4390741288661957,0.4224919080734253,0.39957383275032043,0.3944576680660248,0.3743993639945984,0.3539476990699768,0.35123011469841003,0.3421582281589508,0.3796764016151428,0.4175564646720886,0.4788915514945984,0.48001769185066223,0.47314509749412537,0.4726560711860657,0.4723251461982727,0.4669904410839081,0.45979487895965576,0.45033901929855347,0.4372110664844513,0.4187506139278412,0.4005241394042969,0.3548325300216675,0.3071407675743103,0.3017594516277313,0.3849636912345886,0.4206952452659607,0.46821048855781555,0.4863486588001251,0.47896283864974976,0.4753129184246063,0.4730386435985565,0.4687037169933319,0.4612587094306946,0.4572790861129761,0.44511672854423523,0.43082404136657715,0.4051775336265564,0.35401010513305664,0.27880537509918213,0.27009353041648865,0.41536271572113037,0.4488309621810913,0.4885313808917999,0.4813288748264313,0.4787164032459259,0.4757619798183441,0.47156718373298645,0.4649478793144226,0.4610733091831207,0.45228633284568787,0.43865349888801575,0.41727104783058167,0.37199071049690247,0.29245907068252563,0.2644748389720917,0.437671035528183,0.47567543387413025,0.4849255084991455,0.48003071546554565,0.4781741797924042,0.47440165281295776,0.4698643684387207,0.4644819498062134,0.4567563831806183,0.44687971472740173,0.4280887246131897,0.38581767678260803,0.3081798255443573,0.26698336005210876,0.4542198181152344,0.48727840185165405,0.485203355550766,0.4797525405883789,0.4766339361667633,0.47470468282699585,0.47005489468574524,0.4645024240016937,0.4550434350967407,0.43325018882751465,0.39884671568870544,0.31716716289520264,0.271957129240036,0.4632900059223175,0.4882791340351105,0.4835878610610962,0.47724050283432007,0.47364771366119385,0.47325336933135986,0.4691269099712372,0.4625866115093231,0.44847428798675537,0.3992885649204254,0.3215816020965576,0.2580385208129883,0.451698362827301,0.4785189628601074,0.4785311222076416,0.4711149334907532,0.4674423635005951,0.46868696808815,0.46466806530952454,0.4547545313835144,0.41786545515060425,0.3310563564300537,0.23547255992889404,0.41489461064338684,0.4532368779182434,0.46882015466690063,0.46072953939437866,0.46392571926116943,0.4646913409233093,0.4620208442211151,0.4515230059623718,0.37588855624198914,0.26464569568634033,0.3761858642101288,0.4279327988624573,0.4473821222782135,0.4564443528652191,0.4574718773365021,0.4578319489955902,0.4468064606189728,0.435537189245224,0.3061962127685547,0.34248846769332886,0.38577723503112793,0.4356297254562378,0.444398432970047,0.44622620940208435,0.44090092182159424,0.42885786294937134,0.418714314699173,0.3047187328338623,0.3713727295398712,0.4282750189304352,0.43287333846092224,0.43311673402786255,0.41760537028312683,0.4086911678314209,0.3088909685611725,0.3996194005012512,0.42239171266555786,0.4279181957244873,0.4094159007072449,0.40379345417022705,0.33996909856796265,0.4125058948993683,0.42106375098228455,0.4108574688434601,0.4027017652988434,0.41379350423812866,0.40960901975631714,0.4140869379043579,0.4087282717227936,0.41448545455932617,0.42468130588531494,0.4270968735218048,0.4528769254684448,0.4663676917552948,0.5090493559837341,0.33852192759513855,0.34928029775619507,0.3570849597454071,0.40128374099731445,0.466728150844574,0.11303853988647461,0.06495194137096405,0.04813548922538757,0.04051093012094498,0.035489678382873535,0.03401556611061096,0.034057050943374634,0.04813995957374573,0.11444523930549622,0.21324996650218964,0.31254899501800537,0.3633521497249603,0.32039591670036316,0.2554805874824524,0.19897466897964478,0.15627828240394592,0.09472978115081787,0.06510890275239944,0.04787818714976311,0.0429990291595459,0.04017714038491249,0.03927851468324661,0.04011892154812813,0.053048498928546906,0.07306862622499466,0.4025799334049225,0.40213555097579956,0.4323995113372803,0.44201523065567017,0.43478119373321533,0.4125823974609375,0.07288368791341782,0.0497494637966156,0.04131670668721199,0.03812418878078461,0.03596089035272598,0.03431873768568039,0.03320267051458359,0.03299892693758011,0.03304517641663551,0.03282533586025238,0.03296734392642975,0.033194851130247116,0.033278707414865494,0.03470182791352272,0.03369526565074921,0.03333228453993797,0.03292535990476608,0.03350583091378212,0.03457852452993393,0.0355573408305645,0.03665401414036751,0.0369914174079895,0.03843776509165764,0.4713551998138428,0.4706823229789734,0.46771058440208435,0.45789194107055664,0.4455917179584503,0.4351596534252167,0.10781718790531158,0.04879042133688927,0.038455985486507416,0.03706318140029907,0.036070238798856735,0.034577563405036926,0.03346948325634003,0.032288528978824615,0.032402195036411285,0.032870836555957794,0.03265312686562538,0.032805003225803375,0.03300632908940315,0.03327120840549469,0.033294208347797394,0.03322158381342888,0.03311122953891754,0.03353366255760193,0.03351745009422302,0.033791184425354004,0.034582462161779404,0.035395681858062744,0.47909602522850037,0.4780152142047882,0.46857112646102905,0.4575963318347931,0.46024245023727417,0.4469643533229828,0.41819700598716736,0.08086813241243362,0.041924476623535156,0.037152063101530075,0.03621049225330353,0.034293338656425476,0.03354312852025032,0.03319564834237099,0.032494571059942245,0.0327037051320076,0.03278689831495285,0.0328981876373291,0.032885387539863586,0.03327126428484917,0.033288054168224335,0.033322207629680634,0.03361159563064575,0.0332658626139164,0.03331908956170082,0.033276043832302094,0.03342405706644058,0.4772467315196991,0.4752541780471802,0.47118231654167175,0.45668038725852966,0.46089354157447815,0.4497167766094208,0.4339562654495239,0.3553936779499054,0.06437496095895767,0.04042186588048935,0.03773573040962219,0.035526126623153687,0.034270480275154114,0.03391043841838837,0.03325890004634857,0.032754313200712204,0.03289642184972763,0.033260833472013474,0.03337003290653229,0.033496566116809845,0.033318400382995605,0.03304380923509598,0.03293745964765549,0.03307632356882095,0.03280714899301529,0.032720427960157394,0.47196462750434875,0.47699442505836487,0.4731186628341675,0.4577658176422119,0.45851069688796997,0.4518876373767853,0.44277969002723694,0.42304039001464844,0.19314292073249817,0.06161537766456604,0.04618757590651512,0.03906632587313652,0.03680342808365822,0.03454858809709549,0.03387729078531265,0.03316875174641609,0.03308377414941788,0.0331793911755085,0.03307436406612396,0.03319324553012848,0.032917533069849014,0.03292177990078926,0.03269204497337341,0.03251449763774872,0.0323910117149353,0.47618842124938965,0.48035210371017456,0.4735729396343231,0.460538774728775,0.4583433270454407,0.4549199044704437,0.4468574821949005,0.42939111590385437,0.3847801685333252,0.10321880877017975,0.058002617210149765,0.048087846487760544,0.04137858748435974,0.03790793567895889,0.0359237901866436,0.034518904983997345,0.03339763730764389,0.03306030482053757,0.03295934200286865,0.03292922303080559,0.032515496015548706,0.032464735209941864,0.03231951966881752,0.03214967995882034,0.4810289740562439,0.4841858446598053,0.47458478808403015,0.4657178819179535,0.4609276354312897,0.45699891448020935,0.45283833146095276,0.4367089867591858,0.40944012999534607,0.29150956869125366,0.07841575890779495,0.06209911033511162,0.050688616931438446,0.04405050352215767,0.04026101529598236,0.03764092177152634,0.035001154989004135,0.03324967622756958,0.03298851475119591,0.03272576630115509,0.032432034611701965,0.03210562467575073,0.03205254301428795,0.48631519079208374,0.4852670133113861,0.4776000678539276,0.47054800391197205,0.46669963002204895,0.46160584688186646,0.45782607793807983,0.4487904906272888,0.43074557185173035,0.4142453372478485,0.1666664183139801,0.09444805979728699,0.06577048450708389,0.0525321289896965,0.04591994732618332,0.04079178720712662,0.03705289587378502,0.033942222595214844,0.032972197979688644,0.03252045065164566,0.03237693011760712,0.03229185938835144,0.49171409010887146,0.4863795340061188,0.48267945647239685,0.47503262758255005,0.4706334173679352,0.4664694666862488,0.46042585372924805,0.45481765270233154,0.44913992285728455,0.43050381541252136,0.41704195737838745,0.27527499198913574,0.09187502413988113,0.06426054239273071,0.05188864842057228,0.043948087841272354,0.03928627446293831,0.035463616251945496,0.033389315009117126,0.03279377892613411,0.03254656866192818,0.49204668402671814,0.4891141951084137,0.4840892255306244,0.47739747166633606,0.4734419882297516,0.4690123200416565,0.46180108189582825,0.4543963372707367,0.4458570182323456,0.42900723218917847,0.41893064975738525,0.4100065231323242,0.13836129009723663,0.08024332672357559,0.05697108060121536,0.046418171375989914,0.04198664054274559,0.03711432218551636,0.03433092683553696,0.033530160784721375,0.4912385046482086,0.489063024520874,0.4839630126953125,0.4779408276081085,0.47520604729652405,0.47167471051216125,0.4655056893825531,0.4570982754230499,0.44232016801834106,0.42926380038261414,0.43153735995292664,0.42404910922050476,0.3645368814468384,0.11350616812705994,0.06849727779626846,0.05233984813094139,0.04400569573044777,0.038926005363464355,0.03542868793010712,0.48971790075302124,0.486428439617157,0.48016640543937683,0.47175928950309753,0.46272122859954834,0.45751330256462097,0.4571112394332886,0.4613625407218933,0.4485818147659302,0.437062531709671,0.43155792355537415,0.43352624773979187,0.41918912529945374,0.24343574047088623,0.08794040977954865,0.05967649817466736,0.049176011234521866,0.04229293763637543,0.4862425923347473,0.47918573021888733,0.4661963880062103,0.45412948727607727,0.44436243176460266,0.44082576036453247,0.44619935750961304,0.44374093413352966,0.45154422521591187,0.44662317633628845,0.43983349204063416,0.4435631334781647,0.43232667446136475,0.3686802387237549,0.10840466618537903,0.082462377846241,0.05951486527919769,0.4828299880027771,0.4717561602592468,0.45415377616882324,0.4384336471557617,0.4337272047996521,0.4309890568256378,0.4364457130432129,0.4524618983268738,0.46128153800964355,0.45363643765449524,0.45324820280075073,0.44846272468566895,0.43599098920822144,0.4013228118419647,0.23490051925182343,0.11385416239500046,0.47558537125587463,0.46200162172317505,0.44316399097442627,0.4340875744819641,0.43209999799728394,0.43322017788887024,0.44624584913253784,0.4621332585811615,0.4683699309825897,0.462303102016449,0.45940518379211426,0.4526108205318451,0.4419628977775574,0.41852107644081116,0.40045684576034546,0.4666399657726288,0.45607778429985046,0.4397292733192444,0.438813716173172,0.43811139464378357,0.4469226598739624,0.46552395820617676,0.4781382977962494,0.4738840162754059,0.46912291646003723,0.4645414352416992,0.45894449949264526,0.4497694671154022,0.4386390149593353,0.45793628692626953,0.45318517088890076,0.4447864294052124,0.445046067237854,0.45133712887763977,0.46590563654899597,0.4814123809337616,0.4808328151702881,0.47796860337257385,0.47624751925468445,0.4707775115966797,0.4648785889148712,0.45544129610061646,0.45390573143959045,0.4549454152584076,0.45327499508857727,0.4571450352668762,0.47060447931289673,0.48288992047309875,0.48523062467575073,0.4833678603172302,0.4833519756793976,0.4790714383125305,0.47287648916244507,0.46661317348480225,0.45681217312812805,0.4602371156215668,0.4653213620185852,0.47579389810562134,0.4845563769340515,0.48868224024772644,0.48610973358154297,0.486922949552536,0.4837460219860077,0.4776475429534912,0.4717659652233124,0.4610823392868042,0.4669705927371979,0.4736805856227875,0.48166152834892273,0.4866558313369751,0.487932950258255,0.4878458082675934,0.48722898960113525,0.48149242997169495,0.4753187894821167,0.4710473120212555,0.4762455224990845,0.48191776871681213,0.4861021637916565,0.4896228313446045,0.48858997225761414,0.4871121346950531,0.48433351516723633,0.478331595659256,0.4813319742679596,0.48630309104919434,0.48869994282722473,0.4916418492794037,0.49009156227111816,0.4877649247646332,0.48554709553718567,0.4819546341896057,0.4909766614437103,0.4907948970794678,0.49408015608787537,0.49129459261894226,0.48828446865081787,0.48629310727119446,0.4825967252254486,0.49239981174468994,0.49164775013923645,0.4923631548881531,0.48749780654907227,0.48686760663986206,0.4848598539829254,0.4887275695800781,0.4854547083377838,0.4887242913246155,0.4857461452484131,0.4843023121356964,0.4735141396522522,0.47621020674705505,0.4827621877193451,0.4840465486049652,0.45165467262268066,0.4643591046333313,0.4787388741970062,0.4417136609554291,0.45627424120903015,0.43579086661338806]");var uS=Ll('<div class="brainViewer svelte-1t6wp6e"></div>');function fS(i,t){Ar(t,!1);let e=al(),n;class s{rollingMin;rollingMax;scalingFrac;constructor(d=.1,m=0,_=1){this.rollingMin=m,this.rollingMax=_,this.scalingFrac=d}update(d){const m=this.scalingFrac,_=1-this.scalingFrac;return d<this.rollingMin?this.rollingMin=this.rollingMin*m+d*_:this.rollingMin=this.rollingMin*_+d*m,d>this.rollingMax?this.rollingMax=this.rollingMax*m+d*_:this.rollingMax=this.rollingMax*_+d*m,(d-this.rollingMin)/(this.rollingMax-this.rollingMin)}}function r(f,d=0,m=void 0){if(m===void 0?m=f.length:m=Math.min(m,f.length),d=Math.max(0,d),m<=d)return 0;let _=0;for(let g=d;g<m;g++)_+=f[g]*(1/(m-d));return _}let a=new s(.01,0,255),o=0,c=new s(.01,0,255),l=0;function h(f){if(!n)return;let d=r(Array.from(f),50,300);o=a.update(d)*.8+o*.2;let m=r(Array.from(f),300,1024);l=c.update(m)*.8+l*.2,n.controls.zoomTo(o*2+.1),n.controls.rotateTo(l*Math.PI+Math.PI,Math.PI*.5)}cS(h),zl(()=>{const f=new eS(new Float32Array(gr.vertices.flat()),new Uint32Array(gr.faces.flat())),d=new nS(_r,"Sinebow",sS(_r)),m=new iS(f,d);n=new aS(k2(e)),n.addModel(m),n.setTarget("center")}),Bl();var u=uS();Fl(u,f=>O2(e,f),()=>k2(e)),Dl(i,u),Cr()}function dS(i){fS(i,{})}Ul(dS,{target:document.getElementById("app")});
